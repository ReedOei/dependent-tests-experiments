org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.xy.XYSeries.add : specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d1)
org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($r1, $r2, 1)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($r1, $r2, 1) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2)
org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.xy.XYSeries.add : r4 = $r3
org.jfree.data.xy.XYSeries.add : r4 = $r3 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0) >>>>>>>> org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>()
org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = null
org.jfree.data.xy.XYDataItem.clone : r1 = null >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : goto [?= return r1]
org.jfree.data.xy.XYDataItem.clone : goto [?= return r1] >>>>>>>> org.jfree.data.xy.XYDataItem.clone : return r1
org.jfree.data.xy.XYDataItem.clone : return r1 >>>>>>>> org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $z1 == 0
org.jfree.data.xy.XYSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3)
org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= 0
org.jfree.data.xy.XYSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $i2 = neg i0
org.jfree.data.xy.XYSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1
org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)]
org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)] >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)
org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : return $d0
org.jfree.data.xy.XYDataItem.getXValue : return $d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getY : return $r1
org.jfree.data.xy.XYDataItem.getY : return $r1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN
org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : if $r1 == null
org.jfree.data.xy.XYDataItem.getYValue : if $r1 == null >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getYValue : d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : return d0
org.jfree.data.xy.XYDataItem.getYValue : return d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d7 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d6, d1)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d7 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d6, d1) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minY> = $d7
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minY> = $d7 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d9 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d8, d1)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d9 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d8, d1) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxY> = $d9
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxY> = $d9 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : return $i0
org.jfree.data.xy.XYSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount>
org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $i7 <= $i8
org.jfree.data.xy.XYSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.xy.XYSeries.add : if z0 == 0
org.jfree.data.xy.XYSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>()
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $z0 == 0
org.jfree.data.xy.XYDataItem.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : r2 = (org.jfree.data.xy.XYDataItem) r1
org.jfree.data.xy.XYDataItem.compareTo : r2 = (org.jfree.data.xy.XYDataItem) r1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.compareTo : $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $r4 = virtualinvoke r2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYDataItem.compareTo : $r4 = virtualinvoke r2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getX : return $r1
org.jfree.data.xy.XYDataItem.getX : return $r1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $d2 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.compareTo : $d2 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : d0 = $d1 - $d2
org.jfree.data.xy.XYDataItem.compareTo : d0 = $d1 - $d2 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $b1 = d0 cmpl 0.0
org.jfree.data.xy.XYDataItem.compareTo : $b1 = d0 cmpl 0.0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $b1 <= 0
org.jfree.data.xy.XYDataItem.compareTo : if $b1 <= 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $b2 = d0 cmpg 0.0
org.jfree.data.xy.XYDataItem.compareTo : $b2 = d0 cmpg 0.0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $b2 >= 0
org.jfree.data.xy.XYDataItem.compareTo : if $b2 >= 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : b0 = -1
org.jfree.data.xy.XYDataItem.compareTo : b0 = -1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : goto [?= (branch)]
org.jfree.data.xy.XYDataItem.compareTo : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : goto [?= return b0]
org.jfree.data.xy.XYDataItem.compareTo : goto [?= return b0] >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : return b0
org.jfree.data.xy.XYDataItem.compareTo : return b0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z1 == 0
org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : return $d2
org.jfree.data.xy.XYSeries.minIgnoreNaN : return $d2 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z1 == 0
org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : return $d2
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return $d2 >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.xy.XYSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.addSeries : $r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.getKey : return $r1
org.jfree.data.general.Series.getKey : return $r1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesIndex(java.lang.Comparable)>($r3)
org.jfree.data.xy.XYSeriesCollection.addSeries : $i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesIndex(java.lang.Comparable)>($r3) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : return $i0
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = 0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if i1 >= i0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if i1 >= i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : return -1
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : return -1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : if $i0 < 0
org.jfree.data.xy.XYSeriesCollection.addSeries : if $i0 < 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $r9 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.addSeries : $r9 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.xy.XYSeriesCollection.addSeries : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r0)
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addVetoableChangeListener : $r2 = r0.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport>
org.jfree.data.general.Series.addVetoableChangeListener : $r2 = r0.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> >>>>>>>> org.jfree.data.general.Series.addVetoableChangeListener : virtualinvoke $r2.<java.beans.VetoableChangeSupport: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r1)
org.jfree.data.general.Series.addVetoableChangeListener : virtualinvoke $r2.<java.beans.VetoableChangeSupport: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener"
org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener" >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2]
org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5
org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1)
org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)]
org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r3 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r3 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : r2 = (org.jfree.data.xy.XYSeries) $r4
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : r2 = (org.jfree.data.xy.XYSeries) $r4 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r5 = virtualinvoke r2.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r5 = virtualinvoke r2.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5)
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if $z0 == 0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = i1 + 1
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : goto [?= (branch)]
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r0 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r0 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r1 = $r0
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r1 = $r0 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r15.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r15.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r2 = $r15
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r2 = $r15 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r3 = $r16
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r3 = $r16 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r17.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r17.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r4 = $r17
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r4 = $r17 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r18.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r18.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r5 = $r18
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r5 = $r18 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r19.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r19.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r6 = $r19
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r6 = $r19 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r20.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r20.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r7 = $r20
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r7 = $r20 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r21.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r21.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r8 = $r21
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r8 = $r21 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r22.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r22.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r9 = $r22
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r9 = $r22 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r23.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r23.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r10 = $r23
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r10 = $r23 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r24.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r24.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r11 = $r24
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r11 = $r24 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r25.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r25.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r12 = $r25
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r12 = $r25 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r13 = $r26
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r13 = $r26 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r27.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,###,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r27.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,###,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r14 = $r27
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r14 = $r27 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-9, r3, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-9, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28) >>>>>>>> org.jfree.chart.axis.TickUnits.add : if r1 != null
org.jfree.chart.axis.TickUnits.add : if r1 != null >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4)
org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-8, r4, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-8, r4, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0
org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : return $d0
org.jfree.chart.axis.TickUnit.getSize : return $d0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-7, r5, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-7, r5, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-6, r6, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-6, r6, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-5, r7, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-5, r7, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-4, r8, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-4, r8, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.001, r9, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.001, r9, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.01, r10, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.01, r10, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r11, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r11, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r37.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r37.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r37)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r37) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r38.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r38.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r39.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r39.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r39)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r39) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r40.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r40.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r40)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r40) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r41.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r41.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r42.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r42.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r42)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r42) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r43.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r43.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r43)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r43) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r44.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r44.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r45.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r45.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r45)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r45) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r46.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r46.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r46)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r46) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r47.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r47.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r48.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E11, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r48.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E11, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r48)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r48) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r49.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-9, r2, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r49.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-9, r2, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r49)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r49) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3
org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return -1
org.jfree.chart.axis.TickUnit.compareTo : return -1 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r50.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-8, r3, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r50.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-8, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r51.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-7, r4, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r51.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-7, r4, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r51)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r51) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r52.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-6, r5, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r52.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-6, r5, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r52)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r52) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r53.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-5, r6, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r53.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-5, r6, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r54.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-4, r7, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r54.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-4, r7, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r54)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r54) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r55.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.0025, r8, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r55.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.0025, r8, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r55)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r55) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r56.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.025, r9, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r56.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.025, r9, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r57.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.25, r10, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r57.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.25, r10, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r57)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r57) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r58.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5, r11, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r58.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5, r11, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r58)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r58) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r59.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r59.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r60.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r60.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r60)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r60) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r61.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r61.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r61)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r61) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r62.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r62.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r63.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r63.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r63)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r63) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r64.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500000.0, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r64.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500000.0, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r64)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r64) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r65.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E7, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r65.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E7, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r66.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E8, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r66.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E8, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r66)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r66) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r67.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E9, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r67.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E9, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r67)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r67) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r68.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E10, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r68.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E10, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r69.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E11, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r69.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E11, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r69)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r69) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r70.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-9, r3, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r70.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-9, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r70)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r70) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r71.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-8, r4, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r71.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-8, r4, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r72.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-7, r5, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r72.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-7, r5, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r72)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r72) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r73.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-6, r6, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r73.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-6, r6, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r73)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r73) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r74.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-5, r7, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r74.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-5, r7, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r75.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-4, r8, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r75.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-4, r8, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r75)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r75) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r76.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.005, r9, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r76.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.005, r9, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r76)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r76) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r77.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r10, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r77.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r10, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r78.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r11, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r78.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r11, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r78)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r78) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r79.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r79.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r79)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r79) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r80.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r80.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r81.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r81.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r81)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r81) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r82.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r82.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r82)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r82) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r83.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r83.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r84.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r84.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r84)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r84) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r85.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r85.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r85)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r85) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r86.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r86.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r87.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r87.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r87)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r87) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r88.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r88.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r88)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r88) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r89.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E10, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r89.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E10, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r90.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E11, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r90.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E11, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r90)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r90) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setPlot : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setPlot : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1)
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4
org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.plot.XYPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null
org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5
org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>()
org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0
org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : if $z0 == 0
org.jfree.chart.axis.NumberAxis.configure : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>()
org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.axis.Axis.getPlot : return $r1
org.jfree.chart.axis.Axis.getPlot : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1
org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1 >>>>>>>> org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>()
org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z0 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r2 = null
org.jfree.chart.plot.XYPlot.getDataRange : r2 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r14 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDataRange : $r14 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r14.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r3 = $r14
org.jfree.chart.plot.XYPlot.getDataRange : r3 = $r14 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r15 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDataRange : $r15 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r15.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r15.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r4 = $r15
org.jfree.chart.plot.XYPlot.getDataRange : r4 = $r15 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : z0 = 1
org.jfree.chart.plot.XYPlot.getDataRange : z0 = 1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : i0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDataRange : i0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke $r4.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke $r4.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if i0 >= 0
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if $z0 == 0
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : return i0
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : return i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if i0 < 0
org.jfree.chart.plot.XYPlot.getDataRange : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDataRange : i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke $r4.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke $r4.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if i0 >= 0
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : return i0
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : return i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if i1 < 0
org.jfree.chart.plot.XYPlot.getDataRange : if i1 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : z0 = 0
org.jfree.chart.plot.XYPlot.getDataRange : z0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r19 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDataRange : $r19 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r19.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r19.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r20 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToRangeAxis(java.lang.Integer)>($r19)
org.jfree.chart.plot.XYPlot.getDataRange : $r20 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToRangeAxis(java.lang.Integer)>($r19) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex")
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex") >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r4 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : r2 = $r4
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $i1 = virtualinvoke $r5.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $i1 = virtualinvoke $r5.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r7 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r7 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : r3 = (java.util.List) $r8
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : r3 = (java.util.List) $r8 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if r3 != null
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if r3 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if $z2 == 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r13 = virtualinvoke $r12.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r13 = virtualinvoke $r12.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : goto [?= $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : goto [?= $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : return r2
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r20)
org.jfree.chart.plot.XYPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r20) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if i1 != 0
org.jfree.chart.plot.XYPlot.getDataRange : if i1 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.getDataRange : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z6 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z6 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z9 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z9 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r26 = (org.jfree.data.xy.XYDataset) $r25
org.jfree.chart.plot.XYPlot.getDataRange : r26 = (org.jfree.data.xy.XYDataset) $r25 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if r26 == null
org.jfree.chart.plot.XYPlot.getDataRange : if r26 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRendererForDataset(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRendererForDataset(org.jfree.data.xy.XYDataset)>(r26) >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = null
org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : i0 = 0
org.jfree.chart.plot.XYPlot.getRendererForDataset : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $i1 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getRendererForDataset : $i1 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getRendererForDataset : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : if $r5 != r1
org.jfree.chart.plot.XYPlot.getRendererForDataset : if $r5 != r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r6 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r6 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r7 = virtualinvoke $r6.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r7 = virtualinvoke $r6.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r7
org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r7 >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : if r2 != null
org.jfree.chart.plot.XYPlot.getRendererForDataset : if r2 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : return r2
org.jfree.chart.plot.XYPlot.getRendererForDataset : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if z0 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if r9 == null
org.jfree.chart.plot.XYPlot.getDataRange : if r9 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r29 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : $r29 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>(r26) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r1 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z1 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r5 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r2 = $r5
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r2 = $r5 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z2 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r6 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r6 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < 0
org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < $i1
org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < $i1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r4 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.XYSeriesCollection.getSeries : $r4 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : return $r4
org.jfree.data.xy.XYSeriesCollection.getSeries : return $r4 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesKey : return $r2
org.jfree.data.xy.XYSeriesCollection.getSeriesKey : return $r2 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = i1 + 1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : goto [?= (branch)]
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : return $r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r3 == null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r3 == null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i2 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)>(r0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i2 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.getIndexOf : $i0 = virtualinvoke $r2.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getIndexOf : $i0 = virtualinvoke $r2.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getIndexOf : return $i0
org.jfree.chart.plot.XYPlot.getIndexOf : return $i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i2 < 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i2 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r8 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r8 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = virtualinvoke $r8.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxisForDataset(int)>(i2)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = virtualinvoke $r8.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxisForDataset(int)>(i2) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDatasetCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetCount : return $i0
org.jfree.chart.plot.XYPlot.getDatasetCount : return $i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRendererCount()>()
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRendererCount()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRendererCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getRendererCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererCount : return $i0
org.jfree.chart.plot.XYPlot.getRendererCount : return $i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : i1 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : i1 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < 0
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < i1
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r11 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r11 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : specialinvoke $r11.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : specialinvoke $r11.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r2 = (java.util.List) $r12
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r2 = (java.util.List) $r12 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if r2 == null
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if r2 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r3 = (java.lang.Integer) $r13
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r3 = (java.lang.Integer) $r13 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>($i4)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>($i4) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = null
org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getDomainAxis : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDomainAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getDomainAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDomainAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6
org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : if r1 != null
org.jfree.chart.plot.XYPlot.getDomainAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getDomainAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getDomainAxis : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : if $z0 == 0
org.jfree.chart.plot.XYPlot.getDomainAxis : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : return r1
org.jfree.chart.plot.XYPlot.getDomainAxis : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : goto [?= return r4]
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : goto [?= return r4] >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : return r4
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : return r4 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r4 == null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r4 == null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r7 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r7 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r9 = new org.jfree.data.Range
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r9 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(#-Infinity, #Infinity)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(#-Infinity, #Infinity) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = $r9
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = $r9 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.XYRangeInfo
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.XYRangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : r4 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r0, r1, r2, z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : r4 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r0, r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r19 = (java.lang.Comparable) $r18
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r19 = (java.lang.Comparable) $r18 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i9 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r19)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i9 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r19) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>()
org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if $z0 == 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if $z0 == 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : return i1
org.jfree.data.general.AbstractSeriesDataset.indexOf : return i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i9)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i9) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getItemCount : $i1 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeriesCollection.getItemCount : $i1 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getItemCount : return $i1
org.jfree.data.xy.XYSeriesCollection.getItemCount : return $i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i10
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i10 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i9, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i9, i11) >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getX : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getX : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : r1 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.XYSeriesCollection.getX : r1 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getX : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.getRawDataItem : $r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : return $r3
org.jfree.data.xy.XYSeries.getRawDataItem : return $r3 >>>>>>>> org.jfree.data.xy.XYSeries.getX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYSeries.getX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>() >>>>>>>> org.jfree.data.xy.XYSeries.getX : return $r2
org.jfree.data.xy.XYSeries.getX : return $r2 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : return $r4
org.jfree.data.xy.XYSeriesCollection.getX : return $r4 >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null
org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : return d0
org.jfree.data.xy.AbstractXYDataset.getXValue : return d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i9, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i9, i11) >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getY(int,int)>(i0, i1)
org.jfree.data.xy.AbstractXYDataset.getYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getY(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getY : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getY : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : r1 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.XYSeriesCollection.getY : r1 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getY(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getY : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getY(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeries.getY : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.data.xy.XYSeries.getY : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getY : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.getY : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>() >>>>>>>> org.jfree.data.xy.XYSeries.getY : return $r2
org.jfree.data.xy.XYSeries.getY : return $r2 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : return $r4
org.jfree.data.xy.XYSeriesCollection.getY : return $r4 >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : if r1 == null
org.jfree.data.xy.AbstractXYDataset.getYValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : return d0
org.jfree.data.xy.AbstractXYDataset.getYValue : return d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z15 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d12)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z15 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d12) >>>>>>>> org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.contains : $b0 = d0 cmpl $d1
org.jfree.data.Range.contains : $b0 = d0 cmpl $d1 >>>>>>>> org.jfree.data.Range.contains : if $b0 < 0
org.jfree.data.Range.contains : if $b0 < 0 >>>>>>>> org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.contains : $b1 = d0 cmpg $d2
org.jfree.data.Range.contains : $b1 = d0 cmpg $d2 >>>>>>>> org.jfree.data.Range.contains : if $b1 > 0
org.jfree.data.Range.contains : if $b1 > 0 >>>>>>>> org.jfree.data.Range.contains : $z0 = 1
org.jfree.data.Range.contains : $z0 = 1 >>>>>>>> org.jfree.data.Range.contains : goto [?= return $z0]
org.jfree.data.Range.contains : goto [?= return $z0] >>>>>>>> org.jfree.data.Range.contains : return $z0
org.jfree.data.Range.contains : return $z0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z15 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z15 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = i1 + 1
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : goto [?= (branch)]
org.jfree.data.general.AbstractSeriesDataset.indexOf : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r20 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r20 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r20.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r20.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r20
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r20 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : return r4
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r4 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r10
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r10 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r29)
org.jfree.chart.plot.XYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r29) >>>>>>>> org.jfree.data.Range.combine : if r0 != null
org.jfree.data.Range.combine : if r0 != null >>>>>>>> org.jfree.data.Range.combine : return r1
org.jfree.data.Range.combine : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer]
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer] >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer
org.jfree.chart.plot.XYPlot.getDataRange : $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z10 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z10 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r10 = (org.jfree.chart.renderer.xy.AbstractXYItemRenderer) r9
org.jfree.chart.plot.XYPlot.getDataRange : r10 = (org.jfree.chart.renderer.xy.AbstractXYItemRenderer) r9 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r11 = virtualinvoke r10.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.Collection getAnnotations()>()
org.jfree.chart.plot.XYPlot.getDataRange : r11 = virtualinvoke r10.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.Collection getAnnotations()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r1 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r3 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r3 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : r2 = $r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : r2 = $r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r4 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r4 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r4)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : return r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r12 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r12 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z11 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z11 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z11 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z11 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r32 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r32 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z14 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z14 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z14 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z14 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : return r2
org.jfree.chart.plot.XYPlot.getDataRange : return r2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r5 = <org.jfree.data.RangeType: org.jfree.data.RangeType POSITIVE>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r5 = <org.jfree.data.RangeType: org.jfree.data.RangeType POSITIVE> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r4 != $r5
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r4 != $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r7 = <org.jfree.data.RangeType: org.jfree.data.RangeType NEGATIVE>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r7 = <org.jfree.data.RangeType: org.jfree.data.RangeType NEGATIVE> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r6 != $r7
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r6 != $r7 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : return $z0
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z1 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange>
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.getFixedAutoRange : return $d0
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b0 <= 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> >>>>>>>> org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : return $d0
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b1 >= 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero>
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : return $z0
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z2 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b5 > 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b5 > 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin>
org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperMargin : return $d0
org.jfree.chart.axis.ValueAxis.getUpperMargin : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d14 = $d13 * d2
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d14 = $d13 * d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = d0 + $d14
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = d0 + $d14 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b6 < 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b6 < 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin>
org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerMargin : return $d0
org.jfree.chart.axis.ValueAxis.getLowerMargin : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d16 = $d15 * d2
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d16 = $d15 * d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d17 = d1 - $d16
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d17 = d1 - $d16 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d17)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d17) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : goto [?= $r12 = new org.jfree.data.Range]
org.jfree.chart.axis.NumberAxis.autoAdjustRange : goto [?= $r12 = new org.jfree.data.Range] >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>(d7, d0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>(d7, d0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, 0, 0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, 0, 0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1)
org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, 1)
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, 1) >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if i0 != 0
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if r1 != null
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if z0 == 0
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.annotations.XYTextAnnotation.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setFont : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font> = r1
org.jfree.chart.annotations.XYTextAnnotation.setFont : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font> = r1 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setFont : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>()
org.jfree.chart.annotations.XYTextAnnotation.setFont : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $z0 = r0.<org.jfree.chart.annotations.AbstractAnnotation: boolean notify>
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $z0 = r0.<org.jfree.chart.annotations.AbstractAnnotation: boolean notify> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : if $z0 == 0
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : if $z0 == 0 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $r1 = new org.jfree.chart.event.AnnotationChangeEvent
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $r1 = new org.jfree.chart.event.AnnotationChangeEvent >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : specialinvoke $r1.<org.jfree.chart.event.AnnotationChangeEvent: void <init>(java.lang.Object,org.jfree.chart.annotations.Annotation)>(r0, r0)
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : specialinvoke $r1.<org.jfree.chart.event.AnnotationChangeEvent: void <init>(java.lang.Object,org.jfree.chart.annotations.Annotation)>(r0, r0) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : virtualinvoke r0.<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>($r1)
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : virtualinvoke r0.<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>($r1) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $i1 = lengthof r2
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : i0 = $i1 - 2
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : if i0 < 0
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : r0.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle> = d0
org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : r0.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle> = d0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>()
org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>() >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)>(r1, 1)
org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "annotation")
org.jfree.chart.plot.XYPlot.addAnnotation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "annotation") >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.addAnnotation : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke r1.<org.jfree.chart.annotations.XYAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke r1.<org.jfree.chart.annotations.XYAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>(r0) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : $r2 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : $r2 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AnnotationChangeListener", r1)
org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AnnotationChangeListener", r1) >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : if z0 == 0
org.jfree.chart.plot.XYPlot.addAnnotation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z1 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z1 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : if $z1 == z0
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : if $z1 == z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> = z0
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> = z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>()
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : if $z2 == 0
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>()
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $r1 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $r1 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : specialinvoke $r1.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : specialinvoke $r1.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r1)
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r1) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2
org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0
org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r2 = null
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r2 = null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r5 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r5 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : if $r5 == null
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : if $r5 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : return r2
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : return r2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getDefaultAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getDefaultAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange>
org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : return $r1
org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setGap : r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap> = d0
org.jfree.chart.plot.CombinedDomainXYPlot.setGap : r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap> = d0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setGap : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setGap : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "subplot")
org.jfree.chart.plot.CombinedDomainXYPlot.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "subplot") >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : if i0 > 0
org.jfree.chart.plot.CombinedDomainXYPlot.add : if i0 > 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setParent(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setParent(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.setParent : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> = r1
org.jfree.chart.plot.Plot.setParent : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> = r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setWeight(int)>(i0)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setWeight(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.setWeight : r0.<org.jfree.chart.plot.XYPlot: int weight> = i0
org.jfree.chart.plot.XYPlot.setWeight : r0.<org.jfree.chart.plot.XYPlot: int weight> = i0 >>>>>>>> org.jfree.chart.plot.XYPlot.setWeight : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setWeight : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : $r4 = <org.jfree.ui.RectangleInsets: org.jfree.ui.RectangleInsets ZERO_INSETS>
org.jfree.chart.plot.CombinedDomainXYPlot.add : $r4 = <org.jfree.ui.RectangleInsets: org.jfree.ui.RectangleInsets ZERO_INSETS> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>($r4, 0)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>($r4, 0) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets")
org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets") >>>>>>>> org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.setInsets : $z1 = virtualinvoke $r2.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.Plot.setInsets : $z1 = virtualinvoke $r2.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : if $z1 != 0
org.jfree.chart.plot.Plot.setInsets : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1
org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : if z0 == 0
org.jfree.chart.plot.Plot.setInsets : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setDomainAxis(org.jfree.chart.axis.ValueAxis)>(null)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setDomainAxis(org.jfree.chart.axis.ValueAxis)>(null) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setDomainAxis(int,org.jfree.chart.axis.ValueAxis)>(0, r1)
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setDomainAxis(int,org.jfree.chart.axis.ValueAxis)>(0, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)>(i0, r1, 1)
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i0)
org.jfree.chart.plot.XYPlot.setDomainAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.plot.XYPlot.getDomainAxis : r3 = (org.jfree.chart.plot.XYPlot) r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i0)
org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : if r2 == null
org.jfree.chart.plot.XYPlot.setDomainAxis : if r2 == null >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void removeChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void removeChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0) >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.removeChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1)
org.jfree.chart.axis.Axis.removeChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : if r1 != r0
org.jfree.chart.plot.CombinedDomainXYPlot.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.CombinedDomainXYPlot
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.CombinedDomainXYPlot >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : if $z0 != 0
org.jfree.chart.plot.CombinedDomainXYPlot.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : return 0
org.jfree.chart.plot.CombinedDomainXYPlot.equals : return 0 >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : if r1 == null
org.jfree.chart.plot.XYPlot.setDomainAxis : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.setDomainAxis : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : if z0 == 0
org.jfree.chart.plot.XYPlot.setDomainAxis : if z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void addChangeListener(org.jfree.chart.event.PlotChangeListener)>(r0)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void addChangeListener(org.jfree.chart.event.PlotChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1)
org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : $r5 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.add : $r5 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.add : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : r2 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>()
org.jfree.chart.plot.CombinedDomainXYPlot.add : r2 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : return $r1
org.jfree.chart.plot.XYPlot.getDomainAxis : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : if r2 == null
org.jfree.chart.plot.CombinedDomainXYPlot.add : if r2 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r6 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r6 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : if $z0 == 0
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r4 = (org.jfree.chart.plot.XYPlot) $r7
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r4 = (org.jfree.chart.plot.XYPlot) $r7 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r8 = virtualinvoke r4.<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r8 = virtualinvoke r4.<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r5 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDataRange : $r5 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r16 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToDomainAxis(java.lang.Integer)>($r5)
org.jfree.chart.plot.XYPlot.getDataRange : $r16 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToDomainAxis(java.lang.Integer)>($r5) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex")
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex") >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r4 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : r2 = $r4
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $i1 = virtualinvoke $r5.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $i1 = virtualinvoke $r5.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r7 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r7 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : r3 = (java.util.List) $r8
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : r3 = (java.util.List) $r8 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if r3 != null
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if r3 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if $z2 == 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r13 = virtualinvoke $r12.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r13 = virtualinvoke $r12.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : goto [?= $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : goto [?= $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : return r2
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r16)
org.jfree.chart.plot.XYPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r16) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if i0 != 0
org.jfree.chart.plot.XYPlot.getDataRange : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.getDataRange : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r6 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r6 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z2 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r7 = (org.jfree.chart.annotations.XYAnnotation) $r18
org.jfree.chart.plot.XYPlot.getDataRange : r7 = (org.jfree.chart.annotations.XYAnnotation) $r18 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z3 = r7 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo
org.jfree.chart.plot.XYPlot.getDataRange : $z3 = r7 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z3 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if $z0 == 0
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r27 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : $r27 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r26) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : goto [?= (branch)]
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z5 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z5 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r8 = (java.lang.Comparable) $r7
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r8 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i3 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r8)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i3 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i3)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i5 >= i4
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i5 >= i4 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i3, i5)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i3, i5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z6 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = i5 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = i5 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r9 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r9 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return $r9
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return $r9 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r27)
org.jfree.chart.plot.XYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r27) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r8)
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r8) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.data.Range.combine : if r1 != null
org.jfree.data.Range.combine : if r1 != null >>>>>>>> org.jfree.data.Range.combine : $d2 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.combine : $d2 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.combine : $d3 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.combine : $d3 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.combine : d0 = staticinvoke <java.lang.Math: double min(double,double)>($d2, $d3)
org.jfree.data.Range.combine : d0 = staticinvoke <java.lang.Math: double min(double,double)>($d2, $d3) >>>>>>>> org.jfree.data.Range.combine : $d4 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.combine : $d4 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.combine : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.combine : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.combine : d1 = staticinvoke <java.lang.Math: double max(double,double)>($d4, $d5)
org.jfree.data.Range.combine : d1 = staticinvoke <java.lang.Math: double max(double,double)>($d4, $d5) >>>>>>>> org.jfree.data.Range.combine : $r2 = new org.jfree.data.Range
org.jfree.data.Range.combine : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.combine : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.Range.combine : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.Range.combine : return $r2
org.jfree.data.Range.combine : return $r2 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setOrientation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.XYPlot.setOrientation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation") >>>>>>>> org.jfree.chart.plot.XYPlot.setOrientation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.setOrientation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.setOrientation : if r1 == $r2
org.jfree.chart.plot.XYPlot.setOrientation : if r1 == $r2 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $r4 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $r4 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : if $z0 == 0
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : r3 = (org.jfree.chart.plot.XYPlot) $r5
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : r3 = (org.jfree.chart.plot.XYPlot) $r5 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : virtualinvoke r3.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : virtualinvoke r3.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.Plot.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.plot.Plot.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i0 = lengthof $r2
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i0 = lengthof $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i1 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i1 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i1 >= i0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r4 = $r3[i1]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r4 = $r3[i1] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i1 = i1 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : goto [?= (branch)]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i6 = lengthof $r5
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i6 = lengthof $r5 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i6)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i6) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i2 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i2 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i2 >= i6
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i2 >= i6 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r7 = $r6[i2]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r7 = $r6[i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i2 = i2 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i7 = lengthof $r8
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i7 = lengthof $r8 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i7)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i7) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i3 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i3 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i3 >= i7
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i3 >= i7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r10 = $r9[i3]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r10 = $r9[i3] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i3 = i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i3 = i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i8 = lengthof $r11
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i8 = lengthof $r11 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i8)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i8) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i4 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i4 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i4 >= i8
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i4 >= i8 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r12 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r12 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r13 = $r12[i4]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r13 = $r12[i4] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r13, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r13, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i4 = i4 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r14 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r14 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i9 = lengthof $r14
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i9 = lengthof $r14 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i9)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i9) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i5 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i5 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i5 >= i9
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i5 >= i9 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r15 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r15 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r16 = $r15[i5]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r16 = $r15[i5] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r16, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r16, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i5 = i5 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i5 = i5 + 1 >>>>>>>> org.jfree.chart.plot.Plot.writeObject : $r2 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint>
org.jfree.chart.plot.Plot.writeObject : $r2 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> >>>>>>>> org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.plot.Plot.writeObject : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.writeObject : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.plot.Plot.writeObject : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.writeObject : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.plot.Plot.writeObject : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.writeObject : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1)
org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.plot.XYPlot.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.axis.Axis.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.axis.Axis.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.axis.Axis.writeObject : $r2 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint>
org.jfree.chart.axis.Axis.writeObject : $r2 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.axis.Axis.writeObject : $r3 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.axis.Axis.writeObject : $r3 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> >>>>>>>> org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.axis.Axis.writeObject : $r4 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.axis.Axis.writeObject : $r4 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke> >>>>>>>> org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.axis.Axis.writeObject : $r5 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.axis.Axis.writeObject : $r5 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint> >>>>>>>> org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1)
org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1) >>>>>>>> org.jfree.chart.axis.Axis.writeObject : $r6 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke>
org.jfree.chart.axis.Axis.writeObject : $r6 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke> >>>>>>>> org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r6, r1)
org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r6, r1) >>>>>>>> org.jfree.chart.axis.Axis.writeObject : $r7 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint>
org.jfree.chart.axis.Axis.writeObject : $r7 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint> >>>>>>>> org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1)
org.jfree.chart.axis.Axis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.axis.ValueAxis.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : $r2 = r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape upArrow>
org.jfree.chart.axis.ValueAxis.writeObject : $r2 = r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape upArrow> >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.axis.ValueAxis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : $r3 = r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape downArrow>
org.jfree.chart.axis.ValueAxis.writeObject : $r3 = r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape downArrow> >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.axis.ValueAxis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : $r4 = r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape leftArrow>
org.jfree.chart.axis.ValueAxis.writeObject : $r4 = r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape leftArrow> >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.axis.ValueAxis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : $r5 = r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape rightArrow>
org.jfree.chart.axis.ValueAxis.writeObject : $r5 = r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape rightArrow> >>>>>>>> org.jfree.chart.axis.ValueAxis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r5, r1)
org.jfree.chart.axis.ValueAxis.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r5, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r3 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r3 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r4 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r4 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r6, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r6, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r7 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r7 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r8 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r8 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r8, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r8, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r9 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r9 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r9, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r9, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r11 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r11 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r11, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r11, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r12 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r12 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r12, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r12, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r13 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r13 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r13, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r13, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r14 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r14 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r14, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r14, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r15 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r15 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r15, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r15, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r16 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r16 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r16, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r16, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r17, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r17, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r18 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin>
org.jfree.chart.plot.XYPlot.writeObject : $r18 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)>($r18, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)>($r18, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : i0 = 0
org.jfree.chart.plot.XYPlot.writeObject : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : if i0 >= 4
org.jfree.chart.plot.XYPlot.writeObject : if i0 >= 4 >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r19 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r19 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r20 = $r19[i0]
org.jfree.chart.plot.XYPlot.writeObject : $r20 = $r19[i0] >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r20, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r20, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.writeObject : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.writeObject : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r21, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r21, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r22 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r22 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r22, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r22, r1) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.annotations.AbstractAnnotation.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.annotations.XYTextAnnotation.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : $r2 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint>
org.jfree.chart.annotations.XYTextAnnotation.writeObject : $r2 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.annotations.XYTextAnnotation.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : $r3 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint>
org.jfree.chart.annotations.XYTextAnnotation.writeObject : $r3 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.annotations.XYTextAnnotation.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : $r4 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint outlinePaint>
org.jfree.chart.annotations.XYTextAnnotation.writeObject : $r4 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.annotations.XYTextAnnotation.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : $r5 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke outlineStroke>
org.jfree.chart.annotations.XYTextAnnotation.writeObject : $r5 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r5, r1)
org.jfree.chart.annotations.XYTextAnnotation.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r5, r1) >>>>>>>> org.jfree.data.general.AbstractDataset.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.data.general.AbstractDataset.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.renderer.AbstractRenderer.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r5 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r5 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r6 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r6 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r6, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r6, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r7 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r7 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r8 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r8 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r8, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r8, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r9 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r9 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r9, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r9, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r10 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r10 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r11 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r11 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r11, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r11, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r12 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r12 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r12, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r12, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r13 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r13 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r13, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r13, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r14 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r14 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r14, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r14, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r15 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r15 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r15, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r15, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r16 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r16 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r16, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r16, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : $r17 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.writeObject : $r17 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r17, r1)
org.jfree.chart.renderer.AbstractRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r17, r1) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.writeObject : $r2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.writeObject : $r2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.plot.Plot.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r2 = newarray (java.awt.Paint)[i0]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r2 = newarray (java.awt.Paint)[i0] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> = $r2
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> = $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i1 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i1 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i1 >= i0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r3[i1] = $r4
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r3[i1] = $r4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i1 = i1 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : goto [?= (branch)]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i6 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i6 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r5 = newarray (java.awt.Paint)[i6]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r5 = newarray (java.awt.Paint)[i6] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> = $r5
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> = $r5 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i2 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i2 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i2 >= i6
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i2 >= i6 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r6[i2] = $r7
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r6[i2] = $r7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i2 = i2 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i7 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i7 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r8 = newarray (java.awt.Stroke)[i7]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r8 = newarray (java.awt.Stroke)[i7] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> = $r8
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> = $r8 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i3 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i3 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i3 >= i7
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i3 >= i7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r9[i3] = $r10
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r9[i3] = $r10 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i3 = i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i3 = i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i8 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i8 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r11 = newarray (java.awt.Stroke)[i8]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r11 = newarray (java.awt.Stroke)[i8] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> = $r11
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> = $r11 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i4 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i4 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i4 >= i8
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i4 >= i8 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r12 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r12 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r12[i4] = $r13
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r12[i4] = $r13 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i4 = i4 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i9 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i9 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r14 = newarray (java.awt.Shape)[i9]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r14 = newarray (java.awt.Shape)[i9] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> = $r14
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> = $r14 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i5 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i5 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i5 >= i9
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i5 >= i9 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r15 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r15 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r15[i5] = $r16
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r15[i5] = $r16 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i5 = i5 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i5 = i5 + 1 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.Plot.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> = $r2
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> = $r2 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.Plot.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> = $r3
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> = $r3 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.Plot.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = $r4
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = $r4 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.Plot.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = $r5
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = $r5 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r6 = new javax.swing.event.EventListenerList
org.jfree.chart.plot.Plot.readObject : $r6 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.plot.Plot.readObject : specialinvoke $r6.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.plot.Plot.readObject : specialinvoke $r6.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r6
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r6 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r1 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder FORWARD>
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r1 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder FORWARD> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.DatasetRenderingOrder: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.DatasetRenderingOrder: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : if r0 != r1
org.jfree.chart.plot.DatasetRenderingOrder.equals : if r0 != r1 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : $z0 = r1 instanceof org.jfree.chart.plot.DatasetRenderingOrder
org.jfree.chart.plot.DatasetRenderingOrder.equals : $z0 = r1 instanceof org.jfree.chart.plot.DatasetRenderingOrder >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : if $z0 != 0
org.jfree.chart.plot.DatasetRenderingOrder.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : r2 = (org.jfree.chart.plot.DatasetRenderingOrder) r1
org.jfree.chart.plot.DatasetRenderingOrder.equals : r2 = (org.jfree.chart.plot.DatasetRenderingOrder) r1 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : $r3 = r0.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String name>
org.jfree.chart.plot.DatasetRenderingOrder.equals : $r3 = r0.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String name> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String toString()>()
org.jfree.chart.plot.DatasetRenderingOrder.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.toString : $r1 = r0.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String name>
org.jfree.chart.plot.DatasetRenderingOrder.toString : $r1 = r0.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String name> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.toString : return $r1
org.jfree.chart.plot.DatasetRenderingOrder.toString : return $r1 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.plot.DatasetRenderingOrder.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : if $z1 != 0
org.jfree.chart.plot.DatasetRenderingOrder.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : return 0
org.jfree.chart.plot.DatasetRenderingOrder.equals : return 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : if $z0 == 0
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r3 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE>
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r3 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.DatasetRenderingOrder: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.DatasetRenderingOrder: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : return 1
org.jfree.chart.plot.DatasetRenderingOrder.equals : return 1 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : if $z1 == 0
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r4 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE>
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r4 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : return $r4
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : return $r4 >>>>>>>> org.jfree.chart.axis.Axis.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.axis.Axis.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.axis.Axis.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.Axis.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> = $r2
org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> = $r2 >>>>>>>> org.jfree.chart.axis.Axis.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.Axis.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> = $r3
org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> = $r3 >>>>>>>> org.jfree.chart.axis.Axis.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.Axis.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke> = $r4
org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke> = $r4 >>>>>>>> org.jfree.chart.axis.Axis.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.Axis.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint> = $r5
org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint> = $r5 >>>>>>>> org.jfree.chart.axis.Axis.readObject : $r6 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.Axis.readObject : $r6 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke> = $r6
org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke> = $r6 >>>>>>>> org.jfree.chart.axis.Axis.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.Axis.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint> = $r7
org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint> = $r7 >>>>>>>> org.jfree.chart.axis.Axis.readObject : $r8 = new javax.swing.event.EventListenerList
org.jfree.chart.axis.Axis.readObject : $r8 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.axis.Axis.readObject : specialinvoke $r8.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.axis.Axis.readObject : specialinvoke $r8.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> = $r8
org.jfree.chart.axis.Axis.readObject : r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> = $r8 >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.axis.ValueAxis.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.ValueAxis.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape upArrow> = $r2
org.jfree.chart.axis.ValueAxis.readObject : r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape upArrow> = $r2 >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.ValueAxis.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape downArrow> = $r3
org.jfree.chart.axis.ValueAxis.readObject : r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape downArrow> = $r3 >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.ValueAxis.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape leftArrow> = $r4
org.jfree.chart.axis.ValueAxis.readObject : r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape leftArrow> = $r4 >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.axis.ValueAxis.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.readObject : r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape rightArrow> = $r5
org.jfree.chart.axis.ValueAxis.readObject : r0.<org.jfree.chart.axis.ValueAxis: java.awt.Shape rightArrow> = $r5 >>>>>>>> org.jfree.data.RangeType.readResolve : $r1 = <org.jfree.data.RangeType: org.jfree.data.RangeType FULL>
org.jfree.data.RangeType.readResolve : $r1 = <org.jfree.data.RangeType: org.jfree.data.RangeType FULL> >>>>>>>> org.jfree.data.RangeType.readResolve : $z0 = virtualinvoke r0.<org.jfree.data.RangeType: boolean equals(java.lang.Object)>($r1)
org.jfree.data.RangeType.readResolve : $z0 = virtualinvoke r0.<org.jfree.data.RangeType: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.data.RangeType.equals : if r0 != r1
org.jfree.data.RangeType.equals : if r0 != r1 >>>>>>>> org.jfree.data.RangeType.equals : $z0 = r1 instanceof org.jfree.data.RangeType
org.jfree.data.RangeType.equals : $z0 = r1 instanceof org.jfree.data.RangeType >>>>>>>> org.jfree.data.RangeType.equals : if $z0 != 0
org.jfree.data.RangeType.equals : if $z0 != 0 >>>>>>>> org.jfree.data.RangeType.equals : r2 = (org.jfree.data.RangeType) r1
org.jfree.data.RangeType.equals : r2 = (org.jfree.data.RangeType) r1 >>>>>>>> org.jfree.data.RangeType.equals : $r3 = r0.<org.jfree.data.RangeType: java.lang.String name>
org.jfree.data.RangeType.equals : $r3 = r0.<org.jfree.data.RangeType: java.lang.String name> >>>>>>>> org.jfree.data.RangeType.equals : $r4 = virtualinvoke r2.<org.jfree.data.RangeType: java.lang.String toString()>()
org.jfree.data.RangeType.equals : $r4 = virtualinvoke r2.<org.jfree.data.RangeType: java.lang.String toString()>() >>>>>>>> org.jfree.data.RangeType.toString : $r1 = r0.<org.jfree.data.RangeType: java.lang.String name>
org.jfree.data.RangeType.toString : $r1 = r0.<org.jfree.data.RangeType: java.lang.String name> >>>>>>>> org.jfree.data.RangeType.toString : return $r1
org.jfree.data.RangeType.toString : return $r1 >>>>>>>> org.jfree.data.RangeType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.data.RangeType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.RangeType.equals : if $z1 != 0
org.jfree.data.RangeType.equals : if $z1 != 0 >>>>>>>> org.jfree.data.RangeType.equals : return 1
org.jfree.data.RangeType.equals : return 1 >>>>>>>> org.jfree.data.RangeType.readResolve : if $z0 == 0
org.jfree.data.RangeType.readResolve : if $z0 == 0 >>>>>>>> org.jfree.data.RangeType.readResolve : $r2 = <org.jfree.data.RangeType: org.jfree.data.RangeType FULL>
org.jfree.data.RangeType.readResolve : $r2 = <org.jfree.data.RangeType: org.jfree.data.RangeType FULL> >>>>>>>> org.jfree.data.RangeType.readResolve : return $r2
org.jfree.data.RangeType.readResolve : return $r2 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r1 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.axis.AxisLocation.readResolve : $r1 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.axis.AxisLocation.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : if r0 != r1
org.jfree.chart.axis.AxisLocation.equals : if r0 != r1 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : $z0 = r1 instanceof org.jfree.chart.axis.AxisLocation
org.jfree.chart.axis.AxisLocation.equals : $z0 = r1 instanceof org.jfree.chart.axis.AxisLocation >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : if $z0 != 0
org.jfree.chart.axis.AxisLocation.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : r2 = (org.jfree.chart.axis.AxisLocation) r1
org.jfree.chart.axis.AxisLocation.equals : r2 = (org.jfree.chart.axis.AxisLocation) r1 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : $r3 = r0.<org.jfree.chart.axis.AxisLocation: java.lang.String name>
org.jfree.chart.axis.AxisLocation.equals : $r3 = r0.<org.jfree.chart.axis.AxisLocation: java.lang.String name> >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.AxisLocation: java.lang.String toString()>()
org.jfree.chart.axis.AxisLocation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.AxisLocation: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.AxisLocation.toString : $r1 = r0.<org.jfree.chart.axis.AxisLocation: java.lang.String name>
org.jfree.chart.axis.AxisLocation.toString : $r1 = r0.<org.jfree.chart.axis.AxisLocation: java.lang.String name> >>>>>>>> org.jfree.chart.axis.AxisLocation.toString : return $r1
org.jfree.chart.axis.AxisLocation.toString : return $r1 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.AxisLocation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : if $z1 != 0
org.jfree.chart.axis.AxisLocation.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : return 0
org.jfree.chart.axis.AxisLocation.equals : return 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : if $z0 == 0
org.jfree.chart.axis.AxisLocation.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT>
org.jfree.chart.axis.AxisLocation.readResolve : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.axis.AxisLocation.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : if $z1 == 0
org.jfree.chart.axis.AxisLocation.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r5 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.axis.AxisLocation.readResolve : $r5 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $z2 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r5)
org.jfree.chart.axis.AxisLocation.readResolve : $z2 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : if $z2 == 0
org.jfree.chart.axis.AxisLocation.readResolve : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r7 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.axis.AxisLocation.readResolve : $r7 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $z3 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r7)
org.jfree.chart.axis.AxisLocation.readResolve : $z3 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : return 1
org.jfree.chart.axis.AxisLocation.equals : return 1 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : if $z3 == 0
org.jfree.chart.axis.AxisLocation.readResolve : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r8 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.axis.AxisLocation.readResolve : $r8 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : return $r8
org.jfree.chart.axis.AxisLocation.readResolve : return $r8 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : r1 = null
org.jfree.chart.plot.PlotOrientation.readResolve : r1 = null >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : $r2 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.PlotOrientation.readResolve : $r2 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r2)
org.jfree.chart.plot.PlotOrientation.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : if r0 != r1
org.jfree.chart.plot.PlotOrientation.equals : if r0 != r1 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : $z0 = r1 instanceof org.jfree.chart.plot.PlotOrientation
org.jfree.chart.plot.PlotOrientation.equals : $z0 = r1 instanceof org.jfree.chart.plot.PlotOrientation >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : if $z0 != 0
org.jfree.chart.plot.PlotOrientation.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : r2 = (org.jfree.chart.plot.PlotOrientation) r1
org.jfree.chart.plot.PlotOrientation.equals : r2 = (org.jfree.chart.plot.PlotOrientation) r1 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : $r3 = r0.<org.jfree.chart.plot.PlotOrientation: java.lang.String name>
org.jfree.chart.plot.PlotOrientation.equals : $r3 = r0.<org.jfree.chart.plot.PlotOrientation: java.lang.String name> >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.PlotOrientation: java.lang.String toString()>()
org.jfree.chart.plot.PlotOrientation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.PlotOrientation: java.lang.String toString()>() >>>>>>>> org.jfree.chart.plot.PlotOrientation.toString : $r1 = r0.<org.jfree.chart.plot.PlotOrientation: java.lang.String name>
org.jfree.chart.plot.PlotOrientation.toString : $r1 = r0.<org.jfree.chart.plot.PlotOrientation: java.lang.String name> >>>>>>>> org.jfree.chart.plot.PlotOrientation.toString : return $r1
org.jfree.chart.plot.PlotOrientation.toString : return $r1 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.plot.PlotOrientation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : if $z1 != 0
org.jfree.chart.plot.PlotOrientation.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : return 0
org.jfree.chart.plot.PlotOrientation.equals : return 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : if $z0 == 0
org.jfree.chart.plot.PlotOrientation.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : $r3 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.PlotOrientation.readResolve : $r3 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.plot.PlotOrientation.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : return 1
org.jfree.chart.plot.PlotOrientation.equals : return 1 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : if $z1 == 0
org.jfree.chart.plot.PlotOrientation.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : r1 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.PlotOrientation.readResolve : r1 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : return r1
org.jfree.chart.plot.PlotOrientation.readResolve : return r1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r1 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder FORWARD>
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r1 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder FORWARD> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.SeriesRenderingOrder: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.SeriesRenderingOrder: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : if r0 != r1
org.jfree.chart.plot.SeriesRenderingOrder.equals : if r0 != r1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : $z0 = r1 instanceof org.jfree.chart.plot.SeriesRenderingOrder
org.jfree.chart.plot.SeriesRenderingOrder.equals : $z0 = r1 instanceof org.jfree.chart.plot.SeriesRenderingOrder >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : if $z0 != 0
org.jfree.chart.plot.SeriesRenderingOrder.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : r2 = (org.jfree.chart.plot.SeriesRenderingOrder) r1
org.jfree.chart.plot.SeriesRenderingOrder.equals : r2 = (org.jfree.chart.plot.SeriesRenderingOrder) r1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : $r3 = r0.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String name>
org.jfree.chart.plot.SeriesRenderingOrder.equals : $r3 = r0.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String name> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String toString()>()
org.jfree.chart.plot.SeriesRenderingOrder.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.toString : $r1 = r0.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String name>
org.jfree.chart.plot.SeriesRenderingOrder.toString : $r1 = r0.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String name> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.toString : return $r1
org.jfree.chart.plot.SeriesRenderingOrder.toString : return $r1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.plot.SeriesRenderingOrder.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : if $z1 != 0
org.jfree.chart.plot.SeriesRenderingOrder.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : return 0
org.jfree.chart.plot.SeriesRenderingOrder.equals : return 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : if $z0 == 0
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r3 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE>
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r3 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.SeriesRenderingOrder: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.SeriesRenderingOrder: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : return 1
org.jfree.chart.plot.SeriesRenderingOrder.equals : return 1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : if $z1 == 0
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r4 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE>
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r4 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : return $r4
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : return $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r6 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r6 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> = $r6
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> = $r6 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> = $r7
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> = $r7 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r8 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r8 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> = $r8
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> = $r8 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r9 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r9 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> = $r9
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> = $r9 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> = $r10
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> = $r10 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r11 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r11 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> = $r11
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> = $r11 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r12 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r12 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> = $r12
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> = $r12 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> = $r13
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> = $r13 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r14 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r14 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> = $r14
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> = $r14 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r15 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r15 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> = $r15
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> = $r15 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> = $r16
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> = $r16 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r17 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r17 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> = $r17
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> = $r17 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r18 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r18 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> = $r18
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> = $r18 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r19 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r19 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> = $r19
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> = $r19 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r20 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r20 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> = $r20
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> = $r20 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r21 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r21 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> = $r21
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> = $r21 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r22 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.geom.Point2D readPoint2D(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r22 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.geom.Point2D readPoint2D(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> = $r22
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> = $r22 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r23 = newarray (java.awt.Paint)[4]
org.jfree.chart.plot.XYPlot.readObject : $r23 = newarray (java.awt.Paint)[4] >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> = $r23
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> = $r23 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i0 = 0
org.jfree.chart.plot.XYPlot.readObject : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i0 >= 4
org.jfree.chart.plot.XYPlot.readObject : if i0 >= 4 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r24 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.readObject : $r24 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r25 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r25 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r24[i0] = $r25
org.jfree.chart.plot.XYPlot.readObject : $r24[i0] = $r25 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.readObject : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.readObject : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r26 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r26 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> = $r26
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> = $r26 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r27 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r27 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> = $r27
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> = $r27 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r28 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.readObject : $r28 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i2 = virtualinvoke $r28.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.readObject : i2 = virtualinvoke $r28.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i1 = 0
org.jfree.chart.plot.XYPlot.readObject : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i1 >= i2
org.jfree.chart.plot.XYPlot.readObject : if i1 >= i2 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r29 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.readObject : $r29 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r30 = virtualinvoke $r29.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.readObject : $r30 = virtualinvoke $r29.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r2 = (org.jfree.chart.axis.Axis) $r30
org.jfree.chart.plot.XYPlot.readObject : r2 = (org.jfree.chart.axis.Axis) $r30 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if r2 == null
org.jfree.chart.plot.XYPlot.readObject : if r2 == null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r2.<org.jfree.chart.axis.Axis: void setPlot(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r2.<org.jfree.chart.axis.Axis: void setPlot(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r2.<org.jfree.chart.axis.Axis: void addChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r2.<org.jfree.chart.axis.Axis: void addChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.readObject : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r31 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.readObject : $r31 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i3 = virtualinvoke $r31.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.readObject : i3 = virtualinvoke $r31.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i4 = 0
org.jfree.chart.plot.XYPlot.readObject : i4 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i4 >= i3
org.jfree.chart.plot.XYPlot.readObject : if i4 >= i3 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r32 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.readObject : $r32 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r33 = virtualinvoke $r32.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i4)
org.jfree.chart.plot.XYPlot.readObject : $r33 = virtualinvoke $r32.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i4) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r3 = (org.jfree.chart.axis.Axis) $r33
org.jfree.chart.plot.XYPlot.readObject : r3 = (org.jfree.chart.axis.Axis) $r33 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if r3 == null
org.jfree.chart.plot.XYPlot.readObject : if r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i4 = i4 + 1
org.jfree.chart.plot.XYPlot.readObject : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r34 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.readObject : $r34 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i5 = virtualinvoke $r34.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.readObject : i5 = virtualinvoke $r34.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i6 = 0
org.jfree.chart.plot.XYPlot.readObject : i6 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i6 >= i5
org.jfree.chart.plot.XYPlot.readObject : if i6 >= i5 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r35 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.readObject : $r35 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r36 = virtualinvoke $r35.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6)
org.jfree.chart.plot.XYPlot.readObject : $r36 = virtualinvoke $r35.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r4 = (org.jfree.data.general.Dataset) $r36
org.jfree.chart.plot.XYPlot.readObject : r4 = (org.jfree.data.general.Dataset) $r36 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if r4 == null
org.jfree.chart.plot.XYPlot.readObject : if r4 == null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i6 = i6 + 1
org.jfree.chart.plot.XYPlot.readObject : i6 = i6 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r37 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.readObject : $r37 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i7 = virtualinvoke $r37.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.readObject : i7 = virtualinvoke $r37.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i8 = 0
org.jfree.chart.plot.XYPlot.readObject : i8 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i8 >= i7
org.jfree.chart.plot.XYPlot.readObject : if i8 >= i7 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r38 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.readObject : $r38 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r39 = virtualinvoke $r38.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i8)
org.jfree.chart.plot.XYPlot.readObject : $r39 = virtualinvoke $r38.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i8) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r5 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r39
org.jfree.chart.plot.XYPlot.readObject : r5 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r39 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if r5 == null
org.jfree.chart.plot.XYPlot.readObject : if r5 == null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i8 = i8 + 1
org.jfree.chart.plot.XYPlot.readObject : i8 = i8 + 1 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.annotations.AbstractAnnotation.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.readObject : $r2 = new javax.swing.event.EventListenerList
org.jfree.chart.annotations.AbstractAnnotation.readObject : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.annotations.AbstractAnnotation.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.readObject : r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.chart.annotations.AbstractAnnotation.readObject : r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.annotations.XYTextAnnotation.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.annotations.XYTextAnnotation.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint> = $r2
org.jfree.chart.annotations.XYTextAnnotation.readObject : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint> = $r2 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.annotations.XYTextAnnotation.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint> = $r3
org.jfree.chart.annotations.XYTextAnnotation.readObject : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint> = $r3 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.annotations.XYTextAnnotation.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint outlinePaint> = $r4
org.jfree.chart.annotations.XYTextAnnotation.readObject : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint outlinePaint> = $r4 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.annotations.XYTextAnnotation.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.readObject : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke outlineStroke> = $r5
org.jfree.chart.annotations.XYTextAnnotation.readObject : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke outlineStroke> = $r5 >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.AbstractDataset.readObject : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.AbstractDataset.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.data.general.AbstractDataset.readObject : r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void registerValidation(java.io.ObjectInputValidation,int)>(r0, 10)
org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void registerValidation(java.io.ObjectInputValidation,int)>(r0, 10) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.renderer.AbstractRenderer.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : r1 = null
org.jfree.chart.labels.ItemLabelAnchor.readResolve : r1 = null >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r2 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor CENTER>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r2 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor CENTER> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r2)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : if r0 != r1
org.jfree.chart.labels.ItemLabelAnchor.equals : if r0 != r1 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : $z0 = r1 instanceof org.jfree.chart.labels.ItemLabelAnchor
org.jfree.chart.labels.ItemLabelAnchor.equals : $z0 = r1 instanceof org.jfree.chart.labels.ItemLabelAnchor >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : if $z0 != 0
org.jfree.chart.labels.ItemLabelAnchor.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : r2 = (org.jfree.chart.labels.ItemLabelAnchor) r1
org.jfree.chart.labels.ItemLabelAnchor.equals : r2 = (org.jfree.chart.labels.ItemLabelAnchor) r1 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : $r3 = r0.<org.jfree.chart.labels.ItemLabelAnchor: java.lang.String name>
org.jfree.chart.labels.ItemLabelAnchor.equals : $r3 = r0.<org.jfree.chart.labels.ItemLabelAnchor: java.lang.String name> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : $r4 = virtualinvoke r2.<org.jfree.chart.labels.ItemLabelAnchor: java.lang.String toString()>()
org.jfree.chart.labels.ItemLabelAnchor.equals : $r4 = virtualinvoke r2.<org.jfree.chart.labels.ItemLabelAnchor: java.lang.String toString()>() >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.toString : $r1 = r0.<org.jfree.chart.labels.ItemLabelAnchor: java.lang.String name>
org.jfree.chart.labels.ItemLabelAnchor.toString : $r1 = r0.<org.jfree.chart.labels.ItemLabelAnchor: java.lang.String name> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.toString : return $r1
org.jfree.chart.labels.ItemLabelAnchor.toString : return $r1 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.labels.ItemLabelAnchor.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : if $z1 != 0
org.jfree.chart.labels.ItemLabelAnchor.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : return 0
org.jfree.chart.labels.ItemLabelAnchor.equals : return 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z0 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r3 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE1>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r3 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE1> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z1 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r4 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE2>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r4 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE2> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z2 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z2 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z2 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z2 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r5 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE3>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r5 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE3> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z3 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r5)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z3 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z3 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z3 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r6 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE4>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r6 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE4> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z4 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z4 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z4 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z4 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r7 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE5>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r7 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE5> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z5 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r7)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z5 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z5 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z5 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r8 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE6>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r8 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE6> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z6 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z6 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z6 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z6 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r9 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE7>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r9 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE7> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z7 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r9)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z7 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z7 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z7 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r10 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE8>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r10 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE8> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z8 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z8 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z8 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z8 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r11 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE9>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r11 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE9> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z9 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r11)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z9 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r11) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z9 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z9 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r12 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE10>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r12 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE10> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z10 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r12)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z10 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z10 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z10 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r13 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE11>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r13 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE11> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z11 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r13)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z11 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r13) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z11 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z11 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r14 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE12>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r14 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE12> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z12 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r14)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z12 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z12 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z12 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r15 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE1>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r15 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE1> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z13 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r15)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z13 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z13 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z13 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r16 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE2>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r16 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE2> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z14 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r16)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z14 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z14 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z14 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r17 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE3>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r17 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE3> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z15 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r17)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z15 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r17) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z15 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z15 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r18 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE4>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r18 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE4> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z16 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r18)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z16 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z16 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z16 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r19 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE5>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r19 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE5> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z17 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r19)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z17 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r19) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z17 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z17 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r20 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE6>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r20 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE6> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z18 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r20)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z18 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.equals : return 1
org.jfree.chart.labels.ItemLabelAnchor.equals : return 1 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z18 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z18 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : r1 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE6>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : r1 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE6> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : goto [?= return r1]
org.jfree.chart.labels.ItemLabelAnchor.readResolve : goto [?= return r1] >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : return r1
org.jfree.chart.labels.ItemLabelAnchor.readResolve : return r1 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r21 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE7>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r21 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE7> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z19 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r21)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z19 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r21) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z19 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z19 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r22 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE8>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r22 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE8> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z20 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r22)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z20 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r22) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z20 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z20 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r23 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE9>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r23 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE9> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z21 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r23)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z21 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r23) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z21 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z21 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r24 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE10>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r24 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE10> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z22 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r24)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z22 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r24) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z22 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z22 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r25 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE11>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r25 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE11> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z23 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r25)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z23 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z23 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z23 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r26 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE12>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $r26 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE12> >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z24 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r26)
org.jfree.chart.labels.ItemLabelAnchor.readResolve : $z24 = virtualinvoke r0.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r26) >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z24 == 0
org.jfree.chart.labels.ItemLabelAnchor.readResolve : if $z24 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelAnchor.readResolve : r1 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE12>
org.jfree.chart.labels.ItemLabelAnchor.readResolve : r1 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE12> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> = $r2
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> = $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> = $r3
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> = $r3 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint> = $r4
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint> = $r4 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint> = $r5
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint> = $r5 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r6 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r6 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint> = $r6
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint> = $r6 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> = $r7
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> = $r7 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r8 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r8 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> = $r8
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> = $r8 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r9 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r9 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke> = $r9
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke> = $r9 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> = $r10
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> = $r10 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r11 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r11 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> = $r11
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> = $r11 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r12 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r12 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> = $r12
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> = $r12 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = $r13
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = $r13 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r14 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r14 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint> = $r14
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint> = $r14 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r15 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r15 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint> = $r15
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint> = $r15 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = $r16
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = $r16 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r17 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.AbstractRenderer.readObject : $r17 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint> = $r17
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint> = $r17 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : $r18 = new javax.swing.event.EventListenerList
org.jfree.chart.renderer.AbstractRenderer.readObject : $r18 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : specialinvoke $r18.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.renderer.AbstractRenderer.readObject : specialinvoke $r18.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> = $r18
org.jfree.chart.renderer.AbstractRenderer.readObject : r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> = $r18 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.readObject : r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine> = $r2
org.jfree.chart.renderer.xy.StandardXYItemRenderer.readObject : r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine> = $r2 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r3.<org.jfree.chart.axis.Axis: void setPlot(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r3.<org.jfree.chart.axis.Axis: void setPlot(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r8 = (org.jfree.chart.annotations.XYAnnotation) $r23
org.jfree.chart.plot.XYPlot.getDataRange : r8 = (org.jfree.chart.annotations.XYAnnotation) $r23 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z7 = r8 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo
org.jfree.chart.plot.XYPlot.getDataRange : $z7 = r8 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z7 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z7 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : return $r1
org.jfree.chart.axis.ValueAxis.getRange : return $r1 >>>>>>>> org.jfree.data.Range.contains : $z0 = 0
org.jfree.data.Range.contains : $z0 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r3.<org.jfree.chart.axis.Axis: void addChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r3.<org.jfree.chart.axis.Axis: void addChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : interfaceinvoke r4.<org.jfree.data.general.Dataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.readObject : interfaceinvoke r4.<org.jfree.data.general.Dataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : interfaceinvoke r5.<org.jfree.chart.renderer.xy.XYItemRenderer: void addChangeListener(org.jfree.chart.event.RendererChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.readObject : interfaceinvoke r5.<org.jfree.chart.renderer.xy.XYItemRenderer: void addChangeListener(org.jfree.chart.event.RendererChangeListener)>(r0) >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.axis.AxisLocation.readResolve : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : return $r6
org.jfree.chart.axis.AxisLocation.readResolve : return $r6 >>>>>>>> org.jfree.data.general.AbstractDataset.validateObject : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void fireDatasetChanged()>()
org.jfree.data.general.AbstractDataset.validateObject : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke $r4.<org.jfree.chart.plot.Plot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke $r4.<org.jfree.chart.plot.Plot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : goto [?= return]
org.jfree.chart.plot.XYPlot.datasetChanged : goto [?= return] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : r2 = (org.jfree.chart.plot.CombinedDomainXYPlot) r1
org.jfree.chart.plot.CombinedDomainXYPlot.equals : r2 = (org.jfree.chart.plot.CombinedDomainXYPlot) r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $d0 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap>
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $d0 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $d1 = r2.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap>
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $d1 = r2.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : if $b0 == 0
org.jfree.chart.plot.CombinedDomainXYPlot.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $r3 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $r3 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $r4 = r2.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $r4 = r2.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if r1 != r0
org.jfree.chart.plot.XYPlot.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.XYPlot >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z0 != 0
org.jfree.chart.plot.XYPlot.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : r2 = (org.jfree.chart.plot.XYPlot) r1
org.jfree.chart.plot.XYPlot.equals : r2 = (org.jfree.chart.plot.XYPlot) r1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $i1 = r0.<org.jfree.chart.plot.XYPlot: int weight>
org.jfree.chart.plot.XYPlot.equals : $i1 = r0.<org.jfree.chart.plot.XYPlot: int weight> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $i2 = r2.<org.jfree.chart.plot.XYPlot: int weight>
org.jfree.chart.plot.XYPlot.equals : $i2 = r2.<org.jfree.chart.plot.XYPlot: int weight> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $i1 == $i2
org.jfree.chart.plot.XYPlot.equals : if $i1 == $i2 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.equals : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r4 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.equals : $r4 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $r3 == $r4
org.jfree.chart.plot.XYPlot.equals : if $r3 == $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.equals : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r6 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.equals : $r6 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z1 = virtualinvoke $r5.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.plot.XYPlot.equals : $z1 = virtualinvoke $r5.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z1 != 0
org.jfree.chart.plot.XYPlot.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r7 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.equals : $r7 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r8 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.equals : $r8 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z2 = virtualinvoke $r7.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.plot.XYPlot.equals : $z2 = virtualinvoke $r7.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z2 != 0
org.jfree.chart.plot.XYPlot.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z3 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.equals : $z3 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z4 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.equals : $z4 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z3 == $z4
org.jfree.chart.plot.XYPlot.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z5 = r0.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z5 = r0.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z6 = r2.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z6 = r2.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z5 == $z6
org.jfree.chart.plot.XYPlot.equals : if $z5 == $z6 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z7 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z7 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z8 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z8 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z7 == $z8
org.jfree.chart.plot.XYPlot.equals : if $z7 == $z8 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z9 = r0.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z9 = r0.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z10 = r2.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z10 = r2.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z9 == $z10
org.jfree.chart.plot.XYPlot.equals : if $z9 == $z10 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z11 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z11 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z12 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z12 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z11 == $z12
org.jfree.chart.plot.XYPlot.equals : if $z11 == $z12 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z13 = r0.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.equals : $z13 = r0.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z14 = r2.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.equals : $z14 = r2.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z13 == $z14
org.jfree.chart.plot.XYPlot.equals : if $z13 == $z14 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z15 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.equals : $z15 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z16 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.equals : $z16 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z15 == $z16
org.jfree.chart.plot.XYPlot.equals : if $z15 == $z16 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z17 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible>
org.jfree.chart.plot.XYPlot.equals : $z17 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z18 = r2.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible>
org.jfree.chart.plot.XYPlot.equals : $z18 = r2.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z17 == $z18
org.jfree.chart.plot.XYPlot.equals : if $z17 == $z18 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $d0 = r0.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue>
org.jfree.chart.plot.XYPlot.equals : $d0 = r0.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $d1 = r2.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue>
org.jfree.chart.plot.XYPlot.equals : $d1 = r2.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $b3 = $d0 cmpl $d1
org.jfree.chart.plot.XYPlot.equals : $b3 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $b3 == 0
org.jfree.chart.plot.XYPlot.equals : if $b3 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z19 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.equals : $z19 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z20 = r2.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.equals : $z20 = r2.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z19 == $z20
org.jfree.chart.plot.XYPlot.equals : if $z19 == $z20 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z21 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible>
org.jfree.chart.plot.XYPlot.equals : $z21 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z22 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible>
org.jfree.chart.plot.XYPlot.equals : $z22 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z21 == $z22
org.jfree.chart.plot.XYPlot.equals : if $z21 == $z22 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $d2 = r0.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue>
org.jfree.chart.plot.XYPlot.equals : $d2 = r0.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $d3 = r2.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue>
org.jfree.chart.plot.XYPlot.equals : $d3 = r2.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $b4 = $d2 cmpl $d3
org.jfree.chart.plot.XYPlot.equals : $b4 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $b4 == 0
org.jfree.chart.plot.XYPlot.equals : if $b4 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.XYPlot.equals : $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r10 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.XYPlot.equals : $r10 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z23 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.plot.XYPlot.equals : $z23 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z23 != 0
org.jfree.chart.plot.XYPlot.equals : if $z23 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r11 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.equals : $r11 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r12 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.equals : $r12 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z24 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12)
org.jfree.chart.plot.XYPlot.equals : $z24 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if r1 != r0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if r1 != r0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.xy.StandardXYItemRenderer
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.xy.StandardXYItemRenderer >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z0 != 0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : r2 = (org.jfree.chart.renderer.xy.StandardXYItemRenderer) r1
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : r2 = (org.jfree.chart.renderer.xy.StandardXYItemRenderer) r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z1 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesVisible>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z1 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesVisible> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z2 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesVisible>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z2 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesVisible> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z1 == $z2
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z1 == $z2 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z3 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotLines>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z3 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotLines> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z4 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotLines>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z4 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotLines> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z3 == $z4
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z5 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotImages>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z5 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotImages> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z6 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotImages>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z6 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotImages> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z5 == $z6
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z5 == $z6 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z7 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotDiscontinuous>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z7 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotDiscontinuous> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z8 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotDiscontinuous>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z8 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotDiscontinuous> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z7 == $z8
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z7 == $z8 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r3 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.UnitType gapThresholdType>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r3 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.UnitType gapThresholdType> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r4 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.UnitType gapThresholdType>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r4 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.UnitType gapThresholdType> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $r3 == $r4
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $r3 == $r4 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $d0 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: double gapThreshold>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $d0 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: double gapThreshold> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $d1 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: double gapThreshold>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $d1 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: double gapThreshold> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $b0 == 0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r5 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.lang.Boolean shapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r5 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.lang.Boolean shapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r6 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.lang.Boolean shapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r6 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.lang.Boolean shapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z9 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z9 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z9 != 0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r7 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.BooleanList seriesShapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r7 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.BooleanList seriesShapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r8 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.BooleanList seriesShapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r8 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.BooleanList seriesShapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z10 = virtualinvoke $r7.<org.jfree.util.BooleanList: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z10 = virtualinvoke $r7.<org.jfree.util.BooleanList: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z10 != 0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z11 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z11 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z12 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z12 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z11 == $z12
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z11 == $z12 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z13 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean drawSeriesLineAsPath>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z13 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean drawSeriesLineAsPath> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z14 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean drawSeriesLineAsPath>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z14 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean drawSeriesLineAsPath> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z13 == $z14
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z13 == $z14 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r9 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r9 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r10 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $r10 = r2.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z15 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r9, $r10)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z15 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r9, $r10) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z15 != 0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : if $z15 != 0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z16 = specialinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : $z16 = specialinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if r1 != r0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if r1 != r0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z0 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : r2 = (org.jfree.chart.renderer.xy.AbstractXYItemRenderer) r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : r2 = (org.jfree.chart.renderer.xy.AbstractXYItemRenderer) r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r3 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYItemLabelGenerator itemLabelGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r3 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYItemLabelGenerator itemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r4 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYItemLabelGenerator itemLabelGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r4 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYItemLabelGenerator itemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z1 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r5 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r5 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r6 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r6 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z2 = virtualinvoke $r5.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z2 = virtualinvoke $r5.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z2 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r7 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYItemLabelGenerator baseItemLabelGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r7 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYItemLabelGenerator baseItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r8 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYItemLabelGenerator baseItemLabelGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r8 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYItemLabelGenerator baseItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z3 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r9 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator toolTipGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r9 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator toolTipGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r10 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator toolTipGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r10 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator toolTipGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z4 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r11 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r11 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r12 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r12 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z5 = virtualinvoke $r11.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r12)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z5 = virtualinvoke $r11.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z5 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r13 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r13 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r14 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r14 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z6 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z6 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z6 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z6 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r15 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r15 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r16 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r16 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z7 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z7 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z7 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r17 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r17 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r18 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r18 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z8 = interfaceinvoke $r17.<java.util.List: boolean equals(java.lang.Object)>($r18)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z8 = interfaceinvoke $r17.<java.util.List: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z8 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z8 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r19 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r19 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r20 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r20 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z9 = interfaceinvoke $r19.<java.util.List: boolean equals(java.lang.Object)>($r20)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z9 = interfaceinvoke $r19.<java.util.List: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z9 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r21 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemLabelGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r21 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r22 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemLabelGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r22 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r21, $r22)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r21, $r22) >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : if r1 != r0
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : if r1 != r0 >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : $z0 = r1 instanceof org.jfree.chart.labels.StandardXYSeriesLabelGenerator
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : $z0 = r1 instanceof org.jfree.chart.labels.StandardXYSeriesLabelGenerator >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : if $z0 != 0
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : r2 = (org.jfree.chart.labels.StandardXYSeriesLabelGenerator) r1
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : r2 = (org.jfree.chart.labels.StandardXYSeriesLabelGenerator) r1 >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : $r3 = r0.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.String formatPattern>
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : $r3 = r0.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.String formatPattern> >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : $r4 = r2.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.String formatPattern>
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : $r4 = r2.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.String formatPattern> >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : if $z1 != 0
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : return 1
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals : return 1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z10 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r23 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r23 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r24 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r24 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z11 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r23, $r24)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z11 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r23, $r24) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z11 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z11 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r25 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r25 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r26 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $r26 = r2.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z12 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r25, $r26)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z12 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r25, $r26) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z12 != 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : if $z12 != 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z13 = specialinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : $z13 = specialinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if r1 != r0
org.jfree.chart.renderer.AbstractRenderer.equals : if r1 != r0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.AbstractRenderer
org.jfree.chart.renderer.AbstractRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.AbstractRenderer >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z0 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : r2 = (org.jfree.chart.renderer.AbstractRenderer) r1
org.jfree.chart.renderer.AbstractRenderer.equals : r2 = (org.jfree.chart.renderer.AbstractRenderer) r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z1 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.equals : $z1 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z2 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.equals : $z2 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z1 == $z2
org.jfree.chart.renderer.AbstractRenderer.equals : if $z1 == $z2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z3 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean treatLegendShapeAsLine>
org.jfree.chart.renderer.AbstractRenderer.equals : $z3 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean treatLegendShapeAsLine> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z4 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean treatLegendShapeAsLine>
org.jfree.chart.renderer.AbstractRenderer.equals : $z4 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean treatLegendShapeAsLine> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z3 == $z4
org.jfree.chart.renderer.AbstractRenderer.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $i0 = r0.<org.jfree.chart.renderer.AbstractRenderer: int defaultEntityRadius>
org.jfree.chart.renderer.AbstractRenderer.equals : $i0 = r0.<org.jfree.chart.renderer.AbstractRenderer: int defaultEntityRadius> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $i1 = r2.<org.jfree.chart.renderer.AbstractRenderer: int defaultEntityRadius>
org.jfree.chart.renderer.AbstractRenderer.equals : $i1 = r2.<org.jfree.chart.renderer.AbstractRenderer: int defaultEntityRadius> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $i0 == $i1
org.jfree.chart.renderer.AbstractRenderer.equals : if $i0 == $i1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.equals : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r4 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.equals : $r4 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z5 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.renderer.AbstractRenderer.equals : $z5 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z5 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r5 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r5 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r6 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r6 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z6 = virtualinvoke $r5.<org.jfree.util.BooleanList: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.renderer.AbstractRenderer.equals : $z6 = virtualinvoke $r5.<org.jfree.util.BooleanList: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z6 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z6 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z7 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.equals : $z7 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z8 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.equals : $z8 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z7 == $z8
org.jfree.chart.renderer.AbstractRenderer.equals : if $z7 == $z8 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r7 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.equals : $r7 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r8 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.equals : $r8 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z9 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8)
org.jfree.chart.renderer.AbstractRenderer.equals : $z9 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z9 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r9 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r9 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r10 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r10 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z10 = virtualinvoke $r9.<org.jfree.util.BooleanList: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.renderer.AbstractRenderer.equals : $z10 = virtualinvoke $r9.<org.jfree.util.BooleanList: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z10 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z11 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.equals : $z11 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z12 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.equals : $z12 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z11 == $z12
org.jfree.chart.renderer.AbstractRenderer.equals : if $z11 == $z12 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r11 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r11 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r12 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r12 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z13 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r11, $r12)
org.jfree.chart.renderer.AbstractRenderer.equals : $z13 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r11, $r12) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z13 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z13 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r13 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r13 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r14 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r14 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z14 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)
org.jfree.chart.renderer.AbstractRenderer.equals : $z14 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z14 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z14 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r15 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r15 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r16 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r16 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z15 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16)
org.jfree.chart.renderer.AbstractRenderer.equals : $z15 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z15 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z15 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r17 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r17 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r18 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r18 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z16 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r17, $r18)
org.jfree.chart.renderer.AbstractRenderer.equals : $z16 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r17, $r18) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z16 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z16 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r19 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r19 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r20 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r20 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z17 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)
org.jfree.chart.renderer.AbstractRenderer.equals : $z17 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z17 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z17 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r21 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r21 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r22 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r22 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z18 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r21, $r22)
org.jfree.chart.renderer.AbstractRenderer.equals : $z18 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r21, $r22) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z18 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z18 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r23 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r23 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r24 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r24 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z19 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r23, $r24)
org.jfree.chart.renderer.AbstractRenderer.equals : $z19 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r23, $r24) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z19 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z19 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r25 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r25 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r26 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r26 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z20 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r25, $r26)
org.jfree.chart.renderer.AbstractRenderer.equals : $z20 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r25, $r26) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z20 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z20 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r27 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r27 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r28 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r28 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z21 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r27, $r28)
org.jfree.chart.renderer.AbstractRenderer.equals : $z21 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r27, $r28) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z21 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z21 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r29 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke>
org.jfree.chart.renderer.AbstractRenderer.equals : $r29 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r30 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke>
org.jfree.chart.renderer.AbstractRenderer.equals : $r30 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z22 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r30)
org.jfree.chart.renderer.AbstractRenderer.equals : $z22 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z22 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z22 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r31 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r31 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r32 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r32 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z23 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r31, $r32)
org.jfree.chart.renderer.AbstractRenderer.equals : $z23 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r31, $r32) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z23 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z23 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r33 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke>
org.jfree.chart.renderer.AbstractRenderer.equals : $r33 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r34 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke>
org.jfree.chart.renderer.AbstractRenderer.equals : $r34 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z24 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r34)
org.jfree.chart.renderer.AbstractRenderer.equals : $z24 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r34) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z24 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z24 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r35 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke>
org.jfree.chart.renderer.AbstractRenderer.equals : $r35 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r36 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke>
org.jfree.chart.renderer.AbstractRenderer.equals : $r36 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z25 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r35, $r36)
org.jfree.chart.renderer.AbstractRenderer.equals : $z25 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r35, $r36) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z25 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z25 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r37 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r37 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r38 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r38 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z26 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r37, $r38)
org.jfree.chart.renderer.AbstractRenderer.equals : $z26 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r37, $r38) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z26 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z26 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r39 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke>
org.jfree.chart.renderer.AbstractRenderer.equals : $r39 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r40 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke>
org.jfree.chart.renderer.AbstractRenderer.equals : $r40 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z27 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r39, $r40)
org.jfree.chart.renderer.AbstractRenderer.equals : $z27 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r39, $r40) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z27 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z27 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r41 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape>
org.jfree.chart.renderer.AbstractRenderer.equals : $r41 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r42 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape>
org.jfree.chart.renderer.AbstractRenderer.equals : $r42 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z28 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r41, $r42)
org.jfree.chart.renderer.AbstractRenderer.equals : $z28 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r41, $r42) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z28 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z28 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r43 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r43 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r44 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r44 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z29 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r43, $r44)
org.jfree.chart.renderer.AbstractRenderer.equals : $z29 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r43, $r44) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z29 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z29 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r45 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape>
org.jfree.chart.renderer.AbstractRenderer.equals : $r45 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r46 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape>
org.jfree.chart.renderer.AbstractRenderer.equals : $r46 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z30 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r45, $r46)
org.jfree.chart.renderer.AbstractRenderer.equals : $z30 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r45, $r46) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z30 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z30 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r47 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.equals : $r47 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r48 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.equals : $r48 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z31 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r47, $r48)
org.jfree.chart.renderer.AbstractRenderer.equals : $z31 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r47, $r48) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z31 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z31 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r49 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r49 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r50 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r50 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z32 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r49, $r50)
org.jfree.chart.renderer.AbstractRenderer.equals : $z32 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r49, $r50) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z32 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z32 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r51 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.equals : $r51 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r52 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.equals : $r52 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z33 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r51, $r52)
org.jfree.chart.renderer.AbstractRenderer.equals : $z33 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r51, $r52) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z33 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z33 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r53 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont>
org.jfree.chart.renderer.AbstractRenderer.equals : $r53 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r54 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont>
org.jfree.chart.renderer.AbstractRenderer.equals : $r54 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z34 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r53, $r54)
org.jfree.chart.renderer.AbstractRenderer.equals : $z34 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r53, $r54) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z34 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z34 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r55 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r55 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r56 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r56 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z35 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r55, $r56)
org.jfree.chart.renderer.AbstractRenderer.equals : $z35 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r55, $r56) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z35 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z35 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r57 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseItemLabelFont>
org.jfree.chart.renderer.AbstractRenderer.equals : $r57 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseItemLabelFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r58 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseItemLabelFont>
org.jfree.chart.renderer.AbstractRenderer.equals : $r58 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseItemLabelFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z36 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r57, $r58)
org.jfree.chart.renderer.AbstractRenderer.equals : $z36 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r57, $r58) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z36 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z36 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r59 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r59 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r60 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r60 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z37 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r59, $r60)
org.jfree.chart.renderer.AbstractRenderer.equals : $z37 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r59, $r60) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z37 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z37 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r61 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r61 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r62 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r62 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z38 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r61, $r62)
org.jfree.chart.renderer.AbstractRenderer.equals : $z38 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r61, $r62) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z38 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z38 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r63 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r63 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r64 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r64 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z39 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r63, $r64)
org.jfree.chart.renderer.AbstractRenderer.equals : $z39 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r63, $r64) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z39 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z39 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r65 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.equals : $r65 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPosition> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r66 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.equals : $r66 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPosition> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z40 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r65, $r66)
org.jfree.chart.renderer.AbstractRenderer.equals : $z40 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r65, $r66) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z40 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z40 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r67 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r67 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r68 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r68 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z41 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r67, $r68)
org.jfree.chart.renderer.AbstractRenderer.equals : $z41 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r67, $r68) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z41 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z41 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r69 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.equals : $r69 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r70 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.equals : $r70 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z42 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r69, $r70)
org.jfree.chart.renderer.AbstractRenderer.equals : $z42 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r69, $r70) >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : if r1 != r0
org.jfree.chart.labels.ItemLabelPosition.equals : if r1 != r0 >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $z0 = r1 instanceof org.jfree.chart.labels.ItemLabelPosition
org.jfree.chart.labels.ItemLabelPosition.equals : $z0 = r1 instanceof org.jfree.chart.labels.ItemLabelPosition >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : if $z0 != 0
org.jfree.chart.labels.ItemLabelPosition.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : r2 = (org.jfree.chart.labels.ItemLabelPosition) r1
org.jfree.chart.labels.ItemLabelPosition.equals : r2 = (org.jfree.chart.labels.ItemLabelPosition) r1 >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $r3 = r0.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.labels.ItemLabelAnchor itemLabelAnchor>
org.jfree.chart.labels.ItemLabelPosition.equals : $r3 = r0.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.labels.ItemLabelAnchor itemLabelAnchor> >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $r4 = r2.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.labels.ItemLabelAnchor itemLabelAnchor>
org.jfree.chart.labels.ItemLabelPosition.equals : $r4 = r2.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.labels.ItemLabelAnchor itemLabelAnchor> >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $z1 = virtualinvoke $r3.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.labels.ItemLabelPosition.equals : $z1 = virtualinvoke $r3.<org.jfree.chart.labels.ItemLabelAnchor: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : if $z1 != 0
org.jfree.chart.labels.ItemLabelPosition.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $r5 = r0.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.labels.ItemLabelPosition.equals : $r5 = r0.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.ui.TextAnchor textAnchor> >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $r6 = r2.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.labels.ItemLabelPosition.equals : $r6 = r2.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.ui.TextAnchor textAnchor> >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $z2 = virtualinvoke $r5.<org.jfree.ui.TextAnchor: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.labels.ItemLabelPosition.equals : $z2 = virtualinvoke $r5.<org.jfree.ui.TextAnchor: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : if $z2 != 0
org.jfree.chart.labels.ItemLabelPosition.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $r7 = r0.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.labels.ItemLabelPosition.equals : $r7 = r0.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.ui.TextAnchor rotationAnchor> >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $r8 = r2.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.labels.ItemLabelPosition.equals : $r8 = r2.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.ui.TextAnchor rotationAnchor> >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $z3 = virtualinvoke $r7.<org.jfree.ui.TextAnchor: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.labels.ItemLabelPosition.equals : $z3 = virtualinvoke $r7.<org.jfree.ui.TextAnchor: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : if $z3 != 0
org.jfree.chart.labels.ItemLabelPosition.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $d0 = r0.<org.jfree.chart.labels.ItemLabelPosition: double angle>
org.jfree.chart.labels.ItemLabelPosition.equals : $d0 = r0.<org.jfree.chart.labels.ItemLabelPosition: double angle> >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $d1 = r2.<org.jfree.chart.labels.ItemLabelPosition: double angle>
org.jfree.chart.labels.ItemLabelPosition.equals : $d1 = r2.<org.jfree.chart.labels.ItemLabelPosition: double angle> >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.labels.ItemLabelPosition.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : if $b0 == 0
org.jfree.chart.labels.ItemLabelPosition.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.labels.ItemLabelPosition.equals : return 1
org.jfree.chart.labels.ItemLabelPosition.equals : return 1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z42 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z42 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r71 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.equals : $r71 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPosition> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r72 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.equals : $r72 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPosition> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z43 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r71, $r72)
org.jfree.chart.renderer.AbstractRenderer.equals : $z43 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r71, $r72) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z43 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z43 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r73 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r73 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r74 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r74 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z44 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r73, $r74)
org.jfree.chart.renderer.AbstractRenderer.equals : $z44 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r73, $r74) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z44 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z44 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r75 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.equals : $r75 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r76 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.equals : $r76 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z45 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r75, $r76)
org.jfree.chart.renderer.AbstractRenderer.equals : $z45 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r75, $r76) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z45 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z45 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $d0 = r0.<org.jfree.chart.renderer.AbstractRenderer: double itemLabelAnchorOffset>
org.jfree.chart.renderer.AbstractRenderer.equals : $d0 = r0.<org.jfree.chart.renderer.AbstractRenderer: double itemLabelAnchorOffset> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $d1 = r2.<org.jfree.chart.renderer.AbstractRenderer: double itemLabelAnchorOffset>
org.jfree.chart.renderer.AbstractRenderer.equals : $d1 = r2.<org.jfree.chart.renderer.AbstractRenderer: double itemLabelAnchorOffset> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $b2 = $d0 cmpl $d1
org.jfree.chart.renderer.AbstractRenderer.equals : $b2 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $b2 == 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $b2 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r77 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean createEntities>
org.jfree.chart.renderer.AbstractRenderer.equals : $r77 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean createEntities> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r78 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean createEntities>
org.jfree.chart.renderer.AbstractRenderer.equals : $r78 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean createEntities> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z46 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r77, $r78)
org.jfree.chart.renderer.AbstractRenderer.equals : $z46 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r77, $r78) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z46 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z46 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r79 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r79 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r80 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r80 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z47 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r79, $r80)
org.jfree.chart.renderer.AbstractRenderer.equals : $z47 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r79, $r80) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z47 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z47 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z48 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseCreateEntities>
org.jfree.chart.renderer.AbstractRenderer.equals : $z48 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseCreateEntities> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z49 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean baseCreateEntities>
org.jfree.chart.renderer.AbstractRenderer.equals : $z49 = r2.<org.jfree.chart.renderer.AbstractRenderer: boolean baseCreateEntities> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z48 == $z49
org.jfree.chart.renderer.AbstractRenderer.equals : if $z48 == $z49 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r81 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r81 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r82 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList>
org.jfree.chart.renderer.AbstractRenderer.equals : $r82 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z50 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r81, $r82)
org.jfree.chart.renderer.AbstractRenderer.equals : $z50 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r81, $r82) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z50 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z50 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r83 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.equals : $r83 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r84 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.equals : $r84 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z51 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r83, $r84)
org.jfree.chart.renderer.AbstractRenderer.equals : $z51 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r83, $r84) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z51 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z51 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r85 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont>
org.jfree.chart.renderer.AbstractRenderer.equals : $r85 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r86 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont>
org.jfree.chart.renderer.AbstractRenderer.equals : $r86 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z52 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r85, $r86)
org.jfree.chart.renderer.AbstractRenderer.equals : $z52 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r85, $r86) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z52 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z52 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r87 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont>
org.jfree.chart.renderer.AbstractRenderer.equals : $r87 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r88 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont>
org.jfree.chart.renderer.AbstractRenderer.equals : $r88 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z53 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r87, $r88)
org.jfree.chart.renderer.AbstractRenderer.equals : $z53 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r87, $r88) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z53 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z53 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r89 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r89 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r90 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r90 = r2.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z54 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r89, $r90)
org.jfree.chart.renderer.AbstractRenderer.equals : $z54 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r89, $r90) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z54 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z54 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r91 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r91 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $r92 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.equals : $r92 = r2.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : $z55 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r91, $r92)
org.jfree.chart.renderer.AbstractRenderer.equals : $z55 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r91, $r92) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : if $z55 != 0
org.jfree.chart.renderer.AbstractRenderer.equals : if $z55 != 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.equals : return 1
org.jfree.chart.renderer.AbstractRenderer.equals : return 1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : return $z13
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals : return $z13 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : return $z16
org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals : return $z16 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z24 != 0
org.jfree.chart.plot.XYPlot.equals : if $z24 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r13 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.equals : $r13 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r14 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.equals : $r14 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z25 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)
org.jfree.chart.plot.XYPlot.equals : $z25 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : if r1 != r0
org.jfree.chart.axis.NumberAxis.equals : if r1 != r0 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z0 = r1 instanceof org.jfree.chart.axis.NumberAxis
org.jfree.chart.axis.NumberAxis.equals : $z0 = r1 instanceof org.jfree.chart.axis.NumberAxis >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : if $z0 != 0
org.jfree.chart.axis.NumberAxis.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : r2 = (org.jfree.chart.axis.NumberAxis) r1
org.jfree.chart.axis.NumberAxis.equals : r2 = (org.jfree.chart.axis.NumberAxis) r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z1 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.axis.NumberAxis.equals : $z1 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z2 = r2.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.axis.NumberAxis.equals : $z2 = r2.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : if $z1 == $z2
org.jfree.chart.axis.NumberAxis.equals : if $z1 == $z2 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z3 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero>
org.jfree.chart.axis.NumberAxis.equals : $z3 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z4 = r2.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero>
org.jfree.chart.axis.NumberAxis.equals : $z4 = r2.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : if $z3 == $z4
org.jfree.chart.axis.NumberAxis.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $r3 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.NumberAxis.equals : $r3 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $r4 = r2.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.NumberAxis.equals : $r4 = r2.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z5 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.axis.NumberAxis.equals : $z5 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : if r1 != r0
org.jfree.chart.axis.NumberTickUnit.equals : if r1 != r0 >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : $z0 = r1 instanceof org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberTickUnit.equals : $z0 = r1 instanceof org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : if $z0 != 0
org.jfree.chart.axis.NumberTickUnit.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : $z1 = specialinvoke r0.<org.jfree.chart.axis.TickUnit: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.axis.NumberTickUnit.equals : $z1 = specialinvoke r0.<org.jfree.chart.axis.TickUnit: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnit.equals : if r1 != r0
org.jfree.chart.axis.TickUnit.equals : if r1 != r0 >>>>>>>> org.jfree.chart.axis.TickUnit.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.equals : if $z0 != 0
org.jfree.chart.axis.TickUnit.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.TickUnit.equals : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.equals : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.equals : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.equals : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.equals : $d1 = r2.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.equals : $d1 = r2.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.equals : if $b0 == 0
org.jfree.chart.axis.TickUnit.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.equals : $i1 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount>
org.jfree.chart.axis.TickUnit.equals : $i1 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount> >>>>>>>> org.jfree.chart.axis.TickUnit.equals : $i2 = r2.<org.jfree.chart.axis.TickUnit: int minorTickCount>
org.jfree.chart.axis.TickUnit.equals : $i2 = r2.<org.jfree.chart.axis.TickUnit: int minorTickCount> >>>>>>>> org.jfree.chart.axis.TickUnit.equals : if $i1 == $i2
org.jfree.chart.axis.TickUnit.equals : if $i1 == $i2 >>>>>>>> org.jfree.chart.axis.TickUnit.equals : return 1
org.jfree.chart.axis.TickUnit.equals : return 1 >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : if $z1 != 0
org.jfree.chart.axis.NumberTickUnit.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : r2 = (org.jfree.chart.axis.NumberTickUnit) r1
org.jfree.chart.axis.NumberTickUnit.equals : r2 = (org.jfree.chart.axis.NumberTickUnit) r1 >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : $r3 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter>
org.jfree.chart.axis.NumberTickUnit.equals : $r3 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter> >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : $r4 = r2.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter>
org.jfree.chart.axis.NumberTickUnit.equals : $r4 = r2.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter> >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : $z2 = virtualinvoke $r3.<java.text.NumberFormat: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.NumberTickUnit.equals : $z2 = virtualinvoke $r3.<java.text.NumberFormat: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : if $z2 != 0
org.jfree.chart.axis.NumberTickUnit.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.axis.NumberTickUnit.equals : return 1
org.jfree.chart.axis.NumberTickUnit.equals : return 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : if $z5 != 0
org.jfree.chart.axis.NumberAxis.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $r5 = r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride>
org.jfree.chart.axis.NumberAxis.equals : $r5 = r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $r6 = r2.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride>
org.jfree.chart.axis.NumberAxis.equals : $r6 = r2.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z6 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.axis.NumberAxis.equals : $z6 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : if $z6 != 0
org.jfree.chart.axis.NumberAxis.equals : if $z6 != 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $r7 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.equals : $r7 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $r8 = r2.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.equals : $r8 = r2.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z7 = virtualinvoke $r7.<org.jfree.data.RangeType: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.axis.NumberAxis.equals : $z7 = virtualinvoke $r7.<org.jfree.data.RangeType: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : if $z7 != 0
org.jfree.chart.axis.NumberAxis.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : $z8 = specialinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.axis.NumberAxis.equals : $z8 = specialinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if r1 != r0
org.jfree.chart.axis.ValueAxis.equals : if r1 != r0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z0 = r1 instanceof org.jfree.chart.axis.ValueAxis
org.jfree.chart.axis.ValueAxis.equals : $z0 = r1 instanceof org.jfree.chart.axis.ValueAxis >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z0 != 0
org.jfree.chart.axis.ValueAxis.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : r2 = (org.jfree.chart.axis.ValueAxis) r1
org.jfree.chart.axis.ValueAxis.equals : r2 = (org.jfree.chart.axis.ValueAxis) r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z1 = r0.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible>
org.jfree.chart.axis.ValueAxis.equals : $z1 = r0.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z2 = r2.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible>
org.jfree.chart.axis.ValueAxis.equals : $z2 = r2.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z1 == $z2
org.jfree.chart.axis.ValueAxis.equals : if $z1 == $z2 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z3 = r0.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible>
org.jfree.chart.axis.ValueAxis.equals : $z3 = r0.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z4 = r2.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible>
org.jfree.chart.axis.ValueAxis.equals : $z4 = r2.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z3 == $z4
org.jfree.chart.axis.ValueAxis.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z5 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.axis.ValueAxis.equals : $z5 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z6 = r2.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.axis.ValueAxis.equals : $z6 = r2.<org.jfree.chart.axis.ValueAxis: boolean inverted> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z5 == $z6
org.jfree.chart.axis.ValueAxis.equals : if $z5 == $z6 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z7 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.equals : $z7 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z7 != 0
org.jfree.chart.axis.ValueAxis.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z9 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.equals : $z9 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z10 = r2.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.equals : $z10 = r2.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z9 == $z10
org.jfree.chart.axis.ValueAxis.equals : if $z9 == $z10 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.equals : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $d1 = r2.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.equals : $d1 = r2.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.ValueAxis.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $b0 == 0
org.jfree.chart.axis.ValueAxis.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $r5 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange>
org.jfree.chart.axis.ValueAxis.equals : $r5 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $r6 = r2.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange>
org.jfree.chart.axis.ValueAxis.equals : $r6 = r2.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z11 = virtualinvoke $r5.<org.jfree.data.Range: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.axis.ValueAxis.equals : $z11 = virtualinvoke $r5.<org.jfree.data.Range: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.Range.equals : $z0 = r1 instanceof org.jfree.data.Range
org.jfree.data.Range.equals : $z0 = r1 instanceof org.jfree.data.Range >>>>>>>> org.jfree.data.Range.equals : if $z0 != 0
org.jfree.data.Range.equals : if $z0 != 0 >>>>>>>> org.jfree.data.Range.equals : r2 = (org.jfree.data.Range) r1
org.jfree.data.Range.equals : r2 = (org.jfree.data.Range) r1 >>>>>>>> org.jfree.data.Range.equals : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.equals : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.equals : $d1 = r2.<org.jfree.data.Range: double lower>
org.jfree.data.Range.equals : $d1 = r2.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.equals : $b0 = $d0 cmpl $d1
org.jfree.data.Range.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.data.Range.equals : if $b0 == 0
org.jfree.data.Range.equals : if $b0 == 0 >>>>>>>> org.jfree.data.Range.equals : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.equals : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.equals : $d3 = r2.<org.jfree.data.Range: double upper>
org.jfree.data.Range.equals : $d3 = r2.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.equals : $b1 = $d2 cmpl $d3
org.jfree.data.Range.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.data.Range.equals : if $b1 == 0
org.jfree.data.Range.equals : if $b1 == 0 >>>>>>>> org.jfree.data.Range.equals : return 1
org.jfree.data.Range.equals : return 1 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z11 != 0
org.jfree.chart.axis.ValueAxis.equals : if $z11 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $d2 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin>
org.jfree.chart.axis.ValueAxis.equals : $d2 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $d3 = r2.<org.jfree.chart.axis.ValueAxis: double upperMargin>
org.jfree.chart.axis.ValueAxis.equals : $d3 = r2.<org.jfree.chart.axis.ValueAxis: double upperMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $b1 = $d2 cmpl $d3
org.jfree.chart.axis.ValueAxis.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $b1 == 0
org.jfree.chart.axis.ValueAxis.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $d4 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin>
org.jfree.chart.axis.ValueAxis.equals : $d4 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $d5 = r2.<org.jfree.chart.axis.ValueAxis: double lowerMargin>
org.jfree.chart.axis.ValueAxis.equals : $d5 = r2.<org.jfree.chart.axis.ValueAxis: double lowerMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $b2 = $d4 cmpl $d5
org.jfree.chart.axis.ValueAxis.equals : $b2 = $d4 cmpl $d5 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $b2 == 0
org.jfree.chart.axis.ValueAxis.equals : if $b2 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $d6 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange>
org.jfree.chart.axis.ValueAxis.equals : $d6 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $d7 = r2.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange>
org.jfree.chart.axis.ValueAxis.equals : $d7 = r2.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $b3 = $d6 cmpl $d7
org.jfree.chart.axis.ValueAxis.equals : $b3 = $d6 cmpl $d7 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $b3 == 0
org.jfree.chart.axis.ValueAxis.equals : if $b3 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z12 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.ValueAxis.equals : $z12 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z13 = r2.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.ValueAxis.equals : $z13 = r2.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z12 == $z13
org.jfree.chart.axis.ValueAxis.equals : if $z12 == $z13 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $r7 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits>
org.jfree.chart.axis.ValueAxis.equals : $r7 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $r8 = r2.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits>
org.jfree.chart.axis.ValueAxis.equals : $r8 = r2.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z14 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8)
org.jfree.chart.axis.ValueAxis.equals : $z14 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.jfree.chart.axis.TickUnits.equals : if r1 != r0
org.jfree.chart.axis.TickUnits.equals : if r1 != r0 >>>>>>>> org.jfree.chart.axis.TickUnits.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.TickUnits.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.TickUnits.equals : if $z0 != 0
org.jfree.chart.axis.TickUnits.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.TickUnits.equals : r2 = (org.jfree.chart.axis.TickUnits) r1
org.jfree.chart.axis.TickUnits.equals : r2 = (org.jfree.chart.axis.TickUnits) r1 >>>>>>>> org.jfree.chart.axis.TickUnits.equals : $r3 = r2.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.equals : $r3 = r2.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.equals : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.equals : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.equals : $z1 = interfaceinvoke $r3.<java.util.List: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.TickUnits.equals : $z1 = interfaceinvoke $r3.<java.util.List: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.TickUnits.equals : return $z1
org.jfree.chart.axis.TickUnits.equals : return $z1 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z14 != 0
org.jfree.chart.axis.ValueAxis.equals : if $z14 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z15 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.ValueAxis.equals : $z15 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z16 = r2.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.ValueAxis.equals : $z16 = r2.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $z15 == $z16
org.jfree.chart.axis.ValueAxis.equals : if $z15 == $z16 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $i4 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount>
org.jfree.chart.axis.ValueAxis.equals : $i4 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $i5 = r2.<org.jfree.chart.axis.ValueAxis: int minorTickCount>
org.jfree.chart.axis.ValueAxis.equals : $i5 = r2.<org.jfree.chart.axis.ValueAxis: int minorTickCount> >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : if $i4 == $i5
org.jfree.chart.axis.ValueAxis.equals : if $i4 == $i5 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : $z17 = specialinvoke r0.<org.jfree.chart.axis.Axis: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.axis.ValueAxis.equals : $z17 = specialinvoke r0.<org.jfree.chart.axis.Axis: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.Axis.equals : if r1 != r0
org.jfree.chart.axis.Axis.equals : if r1 != r0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $z0 = r1 instanceof org.jfree.chart.axis.Axis
org.jfree.chart.axis.Axis.equals : $z0 = r1 instanceof org.jfree.chart.axis.Axis >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z0 != 0
org.jfree.chart.axis.Axis.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : r2 = (org.jfree.chart.axis.Axis) r1
org.jfree.chart.axis.Axis.equals : r2 = (org.jfree.chart.axis.Axis) r1 >>>>>>>> org.jfree.chart.axis.Axis.equals : $z1 = r0.<org.jfree.chart.axis.Axis: boolean visible>
org.jfree.chart.axis.Axis.equals : $z1 = r0.<org.jfree.chart.axis.Axis: boolean visible> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z2 = r2.<org.jfree.chart.axis.Axis: boolean visible>
org.jfree.chart.axis.Axis.equals : $z2 = r2.<org.jfree.chart.axis.Axis: boolean visible> >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z1 == $z2
org.jfree.chart.axis.Axis.equals : if $z1 == $z2 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r3 = r0.<org.jfree.chart.axis.Axis: java.lang.String label>
org.jfree.chart.axis.Axis.equals : $r3 = r0.<org.jfree.chart.axis.Axis: java.lang.String label> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r4 = r2.<org.jfree.chart.axis.Axis: java.lang.String label>
org.jfree.chart.axis.Axis.equals : $r4 = r2.<org.jfree.chart.axis.Axis: java.lang.String label> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.axis.Axis.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z3 != 0
org.jfree.chart.axis.Axis.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r5 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont>
org.jfree.chart.axis.Axis.equals : $r5 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r6 = r2.<org.jfree.chart.axis.Axis: java.awt.Font labelFont>
org.jfree.chart.axis.Axis.equals : $r6 = r2.<org.jfree.chart.axis.Axis: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.axis.Axis.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z4 != 0
org.jfree.chart.axis.Axis.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r7 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint>
org.jfree.chart.axis.Axis.equals : $r7 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r8 = r2.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint>
org.jfree.chart.axis.Axis.equals : $r8 = r2.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z5 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8)
org.jfree.chart.axis.Axis.equals : $z5 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z5 != 0
org.jfree.chart.axis.Axis.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r9 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets>
org.jfree.chart.axis.Axis.equals : $r9 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r10 = r2.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets>
org.jfree.chart.axis.Axis.equals : $r10 = r2.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z6 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.axis.Axis.equals : $z6 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z6 != 0
org.jfree.chart.axis.Axis.equals : if $z6 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $d0 = r0.<org.jfree.chart.axis.Axis: double labelAngle>
org.jfree.chart.axis.Axis.equals : $d0 = r0.<org.jfree.chart.axis.Axis: double labelAngle> >>>>>>>> org.jfree.chart.axis.Axis.equals : $d1 = r2.<org.jfree.chart.axis.Axis: double labelAngle>
org.jfree.chart.axis.Axis.equals : $d1 = r2.<org.jfree.chart.axis.Axis: double labelAngle> >>>>>>>> org.jfree.chart.axis.Axis.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.Axis.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.Axis.equals : if $b0 == 0
org.jfree.chart.axis.Axis.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $z7 = r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible>
org.jfree.chart.axis.Axis.equals : $z7 = r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z8 = r2.<org.jfree.chart.axis.Axis: boolean axisLineVisible>
org.jfree.chart.axis.Axis.equals : $z8 = r2.<org.jfree.chart.axis.Axis: boolean axisLineVisible> >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z7 == $z8
org.jfree.chart.axis.Axis.equals : if $z7 == $z8 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r11 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.axis.Axis.equals : $r11 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r12 = r2.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.axis.Axis.equals : $r12 = r2.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z9 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12)
org.jfree.chart.axis.Axis.equals : $z9 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z9 != 0
org.jfree.chart.axis.Axis.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r13 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.axis.Axis.equals : $r13 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r14 = r2.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.axis.Axis.equals : $r14 = r2.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z10 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14)
org.jfree.chart.axis.Axis.equals : $z10 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z10 != 0
org.jfree.chart.axis.Axis.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $z11 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible>
org.jfree.chart.axis.Axis.equals : $z11 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z12 = r2.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible>
org.jfree.chart.axis.Axis.equals : $z12 = r2.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible> >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z11 == $z12
org.jfree.chart.axis.Axis.equals : if $z11 == $z12 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r15 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.equals : $r15 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r16 = r2.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.equals : $r16 = r2.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z13 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)
org.jfree.chart.axis.Axis.equals : $z13 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z13 != 0
org.jfree.chart.axis.Axis.equals : if $z13 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r17 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.axis.Axis.equals : $r17 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r18 = r2.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.axis.Axis.equals : $r18 = r2.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z14 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r17, $r18)
org.jfree.chart.axis.Axis.equals : $z14 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r17, $r18) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z14 != 0
org.jfree.chart.axis.Axis.equals : if $z14 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r19 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.axis.Axis.equals : $r19 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r20 = r2.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.axis.Axis.equals : $r20 = r2.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z15 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)
org.jfree.chart.axis.Axis.equals : $z15 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z15 != 0
org.jfree.chart.axis.Axis.equals : if $z15 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $z16 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible>
org.jfree.chart.axis.Axis.equals : $z16 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z17 = r2.<org.jfree.chart.axis.Axis: boolean tickMarksVisible>
org.jfree.chart.axis.Axis.equals : $z17 = r2.<org.jfree.chart.axis.Axis: boolean tickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z16 == $z17
org.jfree.chart.axis.Axis.equals : if $z16 == $z17 >>>>>>>> org.jfree.chart.axis.Axis.equals : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkInsideLength>
org.jfree.chart.axis.Axis.equals : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkInsideLength> >>>>>>>> org.jfree.chart.axis.Axis.equals : $f1 = r2.<org.jfree.chart.axis.Axis: float tickMarkInsideLength>
org.jfree.chart.axis.Axis.equals : $f1 = r2.<org.jfree.chart.axis.Axis: float tickMarkInsideLength> >>>>>>>> org.jfree.chart.axis.Axis.equals : $b1 = $f0 cmpl $f1
org.jfree.chart.axis.Axis.equals : $b1 = $f0 cmpl $f1 >>>>>>>> org.jfree.chart.axis.Axis.equals : if $b1 == 0
org.jfree.chart.axis.Axis.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $f2 = r0.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength>
org.jfree.chart.axis.Axis.equals : $f2 = r0.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength> >>>>>>>> org.jfree.chart.axis.Axis.equals : $f3 = r2.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength>
org.jfree.chart.axis.Axis.equals : $f3 = r2.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength> >>>>>>>> org.jfree.chart.axis.Axis.equals : $b2 = $f2 cmpl $f3
org.jfree.chart.axis.Axis.equals : $b2 = $f2 cmpl $f3 >>>>>>>> org.jfree.chart.axis.Axis.equals : if $b2 == 0
org.jfree.chart.axis.Axis.equals : if $b2 == 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r21 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint>
org.jfree.chart.axis.Axis.equals : $r21 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r22 = r2.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint>
org.jfree.chart.axis.Axis.equals : $r22 = r2.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z18 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r21, $r22)
org.jfree.chart.axis.Axis.equals : $z18 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r21, $r22) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z18 != 0
org.jfree.chart.axis.Axis.equals : if $z18 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $r23 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke>
org.jfree.chart.axis.Axis.equals : $r23 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke> >>>>>>>> org.jfree.chart.axis.Axis.equals : $r24 = r2.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke>
org.jfree.chart.axis.Axis.equals : $r24 = r2.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z19 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r23, $r24)
org.jfree.chart.axis.Axis.equals : $z19 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r23, $r24) >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z19 != 0
org.jfree.chart.axis.Axis.equals : if $z19 != 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $z20 = r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible>
org.jfree.chart.axis.Axis.equals : $z20 = r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.equals : $z21 = r2.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible>
org.jfree.chart.axis.Axis.equals : $z21 = r2.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.equals : if $z20 == $z21
org.jfree.chart.axis.Axis.equals : if $z20 == $z21 >>>>>>>> org.jfree.chart.axis.Axis.equals : $f4 = r0.<org.jfree.chart.axis.Axis: float minorTickMarkInsideLength>
org.jfree.chart.axis.Axis.equals : $f4 = r0.<org.jfree.chart.axis.Axis: float minorTickMarkInsideLength> >>>>>>>> org.jfree.chart.axis.Axis.equals : $f5 = r2.<org.jfree.chart.axis.Axis: float minorTickMarkInsideLength>
org.jfree.chart.axis.Axis.equals : $f5 = r2.<org.jfree.chart.axis.Axis: float minorTickMarkInsideLength> >>>>>>>> org.jfree.chart.axis.Axis.equals : $b3 = $f4 cmpl $f5
org.jfree.chart.axis.Axis.equals : $b3 = $f4 cmpl $f5 >>>>>>>> org.jfree.chart.axis.Axis.equals : if $b3 == 0
org.jfree.chart.axis.Axis.equals : if $b3 == 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $f6 = r0.<org.jfree.chart.axis.Axis: float minorTickMarkOutsideLength>
org.jfree.chart.axis.Axis.equals : $f6 = r0.<org.jfree.chart.axis.Axis: float minorTickMarkOutsideLength> >>>>>>>> org.jfree.chart.axis.Axis.equals : $f7 = r2.<org.jfree.chart.axis.Axis: float minorTickMarkOutsideLength>
org.jfree.chart.axis.Axis.equals : $f7 = r2.<org.jfree.chart.axis.Axis: float minorTickMarkOutsideLength> >>>>>>>> org.jfree.chart.axis.Axis.equals : $b4 = $f6 cmpl $f7
org.jfree.chart.axis.Axis.equals : $b4 = $f6 cmpl $f7 >>>>>>>> org.jfree.chart.axis.Axis.equals : if $b4 == 0
org.jfree.chart.axis.Axis.equals : if $b4 == 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : $d2 = r0.<org.jfree.chart.axis.Axis: double fixedDimension>
org.jfree.chart.axis.Axis.equals : $d2 = r0.<org.jfree.chart.axis.Axis: double fixedDimension> >>>>>>>> org.jfree.chart.axis.Axis.equals : $d3 = r2.<org.jfree.chart.axis.Axis: double fixedDimension>
org.jfree.chart.axis.Axis.equals : $d3 = r2.<org.jfree.chart.axis.Axis: double fixedDimension> >>>>>>>> org.jfree.chart.axis.Axis.equals : $b5 = $d2 cmpl $d3
org.jfree.chart.axis.Axis.equals : $b5 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.axis.Axis.equals : if $b5 == 0
org.jfree.chart.axis.Axis.equals : if $b5 == 0 >>>>>>>> org.jfree.chart.axis.Axis.equals : return 1
org.jfree.chart.axis.Axis.equals : return 1 >>>>>>>> org.jfree.chart.axis.ValueAxis.equals : return $z17
org.jfree.chart.axis.ValueAxis.equals : return $z17 >>>>>>>> org.jfree.chart.axis.NumberAxis.equals : return $z8
org.jfree.chart.axis.NumberAxis.equals : return $z8 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z25 != 0
org.jfree.chart.plot.XYPlot.equals : if $z25 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r15 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.equals : $r15 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r16 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.equals : $r16 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z26 = virtualinvoke $r15.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r16)
org.jfree.chart.plot.XYPlot.equals : $z26 = virtualinvoke $r15.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z26 != 0
org.jfree.chart.plot.XYPlot.equals : if $z26 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.equals : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r18 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.equals : $r18 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z27 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)
org.jfree.chart.plot.XYPlot.equals : $z27 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z27 != 0
org.jfree.chart.plot.XYPlot.equals : if $z27 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r19 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.equals : $r19 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r20 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.equals : $r20 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z28 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)
org.jfree.chart.plot.XYPlot.equals : $z28 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z28 != 0
org.jfree.chart.plot.XYPlot.equals : if $z28 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r22 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r22 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z29 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r21, $r22)
org.jfree.chart.plot.XYPlot.equals : $z29 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r21, $r22) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z29 != 0
org.jfree.chart.plot.XYPlot.equals : if $z29 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r23 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r23 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r24 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r24 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z30 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r23, $r24)
org.jfree.chart.plot.XYPlot.equals : $z30 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r23, $r24) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z30 != 0
org.jfree.chart.plot.XYPlot.equals : if $z30 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r25 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r25 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r26 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r26 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z31 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r25, $r26)
org.jfree.chart.plot.XYPlot.equals : $z31 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r25, $r26) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z31 != 0
org.jfree.chart.plot.XYPlot.equals : if $z31 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r27 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r27 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r28 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r28 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z32 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r27, $r28)
org.jfree.chart.plot.XYPlot.equals : $z32 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r27, $r28) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z32 != 0
org.jfree.chart.plot.XYPlot.equals : if $z32 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r29 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r29 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r30 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r30 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z33 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r30)
org.jfree.chart.plot.XYPlot.equals : $z33 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z33 != 0
org.jfree.chart.plot.XYPlot.equals : if $z33 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r31 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r31 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r32 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r32 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z34 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r31, $r32)
org.jfree.chart.plot.XYPlot.equals : $z34 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r31, $r32) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z34 != 0
org.jfree.chart.plot.XYPlot.equals : if $z34 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r33 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r33 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r34 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r34 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z35 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r34)
org.jfree.chart.plot.XYPlot.equals : $z35 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r34) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z35 != 0
org.jfree.chart.plot.XYPlot.equals : if $z35 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r35 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r35 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r36 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r36 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z36 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r35, $r36)
org.jfree.chart.plot.XYPlot.equals : $z36 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r35, $r36) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z36 != 0
org.jfree.chart.plot.XYPlot.equals : if $z36 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r37 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.equals : $r37 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r38 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.equals : $r38 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z37 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r37, $r38)
org.jfree.chart.plot.XYPlot.equals : $z37 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r37, $r38) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z37 != 0
org.jfree.chart.plot.XYPlot.equals : if $z37 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r39 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.equals : $r39 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r40 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.equals : $r40 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z38 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r39, $r40)
org.jfree.chart.plot.XYPlot.equals : $z38 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r39, $r40) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z38 != 0
org.jfree.chart.plot.XYPlot.equals : if $z38 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r41 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.equals : $r41 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r42 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.equals : $r42 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z39 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r41, $r42)
org.jfree.chart.plot.XYPlot.equals : $z39 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r41, $r42) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z39 != 0
org.jfree.chart.plot.XYPlot.equals : if $z39 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r43 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.equals : $r43 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r44 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.equals : $r44 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z40 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r43, $r44)
org.jfree.chart.plot.XYPlot.equals : $z40 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r43, $r44) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z40 != 0
org.jfree.chart.plot.XYPlot.equals : if $z40 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r45 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke>
org.jfree.chart.plot.XYPlot.equals : $r45 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r46 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke>
org.jfree.chart.plot.XYPlot.equals : $r46 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z41 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r45, $r46)
org.jfree.chart.plot.XYPlot.equals : $z41 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r45, $r46) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z41 != 0
org.jfree.chart.plot.XYPlot.equals : if $z41 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r47 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint>
org.jfree.chart.plot.XYPlot.equals : $r47 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r48 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint>
org.jfree.chart.plot.XYPlot.equals : $r48 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z42 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r47, $r48)
org.jfree.chart.plot.XYPlot.equals : $z42 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r47, $r48) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z42 != 0
org.jfree.chart.plot.XYPlot.equals : if $z42 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r49 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke>
org.jfree.chart.plot.XYPlot.equals : $r49 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r50 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke>
org.jfree.chart.plot.XYPlot.equals : $r50 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z43 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r49, $r50)
org.jfree.chart.plot.XYPlot.equals : $z43 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r49, $r50) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z43 != 0
org.jfree.chart.plot.XYPlot.equals : if $z43 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r51 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint>
org.jfree.chart.plot.XYPlot.equals : $r51 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r52 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint>
org.jfree.chart.plot.XYPlot.equals : $r52 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z44 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r51, $r52)
org.jfree.chart.plot.XYPlot.equals : $z44 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r51, $r52) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z44 != 0
org.jfree.chart.plot.XYPlot.equals : if $z44 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r53 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r53 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r54 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r54 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z45 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r53, $r54)
org.jfree.chart.plot.XYPlot.equals : $z45 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r53, $r54) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z45 != 0
org.jfree.chart.plot.XYPlot.equals : if $z45 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r55 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r55 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r56 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r56 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z46 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r55, $r56)
org.jfree.chart.plot.XYPlot.equals : $z46 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r55, $r56) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z46 != 0
org.jfree.chart.plot.XYPlot.equals : if $z46 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r57 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r57 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r58 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r58 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z47 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r57, $r58)
org.jfree.chart.plot.XYPlot.equals : $z47 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r57, $r58) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z47 != 0
org.jfree.chart.plot.XYPlot.equals : if $z47 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r59 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r59 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r60 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r60 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z48 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r59, $r60)
org.jfree.chart.plot.XYPlot.equals : $z48 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r59, $r60) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z48 != 0
org.jfree.chart.plot.XYPlot.equals : if $z48 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r61 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r61 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r62 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r62 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z49 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r61, $r62)
org.jfree.chart.plot.XYPlot.equals : $z49 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r61, $r62) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z49 != 0
org.jfree.chart.plot.XYPlot.equals : if $z49 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r63 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r63 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r64 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r64 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z50 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r63, $r64)
org.jfree.chart.plot.XYPlot.equals : $z50 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r63, $r64) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z50 != 0
org.jfree.chart.plot.XYPlot.equals : if $z50 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r65 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r65 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r66 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r66 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z51 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r65, $r66)
org.jfree.chart.plot.XYPlot.equals : $z51 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r65, $r66) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z51 != 0
org.jfree.chart.plot.XYPlot.equals : if $z51 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r67 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r67 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r68 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r68 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z52 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r67, $r68)
org.jfree.chart.plot.XYPlot.equals : $z52 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r67, $r68) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z52 != 0
org.jfree.chart.plot.XYPlot.equals : if $z52 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r69 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.equals : $r69 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r70 = r2.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.equals : $r70 = r2.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z53 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r69, $r70)
org.jfree.chart.plot.XYPlot.equals : $z53 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r69, $r70) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if r1 != r0
org.jfree.chart.annotations.XYTextAnnotation.equals : if r1 != r0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z0 = r1 instanceof org.jfree.chart.annotations.XYTextAnnotation
org.jfree.chart.annotations.XYTextAnnotation.equals : $z0 = r1 instanceof org.jfree.chart.annotations.XYTextAnnotation >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z0 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : r2 = (org.jfree.chart.annotations.XYTextAnnotation) r1
org.jfree.chart.annotations.XYTextAnnotation.equals : r2 = (org.jfree.chart.annotations.XYTextAnnotation) r1 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r3 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String text>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r3 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String text> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r4 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String text>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r4 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String text> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z1 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $d0 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double x>
org.jfree.chart.annotations.XYTextAnnotation.equals : $d0 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double x> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $d1 = r2.<org.jfree.chart.annotations.XYTextAnnotation: double x>
org.jfree.chart.annotations.XYTextAnnotation.equals : $d1 = r2.<org.jfree.chart.annotations.XYTextAnnotation: double x> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.annotations.XYTextAnnotation.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $b0 == 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $d2 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double y>
org.jfree.chart.annotations.XYTextAnnotation.equals : $d2 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double y> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $d3 = r2.<org.jfree.chart.annotations.XYTextAnnotation: double y>
org.jfree.chart.annotations.XYTextAnnotation.equals : $d3 = r2.<org.jfree.chart.annotations.XYTextAnnotation: double y> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $b1 = $d2 cmpl $d3
org.jfree.chart.annotations.XYTextAnnotation.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $b1 == 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r5 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r5 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r6 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r6 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z2 = virtualinvoke $r5.<java.awt.Font: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z2 = virtualinvoke $r5.<java.awt.Font: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z2 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r7 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r7 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r8 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r8 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z3 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r9 = r0.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r9 = r0.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor rotationAnchor> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r10 = r2.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r10 = r2.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor rotationAnchor> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z4 = virtualinvoke $r9.<org.jfree.ui.TextAnchor: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z4 = virtualinvoke $r9.<org.jfree.ui.TextAnchor: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z4 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $d4 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle>
org.jfree.chart.annotations.XYTextAnnotation.equals : $d4 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $d5 = r2.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle>
org.jfree.chart.annotations.XYTextAnnotation.equals : $d5 = r2.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $b2 = $d4 cmpl $d5
org.jfree.chart.annotations.XYTextAnnotation.equals : $b2 = $d4 cmpl $d5 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $b2 == 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $b2 == 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r11 = r0.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r11 = r0.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor textAnchor> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r12 = r2.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r12 = r2.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor textAnchor> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z5 = virtualinvoke $r11.<org.jfree.ui.TextAnchor: boolean equals(java.lang.Object)>($r12)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z5 = virtualinvoke $r11.<org.jfree.ui.TextAnchor: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z5 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z6 = r0.<org.jfree.chart.annotations.XYTextAnnotation: boolean outlineVisible>
org.jfree.chart.annotations.XYTextAnnotation.equals : $z6 = r0.<org.jfree.chart.annotations.XYTextAnnotation: boolean outlineVisible> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z7 = r2.<org.jfree.chart.annotations.XYTextAnnotation: boolean outlineVisible>
org.jfree.chart.annotations.XYTextAnnotation.equals : $z7 = r2.<org.jfree.chart.annotations.XYTextAnnotation: boolean outlineVisible> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z6 == $z7
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z6 == $z7 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r13 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r13 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r14 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r14 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z8 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z8 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z8 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z8 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r15 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint outlinePaint>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r15 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r16 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint outlinePaint>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r16 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z9 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z9 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z9 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r17 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke outlineStroke>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r17 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $r18 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke outlineStroke>
org.jfree.chart.annotations.XYTextAnnotation.equals : $r18 = r2.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z10 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z10 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : if $z10 != 0
org.jfree.chart.annotations.XYTextAnnotation.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : $z11 = specialinvoke r0.<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.annotations.XYTextAnnotation.equals : $z11 = specialinvoke r0.<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : if r1 != r0
org.jfree.chart.annotations.AbstractXYAnnotation.equals : if r1 != r0 >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : $z0 = r1 instanceof org.jfree.chart.annotations.AbstractXYAnnotation
org.jfree.chart.annotations.AbstractXYAnnotation.equals : $z0 = r1 instanceof org.jfree.chart.annotations.AbstractXYAnnotation >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : if $z0 != 0
org.jfree.chart.annotations.AbstractXYAnnotation.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : r2 = (org.jfree.chart.annotations.AbstractXYAnnotation) r1
org.jfree.chart.annotations.AbstractXYAnnotation.equals : r2 = (org.jfree.chart.annotations.AbstractXYAnnotation) r1 >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : $r3 = r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String toolTipText>
org.jfree.chart.annotations.AbstractXYAnnotation.equals : $r3 = r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String toolTipText> >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : $r4 = r2.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String toolTipText>
org.jfree.chart.annotations.AbstractXYAnnotation.equals : $r4 = r2.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String toolTipText> >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.annotations.AbstractXYAnnotation.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : if $z1 != 0
org.jfree.chart.annotations.AbstractXYAnnotation.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : $r5 = r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String url>
org.jfree.chart.annotations.AbstractXYAnnotation.equals : $r5 = r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String url> >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : $r6 = r2.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String url>
org.jfree.chart.annotations.AbstractXYAnnotation.equals : $r6 = r2.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String url> >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.annotations.AbstractXYAnnotation.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : if $z2 != 0
org.jfree.chart.annotations.AbstractXYAnnotation.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.annotations.AbstractXYAnnotation.equals : return 1
org.jfree.chart.annotations.AbstractXYAnnotation.equals : return 1 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.equals : return $z11
org.jfree.chart.annotations.XYTextAnnotation.equals : return $z11 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z53 != 0
org.jfree.chart.plot.XYPlot.equals : if $z53 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r71 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.XYPlot.equals : $r71 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r72 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.XYPlot.equals : $r72 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z54 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r71, $r72)
org.jfree.chart.plot.XYPlot.equals : $z54 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r71, $r72) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z54 != 0
org.jfree.chart.plot.XYPlot.equals : if $z54 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r73 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint>
org.jfree.chart.plot.XYPlot.equals : $r73 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r74 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint>
org.jfree.chart.plot.XYPlot.equals : $r74 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z55 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r73, $r74)
org.jfree.chart.plot.XYPlot.equals : $z55 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r73, $r74) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z55 != 0
org.jfree.chart.plot.XYPlot.equals : if $z55 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r75 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint>
org.jfree.chart.plot.XYPlot.equals : $r75 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r76 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint>
org.jfree.chart.plot.XYPlot.equals : $r76 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z56 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r75, $r76)
org.jfree.chart.plot.XYPlot.equals : $z56 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r75, $r76) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z56 != 0
org.jfree.chart.plot.XYPlot.equals : if $z56 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r77 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin>
org.jfree.chart.plot.XYPlot.equals : $r77 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r78 = r2.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin>
org.jfree.chart.plot.XYPlot.equals : $r78 = r2.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z57 = virtualinvoke $r77.<java.awt.geom.Point2D: boolean equals(java.lang.Object)>($r78)
org.jfree.chart.plot.XYPlot.equals : $z57 = virtualinvoke $r77.<java.awt.geom.Point2D: boolean equals(java.lang.Object)>($r78) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z57 != 0
org.jfree.chart.plot.XYPlot.equals : if $z57 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : i0 = 0
org.jfree.chart.plot.XYPlot.equals : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if i0 >= 4
org.jfree.chart.plot.XYPlot.equals : if i0 >= 4 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r79 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.equals : $r79 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r80 = $r79[i0]
org.jfree.chart.plot.XYPlot.equals : $r80 = $r79[i0] >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r81 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.equals : $r81 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r82 = $r81[i0]
org.jfree.chart.plot.XYPlot.equals : $r82 = $r81[i0] >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z58 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r80, $r82)
org.jfree.chart.plot.XYPlot.equals : $z58 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r80, $r82) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z58 != 0
org.jfree.chart.plot.XYPlot.equals : if $z58 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.equals : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.equals : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r83 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.XYPlot.equals : $r83 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r84 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.XYPlot.equals : $r84 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z59 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r83, $r84)
org.jfree.chart.plot.XYPlot.equals : $z59 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r83, $r84) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z59 != 0
org.jfree.chart.plot.XYPlot.equals : if $z59 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z60 = specialinvoke r0.<org.jfree.chart.plot.Plot: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.equals : $z60 = specialinvoke r0.<org.jfree.chart.plot.Plot: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.equals : if r1 != r0
org.jfree.chart.plot.Plot.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z0 = r1 instanceof org.jfree.chart.plot.Plot
org.jfree.chart.plot.Plot.equals : $z0 = r1 instanceof org.jfree.chart.plot.Plot >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z0 != 0
org.jfree.chart.plot.Plot.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : r2 = (org.jfree.chart.plot.Plot) r1
org.jfree.chart.plot.Plot.equals : r2 = (org.jfree.chart.plot.Plot) r1 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r3 = r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage>
org.jfree.chart.plot.Plot.equals : $r3 = r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r4 = r2.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage>
org.jfree.chart.plot.Plot.equals : $r4 = r2.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.plot.Plot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z1 != 0
org.jfree.chart.plot.Plot.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont>
org.jfree.chart.plot.Plot.equals : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r6 = r2.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont>
org.jfree.chart.plot.Plot.equals : $r6 = r2.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.plot.Plot.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z2 != 0
org.jfree.chart.plot.Plot.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r7 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint>
org.jfree.chart.plot.Plot.equals : $r7 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r8 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint>
org.jfree.chart.plot.Plot.equals : $r8 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8)
org.jfree.chart.plot.Plot.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z3 != 0
org.jfree.chart.plot.Plot.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r9 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.equals : $r9 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r10 = r2.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.equals : $r10 = r2.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.plot.Plot.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z4 != 0
org.jfree.chart.plot.Plot.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z5 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.equals : $z5 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z6 = r2.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.equals : $z6 = r2.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z5 == $z6
org.jfree.chart.plot.Plot.equals : if $z5 == $z6 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r11 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.equals : $r11 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r12 = r2.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.equals : $r12 = r2.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z7 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12)
org.jfree.chart.plot.Plot.equals : $z7 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z7 != 0
org.jfree.chart.plot.Plot.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r13 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.equals : $r13 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r14 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.equals : $r14 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z8 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14)
org.jfree.chart.plot.Plot.equals : $z8 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z8 != 0
org.jfree.chart.plot.Plot.equals : if $z8 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r15 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.equals : $r15 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r16 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.equals : $r16 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z9 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16)
org.jfree.chart.plot.Plot.equals : $z9 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z9 != 0
org.jfree.chart.plot.Plot.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r17 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.plot.Plot.equals : $r17 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r18 = r2.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.plot.Plot.equals : $r18 = r2.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)
org.jfree.chart.plot.Plot.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z10 != 0
org.jfree.chart.plot.Plot.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $i0 = r0.<org.jfree.chart.plot.Plot: int backgroundImageAlignment>
org.jfree.chart.plot.Plot.equals : $i0 = r0.<org.jfree.chart.plot.Plot: int backgroundImageAlignment> >>>>>>>> org.jfree.chart.plot.Plot.equals : $i1 = r2.<org.jfree.chart.plot.Plot: int backgroundImageAlignment>
org.jfree.chart.plot.Plot.equals : $i1 = r2.<org.jfree.chart.plot.Plot: int backgroundImageAlignment> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $i0 == $i1
org.jfree.chart.plot.Plot.equals : if $i0 == $i1 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f0 = r0.<org.jfree.chart.plot.Plot: float backgroundImageAlpha>
org.jfree.chart.plot.Plot.equals : $f0 = r0.<org.jfree.chart.plot.Plot: float backgroundImageAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f1 = r2.<org.jfree.chart.plot.Plot: float backgroundImageAlpha>
org.jfree.chart.plot.Plot.equals : $f1 = r2.<org.jfree.chart.plot.Plot: float backgroundImageAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b2 = $f0 cmpl $f1
org.jfree.chart.plot.Plot.equals : $b2 = $f0 cmpl $f1 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b2 == 0
org.jfree.chart.plot.Plot.equals : if $b2 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f2 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.equals : $f2 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f3 = r2.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.equals : $f3 = r2.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b3 = $f2 cmpl $f3
org.jfree.chart.plot.Plot.equals : $b3 = $f2 cmpl $f3 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b3 == 0
org.jfree.chart.plot.Plot.equals : if $b3 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f4 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.equals : $f4 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f5 = r2.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.equals : $f5 = r2.<org.jfree.chart.plot.Plot: float backgroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b4 = $f4 cmpl $f5
org.jfree.chart.plot.Plot.equals : $b4 = $f4 cmpl $f5 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b4 == 0
org.jfree.chart.plot.Plot.equals : if $b4 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r19 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.equals : $r19 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r20 = r2.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.equals : $r20 = r2.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z11 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20)
org.jfree.chart.plot.Plot.equals : $z11 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if r1 != r0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z0 = r1 instanceof org.jfree.chart.plot.DefaultDrawingSupplier
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z0 = r1 instanceof org.jfree.chart.plot.DefaultDrawingSupplier >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z0 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : r2 = (org.jfree.chart.plot.DefaultDrawingSupplier) r1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : r2 = (org.jfree.chart.plot.DefaultDrawingSupplier) r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r4 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r4 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z1 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i1 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i1 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i0 == $i1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i0 == $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r6 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r6 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z2 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i3 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i3 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i2 == $i3
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i2 == $i3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r7 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r7 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r8 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r8 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z3 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i4 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i4 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i5 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i5 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i4 == $i5
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i4 == $i5 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r10 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r10 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r9, $r10)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r9, $r10) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z4 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i7 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i7 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i6 == $i7
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i6 == $i7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r12 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r12 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z5 = specialinvoke r0.<org.jfree.chart.plot.DefaultDrawingSupplier: boolean equalShapes(java.awt.Shape[],java.awt.Shape[])>($r11, $r12)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z5 = specialinvoke r0.<org.jfree.chart.plot.DefaultDrawingSupplier: boolean equalShapes(java.awt.Shape[],java.awt.Shape[])>($r11, $r12) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r1 != null
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r1 != null >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r2 != null
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r2 != null >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i1 = lengthof r1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i1 = lengthof r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i2 = lengthof r2
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i2 = lengthof r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $i1 == $i2
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $i1 == $i2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i3 = lengthof r1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i3 = lengthof r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if i0 >= $i3
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if i0 >= $i3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r3 = r1[i0]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r3 = r1[i0] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r4 = r2[i0]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r4 = r2[i0] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $z1 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r3, $r4)
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $z1 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r3, $r4) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $z1 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = i0 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : goto [?= $i3 = lengthof r1]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : goto [?= $i3 = lengthof r1] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : return 1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : return 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z5 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i9 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i9 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i8 == $i9
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i8 == $i9 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : return 1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : return 1 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z11 != 0
org.jfree.chart.plot.Plot.equals : if $z11 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z12 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.equals : $z12 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z13 = r2.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.equals : $z13 = r2.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z12 == $z13
org.jfree.chart.plot.Plot.equals : if $z12 == $z13 >>>>>>>> org.jfree.chart.plot.Plot.equals : return 1
org.jfree.chart.plot.Plot.equals : return 1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : return $z60
org.jfree.chart.plot.XYPlot.equals : return $z60 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : if $z1 != 0
org.jfree.chart.plot.CombinedDomainXYPlot.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $z2 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $z2 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : return $z2
