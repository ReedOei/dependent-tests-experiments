org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if r1 == null
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if r1 == null >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : return $l0
org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b2 = $l0 cmp $l1
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b2 = $l0 cmp $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b2 >= 0
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b2 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l3 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l3 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getStartTime : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.getStartTime : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getStartTime : return $l0
org.jfree.chart.axis.SegmentedTimeline.getStartTime : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b5 = $l3 cmp $l4
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b5 = $l3 cmp $l4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b5 <= 0
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b5 <= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l6 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l6 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l8 = $l6 % $l7
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l8 = $l6 % $l7 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b9 = $l8 cmp 0L
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b9 = $l8 cmp 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b9 == 0
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b9 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l11 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l11 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l12 = $l10 - $l11
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l12 = $l10 - $l11 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l13 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l13 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l14 = $l12 % $l13
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l14 = $l12 % $l13 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b15 = $l14 cmp 0L
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b15 = $l14 cmp 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b15 == 0
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b15 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> = r1
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> = r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(86400000L, 5, 2)
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(86400000L, 5, 2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : r1 = $r0
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : r1 = $r0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>()
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r1 = new java.lang.StringBuilder
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r1 = new java.lang.StringBuilder >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTC-")
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTC-") >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, $r7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, $r7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r2 = $r4
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r2 = $r4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r8.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r2)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r8.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r3 = $r8
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r3 = $r8 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : if $i1 == 2
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : if $i1 == 2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $l2 = virtualinvoke $r9.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $l2 = virtualinvoke $r9.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : return $l2
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : return $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l0)
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(900000L, 28, 68)
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(900000L, 28, 68) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : r1 = $r0
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : r1 = $r0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>()
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $l2 = 36L * $l1
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $l2 = 36L * $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $l3 = $l0 + $l2
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $l3 = $l0 + $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l3)
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l3) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $r2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline newMondayThroughFridayTimeline()>()
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : $r2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline newMondayThroughFridayTimeline()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setBaseTimeline(org.jfree.chart.axis.SegmentedTimeline)>($r2)
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setBaseTimeline(org.jfree.chart.axis.SegmentedTimeline)>($r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : return r1
org.jfree.chart.axis.SegmentedTimeline.newFifteenMinuteTimeline : return r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.axis.SegmentedTimeline.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.clone : r1 = (org.jfree.chart.axis.SegmentedTimeline) $r2
org.jfree.chart.axis.SegmentedTimeline.clone : r1 = (org.jfree.chart.axis.SegmentedTimeline) $r2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.clone : return r1
org.jfree.chart.axis.SegmentedTimeline.clone : return r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $z5 = r1 instanceof org.jfree.chart.axis.SegmentedTimeline
org.jfree.chart.axis.SegmentedTimeline.equals : $z5 = r1 instanceof org.jfree.chart.axis.SegmentedTimeline >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if $z5 == 0
org.jfree.chart.axis.SegmentedTimeline.equals : if $z5 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : r2 = (org.jfree.chart.axis.SegmentedTimeline) r1
org.jfree.chart.axis.SegmentedTimeline.equals : r2 = (org.jfree.chart.axis.SegmentedTimeline) r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.equals : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $l1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.equals : $l1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $b2 = $l0 cmp $l1
org.jfree.chart.axis.SegmentedTimeline.equals : $b2 = $l0 cmp $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if $b2 != 0
org.jfree.chart.axis.SegmentedTimeline.equals : if $b2 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $z6 = 1
org.jfree.chart.axis.SegmentedTimeline.equals : $z6 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= z0 = $z6]
org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= z0 = $z6] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : z0 = $z6
org.jfree.chart.axis.SegmentedTimeline.equals : z0 = $z6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $i3 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded>
org.jfree.chart.axis.SegmentedTimeline.equals : $i3 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $i4 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: int getSegmentsIncluded()>()
org.jfree.chart.axis.SegmentedTimeline.equals : $i4 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: int getSegmentsIncluded()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentsIncluded : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded>
org.jfree.chart.axis.SegmentedTimeline.getSegmentsIncluded : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentsIncluded : return $i0
org.jfree.chart.axis.SegmentedTimeline.getSegmentsIncluded : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if $i3 != $i4
org.jfree.chart.axis.SegmentedTimeline.equals : if $i3 != $i4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $z7 = 1
org.jfree.chart.axis.SegmentedTimeline.equals : $z7 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= z1 = $z7]
org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= z1 = $z7] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : z1 = $z7
org.jfree.chart.axis.SegmentedTimeline.equals : z1 = $z7 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $i5 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsExcluded>
org.jfree.chart.axis.SegmentedTimeline.equals : $i5 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsExcluded> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $i6 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: int getSegmentsExcluded()>()
org.jfree.chart.axis.SegmentedTimeline.equals : $i6 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: int getSegmentsExcluded()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsExcluded>
org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsExcluded> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : return $i0
org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if $i5 != $i6
org.jfree.chart.axis.SegmentedTimeline.equals : if $i5 != $i6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $z8 = 1
org.jfree.chart.axis.SegmentedTimeline.equals : $z8 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= z2 = $z8]
org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= z2 = $z8] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : z2 = $z8
org.jfree.chart.axis.SegmentedTimeline.equals : z2 = $z8 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.equals : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $l8 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>()
org.jfree.chart.axis.SegmentedTimeline.equals : $l8 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $b9 = $l7 cmp $l8
org.jfree.chart.axis.SegmentedTimeline.equals : $b9 = $l7 cmp $l8 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if $b9 != 0
org.jfree.chart.axis.SegmentedTimeline.equals : if $b9 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $z9 = 1
org.jfree.chart.axis.SegmentedTimeline.equals : $z9 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= z3 = $z9]
org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= z3 = $z9] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : z3 = $z9
org.jfree.chart.axis.SegmentedTimeline.equals : z3 = $z9 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.equals : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: java.util.List getExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline: java.util.List getExceptionSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegments : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegments : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegments : return $r2
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegments : return $r2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : z4 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.axis.SegmentedTimeline.equals : z4 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if r1 == r2
org.jfree.chart.axis.SegmentedTimeline.equals : if r1 == r2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if r1 == null
org.jfree.chart.axis.SegmentedTimeline.equals : if r1 == null >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2)
org.jfree.chart.axis.SegmentedTimeline.equals : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.equals : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $z1 = 1
org.jfree.chart.axis.SegmentedTimeline.equals : $z1 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= return $z1]
org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= return $z1] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : return $z1
org.jfree.chart.axis.SegmentedTimeline.equals : return $z1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if z0 == 0
org.jfree.chart.axis.SegmentedTimeline.equals : if z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if z1 == 0
org.jfree.chart.axis.SegmentedTimeline.equals : if z1 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if z2 == 0
org.jfree.chart.axis.SegmentedTimeline.equals : if z2 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if z3 == 0
org.jfree.chart.axis.SegmentedTimeline.equals : if z3 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : if z4 == 0
org.jfree.chart.axis.SegmentedTimeline.equals : if z4 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : $z10 = 1
org.jfree.chart.axis.SegmentedTimeline.equals : $z10 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= return $z10]
org.jfree.chart.axis.SegmentedTimeline.equals : goto [?= return $z10] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.equals : return $z10
