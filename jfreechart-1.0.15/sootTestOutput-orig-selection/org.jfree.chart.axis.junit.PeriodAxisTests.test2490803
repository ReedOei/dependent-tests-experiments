org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : return $l4
org.jfree.data.time.Day.getFirstMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : return $l4
org.jfree.data.time.Day.getLastMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Year")
org.jfree.data.time.RegularTimePeriod.downsize : $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Year") >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : if $z0 == 0
org.jfree.data.time.RegularTimePeriod.downsize : if $z0 == 0 >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Quarter")
org.jfree.data.time.RegularTimePeriod.downsize : $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Quarter") >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : if $z1 == 0
org.jfree.data.time.RegularTimePeriod.downsize : if $z1 == 0 >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : $z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Month")
org.jfree.data.time.RegularTimePeriod.downsize : $z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Month") >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : if $z2 == 0
org.jfree.data.time.RegularTimePeriod.downsize : if $z2 == 0 >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : $z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Day")
org.jfree.data.time.RegularTimePeriod.downsize : $z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Day") >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : if $z3 == 0
org.jfree.data.time.RegularTimePeriod.downsize : if $z3 == 0 >>>>>>>> org.jfree.data.time.RegularTimePeriod.downsize : return class "org/jfree/data/time/Hour"
org.jfree.data.time.RegularTimePeriod.downsize : return class "org/jfree/data/time/Hour" >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setAutoRange(boolean,boolean)>(z0, 1)
org.jfree.chart.axis.ValueAxis.setAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setAutoRange(boolean,boolean)>(z0, 1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRange : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.setAutoRange : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRange : if $z2 == z0
org.jfree.chart.axis.ValueAxis.setAutoRange : if $z2 == z0 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $d0 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.PeriodAxis.setRange : $d0 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : l0 = staticinvoke <java.lang.Math: long round(double)>($d0)
org.jfree.chart.axis.PeriodAxis.setRange : l0 = staticinvoke <java.lang.Math: long round(double)>($d0) >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $d1 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.PeriodAxis.setRange : $d1 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : l1 = staticinvoke <java.lang.Math: long round(double)>($d1)
org.jfree.chart.axis.PeriodAxis.setRange : l1 = staticinvoke <java.lang.Math: long round(double)>($d1) >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r3 = r0.<org.jfree.chart.axis.PeriodAxis: java.lang.Class autoRangeTimePeriodClass>
org.jfree.chart.axis.PeriodAxis.setRange : $r3 = r0.<org.jfree.chart.axis.PeriodAxis: java.lang.Class autoRangeTimePeriodClass> >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r2 = new java.util.Date
org.jfree.chart.axis.PeriodAxis.setRange : $r2 = new java.util.Date >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : specialinvoke $r2.<java.util.Date: void <init>(long)>(l1)
org.jfree.chart.axis.PeriodAxis.setRange : specialinvoke $r2.<java.util.Date: void <init>(long)>(l1) >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r4 = r0.<org.jfree.chart.axis.PeriodAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.PeriodAxis.setRange : $r4 = r0.<org.jfree.chart.axis.PeriodAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r5 = r0.<org.jfree.chart.axis.PeriodAxis: java.util.Locale locale>
org.jfree.chart.axis.PeriodAxis.setRange : $r5 = r0.<org.jfree.chart.axis.PeriodAxis: java.util.Locale locale> >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r6 = specialinvoke r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)>($r3, $r2, $r4, $r5)
org.jfree.chart.axis.PeriodAxis.setRange : $r6 = specialinvoke r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)>($r3, $r2, $r4, $r5) >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : r5 = null
org.jfree.chart.axis.PeriodAxis.createInstance : r5 = null >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r8 = newarray (java.lang.Class)[3]
org.jfree.chart.axis.PeriodAxis.createInstance : $r8 = newarray (java.lang.Class)[3] >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r8[0] = class "java/util/Date"
org.jfree.chart.axis.PeriodAxis.createInstance : $r8[0] = class "java/util/Date" >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r8[1] = class "java/util/TimeZone"
org.jfree.chart.axis.PeriodAxis.createInstance : $r8[1] = class "java/util/TimeZone" >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r8[2] = class "java/util/Locale"
org.jfree.chart.axis.PeriodAxis.createInstance : $r8[2] = class "java/util/Locale" >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : r6 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r8)
org.jfree.chart.axis.PeriodAxis.createInstance : r6 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r8) >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r9 = newarray (java.lang.Object)[3]
org.jfree.chart.axis.PeriodAxis.createInstance : $r9 = newarray (java.lang.Object)[3] >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r9[0] = r2
org.jfree.chart.axis.PeriodAxis.createInstance : $r9[0] = r2 >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r9[1] = r3
org.jfree.chart.axis.PeriodAxis.createInstance : $r9[1] = r3 >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r9[2] = r4
org.jfree.chart.axis.PeriodAxis.createInstance : $r9[2] = r4 >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : $r10 = virtualinvoke r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r9)
org.jfree.chart.axis.PeriodAxis.createInstance : $r10 = virtualinvoke r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r9) >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : r5 = (org.jfree.data.time.RegularTimePeriod) $r10
org.jfree.chart.axis.PeriodAxis.createInstance : r5 = (org.jfree.data.time.RegularTimePeriod) $r10 >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : goto [?= return r5]
org.jfree.chart.axis.PeriodAxis.createInstance : goto [?= return r5] >>>>>>>> org.jfree.chart.axis.PeriodAxis.createInstance : return r5
org.jfree.chart.axis.PeriodAxis.createInstance : return r5 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod first> = $r6
org.jfree.chart.axis.PeriodAxis.setRange : r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod first> = $r6 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r7 = r0.<org.jfree.chart.axis.PeriodAxis: java.lang.Class autoRangeTimePeriodClass>
org.jfree.chart.axis.PeriodAxis.setRange : $r7 = r0.<org.jfree.chart.axis.PeriodAxis: java.lang.Class autoRangeTimePeriodClass> >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r8 = new java.util.Date
org.jfree.chart.axis.PeriodAxis.setRange : $r8 = new java.util.Date >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : specialinvoke $r8.<java.util.Date: void <init>(long)>(l0)
org.jfree.chart.axis.PeriodAxis.setRange : specialinvoke $r8.<java.util.Date: void <init>(long)>(l0) >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r9 = r0.<org.jfree.chart.axis.PeriodAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.PeriodAxis.setRange : $r9 = r0.<org.jfree.chart.axis.PeriodAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r10 = r0.<org.jfree.chart.axis.PeriodAxis: java.util.Locale locale>
org.jfree.chart.axis.PeriodAxis.setRange : $r10 = r0.<org.jfree.chart.axis.PeriodAxis: java.util.Locale locale> >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r11 = specialinvoke r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)>($r7, $r8, $r9, $r10)
org.jfree.chart.axis.PeriodAxis.setRange : $r11 = specialinvoke r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)>($r7, $r8, $r9, $r10) >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod last> = $r11
org.jfree.chart.axis.PeriodAxis.setRange : r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod last> = $r11 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r12 = new org.jfree.data.Range
org.jfree.chart.axis.PeriodAxis.setRange : $r12 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r13 = r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod first>
org.jfree.chart.axis.PeriodAxis.setRange : $r13 = r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod first> >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $l2 = virtualinvoke $r13.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond()>()
org.jfree.chart.axis.PeriodAxis.setRange : $l2 = virtualinvoke $r13.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Day: long firstMillisecond>
org.jfree.data.time.Day.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Day: long firstMillisecond> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : return $l0
org.jfree.data.time.Day.getFirstMillisecond : return $l0 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $d2 = (double) $l2
org.jfree.chart.axis.PeriodAxis.setRange : $d2 = (double) $l2 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $r14 = r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod last>
org.jfree.chart.axis.PeriodAxis.setRange : $r14 = r0.<org.jfree.chart.axis.PeriodAxis: org.jfree.data.time.RegularTimePeriod last> >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $l3 = virtualinvoke $r14.<org.jfree.data.time.RegularTimePeriod: long getLastMillisecond()>()
org.jfree.chart.axis.PeriodAxis.setRange : $l3 = virtualinvoke $r14.<org.jfree.data.time.RegularTimePeriod: long getLastMillisecond()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $l0 = r0.<org.jfree.data.time.Day: long lastMillisecond>
org.jfree.data.time.Day.getLastMillisecond : $l0 = r0.<org.jfree.data.time.Day: long lastMillisecond> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : return $l0
org.jfree.data.time.Day.getLastMillisecond : return $l0 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $d3 = (double) $l3
org.jfree.chart.axis.PeriodAxis.setRange : $d3 = (double) $l3 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : $d4 = $d3 + 1.0
org.jfree.chart.axis.PeriodAxis.setRange : $d4 = $d3 + 1.0 >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>($d2, $d4)
org.jfree.chart.axis.PeriodAxis.setRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.chart.axis.PeriodAxis.setRange : specialinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, z0, z1)
org.jfree.chart.axis.PeriodAxis.setRange : specialinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, z0, z1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : return $r1
