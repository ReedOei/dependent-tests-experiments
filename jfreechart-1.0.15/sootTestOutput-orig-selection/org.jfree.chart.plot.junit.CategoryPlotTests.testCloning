org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : return r1
org.jfree.chart.plot.CategoryPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6
org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.CategoryPlot
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.CategoryPlot >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeCrosshairPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.CategoryPlot.setRangeCrosshairPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeCrosshairPaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeCrosshairPaint> = r1
org.jfree.chart.plot.CategoryPlot.setRangeCrosshairPaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeCrosshairPaint> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeCrosshairPaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setRangeCrosshairPaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlinePaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeMinorGridlinePaint> = r1
org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlinePaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeMinorGridlinePaint> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlinePaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlinePaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeZeroBaselinePaint> = r1
org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeZeroBaselinePaint> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r6 = specialinvoke r0.<org.jfree.chart.plot.Plot: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r6 = specialinvoke r0.<org.jfree.chart.plot.Plot: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.Plot.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : r1 = (org.jfree.chart.plot.Plot) $r2
org.jfree.chart.plot.Plot.clone : r1 = (org.jfree.chart.plot.Plot) $r2 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r3 = r0.<org.jfree.chart.plot.Plot: org.jfree.data.general.DatasetGroup datasetGroup>
org.jfree.chart.plot.Plot.clone : $r3 = r0.<org.jfree.chart.plot.Plot: org.jfree.data.general.DatasetGroup datasetGroup> >>>>>>>> org.jfree.chart.plot.Plot.clone : if $r3 == null
org.jfree.chart.plot.Plot.clone : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.clone : $r7 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.clone : $r7 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.clone : $r8 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r7)
org.jfree.chart.plot.Plot.clone : $r8 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2
org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r9 = (org.jfree.chart.plot.DrawingSupplier) $r8
org.jfree.chart.plot.Plot.clone : $r9 = (org.jfree.chart.plot.DrawingSupplier) $r8 >>>>>>>> org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = $r9
org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = $r9 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r10 = new javax.swing.event.EventListenerList
org.jfree.chart.plot.Plot.clone : $r10 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.plot.Plot.clone : specialinvoke $r10.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.plot.Plot.clone : specialinvoke $r10.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r10
org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r10 >>>>>>>> org.jfree.chart.plot.Plot.clone : return r1
org.jfree.chart.plot.Plot.clone : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1 = (org.jfree.chart.plot.CategoryPlot) $r6
org.jfree.chart.plot.CategoryPlot.clone : r1 = (org.jfree.chart.plot.CategoryPlot) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r2 = new org.jfree.util.ObjectList
org.jfree.chart.plot.CategoryPlot.clone : $r2 = new org.jfree.util.ObjectList >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r2.<org.jfree.util.ObjectList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r2.<org.jfree.util.ObjectList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> = $r2
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> = $r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i0 = 0
org.jfree.chart.plot.CategoryPlot.clone : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.clone : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $i1 = virtualinvoke $r7.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.clone : $i1 = virtualinvoke $r7.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.clone : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.clone : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r9 = virtualinvoke $r8.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.clone : $r9 = virtualinvoke $r8.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r3 = (org.jfree.chart.axis.CategoryAxis) $r9
org.jfree.chart.plot.CategoryPlot.clone : r3 = (org.jfree.chart.axis.CategoryAxis) $r9 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if r3 == null
org.jfree.chart.plot.CategoryPlot.clone : if r3 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.clone : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.clone : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r12 = virtualinvoke $r11.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r12 = virtualinvoke $r11.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r13 = (org.jfree.util.ObjectList) $r12
org.jfree.chart.plot.CategoryPlot.clone : $r13 = (org.jfree.util.ObjectList) $r12 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> = $r13
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> = $r13 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r14 = new org.jfree.util.ObjectList
org.jfree.chart.plot.CategoryPlot.clone : $r14 = new org.jfree.util.ObjectList >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r14.<org.jfree.util.ObjectList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r14.<org.jfree.util.ObjectList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> = $r14
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> = $r14 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i2 = 0
org.jfree.chart.plot.CategoryPlot.clone : i2 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r15 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.clone : $r15 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $i3 = virtualinvoke $r15.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.clone : $i3 = virtualinvoke $r15.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if i2 >= $i3
org.jfree.chart.plot.CategoryPlot.clone : if i2 >= $i3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r16 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.clone : $r16 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r17 = virtualinvoke $r16.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i2)
org.jfree.chart.plot.CategoryPlot.clone : $r17 = virtualinvoke $r16.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r18 = (org.jfree.chart.axis.ValueAxis) $r17
org.jfree.chart.plot.CategoryPlot.clone : r18 = (org.jfree.chart.axis.ValueAxis) $r17 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if r18 == null
org.jfree.chart.plot.CategoryPlot.clone : if r18 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i2 = i2 + 1
org.jfree.chart.plot.CategoryPlot.clone : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r15 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r15 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.clone : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r23 = (org.jfree.util.ObjectList) $r22
org.jfree.chart.plot.CategoryPlot.clone : $r23 = (org.jfree.util.ObjectList) $r22 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> = $r23
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> = $r23 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r24 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.clone : $r24 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r25 = virtualinvoke $r24.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r25 = virtualinvoke $r24.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r26 = (org.jfree.util.ObjectList) $r25
org.jfree.chart.plot.CategoryPlot.clone : $r26 = (org.jfree.util.ObjectList) $r25 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> = $r26
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> = $r26 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i4 = 0
org.jfree.chart.plot.CategoryPlot.clone : i4 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r27 = r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.clone : $r27 = r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $i5 = virtualinvoke $r27.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.clone : $i5 = virtualinvoke $r27.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if i4 >= $i5
org.jfree.chart.plot.CategoryPlot.clone : if i4 >= $i5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r28 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i4)
org.jfree.chart.plot.CategoryPlot.clone : r28 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i4) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if r28 == null
org.jfree.chart.plot.CategoryPlot.clone : if r28 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i4 = i4 + 1
org.jfree.chart.plot.CategoryPlot.clone : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r27 = r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r27 = r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r29 = new java.util.TreeMap
org.jfree.chart.plot.CategoryPlot.clone : $r29 = new java.util.TreeMap >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r29.<java.util.TreeMap: void <init>()>()
org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r29.<java.util.TreeMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> = $r29
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> = $r29 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r30 = r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.clone : $r30 = r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r31 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.clone : $r31 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke $r30.<java.util.TreeMap: void putAll(java.util.Map)>($r31)
org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke $r30.<java.util.TreeMap: void putAll(java.util.Map)>($r31) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r32 = new java.util.TreeMap
org.jfree.chart.plot.CategoryPlot.clone : $r32 = new java.util.TreeMap >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r32.<java.util.TreeMap: void <init>()>()
org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r32.<java.util.TreeMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> = $r32
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> = $r32 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r33 = r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.clone : $r33 = r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r34 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.clone : $r34 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke $r33.<java.util.TreeMap: void putAll(java.util.Map)>($r34)
org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke $r33.<java.util.TreeMap: void putAll(java.util.Map)>($r34) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r35 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.clone : $r35 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r36 = virtualinvoke $r35.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r36 = virtualinvoke $r35.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r37 = (org.jfree.util.ObjectList) $r36
org.jfree.chart.plot.CategoryPlot.clone : $r37 = (org.jfree.util.ObjectList) $r36 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> = $r37
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> = $r37 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i6 = 0
org.jfree.chart.plot.CategoryPlot.clone : i6 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r38 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.clone : $r38 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $i7 = virtualinvoke $r38.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.clone : $i7 = virtualinvoke $r38.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if i6 >= $i7
org.jfree.chart.plot.CategoryPlot.clone : if i6 >= $i7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r39 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.clone : $r39 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r40 = virtualinvoke $r39.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6)
org.jfree.chart.plot.CategoryPlot.clone : $r40 = virtualinvoke $r39.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r41 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r40
org.jfree.chart.plot.CategoryPlot.clone : r41 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r40 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $z0 = r41 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.plot.CategoryPlot.clone : $z0 = r41 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.clone : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i6 = i6 + 1
org.jfree.chart.plot.CategoryPlot.clone : i6 = i6 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r38 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>]
org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r38 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r45 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.CategoryPlot.clone : $r45 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if $r45 == null
org.jfree.chart.plot.CategoryPlot.clone : if $r45 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r49 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.CategoryPlot.clone : $r49 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if $r49 == null
org.jfree.chart.plot.CategoryPlot.clone : if $r49 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r53 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations>
org.jfree.chart.plot.CategoryPlot.clone : $r53 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r54 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r53)
org.jfree.chart.plot.CategoryPlot.clone : $r54 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r53) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r55 = (java.util.List) $r54
org.jfree.chart.plot.CategoryPlot.clone : $r55 = (java.util.List) $r54 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> = $r55
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> = $r55 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r56 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.clone : $r56 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r57 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r56)
org.jfree.chart.plot.CategoryPlot.clone : $r57 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r56) >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : $r2 = new java.util.HashMap
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : $r2 = new java.util.HashMap >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r3 = $r2
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r3 = $r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : return r3
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : return r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> = $r57
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> = $r57 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r58 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.clone : $r58 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r59 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r58)
org.jfree.chart.plot.CategoryPlot.clone : $r59 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r58) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> = $r59
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> = $r59 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r60 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.clone : $r60 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r61 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r60)
org.jfree.chart.plot.CategoryPlot.clone : $r61 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r60) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> = $r61
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> = $r61 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r62 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.clone : $r62 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r63 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r62)
org.jfree.chart.plot.CategoryPlot.clone : $r63 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r62) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> = $r63
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> = $r63 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r64 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.CategoryPlot.clone : $r64 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if $r64 == null
org.jfree.chart.plot.CategoryPlot.clone : if $r64 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : return r1
org.jfree.chart.plot.CategoryPlot.clone : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if r1 != r0
org.jfree.chart.plot.CategoryPlot.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.CategoryPlot
org.jfree.chart.plot.CategoryPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.CategoryPlot >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z0 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : r2 = (org.jfree.chart.plot.CategoryPlot) r1
org.jfree.chart.plot.CategoryPlot.equals : r2 = (org.jfree.chart.plot.CategoryPlot) r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.equals : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r4 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.equals : $r4 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $r3 == $r4
org.jfree.chart.plot.CategoryPlot.equals : if $r3 == $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.CategoryPlot.equals : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r6 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.CategoryPlot.equals : $r6 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.plot.CategoryPlot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z1 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.equals : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r8 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.equals : $r8 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z2 = virtualinvoke $r7.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.plot.CategoryPlot.equals : $z2 = virtualinvoke $r7.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z2 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.equals : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r10 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.equals : $r10 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z3 = virtualinvoke $r9.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.plot.CategoryPlot.equals : $z3 = virtualinvoke $r9.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z3 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z4 = r0.<org.jfree.chart.plot.CategoryPlot: boolean drawSharedDomainAxis>
org.jfree.chart.plot.CategoryPlot.equals : $z4 = r0.<org.jfree.chart.plot.CategoryPlot: boolean drawSharedDomainAxis> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z5 = r2.<org.jfree.chart.plot.CategoryPlot: boolean drawSharedDomainAxis>
org.jfree.chart.plot.CategoryPlot.equals : $z5 = r2.<org.jfree.chart.plot.CategoryPlot: boolean drawSharedDomainAxis> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z4 == $z5
org.jfree.chart.plot.CategoryPlot.equals : if $z4 == $z5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.equals : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r12 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.equals : $r12 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z6 = virtualinvoke $r11.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r12)
org.jfree.chart.plot.CategoryPlot.equals : $z6 = virtualinvoke $r11.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z6 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z6 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.equals : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r14 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.equals : $r14 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z7 = virtualinvoke $r13.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r14)
org.jfree.chart.plot.CategoryPlot.equals : $z7 = virtualinvoke $r13.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z7 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r15 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.equals : $r15 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r16 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.equals : $r16 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z8 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)
org.jfree.chart.plot.CategoryPlot.equals : $z8 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z8 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z8 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r17 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.equals : $r17 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r18 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.equals : $r18 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z9 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)
org.jfree.chart.plot.CategoryPlot.equals : $z9 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z9 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r19 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.equals : $r19 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r20 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.equals : $r20 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)
org.jfree.chart.plot.CategoryPlot.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z10 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder renderingOrder>
org.jfree.chart.plot.CategoryPlot.equals : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder renderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r22 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder renderingOrder>
org.jfree.chart.plot.CategoryPlot.equals : $r22 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder renderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $r21 == $r22
org.jfree.chart.plot.CategoryPlot.equals : if $r21 == $r22 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r23 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder columnRenderingOrder>
org.jfree.chart.plot.CategoryPlot.equals : $r23 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder columnRenderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r24 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder columnRenderingOrder>
org.jfree.chart.plot.CategoryPlot.equals : $r24 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder columnRenderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $r23 == $r24
org.jfree.chart.plot.CategoryPlot.equals : if $r23 == $r24 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r25 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder>
org.jfree.chart.plot.CategoryPlot.equals : $r25 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r26 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder>
org.jfree.chart.plot.CategoryPlot.equals : $r26 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $r25 == $r26
org.jfree.chart.plot.CategoryPlot.equals : if $r25 == $r26 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z11 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z11 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z12 = r2.<org.jfree.chart.plot.CategoryPlot: boolean domainGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z12 = r2.<org.jfree.chart.plot.CategoryPlot: boolean domainGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z11 == $z12
org.jfree.chart.plot.CategoryPlot.equals : if $z11 == $z12 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r27 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAnchor domainGridlinePosition>
org.jfree.chart.plot.CategoryPlot.equals : $r27 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAnchor domainGridlinePosition> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r28 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAnchor domainGridlinePosition>
org.jfree.chart.plot.CategoryPlot.equals : $r28 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAnchor domainGridlinePosition> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $r27 == $r28
org.jfree.chart.plot.CategoryPlot.equals : if $r27 == $r28 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r29 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r29 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke domainGridlineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r30 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r30 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke domainGridlineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z13 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r30)
org.jfree.chart.plot.CategoryPlot.equals : $z13 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z13 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z13 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r31 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.CategoryPlot.equals : $r31 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainGridlinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r32 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.CategoryPlot.equals : $r32 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainGridlinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z14 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r31, $r32)
org.jfree.chart.plot.CategoryPlot.equals : $z14 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r31, $r32) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z14 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z14 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z15 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z15 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z16 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z16 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z15 == $z16
org.jfree.chart.plot.CategoryPlot.equals : if $z15 == $z16 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r33 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r33 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r34 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r34 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z17 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r34)
org.jfree.chart.plot.CategoryPlot.equals : $z17 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r34) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z17 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z17 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r35 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.CategoryPlot.equals : $r35 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r36 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.CategoryPlot.equals : $r36 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z18 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r35, $r36)
org.jfree.chart.plot.CategoryPlot.equals : $z18 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r35, $r36) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z18 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z18 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $d0 = r0.<org.jfree.chart.plot.CategoryPlot: double anchorValue>
org.jfree.chart.plot.CategoryPlot.equals : $d0 = r0.<org.jfree.chart.plot.CategoryPlot: double anchorValue> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $d1 = r2.<org.jfree.chart.plot.CategoryPlot: double anchorValue>
org.jfree.chart.plot.CategoryPlot.equals : $d1 = r2.<org.jfree.chart.plot.CategoryPlot: double anchorValue> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.plot.CategoryPlot.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $b0 == 0
org.jfree.chart.plot.CategoryPlot.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z19 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z19 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z20 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z20 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z19 == $z20
org.jfree.chart.plot.CategoryPlot.equals : if $z19 == $z20 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $d2 = r0.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue>
org.jfree.chart.plot.CategoryPlot.equals : $d2 = r0.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $d3 = r2.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue>
org.jfree.chart.plot.CategoryPlot.equals : $d3 = r2.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $b1 = $d2 cmpl $d3
org.jfree.chart.plot.CategoryPlot.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $b1 == 0
org.jfree.chart.plot.CategoryPlot.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r37 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeCrosshairStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r37 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeCrosshairStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r38 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeCrosshairStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r38 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeCrosshairStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z21 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r37, $r38)
org.jfree.chart.plot.CategoryPlot.equals : $z21 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r37, $r38) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z21 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z21 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r39 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeCrosshairPaint>
org.jfree.chart.plot.CategoryPlot.equals : $r39 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeCrosshairPaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r40 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeCrosshairPaint>
org.jfree.chart.plot.CategoryPlot.equals : $r40 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeCrosshairPaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z22 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r39, $r40)
org.jfree.chart.plot.CategoryPlot.equals : $z22 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r39, $r40) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z22 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z22 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z23 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.CategoryPlot.equals : $z23 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z24 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.CategoryPlot.equals : $z24 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z23 == $z24
org.jfree.chart.plot.CategoryPlot.equals : if $z23 == $z24 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r41 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.equals : $r41 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r42 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.equals : $r42 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z25 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r41, $r42)
org.jfree.chart.plot.CategoryPlot.equals : $z25 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r41, $r42) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z25 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z25 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r43 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.equals : $r43 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r44 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.equals : $r44 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z26 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r43, $r44)
org.jfree.chart.plot.CategoryPlot.equals : $z26 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r43, $r44) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z26 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z26 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r45 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.equals : $r45 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r46 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.equals : $r46 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z27 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r45, $r46)
org.jfree.chart.plot.CategoryPlot.equals : $z27 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r45, $r46) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z27 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z27 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r47 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.equals : $r47 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r48 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.equals : $r48 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z28 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r47, $r48)
org.jfree.chart.plot.CategoryPlot.equals : $z28 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r47, $r48) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z28 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z28 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r49 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations>
org.jfree.chart.plot.CategoryPlot.equals : $r49 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r50 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations>
org.jfree.chart.plot.CategoryPlot.equals : $r50 = r2.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z29 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r49, $r50)
org.jfree.chart.plot.CategoryPlot.equals : $z29 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r49, $r50) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z29 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z29 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $i2 = r0.<org.jfree.chart.plot.CategoryPlot: int weight>
org.jfree.chart.plot.CategoryPlot.equals : $i2 = r0.<org.jfree.chart.plot.CategoryPlot: int weight> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $i3 = r2.<org.jfree.chart.plot.CategoryPlot: int weight>
org.jfree.chart.plot.CategoryPlot.equals : $i3 = r2.<org.jfree.chart.plot.CategoryPlot: int weight> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $i2 == $i3
org.jfree.chart.plot.CategoryPlot.equals : if $i2 == $i3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r51 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.CategoryPlot.equals : $r51 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r52 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.CategoryPlot.equals : $r52 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z30 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r51, $r52)
org.jfree.chart.plot.CategoryPlot.equals : $z30 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r51, $r52) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z30 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z30 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r53 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.CategoryPlot.equals : $r53 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r54 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.CategoryPlot.equals : $r54 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z31 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r53, $r54)
org.jfree.chart.plot.CategoryPlot.equals : $z31 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r53, $r54) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z31 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z31 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r55 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.CategoryPlot.equals : $r55 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r56 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.CategoryPlot.equals : $r56 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z32 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r55, $r56)
org.jfree.chart.plot.CategoryPlot.equals : $z32 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r55, $r56) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z32 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z32 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z33 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainCrosshairVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z33 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainCrosshairVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z34 = r2.<org.jfree.chart.plot.CategoryPlot: boolean domainCrosshairVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z34 = r2.<org.jfree.chart.plot.CategoryPlot: boolean domainCrosshairVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z33 == $z34
org.jfree.chart.plot.CategoryPlot.equals : if $z33 == $z34 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $i4 = r0.<org.jfree.chart.plot.CategoryPlot: int crosshairDatasetIndex>
org.jfree.chart.plot.CategoryPlot.equals : $i4 = r0.<org.jfree.chart.plot.CategoryPlot: int crosshairDatasetIndex> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $i5 = r2.<org.jfree.chart.plot.CategoryPlot: int crosshairDatasetIndex>
org.jfree.chart.plot.CategoryPlot.equals : $i5 = r2.<org.jfree.chart.plot.CategoryPlot: int crosshairDatasetIndex> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $i4 == $i5
org.jfree.chart.plot.CategoryPlot.equals : if $i4 == $i5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r57 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey>
org.jfree.chart.plot.CategoryPlot.equals : $r57 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r58 = r2.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey>
org.jfree.chart.plot.CategoryPlot.equals : $r58 = r2.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z35 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r57, $r58)
org.jfree.chart.plot.CategoryPlot.equals : $z35 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r57, $r58) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z35 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z35 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r59 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey>
org.jfree.chart.plot.CategoryPlot.equals : $r59 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r60 = r2.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey>
org.jfree.chart.plot.CategoryPlot.equals : $r60 = r2.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z36 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r59, $r60)
org.jfree.chart.plot.CategoryPlot.equals : $z36 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r59, $r60) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z36 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z36 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r61 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainCrosshairPaint>
org.jfree.chart.plot.CategoryPlot.equals : $r61 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainCrosshairPaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r62 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainCrosshairPaint>
org.jfree.chart.plot.CategoryPlot.equals : $r62 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainCrosshairPaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z37 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r61, $r62)
org.jfree.chart.plot.CategoryPlot.equals : $z37 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r61, $r62) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z37 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z37 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r63 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke domainCrosshairStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r63 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke domainCrosshairStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r64 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke domainCrosshairStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r64 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke domainCrosshairStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z38 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r63, $r64)
org.jfree.chart.plot.CategoryPlot.equals : $z38 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r63, $r64) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z38 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z38 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z39 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z39 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z40 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z40 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z39 == $z40
org.jfree.chart.plot.CategoryPlot.equals : if $z39 == $z40 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r65 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeMinorGridlinePaint>
org.jfree.chart.plot.CategoryPlot.equals : $r65 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r66 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeMinorGridlinePaint>
org.jfree.chart.plot.CategoryPlot.equals : $r66 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z41 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r65, $r66)
org.jfree.chart.plot.CategoryPlot.equals : $z41 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r65, $r66) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z41 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z41 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r67 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r67 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r68 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r68 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z42 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r67, $r68)
org.jfree.chart.plot.CategoryPlot.equals : $z42 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r67, $r68) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z42 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z42 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z43 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z43 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z44 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.plot.CategoryPlot.equals : $z44 = r2.<org.jfree.chart.plot.CategoryPlot: boolean rangeZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z43 == $z44
org.jfree.chart.plot.CategoryPlot.equals : if $z43 == $z44 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r69 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeZeroBaselinePaint>
org.jfree.chart.plot.CategoryPlot.equals : $r69 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r70 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeZeroBaselinePaint>
org.jfree.chart.plot.CategoryPlot.equals : $r70 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z45 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r69, $r70)
org.jfree.chart.plot.CategoryPlot.equals : $z45 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r69, $r70) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z45 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z45 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r71 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r71 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r72 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.CategoryPlot.equals : $r72 = r2.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z46 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r71, $r72)
org.jfree.chart.plot.CategoryPlot.equals : $z46 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r71, $r72) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z46 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z46 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r73 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.CategoryPlot.equals : $r73 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $r74 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.CategoryPlot.equals : $r74 = r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z47 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r73, $r74)
org.jfree.chart.plot.CategoryPlot.equals : $z47 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r73, $r74) >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : if $z47 != 0
org.jfree.chart.plot.CategoryPlot.equals : if $z47 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : $z48 = specialinvoke r0.<org.jfree.chart.plot.Plot: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.equals : $z48 = specialinvoke r0.<org.jfree.chart.plot.Plot: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.equals : if r1 != r0
org.jfree.chart.plot.Plot.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z0 = r1 instanceof org.jfree.chart.plot.Plot
org.jfree.chart.plot.Plot.equals : $z0 = r1 instanceof org.jfree.chart.plot.Plot >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z0 != 0
org.jfree.chart.plot.Plot.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : r2 = (org.jfree.chart.plot.Plot) r1
org.jfree.chart.plot.Plot.equals : r2 = (org.jfree.chart.plot.Plot) r1 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r3 = r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage>
org.jfree.chart.plot.Plot.equals : $r3 = r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r4 = r2.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage>
org.jfree.chart.plot.Plot.equals : $r4 = r2.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.plot.Plot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z1 != 0
org.jfree.chart.plot.Plot.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont>
org.jfree.chart.plot.Plot.equals : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r6 = r2.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont>
org.jfree.chart.plot.Plot.equals : $r6 = r2.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.plot.Plot.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z2 != 0
org.jfree.chart.plot.Plot.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r7 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint>
org.jfree.chart.plot.Plot.equals : $r7 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r8 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint>
org.jfree.chart.plot.Plot.equals : $r8 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8)
org.jfree.chart.plot.Plot.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z3 != 0
org.jfree.chart.plot.Plot.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r9 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.equals : $r9 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r10 = r2.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.equals : $r10 = r2.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.plot.Plot.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z4 != 0
org.jfree.chart.plot.Plot.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z5 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.equals : $z5 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z6 = r2.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.equals : $z6 = r2.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z5 == $z6
org.jfree.chart.plot.Plot.equals : if $z5 == $z6 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r11 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.equals : $r11 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r12 = r2.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.equals : $r12 = r2.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z7 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12)
org.jfree.chart.plot.Plot.equals : $z7 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z7 != 0
org.jfree.chart.plot.Plot.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r13 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.equals : $r13 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r14 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.equals : $r14 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z8 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14)
org.jfree.chart.plot.Plot.equals : $z8 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z8 != 0
org.jfree.chart.plot.Plot.equals : if $z8 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r15 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.equals : $r15 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r16 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.equals : $r16 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z9 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16)
org.jfree.chart.plot.Plot.equals : $z9 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z9 != 0
org.jfree.chart.plot.Plot.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r17 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.plot.Plot.equals : $r17 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r18 = r2.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.plot.Plot.equals : $r18 = r2.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)
org.jfree.chart.plot.Plot.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z10 != 0
org.jfree.chart.plot.Plot.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $i0 = r0.<org.jfree.chart.plot.Plot: int backgroundImageAlignment>
org.jfree.chart.plot.Plot.equals : $i0 = r0.<org.jfree.chart.plot.Plot: int backgroundImageAlignment> >>>>>>>> org.jfree.chart.plot.Plot.equals : $i1 = r2.<org.jfree.chart.plot.Plot: int backgroundImageAlignment>
org.jfree.chart.plot.Plot.equals : $i1 = r2.<org.jfree.chart.plot.Plot: int backgroundImageAlignment> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $i0 == $i1
org.jfree.chart.plot.Plot.equals : if $i0 == $i1 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f0 = r0.<org.jfree.chart.plot.Plot: float backgroundImageAlpha>
org.jfree.chart.plot.Plot.equals : $f0 = r0.<org.jfree.chart.plot.Plot: float backgroundImageAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f1 = r2.<org.jfree.chart.plot.Plot: float backgroundImageAlpha>
org.jfree.chart.plot.Plot.equals : $f1 = r2.<org.jfree.chart.plot.Plot: float backgroundImageAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b2 = $f0 cmpl $f1
org.jfree.chart.plot.Plot.equals : $b2 = $f0 cmpl $f1 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b2 == 0
org.jfree.chart.plot.Plot.equals : if $b2 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f2 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.equals : $f2 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f3 = r2.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.equals : $f3 = r2.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b3 = $f2 cmpl $f3
org.jfree.chart.plot.Plot.equals : $b3 = $f2 cmpl $f3 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b3 == 0
org.jfree.chart.plot.Plot.equals : if $b3 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f4 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.equals : $f4 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f5 = r2.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.equals : $f5 = r2.<org.jfree.chart.plot.Plot: float backgroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b4 = $f4 cmpl $f5
org.jfree.chart.plot.Plot.equals : $b4 = $f4 cmpl $f5 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b4 == 0
org.jfree.chart.plot.Plot.equals : if $b4 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r19 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.equals : $r19 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r20 = r2.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.equals : $r20 = r2.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z11 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20)
org.jfree.chart.plot.Plot.equals : $z11 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if r1 != r0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z0 = r1 instanceof org.jfree.chart.plot.DefaultDrawingSupplier
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z0 = r1 instanceof org.jfree.chart.plot.DefaultDrawingSupplier >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z0 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : r2 = (org.jfree.chart.plot.DefaultDrawingSupplier) r1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : r2 = (org.jfree.chart.plot.DefaultDrawingSupplier) r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r4 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r4 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z1 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i1 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i1 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i0 == $i1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i0 == $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r6 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r6 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z2 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i3 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i3 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i2 == $i3
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i2 == $i3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r7 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r7 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r8 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r8 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z3 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i4 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i4 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i5 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i5 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i4 == $i5
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i4 == $i5 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r10 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r10 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r9, $r10)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r9, $r10) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z4 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i7 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i7 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i6 == $i7
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i6 == $i7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r12 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r12 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z5 = specialinvoke r0.<org.jfree.chart.plot.DefaultDrawingSupplier: boolean equalShapes(java.awt.Shape[],java.awt.Shape[])>($r11, $r12)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z5 = specialinvoke r0.<org.jfree.chart.plot.DefaultDrawingSupplier: boolean equalShapes(java.awt.Shape[],java.awt.Shape[])>($r11, $r12) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r1 != null
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r1 != null >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r2 != null
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r2 != null >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i1 = lengthof r1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i1 = lengthof r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i2 = lengthof r2
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i2 = lengthof r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $i1 == $i2
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $i1 == $i2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i3 = lengthof r1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i3 = lengthof r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if i0 >= $i3
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if i0 >= $i3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r3 = r1[i0]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r3 = r1[i0] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r4 = r2[i0]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r4 = r2[i0] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $z1 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r3, $r4)
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $z1 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r3, $r4) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $z1 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = i0 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : goto [?= $i3 = lengthof r1]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : goto [?= $i3 = lengthof r1] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : return 1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : return 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z5 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i9 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i9 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i8 == $i9
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i8 == $i9 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : return 1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : return 1 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z11 != 0
org.jfree.chart.plot.Plot.equals : if $z11 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z12 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.equals : $z12 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z13 = r2.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.equals : $z13 = r2.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z12 == $z13
org.jfree.chart.plot.Plot.equals : if $z12 == $z13 >>>>>>>> org.jfree.chart.plot.Plot.equals : return 1
org.jfree.chart.plot.Plot.equals : return 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : return $z48
org.jfree.chart.plot.CategoryPlot.equals : return $z48 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)>(r1, 1)
org.jfree.chart.plot.CategoryPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addAnnotation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "annotation")
org.jfree.chart.plot.CategoryPlot.addAnnotation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "annotation") >>>>>>>> org.jfree.chart.plot.CategoryPlot.addAnnotation : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations>
org.jfree.chart.plot.CategoryPlot.addAnnotation : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addAnnotation : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.addAnnotation : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addAnnotation : interfaceinvoke r1.<org.jfree.chart.annotations.CategoryAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>(r0)
org.jfree.chart.plot.CategoryPlot.addAnnotation : interfaceinvoke r1.<org.jfree.chart.annotations.CategoryAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>(r0) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : $r2 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : $r2 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AnnotationChangeListener", r1)
org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AnnotationChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addAnnotation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.addAnnotation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.equals : return 0
org.jfree.chart.plot.CategoryPlot.equals : return 0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : if r1 != r0
org.jfree.chart.annotations.CategoryLineAnnotation.equals : if r1 != r0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z0 = r1 instanceof org.jfree.chart.annotations.CategoryLineAnnotation
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z0 = r1 instanceof org.jfree.chart.annotations.CategoryLineAnnotation >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z0 != 0
org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : r2 = (org.jfree.chart.annotations.CategoryLineAnnotation) r1
org.jfree.chart.annotations.CategoryLineAnnotation.equals : r2 = (org.jfree.chart.annotations.CategoryLineAnnotation) r1 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r3 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1>
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r3 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory1()>()
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory1()>() >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.getCategory1 : $r1 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1>
org.jfree.chart.annotations.CategoryLineAnnotation.getCategory1 : $r1 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.getCategory1 : return $r1
org.jfree.chart.annotations.CategoryLineAnnotation.getCategory1 : return $r1 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z1 != 0
org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $d0 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1>
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $d0 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $d1 = virtualinvoke r2.<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue1()>()
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $d1 = virtualinvoke r2.<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue1()>() >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.getValue1 : $d0 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1>
org.jfree.chart.annotations.CategoryLineAnnotation.getValue1 : $d0 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.getValue1 : return $d0
org.jfree.chart.annotations.CategoryLineAnnotation.getValue1 : return $d0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $b0 == 0
org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r5 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2>
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r5 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r6 = virtualinvoke r2.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory2()>()
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r6 = virtualinvoke r2.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory2()>() >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.getCategory2 : $r1 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2>
org.jfree.chart.annotations.CategoryLineAnnotation.getCategory2 : $r1 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.getCategory2 : return $r1
org.jfree.chart.annotations.CategoryLineAnnotation.getCategory2 : return $r1 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z2 != 0
org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $d2 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2>
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $d2 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $d3 = virtualinvoke r2.<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue2()>()
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $d3 = virtualinvoke r2.<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue2()>() >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.getValue2 : $d0 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2>
org.jfree.chart.annotations.CategoryLineAnnotation.getValue2 : $d0 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.getValue2 : return $d0
org.jfree.chart.annotations.CategoryLineAnnotation.getValue2 : return $d0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $b1 = $d2 cmpl $d3
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $b1 == 0
org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r7 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint>
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r7 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r8 = r2.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint>
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r8 = r2.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8)
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8) >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z3 != 0
org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r9 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke>
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r9 = r0.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r10 = r2.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke>
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $r10 = r2.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.annotations.CategoryLineAnnotation.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z4 != 0
org.jfree.chart.annotations.CategoryLineAnnotation.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.annotations.CategoryLineAnnotation.equals : return 1
org.jfree.chart.annotations.CategoryLineAnnotation.equals : return 1 >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "adj")
org.jfree.chart.plot.Marker.setLabelOffsetType : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "adj") >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : r0.<org.jfree.chart.plot.Marker: org.jfree.ui.LengthAdjustmentType labelOffsetType> = r1
org.jfree.chart.plot.Marker.setLabelOffsetType : r0.<org.jfree.chart.plot.Marker: org.jfree.ui.LengthAdjustmentType labelOffsetType> = r1 >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : $r2 = new org.jfree.chart.event.MarkerChangeEvent
org.jfree.chart.plot.Marker.setLabelOffsetType : $r2 = new org.jfree.chart.event.MarkerChangeEvent >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : specialinvoke $r2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(r0)
org.jfree.chart.plot.Marker.setLabelOffsetType : specialinvoke $r2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(r0) >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : virtualinvoke r0.<org.jfree.chart.plot.Marker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($r2)
org.jfree.chart.plot.Marker.setLabelOffsetType : virtualinvoke r0.<org.jfree.chart.plot.Marker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($r2) >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Marker.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Marker.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Marker.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Marker.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : if i0 < 0
org.jfree.chart.plot.Marker.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.ui.Layer)>(0, r1, r2)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.ui.Layer)>(0, r1, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.ui.Layer,boolean)>(i0, r1, r2, 1)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.ui.Layer,boolean)>(i0, r1, r2, 1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "marker")
org.jfree.chart.plot.CategoryPlot.addDomainMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "marker") >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "layer")
org.jfree.chart.plot.CategoryPlot.addDomainMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "layer") >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r4 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r4 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : if r2 != $r4
org.jfree.chart.plot.CategoryPlot.addDomainMarker : if r2 != $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r6 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r6 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : r3 = (java.util.Collection) $r7
org.jfree.chart.plot.CategoryPlot.addDomainMarker : r3 = (java.util.Collection) $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : if r3 != null
org.jfree.chart.plot.CategoryPlot.addDomainMarker : if r3 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r8 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r8 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : r3 = $r8
org.jfree.chart.plot.CategoryPlot.addDomainMarker : r3 = $r8 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r10 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r10 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r3)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : goto [?= virtualinvoke r1.<org.jfree.chart.plot.CategoryMarker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)]
org.jfree.chart.plot.CategoryPlot.addDomainMarker : goto [?= virtualinvoke r1.<org.jfree.chart.plot.CategoryMarker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : virtualinvoke r1.<org.jfree.chart.plot.CategoryMarker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : virtualinvoke r1.<org.jfree.chart.plot.CategoryMarker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.Marker.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Marker.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Marker.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/MarkerChangeListener", r1)
org.jfree.chart.plot.Marker.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/MarkerChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : if z0 == 0
org.jfree.chart.plot.CategoryPlot.addDomainMarker : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : if r1 != null
org.jfree.chart.plot.CategoryMarker.equals : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : $z0 = r1 instanceof org.jfree.chart.plot.CategoryMarker
org.jfree.chart.plot.CategoryMarker.equals : $z0 = r1 instanceof org.jfree.chart.plot.CategoryMarker >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : if $z0 != 0
org.jfree.chart.plot.CategoryMarker.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : $z1 = specialinvoke r0.<org.jfree.chart.plot.Marker: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryMarker.equals : $z1 = specialinvoke r0.<org.jfree.chart.plot.Marker: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Marker.equals : if r1 != r0
org.jfree.chart.plot.Marker.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $z0 = r1 instanceof org.jfree.chart.plot.Marker
org.jfree.chart.plot.Marker.equals : $z0 = r1 instanceof org.jfree.chart.plot.Marker >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z0 != 0
org.jfree.chart.plot.Marker.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : r2 = (org.jfree.chart.plot.Marker) r1
org.jfree.chart.plot.Marker.equals : r2 = (org.jfree.chart.plot.Marker) r1 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r3 = r0.<org.jfree.chart.plot.Marker: java.awt.Paint paint>
org.jfree.chart.plot.Marker.equals : $r3 = r0.<org.jfree.chart.plot.Marker: java.awt.Paint paint> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r4 = r2.<org.jfree.chart.plot.Marker: java.awt.Paint paint>
org.jfree.chart.plot.Marker.equals : $r4 = r2.<org.jfree.chart.plot.Marker: java.awt.Paint paint> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z1 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r3, $r4)
org.jfree.chart.plot.Marker.equals : $z1 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r3, $r4) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z1 != 0
org.jfree.chart.plot.Marker.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r5 = r0.<org.jfree.chart.plot.Marker: java.awt.Stroke stroke>
org.jfree.chart.plot.Marker.equals : $r5 = r0.<org.jfree.chart.plot.Marker: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r6 = r2.<org.jfree.chart.plot.Marker: java.awt.Stroke stroke>
org.jfree.chart.plot.Marker.equals : $r6 = r2.<org.jfree.chart.plot.Marker: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.plot.Marker.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z2 != 0
org.jfree.chart.plot.Marker.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r7 = r0.<org.jfree.chart.plot.Marker: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Marker.equals : $r7 = r0.<org.jfree.chart.plot.Marker: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r8 = r2.<org.jfree.chart.plot.Marker: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Marker.equals : $r8 = r2.<org.jfree.chart.plot.Marker: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8)
org.jfree.chart.plot.Marker.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z3 != 0
org.jfree.chart.plot.Marker.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r9 = r0.<org.jfree.chart.plot.Marker: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Marker.equals : $r9 = r0.<org.jfree.chart.plot.Marker: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r10 = r2.<org.jfree.chart.plot.Marker: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Marker.equals : $r10 = r2.<org.jfree.chart.plot.Marker: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.plot.Marker.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z4 != 0
org.jfree.chart.plot.Marker.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $f0 = r0.<org.jfree.chart.plot.Marker: float alpha>
org.jfree.chart.plot.Marker.equals : $f0 = r0.<org.jfree.chart.plot.Marker: float alpha> >>>>>>>> org.jfree.chart.plot.Marker.equals : $f1 = r2.<org.jfree.chart.plot.Marker: float alpha>
org.jfree.chart.plot.Marker.equals : $f1 = r2.<org.jfree.chart.plot.Marker: float alpha> >>>>>>>> org.jfree.chart.plot.Marker.equals : $b0 = $f0 cmpl $f1
org.jfree.chart.plot.Marker.equals : $b0 = $f0 cmpl $f1 >>>>>>>> org.jfree.chart.plot.Marker.equals : if $b0 == 0
org.jfree.chart.plot.Marker.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r11 = r0.<org.jfree.chart.plot.Marker: java.lang.String label>
org.jfree.chart.plot.Marker.equals : $r11 = r0.<org.jfree.chart.plot.Marker: java.lang.String label> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r12 = r2.<org.jfree.chart.plot.Marker: java.lang.String label>
org.jfree.chart.plot.Marker.equals : $r12 = r2.<org.jfree.chart.plot.Marker: java.lang.String label> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z5 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12)
org.jfree.chart.plot.Marker.equals : $z5 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z5 != 0
org.jfree.chart.plot.Marker.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r13 = r0.<org.jfree.chart.plot.Marker: java.awt.Font labelFont>
org.jfree.chart.plot.Marker.equals : $r13 = r0.<org.jfree.chart.plot.Marker: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r14 = r2.<org.jfree.chart.plot.Marker: java.awt.Font labelFont>
org.jfree.chart.plot.Marker.equals : $r14 = r2.<org.jfree.chart.plot.Marker: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z6 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)
org.jfree.chart.plot.Marker.equals : $z6 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z6 != 0
org.jfree.chart.plot.Marker.equals : if $z6 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r15 = r0.<org.jfree.chart.plot.Marker: java.awt.Paint labelPaint>
org.jfree.chart.plot.Marker.equals : $r15 = r0.<org.jfree.chart.plot.Marker: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r16 = r2.<org.jfree.chart.plot.Marker: java.awt.Paint labelPaint>
org.jfree.chart.plot.Marker.equals : $r16 = r2.<org.jfree.chart.plot.Marker: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z7 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16)
org.jfree.chart.plot.Marker.equals : $z7 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z7 != 0
org.jfree.chart.plot.Marker.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r17 = r0.<org.jfree.chart.plot.Marker: org.jfree.ui.RectangleAnchor labelAnchor>
org.jfree.chart.plot.Marker.equals : $r17 = r0.<org.jfree.chart.plot.Marker: org.jfree.ui.RectangleAnchor labelAnchor> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r18 = r2.<org.jfree.chart.plot.Marker: org.jfree.ui.RectangleAnchor labelAnchor>
org.jfree.chart.plot.Marker.equals : $r18 = r2.<org.jfree.chart.plot.Marker: org.jfree.ui.RectangleAnchor labelAnchor> >>>>>>>> org.jfree.chart.plot.Marker.equals : if $r17 == $r18
org.jfree.chart.plot.Marker.equals : if $r17 == $r18 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r19 = r0.<org.jfree.chart.plot.Marker: org.jfree.ui.TextAnchor labelTextAnchor>
org.jfree.chart.plot.Marker.equals : $r19 = r0.<org.jfree.chart.plot.Marker: org.jfree.ui.TextAnchor labelTextAnchor> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r20 = r2.<org.jfree.chart.plot.Marker: org.jfree.ui.TextAnchor labelTextAnchor>
org.jfree.chart.plot.Marker.equals : $r20 = r2.<org.jfree.chart.plot.Marker: org.jfree.ui.TextAnchor labelTextAnchor> >>>>>>>> org.jfree.chart.plot.Marker.equals : if $r19 == $r20
org.jfree.chart.plot.Marker.equals : if $r19 == $r20 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r21 = r0.<org.jfree.chart.plot.Marker: org.jfree.ui.RectangleInsets labelOffset>
org.jfree.chart.plot.Marker.equals : $r21 = r0.<org.jfree.chart.plot.Marker: org.jfree.ui.RectangleInsets labelOffset> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r22 = r2.<org.jfree.chart.plot.Marker: org.jfree.ui.RectangleInsets labelOffset>
org.jfree.chart.plot.Marker.equals : $r22 = r2.<org.jfree.chart.plot.Marker: org.jfree.ui.RectangleInsets labelOffset> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z8 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r21, $r22)
org.jfree.chart.plot.Marker.equals : $z8 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r21, $r22) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z8 != 0
org.jfree.chart.plot.Marker.equals : if $z8 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : $r23 = r0.<org.jfree.chart.plot.Marker: org.jfree.ui.LengthAdjustmentType labelOffsetType>
org.jfree.chart.plot.Marker.equals : $r23 = r0.<org.jfree.chart.plot.Marker: org.jfree.ui.LengthAdjustmentType labelOffsetType> >>>>>>>> org.jfree.chart.plot.Marker.equals : $r24 = r2.<org.jfree.chart.plot.Marker: org.jfree.ui.LengthAdjustmentType labelOffsetType>
org.jfree.chart.plot.Marker.equals : $r24 = r2.<org.jfree.chart.plot.Marker: org.jfree.ui.LengthAdjustmentType labelOffsetType> >>>>>>>> org.jfree.chart.plot.Marker.equals : $z9 = virtualinvoke $r23.<org.jfree.ui.LengthAdjustmentType: boolean equals(java.lang.Object)>($r24)
org.jfree.chart.plot.Marker.equals : $z9 = virtualinvoke $r23.<org.jfree.ui.LengthAdjustmentType: boolean equals(java.lang.Object)>($r24) >>>>>>>> org.jfree.chart.plot.Marker.equals : if $z9 != 0
org.jfree.chart.plot.Marker.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.plot.Marker.equals : return 1
org.jfree.chart.plot.Marker.equals : return 1 >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : if $z1 != 0
org.jfree.chart.plot.CategoryMarker.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : r2 = (org.jfree.chart.plot.CategoryMarker) r1
org.jfree.chart.plot.CategoryMarker.equals : r2 = (org.jfree.chart.plot.CategoryMarker) r1 >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : $r3 = r0.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key>
org.jfree.chart.plot.CategoryMarker.equals : $r3 = r0.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key> >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : $r4 = r2.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key>
org.jfree.chart.plot.CategoryMarker.equals : $r4 = r2.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key> >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : $z2 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.plot.CategoryMarker.equals : $z2 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : if $z2 != 0
org.jfree.chart.plot.CategoryMarker.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : $z3 = r0.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine>
org.jfree.chart.plot.CategoryMarker.equals : $z3 = r0.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine> >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : $z4 = r2.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine>
org.jfree.chart.plot.CategoryMarker.equals : $z4 = r2.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine> >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : if $z3 == $z4
org.jfree.chart.plot.CategoryMarker.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.plot.CategoryMarker.equals : return 1
org.jfree.chart.plot.CategoryMarker.equals : return 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r12 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r12 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : if r2 != $r12
org.jfree.chart.plot.CategoryPlot.addDomainMarker : if r2 != $r12 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r14 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r14 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r14.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r14.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : r16 = (java.util.Collection) $r15
org.jfree.chart.plot.CategoryPlot.addDomainMarker : r16 = (java.util.Collection) $r15 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : if r16 != null
org.jfree.chart.plot.CategoryPlot.addDomainMarker : if r16 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r17 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r17 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : r16 = $r17
org.jfree.chart.plot.CategoryPlot.addDomainMarker : r16 = $r17 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r18 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r18 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r19 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.addDomainMarker : $r19 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r19.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : specialinvoke $r19.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r16)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r16) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addDomainMarker : interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.addDomainMarker : interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer)>(0, r1, r2)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer)>(0, r1, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer,boolean)>(i0, r1, r2, 1)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer,boolean)>(i0, r1, r2, 1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r3 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r3 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : if r2 != $r3
org.jfree.chart.plot.CategoryPlot.addRangeMarker : if r2 != $r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r6 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r6 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : r4 = (java.util.Collection) $r7
org.jfree.chart.plot.CategoryPlot.addRangeMarker : r4 = (java.util.Collection) $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : if r4 != null
org.jfree.chart.plot.CategoryPlot.addRangeMarker : if r4 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r8 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r8 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : r4 = $r8
org.jfree.chart.plot.CategoryPlot.addRangeMarker : r4 = $r8 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r10 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r10 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : goto [?= virtualinvoke r1.<org.jfree.chart.plot.Marker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)]
org.jfree.chart.plot.CategoryPlot.addRangeMarker : goto [?= virtualinvoke r1.<org.jfree.chart.plot.Marker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : virtualinvoke r1.<org.jfree.chart.plot.Marker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : virtualinvoke r1.<org.jfree.chart.plot.Marker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : if z0 == 0
org.jfree.chart.plot.CategoryPlot.addRangeMarker : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.addRangeMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : if r1 != r0
org.jfree.chart.plot.ValueMarker.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : $z0 = specialinvoke r0.<org.jfree.chart.plot.Marker: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.ValueMarker.equals : $z0 = specialinvoke r0.<org.jfree.chart.plot.Marker: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : if $z0 != 0
org.jfree.chart.plot.ValueMarker.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : $z1 = r1 instanceof org.jfree.chart.plot.ValueMarker
org.jfree.chart.plot.ValueMarker.equals : $z1 = r1 instanceof org.jfree.chart.plot.ValueMarker >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : if $z1 != 0
org.jfree.chart.plot.ValueMarker.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : r2 = (org.jfree.chart.plot.ValueMarker) r1
org.jfree.chart.plot.ValueMarker.equals : r2 = (org.jfree.chart.plot.ValueMarker) r1 >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : $d0 = r0.<org.jfree.chart.plot.ValueMarker: double value>
org.jfree.chart.plot.ValueMarker.equals : $d0 = r0.<org.jfree.chart.plot.ValueMarker: double value> >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : $d1 = r2.<org.jfree.chart.plot.ValueMarker: double value>
org.jfree.chart.plot.ValueMarker.equals : $d1 = r2.<org.jfree.chart.plot.ValueMarker: double value> >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.plot.ValueMarker.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : if $b0 == 0
org.jfree.chart.plot.ValueMarker.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.plot.ValueMarker.equals : return 1
org.jfree.chart.plot.ValueMarker.equals : return 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r12 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r12 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : if r2 != $r12
org.jfree.chart.plot.CategoryPlot.addRangeMarker : if r2 != $r12 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r14 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r14 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r14.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r14.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : r16 = (java.util.Collection) $r15
org.jfree.chart.plot.CategoryPlot.addRangeMarker : r16 = (java.util.Collection) $r15 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : if r16 != null
org.jfree.chart.plot.CategoryPlot.addRangeMarker : if r16 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r17 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r17 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : r16 = $r17
org.jfree.chart.plot.CategoryPlot.addRangeMarker : r16 = $r17 >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r18 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r18 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r19 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.addRangeMarker : $r19 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r19.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : specialinvoke $r19.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r16)
org.jfree.chart.plot.CategoryPlot.addRangeMarker : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r16) >>>>>>>> org.jfree.chart.plot.CategoryPlot.addRangeMarker : interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>(r1)
