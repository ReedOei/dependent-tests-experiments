org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : $r2 = r0.<org.jfree.data.KeyToGroupMap: java.util.List groups>
org.jfree.data.KeyToGroupMap.getGroupIndex : $r2 = r0.<org.jfree.data.KeyToGroupMap: java.util.List groups> >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.KeyToGroupMap.getGroupIndex : i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : if i0 >= 0
org.jfree.data.KeyToGroupMap.getGroupIndex : if i0 >= 0 >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : $r3 = r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable defaultGroup>
org.jfree.data.KeyToGroupMap.getGroupIndex : $r3 = r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable defaultGroup> >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.data.KeyToGroupMap.getGroupIndex : $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : if $z0 == 0
org.jfree.data.KeyToGroupMap.getGroupIndex : if $z0 == 0 >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : i0 = 0
org.jfree.data.KeyToGroupMap.getGroupIndex : i0 = 0 >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : goto [?= return i0]
org.jfree.data.KeyToGroupMap.getGroupIndex : goto [?= return i0] >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : return i0
org.jfree.data.KeyToGroupMap.getGroupIndex : return i0 >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.KeyToGroupMap.mapKeyToGroup : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : r3 = virtualinvoke r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable getGroup(java.lang.Comparable)>(r1)
org.jfree.data.KeyToGroupMap.mapKeyToGroup : r3 = virtualinvoke r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable getGroup(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.KeyToGroupMap.getGroup : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.KeyToGroupMap.getGroup : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.KeyToGroupMap.getGroup : r2 = r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable defaultGroup>
org.jfree.data.KeyToGroupMap.getGroup : r2 = r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable defaultGroup> >>>>>>>> org.jfree.data.KeyToGroupMap.getGroup : $r4 = r0.<org.jfree.data.KeyToGroupMap: java.util.Map keyToGroupMap>
org.jfree.data.KeyToGroupMap.getGroup : $r4 = r0.<org.jfree.data.KeyToGroupMap: java.util.Map keyToGroupMap> >>>>>>>> org.jfree.data.KeyToGroupMap.getGroup : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.KeyToGroupMap.getGroup : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyToGroupMap.getGroup : r3 = (java.lang.Comparable) $r5
org.jfree.data.KeyToGroupMap.getGroup : r3 = (java.lang.Comparable) $r5 >>>>>>>> org.jfree.data.KeyToGroupMap.getGroup : if r3 == null
org.jfree.data.KeyToGroupMap.getGroup : if r3 == null >>>>>>>> org.jfree.data.KeyToGroupMap.getGroup : return r2
org.jfree.data.KeyToGroupMap.getGroup : return r2 >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r4 = r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable defaultGroup>
org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r4 = r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable defaultGroup> >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.data.KeyToGroupMap.mapKeyToGroup : $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : if $z0 != 0
org.jfree.data.KeyToGroupMap.mapKeyToGroup : if $z0 != 0 >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : if r2 != null
org.jfree.data.KeyToGroupMap.mapKeyToGroup : if r2 != null >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r8 = r0.<org.jfree.data.KeyToGroupMap: java.util.List groups>
org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r8 = r0.<org.jfree.data.KeyToGroupMap: java.util.List groups> >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : $z3 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.jfree.data.KeyToGroupMap.mapKeyToGroup : $z3 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : if $z3 != 0
org.jfree.data.KeyToGroupMap.mapKeyToGroup : if $z3 != 0 >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r9 = r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable defaultGroup>
org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r9 = r0.<org.jfree.data.KeyToGroupMap: java.lang.Comparable defaultGroup> >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : $z4 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>(r2)
org.jfree.data.KeyToGroupMap.mapKeyToGroup : $z4 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : if $z4 != 0
org.jfree.data.KeyToGroupMap.mapKeyToGroup : if $z4 != 0 >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r10 = r0.<org.jfree.data.KeyToGroupMap: java.util.List groups>
org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r10 = r0.<org.jfree.data.KeyToGroupMap: java.util.List groups> >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.KeyToGroupMap.mapKeyToGroup : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r11 = r0.<org.jfree.data.KeyToGroupMap: java.util.Map keyToGroupMap>
org.jfree.data.KeyToGroupMap.mapKeyToGroup : $r11 = r0.<org.jfree.data.KeyToGroupMap: java.util.Map keyToGroupMap> >>>>>>>> org.jfree.data.KeyToGroupMap.mapKeyToGroup : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.jfree.data.KeyToGroupMap.mapKeyToGroup : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.data.KeyToGroupMap.getGroupIndex : i0 = i0 + 1
