org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r2 = $r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r2 = $r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r5 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r5 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $r5 != null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $r5 != null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : return r2
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : return r2 >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : return $i0
org.jfree.chart.LegendItemCollection.getItemCount : return $i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : return r1
org.jfree.chart.plot.CategoryPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6
org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.CategoryPlot
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.CategoryPlot >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDataset(int,org.jfree.data.category.CategoryDataset)>(0, r1)
org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDataset(int,org.jfree.data.category.CategoryDataset)>(0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.setDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.setDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : r2 = (org.jfree.data.category.CategoryDataset) $r5
org.jfree.chart.plot.CategoryPlot.setDataset : r2 = (org.jfree.data.category.CategoryDataset) $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : if r2 == null
org.jfree.chart.plot.CategoryPlot.setDataset : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.setDataset : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke $r6.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke $r6.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : if r1 == null
org.jfree.chart.plot.CategoryPlot.setDataset : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0)
org.jfree.chart.plot.CategoryPlot.setDataset : interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0) >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : $r7 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.setDataset : $r7 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : specialinvoke $r7.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r1)
org.jfree.chart.plot.CategoryPlot.setDataset : specialinvoke $r7.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : r3 = $r7
org.jfree.chart.plot.CategoryPlot.setDataset : r3 = $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r3)
org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)>(0, r1, 1)
org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)>(0, r1, 1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.setRenderer : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.setRenderer : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : r2 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r4
org.jfree.chart.plot.CategoryPlot.setRenderer : r2 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : if r2 == null
org.jfree.chart.plot.CategoryPlot.setRenderer : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.setRenderer : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke $r5.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke $r5.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : if r1 == null
org.jfree.chart.plot.CategoryPlot.setRenderer : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : interfaceinvoke r1.<org.jfree.chart.renderer.category.CategoryItemRenderer: void setPlot(org.jfree.chart.plot.CategoryPlot)>(r0)
org.jfree.chart.plot.CategoryPlot.setRenderer : interfaceinvoke r1.<org.jfree.chart.renderer.category.CategoryItemRenderer: void setPlot(org.jfree.chart.plot.CategoryPlot)>(r0) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot")
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot") >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> = r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : interfaceinvoke r1.<org.jfree.chart.renderer.category.CategoryItemRenderer: void addChangeListener(org.jfree.chart.event.RendererChangeListener)>(r0)
org.jfree.chart.plot.CategoryPlot.setRenderer : interfaceinvoke r1.<org.jfree.chart.renderer.category.CategoryItemRenderer: void addChangeListener(org.jfree.chart.event.RendererChangeListener)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1)
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void configureDomainAxes()>()
org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void configureDomainAxes()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void configureRangeAxes()>()
org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void configureRangeAxes()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setRenderer : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setRenderer : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r6 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r6 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i0 = virtualinvoke $r6.<org.jfree.chart.plot.CategoryPlot: int getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)>(r0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i0 = virtualinvoke $r6.<org.jfree.chart.plot.CategoryPlot: int getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getIndexOf : $i0 = virtualinvoke $r2.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.getIndexOf : $i0 = virtualinvoke $r2.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getIndexOf : return $i0
org.jfree.chart.plot.CategoryPlot.getIndexOf : return $i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r7 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r7 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r3 = virtualinvoke $r7.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r3 = virtualinvoke $r7.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if r3 != null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if r3 != null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i1 = interfaceinvoke r3.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i1 = interfaceinvoke r3.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r8 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r8 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r9 = virtualinvoke $r8.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder getRowRenderingOrder()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r9 = virtualinvoke $r8.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder getRowRenderingOrder()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder>
org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder : return $r1
org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder : return $r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r10 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r10 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $z0 = virtualinvoke $r9.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $z0 = virtualinvoke $r9.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $z0 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i2 = 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i2 = 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if i2 >= i1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if i2 >= i1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : goto [?= return r2]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : goto [?= return r2] >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r3 = new java.lang.Double
org.jfree.data.category.DefaultCategoryDataset.addValue : $r3 = new java.lang.Double >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.category.DefaultCategoryDataset.addValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r3, r1, r2)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r3, r1, r2) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener"
org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener" >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2]
org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5
org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1)
org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)]
org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisibleInLegend(int)>(i2)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisibleInLegend(int)>(i2) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : return z0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $z1 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r4 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>(i0, i2)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r4 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>(i0, i2) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.plot.CategoryPlot getPlot()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.plot.CategoryPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot : return $r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot : return $r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if r1 != null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if r1 != null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z3 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z3 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $z3 == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $z3 == 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z4 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean isSeriesVisibleInLegend(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z4 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean isSeriesVisibleInLegend(int)>(i1) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $z4 == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $z4 == 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r2 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r2 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r15 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator getLegendItemLabelGenerator()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r15 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator getLegendItemLabelGenerator()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemLabelGenerator : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemLabelGenerator : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemLabelGenerator : return $r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemLabelGenerator : return $r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r3 = interfaceinvoke $r15.<org.jfree.chart.labels.CategorySeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.category.CategoryDataset,int)>(r2, i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r3 = interfaceinvoke $r15.<org.jfree.chart.labels.CategorySeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.category.CategoryDataset,int)>(r2, i1) >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset")
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset") >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : $r3 = r0.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern>
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : $r3 = r0.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern> >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : $r4 = virtualinvoke r0.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.category.CategoryDataset,int)>(r1, i0)
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : $r4 = virtualinvoke r0.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.category.CategoryDataset,int)>(r1, i0) >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : r2 = newarray (java.lang.Object)[1]
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : r2 = newarray (java.lang.Object)[1] >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : $r3 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i0)
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : $r3 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i0) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i0)
org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3
org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : return $r2
org.jfree.data.category.DefaultCategoryDataset.getRowKey : return $r2 >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : r2[0] = $r4
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : r2[0] = $r4 >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : return r2
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : return r2 >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : r2 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r4)
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : r2 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r4) >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : return r2
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : return r2 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r4 = r3
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r4 = r3 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r5 = null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r5 = null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r16 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator getLegendItemToolTipGenerator()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r16 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator getLegendItemToolTipGenerator()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemToolTipGenerator : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemToolTipGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemToolTipGenerator : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemToolTipGenerator : return $r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemToolTipGenerator : return $r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $r16 == null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $r16 == null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r6 = null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r6 = null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r18 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator getLegendItemURLGenerator()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r18 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator getLegendItemURLGenerator()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemURLGenerator : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemURLGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemURLGenerator : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemURLGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemURLGenerator : return $r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemURLGenerator : return $r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $r18 == null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $r18 == null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r7 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Shape lookupLegendShape(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r7 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Shape lookupLegendShape(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getLegendShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getLegendShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList>
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : return $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape lookupSeriesShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape lookupSeriesShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getSeriesShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getSeriesShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r1 = null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r1 = null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot getPlot()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : if r2 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : if r2 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r1 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r1 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : return r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Shape getNextShape()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Shape getNextShape()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke $r2.<org.jfree.util.ShapeList: void setShape(int,java.awt.Shape)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke $r2.<org.jfree.util.ShapeList: void setShape(int,java.awt.Shape)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : return r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r8 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Paint lookupSeriesPaint(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r8 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Paint lookupSeriesPaint(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesPaint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : return r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z5 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean useFillPaint>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z5 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean useFillPaint> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $z5 == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $z5 == 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r20 = r8
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r20 = r8 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r9 = $r20
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r9 = $r20 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : z0 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean drawOutlines>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : z0 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean drawOutlines> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z6 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean useOutlinePaint>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z6 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean useOutlinePaint> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $z6 == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if $z6 == 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r21 = r8
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r21 = r8 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r10 = $r21
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r10 = $r21 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r11 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r11 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesOutlineStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesOutlineStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesOutlineStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesOutlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : return r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean getItemLineVisible(int,int)>(i1, 0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean getItemLineVisible(int,int)>(i1, 0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean linesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean linesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : if r1 != null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : if r1 != null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : r1 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean getSeriesLinesVisible(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : r1 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean getSeriesLinesVisible(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r2 = virtualinvoke $r1.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r2 = virtualinvoke $r1.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : return $r2
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : return $r2 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : if r1 == null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : if r1 == null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : $z1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean baseLinesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : $z1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean baseLinesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : return $z1
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible : return $z1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : z2 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean getItemShapeVisible(int,int)>(i1, 0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : z2 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean getItemShapeVisible(int,int)>(i1, 0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean shapesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean shapesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : if r1 != null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : if r1 != null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : r1 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean getSeriesShapesVisible(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : r1 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean getSeriesShapesVisible(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible : $r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible : $r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible : $r2 = virtualinvoke $r1.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible : $r2 = virtualinvoke $r1.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible : return $r2
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible : return $r2 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : if r1 == null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : if r1 == null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : $z1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean baseShapesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : $z1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean baseShapesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : return $z1
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible : return $z1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r22 = new org.jfree.chart.LegendItem
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r22 = new org.jfree.chart.LegendItem >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z7 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean getItemShapeFilled(int,int)>(i1, 0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $z7 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean getItemShapeFilled(int,int)>(i1, 0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean getSeriesShapesFilled(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean getSeriesShapesFilled(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : $r2 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean shapesFilled>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : $r2 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean shapesFilled> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : if $r2 == null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : if $r2 == null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : $r4 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesFilled>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : $r4 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesFilled> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : if r1 == null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : if r1 == null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : $z2 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean baseShapesFilled>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : $z2 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean baseShapesFilled> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : return $z2
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled : return $z2 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled : return $z0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled : return $z0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r12 = new java.awt.geom.Line2D$Double
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r12 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : specialinvoke $r12.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(-7.0, 0.0, 7.0, 0.0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : specialinvoke $r12.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(-7.0, 0.0, 7.0, 0.0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r23 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Stroke getItemStroke(int,int)>(i1, 0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r23 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Stroke getItemStroke(int,int)>(i1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemStroke : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke lookupSeriesStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke lookupSeriesStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Stroke getNextStroke()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Stroke getNextStroke()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemStroke : return $r1
org.jfree.chart.renderer.AbstractRenderer.getItemStroke : return $r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r24 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Paint getItemPaint(int,int)>(i1, 0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r24 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Paint getItemPaint(int,int)>(i1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemPaint : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint lookupSeriesPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint lookupSeriesPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemPaint : return $r1
org.jfree.chart.renderer.AbstractRenderer.getItemPaint : return $r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : specialinvoke $r22.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)>(r3, r4, r5, r6, z2, r7, $z7, r9, z0, r10, r11, z1, $r12, $r23, $r24)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : specialinvoke $r22.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)>(r3, r4, r5, r6, z2, r7, $z7, r9, z0, r10, r11, z1, $r12, $r23, $r24) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r13 = $r22
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r13 = $r22 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r25 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Font lookupLegendTextFont(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r25 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Font lookupLegendTextFont(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font getLegendTextFont(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font getLegendTextFont(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont>
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r3 = (java.awt.Font) $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r3 = (java.awt.Font) $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : return $r3
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : return $r3 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : return r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($r25)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($r25) >>>>>>>> org.jfree.chart.LegendItem.setLabelFont : r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> = r1
org.jfree.chart.LegendItem.setLabelFont : r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> = r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r14 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Paint lookupLegendTextPaint(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : r14 = virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.awt.Paint lookupLegendTextPaint(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getLegendTextPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getLegendTextPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : return $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : return r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if r14 == null
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : if r14 == null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(r2)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(r2) >>>>>>>> org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1
org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(i0) >>>>>>>> org.jfree.chart.LegendItem.setDatasetIndex : r0.<org.jfree.chart.LegendItem: int datasetIndex> = i0
org.jfree.chart.LegendItem.setDatasetIndex : r0.<org.jfree.chart.LegendItem: int datasetIndex> = i0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r26 = interfaceinvoke r2.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : $r26 = interfaceinvoke r2.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i1) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($r26)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($r26) >>>>>>>> org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1
org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(i1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : virtualinvoke r13.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(i1) >>>>>>>> org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0
org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : return r13
org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem : return r13 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if r4 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if r4 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r4)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r4) >>>>>>>> org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.LegendItemCollection.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i2 = i2 + 1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i2 = i2 + 1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : goto [?= (branch)]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : goto [?= (branch)] >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.LegendItemCollection.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r3 = (org.jfree.chart.LegendItem) $r2
org.jfree.chart.LegendItemCollection.get : $r3 = (org.jfree.chart.LegendItem) $r2 >>>>>>>> org.jfree.chart.LegendItemCollection.get : return $r3
org.jfree.chart.LegendItemCollection.get : return $r3 >>>>>>>> org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label>
org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label> >>>>>>>> org.jfree.chart.LegendItem.getLabel : return $r1
