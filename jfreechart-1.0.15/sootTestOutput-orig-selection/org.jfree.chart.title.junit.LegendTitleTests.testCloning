org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4
org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.plot.XYPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null
org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5
org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding") >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if $z0 == 0
org.jfree.chart.title.Title.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2
org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if i0 < 0
org.jfree.chart.title.Title.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds") >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1 >>>>>>>> org.jfree.chart.title.Title.clone : $r3 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>()
org.jfree.chart.title.Title.clone : $r3 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.block.AbstractBlock.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : r1 = (org.jfree.chart.block.AbstractBlock) $r3
org.jfree.chart.block.AbstractBlock.clone : r1 = (org.jfree.chart.block.AbstractBlock) $r3 >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r4 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.clone : $r4 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r5 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape clone(java.awt.Shape)>($r4)
org.jfree.chart.block.AbstractBlock.clone : $r5 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape clone(java.awt.Shape)>($r4) >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r6 = (java.awt.geom.Rectangle2D) $r5
org.jfree.chart.block.AbstractBlock.clone : $r6 = (java.awt.geom.Rectangle2D) $r5 >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : r1.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = $r6
org.jfree.chart.block.AbstractBlock.clone : r1.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = $r6 >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r7 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.clone : $r7 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $z0 = $r7 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.block.AbstractBlock.clone : $z0 = $r7 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : if $z0 == 0
org.jfree.chart.block.AbstractBlock.clone : if $z0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : return r1
org.jfree.chart.block.AbstractBlock.clone : return r1 >>>>>>>> org.jfree.chart.title.Title.clone : r1 = (org.jfree.chart.title.Title) $r3
org.jfree.chart.title.Title.clone : r1 = (org.jfree.chart.title.Title) $r3 >>>>>>>> org.jfree.chart.title.Title.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.chart.title.Title.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.title.Title.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.title.Title.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.title.Title.clone : r1.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.chart.title.Title.clone : r1.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.chart.title.Title.clone : return r1
org.jfree.chart.title.Title.clone : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if r1 != r0
org.jfree.chart.title.LegendTitle.equals : if r1 != r0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z0 = r1 instanceof org.jfree.chart.title.LegendTitle
org.jfree.chart.title.LegendTitle.equals : $z0 = r1 instanceof org.jfree.chart.title.LegendTitle >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z0 != 0
org.jfree.chart.title.LegendTitle.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z1 = specialinvoke r0.<org.jfree.chart.title.Title: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.LegendTitle.equals : $z1 = specialinvoke r0.<org.jfree.chart.title.Title: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.title.Title.equals : if r1 != r0
org.jfree.chart.title.Title.equals : if r1 != r0 >>>>>>>> org.jfree.chart.title.Title.equals : $z0 = r1 instanceof org.jfree.chart.title.Title
org.jfree.chart.title.Title.equals : $z0 = r1 instanceof org.jfree.chart.title.Title >>>>>>>> org.jfree.chart.title.Title.equals : if $z0 != 0
org.jfree.chart.title.Title.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.title.Title.equals : r2 = (org.jfree.chart.title.Title) r1
org.jfree.chart.title.Title.equals : r2 = (org.jfree.chart.title.Title) r1 >>>>>>>> org.jfree.chart.title.Title.equals : $z1 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.equals : $z1 = r0.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.equals : $z2 = r2.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.equals : $z2 = r2.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.equals : if $z1 == $z2
org.jfree.chart.title.Title.equals : if $z1 == $z2 >>>>>>>> org.jfree.chart.title.Title.equals : $r3 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.equals : $r3 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.equals : $r4 = r2.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.equals : $r4 = r2.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.equals : if $r3 == $r4
org.jfree.chart.title.Title.equals : if $r3 == $r4 >>>>>>>> org.jfree.chart.title.Title.equals : $r5 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.equals : $r5 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.title.Title.equals : $r6 = r2.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.equals : $r6 = r2.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.title.Title.equals : if $r5 == $r6
org.jfree.chart.title.Title.equals : if $r5 == $r6 >>>>>>>> org.jfree.chart.title.Title.equals : $r7 = r0.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.title.Title.equals : $r7 = r0.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.title.Title.equals : $r8 = r2.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.title.Title.equals : $r8 = r2.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.title.Title.equals : if $r7 == $r8
org.jfree.chart.title.Title.equals : if $r7 == $r8 >>>>>>>> org.jfree.chart.title.Title.equals : $z3 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.equals : $z3 = r0.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.equals : $z4 = r2.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.equals : $z4 = r2.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.equals : if $z3 == $z4
org.jfree.chart.title.Title.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.title.Title.equals : $z5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.Title.equals : $z5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if r1 != r0
org.jfree.chart.block.AbstractBlock.equals : if r1 != r0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z0 = r1 instanceof org.jfree.chart.block.AbstractBlock
org.jfree.chart.block.AbstractBlock.equals : $z0 = r1 instanceof org.jfree.chart.block.AbstractBlock >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z0 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : r2 = (org.jfree.chart.block.AbstractBlock) r1
org.jfree.chart.block.AbstractBlock.equals : r2 = (org.jfree.chart.block.AbstractBlock) r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r3 = r0.<org.jfree.chart.block.AbstractBlock: java.lang.String id>
org.jfree.chart.block.AbstractBlock.equals : $r3 = r0.<org.jfree.chart.block.AbstractBlock: java.lang.String id> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r4 = r2.<org.jfree.chart.block.AbstractBlock: java.lang.String id>
org.jfree.chart.block.AbstractBlock.equals : $r4 = r2.<org.jfree.chart.block.AbstractBlock: java.lang.String id> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.block.AbstractBlock.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z1 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r5 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.equals : $r5 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r6 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.equals : $r6 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.block.AbstractBlock.equals : $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.block.BlockBorder.equals : if r1 != r0
org.jfree.chart.block.BlockBorder.equals : if r1 != r0 >>>>>>>> org.jfree.chart.block.BlockBorder.equals : return 1
org.jfree.chart.block.BlockBorder.equals : return 1 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z2 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r7 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.equals : $r7 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r8 = r2.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.equals : $r8 = r2.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z3 = virtualinvoke $r7.<java.awt.geom.Rectangle2D: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.block.AbstractBlock.equals : $z3 = virtualinvoke $r7.<java.awt.geom.Rectangle2D: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z3 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r9 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.equals : $r9 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r10 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.equals : $r10 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.block.AbstractBlock.equals : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z4 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r11 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.equals : $r11 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r12 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.equals : $r12 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z5 = virtualinvoke $r11.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r12)
org.jfree.chart.block.AbstractBlock.equals : $z5 = virtualinvoke $r11.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z5 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height>
org.jfree.chart.block.AbstractBlock.equals : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $d1 = r2.<org.jfree.chart.block.AbstractBlock: double height>
org.jfree.chart.block.AbstractBlock.equals : $d1 = r2.<org.jfree.chart.block.AbstractBlock: double height> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.block.AbstractBlock.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $b0 == 0
org.jfree.chart.block.AbstractBlock.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $d2 = r0.<org.jfree.chart.block.AbstractBlock: double width>
org.jfree.chart.block.AbstractBlock.equals : $d2 = r0.<org.jfree.chart.block.AbstractBlock: double width> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $d3 = r2.<org.jfree.chart.block.AbstractBlock: double width>
org.jfree.chart.block.AbstractBlock.equals : $d3 = r2.<org.jfree.chart.block.AbstractBlock: double width> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $b1 = $d2 cmpl $d3
org.jfree.chart.block.AbstractBlock.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $b1 == 0
org.jfree.chart.block.AbstractBlock.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : return 1
org.jfree.chart.block.AbstractBlock.equals : return 1 >>>>>>>> org.jfree.chart.title.Title.equals : return $z5
org.jfree.chart.title.Title.equals : return $z5 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z1 != 0
org.jfree.chart.title.LegendTitle.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : r2 = (org.jfree.chart.title.LegendTitle) r1
org.jfree.chart.title.LegendTitle.equals : r2 = (org.jfree.chart.title.LegendTitle) r1 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r3 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.equals : $r3 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r4 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.equals : $r4 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z2 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r3, $r4)
org.jfree.chart.title.LegendTitle.equals : $z2 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r3, $r4) >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z2 != 0
org.jfree.chart.title.LegendTitle.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.title.LegendTitle.equals : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r6 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.title.LegendTitle.equals : $r6 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $r5 == $r6
org.jfree.chart.title.LegendTitle.equals : if $r5 == $r6 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r7 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendTitle.equals : $r7 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r8 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendTitle.equals : $r8 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $r7 == $r8
org.jfree.chart.title.LegendTitle.equals : if $r7 == $r8 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r9 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.title.LegendTitle.equals : $r9 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r10 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.title.LegendTitle.equals : $r10 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $r9 == $r10
org.jfree.chart.title.LegendTitle.equals : if $r9 == $r10 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r11 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.equals : $r11 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r12 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.equals : $r12 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z3 = virtualinvoke $r11.<java.awt.Font: boolean equals(java.lang.Object)>($r12)
org.jfree.chart.title.LegendTitle.equals : $z3 = virtualinvoke $r11.<java.awt.Font: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z3 != 0
org.jfree.chart.title.LegendTitle.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r13 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.equals : $r13 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r14 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.equals : $r14 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z4 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14)
org.jfree.chart.title.LegendTitle.equals : $z4 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z4 != 0
org.jfree.chart.title.LegendTitle.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r15 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.equals : $r15 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r16 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.equals : $r16 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z5 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16)
org.jfree.chart.title.LegendTitle.equals : $z5 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : if r1 != r0
org.jfree.chart.block.FlowArrangement.equals : if r1 != r0 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : return 1
org.jfree.chart.block.FlowArrangement.equals : return 1 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z5 != 0
org.jfree.chart.title.LegendTitle.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r17 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout>
org.jfree.chart.title.LegendTitle.equals : $r17 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r18 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout>
org.jfree.chart.title.LegendTitle.equals : $r18 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z6 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18)
org.jfree.chart.title.LegendTitle.equals : $z6 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : if r1 != r0
org.jfree.chart.block.ColumnArrangement.equals : if r1 != r0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : return 1
org.jfree.chart.block.ColumnArrangement.equals : return 1 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z6 != 0
org.jfree.chart.title.LegendTitle.equals : if $z6 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r19 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.equals : $r19 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r20 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.equals : $r20 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z7 = virtualinvoke $r19.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r20)
org.jfree.chart.title.LegendTitle.equals : $z7 = virtualinvoke $r19.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z7 != 0
org.jfree.chart.title.LegendTitle.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : return 1
org.jfree.chart.title.LegendTitle.equals : return 1 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : return 0
org.jfree.chart.block.AbstractBlock.equals : return 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : return 0
