org.jfree.chart.axis.LogAxis.createLogTickUnits : $r1 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r1.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r1.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : r2 = $r1
org.jfree.chart.axis.LogAxis.createLogTickUnits : r2 = $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r4 = new org.jfree.chart.util.LogFormat
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r4 = new org.jfree.chart.util.LogFormat >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r4.<org.jfree.chart.util.LogFormat: void <init>()>()
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r4.<org.jfree.chart.util.LogFormat: void <init>()>() >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : r3 = $r4
org.jfree.chart.axis.LogAxis.createLogTickUnits : r3 = $r4 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r5 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r5 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r5.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r3, 2)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r5.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r3, 2) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r5)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r5) >>>>>>>> org.jfree.chart.axis.TickUnits.add : if r1 != null
org.jfree.chart.axis.TickUnits.add : if r1 != null >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4)
org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r6 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r6 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r6.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r6.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r6)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r6) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0
org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : return $d0
org.jfree.chart.axis.TickUnit.getSize : return $d0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 1 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r7 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r7 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r7.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.2, r3, 2)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r7.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.2, r3, 2) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r7)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r7) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r8 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r8 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r8.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r3, 5)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r8.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r3, 5) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r8)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r8) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r9 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r9 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r9.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r9.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r9)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r9) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r10 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r10 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r10.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r10.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r11 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r11 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(3.0, r3, 15)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(3.0, r3, 15) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r11)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r11) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r12 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r12 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(4.0, r3, 20)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(4.0, r3, 20) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r12)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r12) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r13 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r13 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r13.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r3, 25)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r13.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r3, 25) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r13)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r13) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r14 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r14 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r14.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(6.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r14.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(6.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r14)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r14) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r15 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r15 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r15.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(7.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r15.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(7.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r15)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r15) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r16 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r16 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(8.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(8.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r16)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r16) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r17 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r17 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r17.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(9.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r17.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(9.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r17)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r17) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r18 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r18 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(10.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(10.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : return r2
org.jfree.chart.axis.LogAxis.createLogTickUnits : return r2 >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> = r1
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : $r2 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2)
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2
org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0
org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicks : $r5 = new java.util.ArrayList
org.jfree.chart.axis.LogAxis.refreshTicks : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicks : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.LogAxis.refreshTicks : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicks : r6 = $r5
org.jfree.chart.axis.LogAxis.refreshTicks : r6 = $r5 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.LogAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicks : if $z0 == 0
org.jfree.chart.axis.LogAxis.refreshTicks : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.LogAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4) >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : r4 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : r4 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : return $r1
org.jfree.chart.axis.ValueAxis.getRange : return $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $r9 = new java.util.ArrayList
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $r9 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : r5 = $r9
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : r5 = $r9 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : return $r1
org.jfree.chart.axis.Axis.getTickLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6) >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $r10 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $r10 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if r3 != $r10
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if r3 != $r10 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : r7 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor BOTTOM_CENTER>
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : r7 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor BOTTOM_CENTER> >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : goto [?= $z1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isAutoTickUnitSelection()>()]
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : goto [?= $z1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isAutoTickUnitSelection()>()] >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $z1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $z1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isAutoTickUnitSelection()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if $z1 == 0
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : virtualinvoke r0.<org.jfree.chart.axis.LogAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : virtualinvoke r0.<org.jfree.chart.axis.LogAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.axis.LogAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3) >>>>>>>> org.jfree.chart.axis.LogAxis.selectAutoTickUnit : if $z0 == 0
org.jfree.chart.axis.LogAxis.selectAutoTickUnit : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.LogAxis: void selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.LogAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.LogAxis: void selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.LogAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.LogAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.LogAxis.getTickUnit : return $r1
org.jfree.chart.axis.LogAxis.getTickUnit : return $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, $r7)
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, $r7) >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1
org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $d5 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $d5 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getLeft()>() >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $d6 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $d6 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getRight()>() >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d0 = $d5 + $d6
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d0 = $d5 + $d6 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $z0 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $z0 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels> >>>>>>>> org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : return $z0
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : return $z0 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : if $z0 == 0
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $r10 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $r10 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r11 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r10)
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r11 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r10) >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r12 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r12 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d1 = virtualinvoke r12.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d1 = virtualinvoke r12.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d2 = virtualinvoke r12.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d2 = virtualinvoke r12.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r6 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: java.text.NumberFormat getNumberFormatOverride()>()
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r6 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: java.text.NumberFormat getNumberFormatOverride()>() >>>>>>>> org.jfree.chart.axis.LogAxis.getNumberFormatOverride : $r1 = r0.<org.jfree.chart.axis.LogAxis: java.text.NumberFormat numberFormatOverride>
org.jfree.chart.axis.LogAxis.getNumberFormatOverride : $r1 = r0.<org.jfree.chart.axis.LogAxis: java.text.NumberFormat numberFormatOverride> >>>>>>>> org.jfree.chart.axis.LogAxis.getNumberFormatOverride : return $r1
org.jfree.chart.axis.LogAxis.getNumberFormatOverride : return $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : if r6 == null
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : if r6 == null >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r7 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d1)
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r7 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d1) >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter>
org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter> >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>(d0)
org.jfree.chart.axis.NumberTickUnit.valueToString : $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>(d0) >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : return $r2
org.jfree.chart.axis.NumberTickUnit.valueToString : return $r2 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r8 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d2)
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : r8 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d2) >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $i0 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r7)
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $i0 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r7) >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d3 = (double) $i0
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d3 = (double) $i0 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $i1 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r8)
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $i1 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r8) >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d4 = (double) $i1
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d4 = (double) $i1 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $d9 = staticinvoke <java.lang.Math: double max(double,double)>(d3, d4)
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : $d9 = staticinvoke <java.lang.Math: double max(double,double)>(d3, d4) >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d8 = d0 + $d9
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : d8 = d0 + $d9 >>>>>>>> org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : return d8
org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth : return d8 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>()
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits>
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits> >>>>>>>> org.jfree.chart.axis.ValueAxis.getStandardTickUnits : return $r1
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : return $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $r8 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $r8 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r8)
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r8) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3
org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return -1
org.jfree.chart.axis.TickUnit.compareTo : return -1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 0
org.jfree.chart.axis.TickUnit.compareTo : return 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r5 = (org.jfree.chart.axis.TickUnit) $r4
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r5 = (org.jfree.chart.axis.TickUnit) $r4 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r5
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r5 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d4, r2, r3)
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d4, r2, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateValue(double)>(1.0)
org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateValue(double)>(1.0) >>>>>>>> org.jfree.chart.axis.LogAxis.calculateValue : $d1 = r0.<org.jfree.chart.axis.LogAxis: double base>
org.jfree.chart.axis.LogAxis.calculateValue : $d1 = r0.<org.jfree.chart.axis.LogAxis: double base> >>>>>>>> org.jfree.chart.axis.LogAxis.calculateValue : $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, d0)
org.jfree.chart.axis.LogAxis.calculateValue : $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, d0) >>>>>>>> org.jfree.chart.axis.LogAxis.calculateValue : return $d2
org.jfree.chart.axis.LogAxis.calculateValue : return $d2 >>>>>>>> org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d3, r1, r2)
org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d3, r1, r2) >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d5 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : $d5 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d5)
org.jfree.chart.axis.LogAxis.valueToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d5) >>>>>>>> org.jfree.chart.axis.LogAxis.calculateLog : $d1 = staticinvoke <java.lang.Math: double log(double)>(d0)
org.jfree.chart.axis.LogAxis.calculateLog : $d1 = staticinvoke <java.lang.Math: double log(double)>(d0) >>>>>>>> org.jfree.chart.axis.LogAxis.calculateLog : $d2 = r0.<org.jfree.chart.axis.LogAxis: double baseLog>
org.jfree.chart.axis.LogAxis.calculateLog : $d2 = r0.<org.jfree.chart.axis.LogAxis: double baseLog> >>>>>>>> org.jfree.chart.axis.LogAxis.calculateLog : $d3 = $d1 / $d2
org.jfree.chart.axis.LogAxis.calculateLog : $d3 = $d1 / $d2 >>>>>>>> org.jfree.chart.axis.LogAxis.calculateLog : return $d3
org.jfree.chart.axis.LogAxis.calculateLog : return $d3 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d6 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : $d6 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d6)
org.jfree.chart.axis.LogAxis.valueToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d6) >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d7 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>(d0)
org.jfree.chart.axis.LogAxis.valueToJava2D : d7 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>(d0) >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d3 = 0.0
org.jfree.chart.axis.LogAxis.valueToJava2D : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d4 = 0.0
org.jfree.chart.axis.LogAxis.valueToJava2D : d4 = 0.0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.LogAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : if $z0 == 0
org.jfree.chart.axis.LogAxis.valueToJava2D : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : goto [?= $z2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isInverted()>()]
org.jfree.chart.axis.LogAxis.valueToJava2D : goto [?= $z2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isInverted()>()] >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isInverted()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isInverted()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted> >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : return $z0
org.jfree.chart.axis.ValueAxis.isInverted : return $z0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : if $z2 == 0
org.jfree.chart.axis.LogAxis.valueToJava2D : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d14 = d7 - d1
org.jfree.chart.axis.LogAxis.valueToJava2D : $d14 = d7 - d1 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d15 = d2 - d1
org.jfree.chart.axis.LogAxis.valueToJava2D : $d15 = d2 - d1 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d16 = $d14 / $d15
org.jfree.chart.axis.LogAxis.valueToJava2D : $d16 = $d14 / $d15 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d17 = d4 - d3
org.jfree.chart.axis.LogAxis.valueToJava2D : $d17 = d4 - d3 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d18 = $d16 * $d17
org.jfree.chart.axis.LogAxis.valueToJava2D : $d18 = $d16 * $d17 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d19 = d3 + $d18
org.jfree.chart.axis.LogAxis.valueToJava2D : $d19 = d3 + $d18 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : return $d19
org.jfree.chart.axis.LogAxis.valueToJava2D : return $d19 >>>>>>>> org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d4 = d0 + 1.0
org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d4 = d0 + 1.0 >>>>>>>> org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d5 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateValue(double)>($d4)
org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d5 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateValue(double)>($d4) >>>>>>>> org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d5, r1, r2)
org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d5, r1, r2) >>>>>>>> org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d6 = d2 - d1
org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d6 = d2 - d1 >>>>>>>> org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d7 = staticinvoke <java.lang.Math: double abs(double)>($d6)
org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : $d7 = staticinvoke <java.lang.Math: double abs(double)>($d6) >>>>>>>> org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : return $d7
org.jfree.chart.axis.LogAxis.exponentLengthToJava2D : return $d7 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $d5 = d0 / d1
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $d5 = d0 / d1 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $d6 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $d6 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d2 = $d5 * $d6
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d2 = $d5 * $d6 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $r9 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2)
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $r9 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : specialinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(d0, $r2)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : specialinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(d0, $r2) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = virtualinvoke r0.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = virtualinvoke r0.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r1) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r3
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r3 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : r6 = (org.jfree.chart.axis.NumberTickUnit) $r9
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : r6 = (org.jfree.chart.axis.NumberTickUnit) $r9 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r2, r3)
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r2, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, r6)
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, r6) >>>>>>>> org.jfree.chart.util.LogFormat.format : $r3 = new java.lang.StringBuffer
org.jfree.chart.util.LogFormat.format : $r3 = new java.lang.StringBuffer >>>>>>>> org.jfree.chart.util.LogFormat.format : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()
org.jfree.chart.util.LogFormat.format : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.jfree.chart.util.LogFormat.format : r4 = $r3
org.jfree.chart.util.LogFormat.format : r4 = $r3 >>>>>>>> org.jfree.chart.util.LogFormat.format : $z0 = r0.<org.jfree.chart.util.LogFormat: boolean showBase>
org.jfree.chart.util.LogFormat.format : $z0 = r0.<org.jfree.chart.util.LogFormat: boolean showBase> >>>>>>>> org.jfree.chart.util.LogFormat.format : if $z0 == 0
org.jfree.chart.util.LogFormat.format : if $z0 == 0 >>>>>>>> org.jfree.chart.util.LogFormat.format : $r5 = r0.<org.jfree.chart.util.LogFormat: java.lang.String baseLabel>
org.jfree.chart.util.LogFormat.format : $r5 = r0.<org.jfree.chart.util.LogFormat: java.lang.String baseLabel> >>>>>>>> org.jfree.chart.util.LogFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5)
org.jfree.chart.util.LogFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5) >>>>>>>> org.jfree.chart.util.LogFormat.format : $r7 = r0.<org.jfree.chart.util.LogFormat: java.lang.String powerLabel>
org.jfree.chart.util.LogFormat.format : $r7 = r0.<org.jfree.chart.util.LogFormat: java.lang.String powerLabel> >>>>>>>> org.jfree.chart.util.LogFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
org.jfree.chart.util.LogFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7) >>>>>>>> org.jfree.chart.util.LogFormat.format : $r9 = r0.<org.jfree.chart.util.LogFormat: java.text.NumberFormat formatter>
org.jfree.chart.util.LogFormat.format : $r9 = r0.<org.jfree.chart.util.LogFormat: java.text.NumberFormat formatter> >>>>>>>> org.jfree.chart.util.LogFormat.format : $d1 = specialinvoke r0.<org.jfree.chart.util.LogFormat: double calculateLog(double)>(d0)
org.jfree.chart.util.LogFormat.format : $d1 = specialinvoke r0.<org.jfree.chart.util.LogFormat: double calculateLog(double)>(d0) >>>>>>>> org.jfree.chart.util.LogFormat.calculateLog : $d1 = staticinvoke <java.lang.Math: double log(double)>(d0)
org.jfree.chart.util.LogFormat.calculateLog : $d1 = staticinvoke <java.lang.Math: double log(double)>(d0) >>>>>>>> org.jfree.chart.util.LogFormat.calculateLog : $d2 = r0.<org.jfree.chart.util.LogFormat: double baseLog>
org.jfree.chart.util.LogFormat.calculateLog : $d2 = r0.<org.jfree.chart.util.LogFormat: double baseLog> >>>>>>>> org.jfree.chart.util.LogFormat.calculateLog : $d3 = $d1 / $d2
org.jfree.chart.util.LogFormat.calculateLog : $d3 = $d1 / $d2 >>>>>>>> org.jfree.chart.util.LogFormat.calculateLog : return $d3
org.jfree.chart.util.LogFormat.calculateLog : return $d3 >>>>>>>> org.jfree.chart.util.LogFormat.format : $r10 = virtualinvoke $r9.<java.text.NumberFormat: java.lang.String format(double)>($d1)
org.jfree.chart.util.LogFormat.format : $r10 = virtualinvoke $r9.<java.text.NumberFormat: java.lang.String format(double)>($d1) >>>>>>>> org.jfree.chart.util.LogFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10)
org.jfree.chart.util.LogFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10) >>>>>>>> org.jfree.chart.util.LogFormat.format : return r4
org.jfree.chart.util.LogFormat.format : return r4 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $b0 = d8 cmpl d3
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : $b0 = d8 cmpl d3 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : if $b0 <= 0
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.LogAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0)
org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.LogAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0) >>>>>>>> org.jfree.chart.axis.LogAxis.setTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit")
org.jfree.chart.axis.LogAxis.setTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit") >>>>>>>> org.jfree.chart.axis.LogAxis.setTickUnit : r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> = r1
org.jfree.chart.axis.LogAxis.setTickUnit : r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> = r1 >>>>>>>> org.jfree.chart.axis.LogAxis.setTickUnit : if z1 == 0
org.jfree.chart.axis.LogAxis.setTickUnit : if z1 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.setTickUnit : if z0 == 0
org.jfree.chart.axis.LogAxis.setTickUnit : if z0 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.selectAutoTickUnit : goto [?= return]
org.jfree.chart.axis.LogAxis.selectAutoTickUnit : goto [?= return] >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $r11 = r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $r11 = r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : i0 = virtualinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : i0 = virtualinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount>
org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount> >>>>>>>> org.jfree.chart.axis.TickUnit.getMinorTickCount : return $i0
org.jfree.chart.axis.TickUnit.getMinorTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d6 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double getLowerBound()>()
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d6 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getLowerBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.ValueAxis.getLowerBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : return $d0
org.jfree.chart.axis.ValueAxis.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d7 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d6)
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d7 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d6) >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : d0 = staticinvoke <java.lang.Math: double floor(double)>($d7)
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : d0 = staticinvoke <java.lang.Math: double floor(double)>($d7) >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d8 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double getUpperBound()>()
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d8 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getUpperBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.ValueAxis.getUpperBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperBound : return $d0
org.jfree.chart.axis.ValueAxis.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d9 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d8)
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d9 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d8) >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : d1 = staticinvoke <java.lang.Math: double ceil(double)>($d9)
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : d1 = staticinvoke <java.lang.Math: double ceil(double)>($d9) >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : d2 = d0
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : d2 = d0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $r12 = r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $r12 = r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d10 = virtualinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $d10 = virtualinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $b2 = $d10 cmpl 0.0
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $b2 = $d10 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if $b2 <= 0
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if $b2 <= 0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0)
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0) >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if $z2 != 0
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if $z2 != 0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $z3 = 0
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : $z3 = 0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : z0 = $z3
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : z0 = $z3 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if z0 == 0
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : if z0 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : return r5
org.jfree.chart.axis.LogAxis.refreshTicksHorizontal : return r5 >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicks : goto [?= return r6]
org.jfree.chart.axis.LogAxis.refreshTicks : goto [?= return r6] >>>>>>>> org.jfree.chart.axis.LogAxis.refreshTicks : return r6
