org.jfree.chart.block.AbstractBlock.setWidth : r0.<org.jfree.chart.block.AbstractBlock: double width> = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.setHeight : r0.<org.jfree.chart.block.AbstractBlock: double height> = d0
org.jfree.chart.block.AbstractBlock.setHeight : r0.<org.jfree.chart.block.AbstractBlock: double height> = d0 >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null)
org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2)
org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2) >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.GridArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.GridArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.GridArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : if r4 != $r6
org.jfree.chart.block.GridArrangement.arrange : if r4 != $r6 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.GridArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : if r4 != $r13
org.jfree.chart.block.GridArrangement.arrange : if r4 != $r13 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.GridArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : if r4 != $r20
org.jfree.chart.block.GridArrangement.arrange : if r4 != $r20 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.GridArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : if r5 != $r21
org.jfree.chart.block.GridArrangement.arrange : if r5 != $r21 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.GridArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : if r5 != $r23
org.jfree.chart.block.GridArrangement.arrange : if r5 != $r23 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.GridArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : if r5 != $r25
org.jfree.chart.block.GridArrangement.arrange : if r5 != $r25 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.block.GridArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $r4 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.GridArrangement.arrangeRR : $r4 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : r5 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, $r4)
org.jfree.chart.block.GridArrangement.arrangeRR : r5 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, $r4) >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.GridArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : if r5 != $r7
org.jfree.chart.block.GridArrangement.arrange : if r5 != $r7 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.GridArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d0 = 0.0
org.jfree.chart.block.GridArrangement.arrangeNN : d0 = 0.0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d1 = 0.0
org.jfree.chart.block.GridArrangement.arrangeNN : d1 = 0.0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.GridArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.chart.block.BlockContainer.getBlocks : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : return $r2
org.jfree.chart.block.BlockContainer.getBlocks : return $r2 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.block.GridArrangement.arrangeNN : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.GridArrangement.arrangeNN : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : if $z0 == 0
org.jfree.chart.block.GridArrangement.arrangeNN : if $z0 == 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.GridArrangement.arrangeNN : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r9
org.jfree.chart.block.GridArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r9 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : if r5 == null
org.jfree.chart.block.GridArrangement.arrangeNN : if r5 == null >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.GridArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r7 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6)
org.jfree.chart.block.GridArrangement.arrangeNN : r7 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6) >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.block.EmptyBlock.arrange : $r3 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $d0 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double getWidth()>()
org.jfree.chart.block.EmptyBlock.arrange : $d0 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double getWidth()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getWidth : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double width>
org.jfree.chart.block.AbstractBlock.getWidth : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double width> >>>>>>>> org.jfree.chart.block.AbstractBlock.getWidth : return $d0
org.jfree.chart.block.AbstractBlock.getWidth : return $d0 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double calculateTotalWidth(double)>($d0)
org.jfree.chart.block.EmptyBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double calculateTotalWidth(double)>($d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : return $r1
org.jfree.chart.block.BlockBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $d2 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double getHeight()>()
org.jfree.chart.block.EmptyBlock.arrange : $d2 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double getHeight()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getHeight : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height>
org.jfree.chart.block.AbstractBlock.getHeight : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height> >>>>>>>> org.jfree.chart.block.AbstractBlock.getHeight : return $d0
org.jfree.chart.block.AbstractBlock.getHeight : return $d0 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double calculateTotalHeight(double)>($d2)
org.jfree.chart.block.EmptyBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double calculateTotalHeight(double)>($d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3)
org.jfree.chart.block.EmptyBlock.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3) >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : r4 = $r3
org.jfree.chart.block.EmptyBlock.arrange : r4 = $r3 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $r5 = virtualinvoke r2.<org.jfree.chart.block.RectangleConstraint: org.jfree.ui.Size2D calculateConstrainedSize(org.jfree.ui.Size2D)>(r4)
org.jfree.chart.block.EmptyBlock.arrange : $r5 = virtualinvoke r2.<org.jfree.chart.block.RectangleConstraint: org.jfree.ui.Size2D calculateConstrainedSize(org.jfree.ui.Size2D)>(r4) >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r2 = new org.jfree.ui.Size2D
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r2 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : specialinvoke $r2.<org.jfree.ui.Size2D: void <init>()>()
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : specialinvoke $r2.<org.jfree.ui.Size2D: void <init>()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3 = $r2
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3 = $r2 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r4 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r4 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r5 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r5 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r4 != $r5
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r4 != $r5 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d0 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d0 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3.<org.jfree.ui.Size2D: double width> = $d0
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3.<org.jfree.ui.Size2D: double width> = $d0 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r6 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r6 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r6 != $r7
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r6 != $r7 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d1 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d1 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3.<org.jfree.ui.Size2D: double height> = $d1
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3.<org.jfree.ui.Size2D: double height> = $d1 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : goto [?= return r3]
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : goto [?= return r3] >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : return r3
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : return r3 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : return $r5
org.jfree.chart.block.EmptyBlock.arrange : return $r5 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $d3 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.GridArrangement.arrangeNN : $d3 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, $d3)
org.jfree.chart.block.GridArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, $d3) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $d4 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.GridArrangement.arrangeNN : $d4 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d4)
org.jfree.chart.block.GridArrangement.arrangeNN : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d4) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.block.GridArrangement.arrangeNN : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $i0 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeNN : $i0 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $d5 = (double) $i0
org.jfree.chart.block.GridArrangement.arrangeNN : $d5 = (double) $i0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d6 = $d5 * d0
org.jfree.chart.block.GridArrangement.arrangeNN : d6 = $d5 * d0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $i1 = r0.<org.jfree.chart.block.GridArrangement: int rows>
org.jfree.chart.block.GridArrangement.arrangeNN : $i1 = r0.<org.jfree.chart.block.GridArrangement: int rows> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $d7 = (double) $i1
org.jfree.chart.block.GridArrangement.arrangeNN : $d7 = (double) $i1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d2 = $d7 * d1
org.jfree.chart.block.GridArrangement.arrangeNN : d2 = $d7 * d1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $r10 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.GridArrangement.arrangeNN : $r10 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : specialinvoke $r10.<org.jfree.chart.block.RectangleConstraint: void <init>(double,double)>(d6, d2)
org.jfree.chart.block.GridArrangement.arrangeNN : specialinvoke $r10.<org.jfree.chart.block.RectangleConstraint: void <init>(double,double)>(d6, d2) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r8 = $r10
org.jfree.chart.block.GridArrangement.arrangeNN : r8 = $r10 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $r11 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r8)
org.jfree.chart.block.GridArrangement.arrangeNN : $r11 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r8) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d2 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.GridArrangement.arrangeFF : $d2 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getWidth()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : return $d0
org.jfree.chart.block.RectangleConstraint.getWidth : return $d0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i3 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeFF : $i3 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d3 = (double) $i3
org.jfree.chart.block.GridArrangement.arrangeFF : $d3 = (double) $i3 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : d0 = $d2 / $d3
org.jfree.chart.block.GridArrangement.arrangeFF : d0 = $d2 / $d3 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.GridArrangement.arrangeFF : $d4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : return $d0
org.jfree.chart.block.RectangleConstraint.getHeight : return $d0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i4 = r0.<org.jfree.chart.block.GridArrangement: int rows>
org.jfree.chart.block.GridArrangement.arrangeFF : $i4 = r0.<org.jfree.chart.block.GridArrangement: int rows> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d5 = (double) $i4
org.jfree.chart.block.GridArrangement.arrangeFF : $d5 = (double) $i4 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : d1 = $d4 / $d5
org.jfree.chart.block.GridArrangement.arrangeFF : d1 = $d4 / $d5 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.GridArrangement.arrangeFF : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : i0 = 0
org.jfree.chart.block.GridArrangement.arrangeFF : i0 = 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeFF : $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : if i0 >= $i5
org.jfree.chart.block.GridArrangement.arrangeFF : if i0 >= $i5 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : i1 = 0
org.jfree.chart.block.GridArrangement.arrangeFF : i1 = 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i6 = r0.<org.jfree.chart.block.GridArrangement: int rows>
org.jfree.chart.block.GridArrangement.arrangeFF : $i6 = r0.<org.jfree.chart.block.GridArrangement: int rows> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : if i1 >= $i6
org.jfree.chart.block.GridArrangement.arrangeFF : if i1 >= $i6 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i7 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeFF : $i7 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i8 = i1 * $i7
org.jfree.chart.block.GridArrangement.arrangeFF : $i8 = i1 * $i7 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : i2 = $i8 + i0
org.jfree.chart.block.GridArrangement.arrangeFF : i2 = $i8 + i0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i9 = interfaceinvoke r4.<java.util.List: int size()>()
org.jfree.chart.block.GridArrangement.arrangeFF : $i9 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : if i2 < $i9
org.jfree.chart.block.GridArrangement.arrangeFF : if i2 < $i9 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $r6 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2)
org.jfree.chart.block.GridArrangement.arrangeFF : $r6 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : r5 = (org.jfree.chart.block.Block) $r6
org.jfree.chart.block.GridArrangement.arrangeFF : r5 = (org.jfree.chart.block.Block) $r6 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : if r5 == null
org.jfree.chart.block.GridArrangement.arrangeFF : if r5 == null >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $r7 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.GridArrangement.arrangeFF : $r7 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d6 = (double) i0
org.jfree.chart.block.GridArrangement.arrangeFF : $d6 = (double) i0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d7 = $d6 * d0
org.jfree.chart.block.GridArrangement.arrangeFF : $d7 = $d6 * d0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d8 = (double) i1
org.jfree.chart.block.GridArrangement.arrangeFF : $d8 = (double) i1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d9 = $d8 * d1
org.jfree.chart.block.GridArrangement.arrangeFF : $d9 = $d8 * d1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : specialinvoke $r7.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d7, $d9, d0, d1)
org.jfree.chart.block.GridArrangement.arrangeFF : specialinvoke $r7.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d7, $d9, d0, d1) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : interfaceinvoke r5.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r7)
org.jfree.chart.block.GridArrangement.arrangeFF : interfaceinvoke r5.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r7) >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds") >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : i1 = i1 + 1
org.jfree.chart.block.GridArrangement.arrangeFF : i1 = i1 + 1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : goto [?= $i6 = r0.<org.jfree.chart.block.GridArrangement: int rows>]
org.jfree.chart.block.GridArrangement.arrangeFF : goto [?= $i6 = r0.<org.jfree.chart.block.GridArrangement: int rows>] >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : i0 = i0 + 1
org.jfree.chart.block.GridArrangement.arrangeFF : i0 = i0 + 1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : goto [?= $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns>]
org.jfree.chart.block.GridArrangement.arrangeFF : goto [?= $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns>] >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $r8 = new org.jfree.ui.Size2D
org.jfree.chart.block.GridArrangement.arrangeFF : $r8 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i10 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeFF : $i10 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d10 = (double) $i10
org.jfree.chart.block.GridArrangement.arrangeFF : $d10 = (double) $i10 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d11 = $d10 * d0
org.jfree.chart.block.GridArrangement.arrangeFF : $d11 = $d10 * d0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $i11 = r0.<org.jfree.chart.block.GridArrangement: int rows>
org.jfree.chart.block.GridArrangement.arrangeFF : $i11 = r0.<org.jfree.chart.block.GridArrangement: int rows> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d12 = (double) $i11
org.jfree.chart.block.GridArrangement.arrangeFF : $d12 = (double) $i11 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : $d13 = $d12 * d1
org.jfree.chart.block.GridArrangement.arrangeFF : $d13 = $d12 * d1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : specialinvoke $r8.<org.jfree.ui.Size2D: void <init>(double,double)>($d11, $d13)
org.jfree.chart.block.GridArrangement.arrangeFF : specialinvoke $r8.<org.jfree.ui.Size2D: void <init>(double,double)>($d11, $d13) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeFF : return $r8
org.jfree.chart.block.GridArrangement.arrangeFF : return $r8 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : return $r11
org.jfree.chart.block.GridArrangement.arrangeNN : return $r11 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : return $r8
org.jfree.chart.block.GridArrangement.arrange : return $r8 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $r8 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.GridArrangement.arrangeRR : $r8 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.GridArrangement.arrangeRR : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $z0 = virtualinvoke $r8.<org.jfree.data.Range: boolean contains(double)>($d1)
org.jfree.chart.block.GridArrangement.arrangeRR : $z0 = virtualinvoke $r8.<org.jfree.data.Range: boolean contains(double)>($d1) >>>>>>>> org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.contains : $b0 = d0 cmpl $d1
org.jfree.data.Range.contains : $b0 = d0 cmpl $d1 >>>>>>>> org.jfree.data.Range.contains : if $b0 < 0
org.jfree.data.Range.contains : if $b0 < 0 >>>>>>>> org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.contains : $b1 = d0 cmpg $d2
org.jfree.data.Range.contains : $b1 = d0 cmpg $d2 >>>>>>>> org.jfree.data.Range.contains : if $b1 > 0
org.jfree.data.Range.contains : if $b1 > 0 >>>>>>>> org.jfree.data.Range.contains : $z0 = 0
org.jfree.data.Range.contains : $z0 = 0 >>>>>>>> org.jfree.data.Range.contains : return $z0
org.jfree.data.Range.contains : return $z0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : if $z0 == 0
org.jfree.chart.block.GridArrangement.arrangeRR : if $z0 == 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $r13 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.GridArrangement.arrangeRR : $r13 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $d5 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.GridArrangement.arrangeRR : $d5 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $z2 = virtualinvoke $r13.<org.jfree.data.Range: boolean contains(double)>($d5)
org.jfree.chart.block.GridArrangement.arrangeRR : $z2 = virtualinvoke $r13.<org.jfree.data.Range: boolean contains(double)>($d5) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : if $z2 == 0
org.jfree.chart.block.GridArrangement.arrangeRR : if $z2 == 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $r18 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.GridArrangement.arrangeRR : $r18 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $d9 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.GridArrangement.arrangeRR : $d9 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : d10 = virtualinvoke $r18.<org.jfree.data.Range: double constrain(double)>($d9)
org.jfree.chart.block.GridArrangement.arrangeRR : d10 = virtualinvoke $r18.<org.jfree.data.Range: double constrain(double)>($d9) >>>>>>>> org.jfree.data.Range.constrain : d1 = d0
org.jfree.data.Range.constrain : d1 = d0 >>>>>>>> org.jfree.data.Range.constrain : $z0 = virtualinvoke r0.<org.jfree.data.Range: boolean contains(double)>(d0)
org.jfree.data.Range.constrain : $z0 = virtualinvoke r0.<org.jfree.data.Range: boolean contains(double)>(d0) >>>>>>>> org.jfree.data.Range.constrain : if $z0 != 0
org.jfree.data.Range.constrain : if $z0 != 0 >>>>>>>> org.jfree.data.Range.constrain : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.constrain : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.constrain : $b0 = d0 cmpl $d2
org.jfree.data.Range.constrain : $b0 = d0 cmpl $d2 >>>>>>>> org.jfree.data.Range.constrain : if $b0 <= 0
org.jfree.data.Range.constrain : if $b0 <= 0 >>>>>>>> org.jfree.data.Range.constrain : d1 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.constrain : d1 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.constrain : goto [?= return d1]
org.jfree.data.Range.constrain : goto [?= return d1] >>>>>>>> org.jfree.data.Range.constrain : return d1
org.jfree.data.Range.constrain : return d1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $r19 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.GridArrangement.arrangeRR : $r19 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $d11 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.GridArrangement.arrangeRR : $d11 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : d12 = virtualinvoke $r19.<org.jfree.data.Range: double constrain(double)>($d11)
org.jfree.chart.block.GridArrangement.arrangeRR : d12 = virtualinvoke $r19.<org.jfree.data.Range: double constrain(double)>($d11) >>>>>>>> org.jfree.data.Range.constrain : $d3 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.constrain : $d3 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.constrain : $b1 = d0 cmpg $d3
org.jfree.data.Range.constrain : $b1 = d0 cmpg $d3 >>>>>>>> org.jfree.data.Range.constrain : if $b1 >= 0
org.jfree.data.Range.constrain : if $b1 >= 0 >>>>>>>> org.jfree.data.Range.constrain : d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.constrain : d1 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $r20 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.GridArrangement.arrangeRR : $r20 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : specialinvoke $r20.<org.jfree.chart.block.RectangleConstraint: void <init>(double,double)>(d10, d12)
org.jfree.chart.block.GridArrangement.arrangeRR : specialinvoke $r20.<org.jfree.chart.block.RectangleConstraint: void <init>(double,double)>(d10, d12) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : r7 = $r20
org.jfree.chart.block.GridArrangement.arrangeRR : r7 = $r20 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : $r21 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r7)
org.jfree.chart.block.GridArrangement.arrangeRR : $r21 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r7) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeRR : return $r21
org.jfree.chart.block.GridArrangement.arrangeRR : return $r21 >>>>>>>> org.jfree.chart.block.GridArrangement.arrange : return $r26
org.jfree.chart.block.GridArrangement.arrange : return $r26 >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : return $r4
