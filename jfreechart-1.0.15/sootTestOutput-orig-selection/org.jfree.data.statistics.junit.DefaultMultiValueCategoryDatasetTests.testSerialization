org.jfree.data.general.AbstractDataset.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.AbstractDataset.readObject : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.AbstractDataset.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.data.general.AbstractDataset.readObject : r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void registerValidation(java.io.ObjectInputValidation,int)>(r0, 10)
org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void registerValidation(java.io.ObjectInputValidation,int)>(r0, 10) >>>>>>>> org.jfree.data.general.AbstractDataset.validateObject : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void fireDatasetChanged()>()
org.jfree.data.general.AbstractDataset.validateObject : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : if r1 != r0
org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : if r1 != r0 >>>>>>>> org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : $z0 = r1 instanceof org.jfree.data.statistics.DefaultMultiValueCategoryDataset
org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : $z0 = r1 instanceof org.jfree.data.statistics.DefaultMultiValueCategoryDataset >>>>>>>> org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : if $z0 != 0
org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : if $z0 != 0 >>>>>>>> org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : r2 = (org.jfree.data.statistics.DefaultMultiValueCategoryDataset) r1
org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : r2 = (org.jfree.data.statistics.DefaultMultiValueCategoryDataset) r1 >>>>>>>> org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : $r3 = r0.<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : $r3 = r0.<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : $r4 = r2.<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : $r4 = r2.<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : $z1 = virtualinvoke $r3.<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>($r4)
org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : $z1 = virtualinvoke $r3.<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.KeyedObjects2D.equals : if r1 != r0
org.jfree.data.KeyedObjects2D.equals : if r1 != r0 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $z0 = r1 instanceof org.jfree.data.KeyedObjects2D
org.jfree.data.KeyedObjects2D.equals : $z0 = r1 instanceof org.jfree.data.KeyedObjects2D >>>>>>>> org.jfree.data.KeyedObjects2D.equals : if $z0 != 0
org.jfree.data.KeyedObjects2D.equals : if $z0 != 0 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : r2 = (org.jfree.data.KeyedObjects2D) r1
org.jfree.data.KeyedObjects2D.equals : r2 = (org.jfree.data.KeyedObjects2D) r1 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $r5 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: java.util.List getRowKeys()>()
org.jfree.data.KeyedObjects2D.equals : $r5 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: java.util.List getRowKeys()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getRowKeys : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.getRowKeys : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getRowKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.data.KeyedObjects2D.getRowKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getRowKeys : return $r2
org.jfree.data.KeyedObjects2D.getRowKeys : return $r2 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $r6 = virtualinvoke r2.<org.jfree.data.KeyedObjects2D: java.util.List getRowKeys()>()
org.jfree.data.KeyedObjects2D.equals : $r6 = virtualinvoke r2.<org.jfree.data.KeyedObjects2D: java.util.List getRowKeys()>() >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $z1 = interfaceinvoke $r5.<java.util.List: boolean equals(java.lang.Object)>($r6)
org.jfree.data.KeyedObjects2D.equals : $z1 = interfaceinvoke $r5.<java.util.List: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.KeyedObjects2D.equals : if $z1 != 0
org.jfree.data.KeyedObjects2D.equals : if $z1 != 0 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $r7 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: java.util.List getColumnKeys()>()
org.jfree.data.KeyedObjects2D.equals : $r7 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: java.util.List getColumnKeys()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnKeys : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.getColumnKeys : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.data.KeyedObjects2D.getColumnKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnKeys : return $r2
org.jfree.data.KeyedObjects2D.getColumnKeys : return $r2 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $r8 = virtualinvoke r2.<org.jfree.data.KeyedObjects2D: java.util.List getColumnKeys()>()
org.jfree.data.KeyedObjects2D.equals : $r8 = virtualinvoke r2.<org.jfree.data.KeyedObjects2D: java.util.List getColumnKeys()>() >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $z2 = interfaceinvoke $r7.<java.util.List: boolean equals(java.lang.Object)>($r8)
org.jfree.data.KeyedObjects2D.equals : $z2 = interfaceinvoke $r7.<java.util.List: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.data.KeyedObjects2D.equals : if $z2 != 0
org.jfree.data.KeyedObjects2D.equals : if $z2 != 0 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: int getRowCount()>()
org.jfree.data.KeyedObjects2D.equals : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: int getRowCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.getRowCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.KeyedObjects2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : return $i0
org.jfree.data.KeyedObjects2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $i4 = virtualinvoke r2.<org.jfree.data.KeyedObjects2D: int getRowCount()>()
org.jfree.data.KeyedObjects2D.equals : $i4 = virtualinvoke r2.<org.jfree.data.KeyedObjects2D: int getRowCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.equals : if i0 == $i4
org.jfree.data.KeyedObjects2D.equals : if i0 == $i4 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : i1 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: int getColumnCount()>()
org.jfree.data.KeyedObjects2D.equals : i1 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: int getColumnCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.getColumnCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.KeyedObjects2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : return $i0
org.jfree.data.KeyedObjects2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : $i5 = virtualinvoke r2.<org.jfree.data.KeyedObjects2D: int getColumnCount()>()
org.jfree.data.KeyedObjects2D.equals : $i5 = virtualinvoke r2.<org.jfree.data.KeyedObjects2D: int getColumnCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.equals : if i1 == $i5
org.jfree.data.KeyedObjects2D.equals : if i1 == $i5 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : i2 = 0
org.jfree.data.KeyedObjects2D.equals : i2 = 0 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : if i2 >= i0
org.jfree.data.KeyedObjects2D.equals : if i2 >= i0 >>>>>>>> org.jfree.data.KeyedObjects2D.equals : return 1
org.jfree.data.KeyedObjects2D.equals : return 1 >>>>>>>> org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals : return $z1
