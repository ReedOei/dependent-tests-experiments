org.jfree.data.category.DefaultCategoryDataset.addValue : $r3 = new java.lang.Double >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.category.DefaultCategoryDataset.addValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r3, r1, r2)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r3, r1, r2) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r0 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r0 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r1 = $r0
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r1 = $r0 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r15.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r15.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r2 = $r15
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r2 = $r15 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r3 = $r16
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r3 = $r16 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r17.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r17.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r4 = $r17
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r4 = $r17 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r18.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r18.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r5 = $r18
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r5 = $r18 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r19.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r19.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r6 = $r19
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r6 = $r19 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r20.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r20.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r7 = $r20
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r7 = $r20 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r21.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r21.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r8 = $r21
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r8 = $r21 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r22.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r22.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r9 = $r22
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r9 = $r22 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r23.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r23.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r10 = $r23
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r10 = $r23 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r24.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r24.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r11 = $r24
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r11 = $r24 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r25.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r25.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r12 = $r25
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r12 = $r25 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r13 = $r26
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r13 = $r26 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r27.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,###,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r27.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,###,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r14 = $r27
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r14 = $r27 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-9, r3, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-9, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28) >>>>>>>> org.jfree.chart.axis.TickUnits.add : if r1 != null
org.jfree.chart.axis.TickUnits.add : if r1 != null >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4)
org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-8, r4, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-8, r4, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0
org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : return $d0
org.jfree.chart.axis.TickUnit.getSize : return $d0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-7, r5, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-7, r5, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-6, r6, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-6, r6, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-5, r7, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-5, r7, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-4, r8, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-4, r8, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.001, r9, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.001, r9, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.01, r10, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.01, r10, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r11, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r11, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r37.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r37.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r37)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r37) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r38.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r38.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r39.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r39.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r39)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r39) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r40.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r40.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r40)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r40) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r41.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r41.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r42.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r42.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r42)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r42) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r43.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r43.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r43)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r43) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r44.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r44.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r45.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r45.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r45)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r45) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r46.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r46.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r46)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r46) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r47.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r47.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r48.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E11, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r48.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E11, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r48)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r48) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r49.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-9, r2, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r49.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-9, r2, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r49)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r49) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3
org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return -1
org.jfree.chart.axis.TickUnit.compareTo : return -1 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r50.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-8, r3, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r50.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-8, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r51.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-7, r4, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r51.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-7, r4, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r51)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r51) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r52.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-6, r5, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r52.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-6, r5, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r52)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r52) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r53.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-5, r6, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r53.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-5, r6, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r54.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-4, r7, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r54.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-4, r7, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r54)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r54) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r55.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.0025, r8, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r55.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.0025, r8, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r55)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r55) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r56.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.025, r9, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r56.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.025, r9, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r57.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.25, r10, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r57.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.25, r10, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r57)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r57) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r58.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5, r11, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r58.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5, r11, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r58)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r58) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r59.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r59.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r60.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r60.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r60)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r60) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r61.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r61.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r61)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r61) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r62.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r62.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r63.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r63.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r63)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r63) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r64.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500000.0, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r64.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500000.0, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r64)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r64) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r65.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E7, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r65.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E7, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r66.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E8, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r66.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E8, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r66)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r66) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r67.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E9, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r67.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E9, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r67)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r67) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r68.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E10, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r68.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E10, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r69.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E11, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r69.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E11, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r69)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r69) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r70.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-9, r3, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r70.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-9, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r70)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r70) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r71.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-8, r4, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r71.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-8, r4, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r72.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-7, r5, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r72.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-7, r5, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r72)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r72) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r73.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-6, r6, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r73.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-6, r6, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r73)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r73) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r74.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-5, r7, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r74.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-5, r7, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r75.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-4, r8, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r75.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-4, r8, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r75)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r75) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r76.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.005, r9, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r76.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.005, r9, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r76)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r76) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r77.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r10, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r77.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r10, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r78.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r11, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r78.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r11, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r78)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r78) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r79.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r79.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r79)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r79) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r80.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r80.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r81.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r81.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r81)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r81) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r82.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r82.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r82)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r82) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r83.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r83.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r84.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r84.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r84)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r84) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r85.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r85.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r85)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r85) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r86.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r86.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r87.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r87.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r87)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r87) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r88.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r88.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r88)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r88) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r89.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E10, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r89.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E10, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r90.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E11, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r90.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E11, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r90)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r90) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r5 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r5 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i0 = $r5.<java.awt.Rectangle: int width>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i0 = $r5.<java.awt.Rectangle: int width> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r6 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r6 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i1 = $r6.<java.awt.Rectangle: int height>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i1 = $r6.<java.awt.Rectangle: int height> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r7 = new java.awt.geom.GeneralPath
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r7 = new java.awt.geom.GeneralPath >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r7.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r7.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : r4 = $r7
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : r4 = $r7 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r8 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r8 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r8.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,java.awt.Paint,java.awt.Paint,int,int)>(r0, r4, r2, r3, i0, i1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r8.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,java.awt.Paint,java.awt.Paint,int,int)>(r0, r4, r2, r3, i0, i1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : return $r8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : return $r8 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r3 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r3 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i0 = $r3.<java.awt.Rectangle: int width>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i0 = $r3.<java.awt.Rectangle: int width> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r4 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r4 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i1 = $r4.<java.awt.Rectangle: int height>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i1 = $r4.<java.awt.Rectangle: int height> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r5 = new java.awt.geom.GeneralPath
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r5 = new java.awt.geom.GeneralPath >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r5.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r5.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : r2 = $r5
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : r2 = $r5 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r6 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r6 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r6.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,boolean,boolean,int,int)>(r0, r2, z0, z1, i0, i1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r6.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,boolean,boolean,int,int)>(r0, r2, z0, z1, i0, i1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : return $r6
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : return $r6 >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot")
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot") >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> = r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1)
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : return r1
org.jfree.chart.plot.CategoryPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6
org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1
org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1 >>>>>>>> org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>()
org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>() >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1)
org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>()
org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0
org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : if $z0 == 0
org.jfree.chart.axis.NumberAxis.configure : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>()
org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.axis.Axis.getPlot : return $r1
org.jfree.chart.axis.Axis.getPlot : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z0 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : r2 = null
org.jfree.chart.plot.CategoryPlot.getDataRange : r2 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : $r7 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.getDataRange : $r7 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : specialinvoke $r7.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.getDataRange : specialinvoke $r7.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : r3 = $r7
org.jfree.chart.plot.CategoryPlot.getDataRange : r3 = $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getDataRange : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : i0 = virtualinvoke $r8.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.getDataRange : i0 = virtualinvoke $r8.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : if i0 < 0
org.jfree.chart.plot.CategoryPlot.getDataRange : if i0 < 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : $r9 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List datasetsMappedToRangeAxis(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDataRange : $r9 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List datasetsMappedToRangeAxis(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r1 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r1 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r5 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : r3 = $r5
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : r3 = $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $i2 = virtualinvoke $r6.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $i2 = virtualinvoke $r6.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : if i1 >= $i2
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : if i1 >= $i2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r8 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r8 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : specialinvoke $r8.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : specialinvoke $r8.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r9 = virtualinvoke $r7.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r8)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r9 = virtualinvoke $r7.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : r4 = (java.util.List) $r9
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : r4 = (java.util.List) $r9 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : if r4 != null
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : if r4 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $z2 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $z2 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : if $z2 == 0
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r14 = virtualinvoke $r13.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r14 = virtualinvoke $r13.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : goto [?= $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : goto [?= $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : return r3
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : return r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r9)
org.jfree.chart.plot.CategoryPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : goto [?= r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()]
org.jfree.chart.plot.CategoryPlot.getDataRange : goto [?= r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.getDataRange : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.getDataRange : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : if $z2 == 0
org.jfree.chart.plot.CategoryPlot.getDataRange : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CategoryPlot.getDataRange : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : r5 = (org.jfree.data.category.CategoryDataset) $r12
org.jfree.chart.plot.CategoryPlot.getDataRange : r5 = (org.jfree.data.category.CategoryDataset) $r12 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRendererForDataset(org.jfree.data.category.CategoryDataset)>(r5)
org.jfree.chart.plot.CategoryPlot.getDataRange : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRendererForDataset(org.jfree.data.category.CategoryDataset)>(r5) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : r2 = null
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : r2 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : i0 = 0
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $i1 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $i1 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : if $r5 != r1
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : if $r5 != r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r7 = virtualinvoke $r6.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r7 = virtualinvoke $r6.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : r2 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r7
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : r2 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : goto [?= return r2]
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : goto [?= return r2] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRendererForDataset : return r2
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : return r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : if r6 == null
org.jfree.chart.plot.CategoryPlot.getDataRange : if r6 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : $r13 = interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>(r5)
org.jfree.chart.plot.CategoryPlot.getDataRange : $r13 = interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>(r5) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if r1 != null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if $z1 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r3 = new java.util.ArrayList
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r3 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : r2 = $r3
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : r2 = $r3 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i1 = 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if i1 >= i0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if $z2 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r4 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r4 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i1) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i0)
org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3
org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : return $r2
org.jfree.data.category.DefaultCategoryDataset.getRowKey : return $r2 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i1 = i1 + 1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : goto [?= (branch)]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>(r1, r2, z0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>(r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : n0 = null
org.jfree.data.general.DatasetUtilities.findRangeBounds : n0 = null >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.category.CategoryRangeInfo
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.category.CategoryRangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>(r0, r1, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r28 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r28 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r30 = (java.lang.Comparable) $r29
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r30 = (java.lang.Comparable) $r29 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowIndex(java.lang.Comparable)>(r30)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowIndex(java.lang.Comparable)>(r30) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $r2 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $r2 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $i0 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $i0 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r31 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i10, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r31 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i10, i11) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1)
org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5
org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null
org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7
org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0
org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2)
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : return r1
org.jfree.data.DefaultKeyedValues2D.getValue : return r1 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2
org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r31 == null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r31 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d13 = virtualinvoke r31.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d13 = virtualinvoke r31.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z17 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d13)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z17 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d13) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z17 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z17 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d13)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d13) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d13)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d13) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z16 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z16 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r32 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r32 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r32.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r32.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r32
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r32 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : return r3
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r3 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : return $r5
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : return $r5 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : return $r2
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : return $r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r13)
org.jfree.chart.plot.CategoryPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r13) >>>>>>>> org.jfree.data.Range.combine : if r0 != null
org.jfree.data.Range.combine : if r0 != null >>>>>>>> org.jfree.data.Range.combine : return r1
org.jfree.data.Range.combine : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CategoryPlot.getDataRange : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataRange : return r2
org.jfree.chart.plot.CategoryPlot.getDataRange : return r2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r5 = <org.jfree.data.RangeType: org.jfree.data.RangeType POSITIVE>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r5 = <org.jfree.data.RangeType: org.jfree.data.RangeType POSITIVE> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r4 != $r5
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r4 != $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r7 = <org.jfree.data.RangeType: org.jfree.data.RangeType NEGATIVE>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r7 = <org.jfree.data.RangeType: org.jfree.data.RangeType NEGATIVE> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r6 != $r7
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r6 != $r7 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : return $z0
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z1 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange>
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.getFixedAutoRange : return $d0
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b0 <= 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> >>>>>>>> org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : return $d0
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b1 >= 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero>
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : return $z0
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z2 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b5 > 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b5 > 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin>
org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperMargin : return $d0
org.jfree.chart.axis.ValueAxis.getUpperMargin : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d14 = $d13 * d2
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d14 = $d13 * d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = d0 + $d14
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = d0 + $d14 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b6 < 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b6 < 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin>
org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerMargin : return $d0
org.jfree.chart.axis.ValueAxis.getLowerMargin : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d16 = $d15 * d2
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d16 = $d15 * d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d17 = d1 - $d16
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d17 = d1 - $d16 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d17)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d17) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : goto [?= $r12 = new org.jfree.data.Range]
org.jfree.chart.axis.NumberAxis.autoAdjustRange : goto [?= $r12 = new org.jfree.data.Range] >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>(d7, d0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>(d7, d0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, 0, 0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, 0, 0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void configure()>()
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void configure()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1)
org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding") >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin") >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame") >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if $z0 == 0
org.jfree.chart.title.Title.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2
org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if i0 < 0
org.jfree.chart.title.Title.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.setPosition : if $r2 == r1
org.jfree.chart.title.Title.setPosition : if $r2 == r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3)
org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3) >>>>>>>> org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1)
org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1) >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : $r2 = virtualinvoke r0.<org.jfree.chart.JFreeChart: java.awt.image.BufferedImage createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)>(i0, i1, 2, r1)
org.jfree.chart.JFreeChart.createBufferedImage : $r2 = virtualinvoke r0.<org.jfree.chart.JFreeChart: java.awt.image.BufferedImage createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)>(i0, i1, 2, r1) >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : $r2 = new java.awt.image.BufferedImage
org.jfree.chart.JFreeChart.createBufferedImage : $r2 = new java.awt.image.BufferedImage >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : specialinvoke $r2.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i1, i2)
org.jfree.chart.JFreeChart.createBufferedImage : specialinvoke $r2.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i1, i2) >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : r3 = $r2
org.jfree.chart.JFreeChart.createBufferedImage : r3 = $r2 >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : r4 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>()
org.jfree.chart.JFreeChart.createBufferedImage : r4 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : $r5 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createBufferedImage : $r5 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : $d0 = (double) i0
org.jfree.chart.JFreeChart.createBufferedImage : $d0 = (double) i0 >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : $d1 = (double) i1
org.jfree.chart.JFreeChart.createBufferedImage : $d1 = (double) i1 >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : specialinvoke $r5.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1)
org.jfree.chart.JFreeChart.createBufferedImage : specialinvoke $r5.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1) >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : virtualinvoke r0.<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>(r4, $r5, null, r1)
org.jfree.chart.JFreeChart.createBufferedImage : virtualinvoke r0.<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>(r4, $r5, null, r1) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r5.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 1, 0)
org.jfree.chart.JFreeChart.draw : specialinvoke $r5.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 1, 0) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r5)
org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r5) >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners> >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2
org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0
org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : r6 = null
org.jfree.chart.JFreeChart.draw : r6 = null >>>>>>>> org.jfree.chart.JFreeChart.draw : if r4 == null
org.jfree.chart.JFreeChart.draw : if r4 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : if r6 == null
org.jfree.chart.JFreeChart.draw : if r6 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints>
org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>($r15)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>($r15) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r16 == null
org.jfree.chart.JFreeChart.draw : if $r16 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage>
org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r18 == null
org.jfree.chart.JFreeChart.draw : if $r18 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>()
org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>() >>>>>>>> org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible>
org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible> >>>>>>>> org.jfree.chart.JFreeChart.isBorderVisible : return $z0
org.jfree.chart.JFreeChart.isBorderVisible : return $z0 >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z1 == 0
org.jfree.chart.JFreeChart.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.JFreeChart.draw : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : r28 = $r27
org.jfree.chart.JFreeChart.draw : r28 = $r27 >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke $r29.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r28)
org.jfree.chart.JFreeChart.draw : virtualinvoke $r29.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r28) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r30 == null
org.jfree.chart.JFreeChart.draw : if $r30 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles> >>>>>>>> org.jfree.chart.JFreeChart.draw : r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.JFreeChart.draw : r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z4 == 0
org.jfree.chart.JFreeChart.draw : if $z4 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : r40 = (org.jfree.chart.title.Title) $r39
org.jfree.chart.JFreeChart.draw : r40 = (org.jfree.chart.title.Title) $r39 >>>>>>>> org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>() >>>>>>>> org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.isVisible : return $z0
org.jfree.chart.title.Title.isVisible : return $z0 >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z5 == 0
org.jfree.chart.JFreeChart.draw : if $z5 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $z6 = 0
org.jfree.chart.JFreeChart.draw : $z6 = 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : r11 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r40, r1, r28, $z6)
org.jfree.chart.JFreeChart.draw : r11 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r40, r1, r28, $z6) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t")
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t") >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area")
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area") >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.getPosition : return $r1
org.jfree.chart.title.Title.getPosition : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $b0 > 0
org.jfree.chart.JFreeChart.drawTitle : if $b0 > 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $b1 > 0
org.jfree.chart.JFreeChart.drawTitle : if $b1 > 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r5 = new org.jfree.data.Range
org.jfree.chart.JFreeChart.drawTitle : $r5 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r5.<org.jfree.data.Range: void <init>(double,double)>(0.0, d0)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r5.<org.jfree.data.Range: void <init>(double,double)>(0.0, d0) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.JFreeChart.drawTitle : $r12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r13 = new org.jfree.data.Range
org.jfree.chart.JFreeChart.drawTitle : $r13 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r13.<org.jfree.data.Range: void <init>(double,double)>(0.0, d1)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r13.<org.jfree.data.Range: void <init>(double,double)>(0.0, d1) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.JFreeChart.drawTitle : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r11.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r5, $r12, d1, $r13, $r14)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r11.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r5, $r12, d1, $r13, $r14) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r6 = $r11
org.jfree.chart.JFreeChart.drawTitle : r6 = $r11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : n0 = null
org.jfree.chart.JFreeChart.drawTitle : n0 = null >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams
org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r15.<org.jfree.chart.block.BlockParams: void <init>()>()
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r15.<org.jfree.chart.block.BlockParams: void <init>()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r7 = $r15
org.jfree.chart.JFreeChart.drawTitle : r7 = $r15 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0) >>>>>>>> org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0
org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if r4 != $r16
org.jfree.chart.JFreeChart.drawTitle : if r4 != $r16 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if r4 != $r20
org.jfree.chart.JFreeChart.drawTitle : if r4 != $r20 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>()>()
org.jfree.chart.title.LegendTitle.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4 = $r3
org.jfree.chart.title.LegendTitle.arrange : r4 = $r3 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>()
org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void clear()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z0 == 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r4.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($r5)
org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r4.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($r5) >>>>>>>> org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement")
org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement") >>>>>>>> org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1
org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r9 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r9 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $z1 = virtualinvoke $r8.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r9)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z1 = virtualinvoke $r8.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z1 == 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $i2 = lengthof $r10
org.jfree.chart.title.LegendTitle.fetchLegendItems : $i2 = lengthof $r10 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if i0 >= $i2
org.jfree.chart.title.LegendTitle.fetchLegendItems : if i0 >= $i2 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r12 = $r11[i0]
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r12 = $r11[i0] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.CategoryPlot.getLegendItems : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : if $r4 == null
org.jfree.chart.plot.CategoryPlot.getLegendItems : if $r4 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : $r6 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.CategoryPlot.getLegendItems : $r6 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : specialinvoke $r6.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.plot.CategoryPlot.getLegendItems : specialinvoke $r6.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : r1 = $r6
org.jfree.chart.plot.CategoryPlot.getLegendItems : r1 = $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getLegendItems : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : i0 = virtualinvoke $r7.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getLegendItems : i0 = virtualinvoke $r7.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : i1 = 0
org.jfree.chart.plot.CategoryPlot.getLegendItems : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.getLegendItems : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i1)
org.jfree.chart.plot.CategoryPlot.getLegendItems : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : if r2 == null
org.jfree.chart.plot.CategoryPlot.getLegendItems : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : r3 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i1)
org.jfree.chart.plot.CategoryPlot.getLegendItems : r3 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : r1 = null
org.jfree.chart.plot.CategoryPlot.getRenderer : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.getRenderer : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getRenderer : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : if $i1 <= i0
org.jfree.chart.plot.CategoryPlot.getRenderer : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.getRenderer : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRenderer : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : r1 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r4
org.jfree.chart.plot.CategoryPlot.getRenderer : r1 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : return r1
org.jfree.chart.plot.CategoryPlot.getRenderer : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : if r3 == null
org.jfree.chart.plot.CategoryPlot.getLegendItems : if r3 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : $r8 = interfaceinvoke r3.<org.jfree.chart.renderer.category.CategoryItemRenderer: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.plot.CategoryPlot.getLegendItems : $r8 = interfaceinvoke r3.<org.jfree.chart.renderer.category.CategoryItemRenderer: org.jfree.chart.LegendItemCollection getLegendItems()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r2 = $r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r2 = $r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r5 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r5 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $r5 != null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $r5 != null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r6 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r6 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i0 = virtualinvoke $r6.<org.jfree.chart.plot.CategoryPlot: int getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)>(r0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i0 = virtualinvoke $r6.<org.jfree.chart.plot.CategoryPlot: int getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getIndexOf : $i0 = virtualinvoke $r2.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.getIndexOf : $i0 = virtualinvoke $r2.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getIndexOf : return $i0
org.jfree.chart.plot.CategoryPlot.getIndexOf : return $i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r7 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r7 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r3 = virtualinvoke $r7.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r3 = virtualinvoke $r7.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if r3 != null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if r3 != null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i1 = interfaceinvoke r3.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i1 = interfaceinvoke r3.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r8 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r8 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r9 = virtualinvoke $r8.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder getRowRenderingOrder()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r9 = virtualinvoke $r8.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder getRowRenderingOrder()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder>
org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder : return $r1
org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder : return $r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r10 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $r10 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $z0 = virtualinvoke $r9.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $z0 = virtualinvoke $r9.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $z0 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i2 = 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i2 = 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if i2 >= i1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if i2 >= i1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisibleInLegend(int)>(i2)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisibleInLegend(int)>(i2) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : return z0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $z1 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r4 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>(i0, i2)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : r4 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>(i0, i2) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot getPlot()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot : return $r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot : return $r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if r1 != null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if r1 != null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if $z0 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisibleInLegend(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisibleInLegend(int)>(i1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if $z1 != 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if $z1 != 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r2 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r2 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r13 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r13 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r3 = interfaceinvoke $r13.<org.jfree.chart.labels.CategorySeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.category.CategoryDataset,int)>(r2, i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r3 = interfaceinvoke $r13.<org.jfree.chart.labels.CategorySeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.category.CategoryDataset,int)>(r2, i1) >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset")
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset") >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : $r3 = r0.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern>
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : $r3 = r0.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern> >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : $r4 = virtualinvoke r0.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.category.CategoryDataset,int)>(r1, i0)
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : $r4 = virtualinvoke r0.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.category.CategoryDataset,int)>(r1, i0) >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : r2 = newarray (java.lang.Object)[1]
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : r2 = newarray (java.lang.Object)[1] >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : $r3 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i0)
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : $r3 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i0) >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : r2[0] = $r4
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : r2[0] = $r4 >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : return r2
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray : return r2 >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : r2 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r4)
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : r2 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r4) >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : return r2
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel : return r2 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r4 = r3
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r4 = r3 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r5 = null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r5 = null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r14 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemToolTipGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r14 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if $r14 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if $r14 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r6 = null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r6 = null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r16 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemURLGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r16 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemURLGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if $r16 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if $r16 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r7 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Shape lookupLegendShape(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r7 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Shape lookupLegendShape(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getLegendShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getLegendShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList>
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : return $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape lookupSeriesShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape lookupSeriesShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getSeriesShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getSeriesShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r1 = null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r1 = null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot getPlot()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : if r2 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : if r2 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r1 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : r1 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : return r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Shape getNextShape()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Shape getNextShape()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke $r2.<org.jfree.util.ShapeList: void setShape(int,java.awt.Shape)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke $r2.<org.jfree.util.ShapeList: void setShape(int,java.awt.Shape)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : return r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r8 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Paint lookupSeriesPaint(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r8 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Paint lookupSeriesPaint(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesPaint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : return r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r9 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Paint lookupSeriesOutlinePaint(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r9 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Paint lookupSeriesOutlinePaint(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesOutlinePaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesOutlinePaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlinePaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlinePaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlinePaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlinePaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlinePaint : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlinePaint : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesOutlinePaint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesOutlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint : return r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r10 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r10 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesOutlineStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesOutlineStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesOutlineStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesOutlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke : return r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r18 = new org.jfree.chart.LegendItem
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r18 = new org.jfree.chart.LegendItem >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : specialinvoke $r18.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>(r3, r4, r5, r6, r7, r8, r10, r9)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : specialinvoke $r18.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>(r3, r4, r5, r6, r7, r8, r10, r9) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r11 = $r18
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r11 = $r18 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r19 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Font lookupLegendTextFont(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r19 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Font lookupLegendTextFont(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font getLegendTextFont(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font getLegendTextFont(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont>
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r3 = (java.awt.Font) $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r3 = (java.awt.Font) $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : return $r3
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : return $r3 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : return r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($r19)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($r19) >>>>>>>> org.jfree.chart.LegendItem.setLabelFont : r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> = r1
org.jfree.chart.LegendItem.setLabelFont : r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> = r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r12 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Paint lookupLegendTextPaint(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : r12 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.awt.Paint lookupLegendTextPaint(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getLegendTextPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getLegendTextPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : return $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : return r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if r12 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : if r12 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r20 = interfaceinvoke r2.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : $r20 = interfaceinvoke r2.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($r20)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($r20) >>>>>>>> org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1
org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(i1) >>>>>>>> org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0
org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(r2)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(r2) >>>>>>>> org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1
org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(i0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : virtualinvoke r11.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(i0) >>>>>>>> org.jfree.chart.LegendItem.setDatasetIndex : r0.<org.jfree.chart.LegendItem: int datasetIndex> = i0
org.jfree.chart.LegendItem.setDatasetIndex : r0.<org.jfree.chart.LegendItem: int datasetIndex> = i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : return r11
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem : return r11 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if r4 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : if r4 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r4)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r4) >>>>>>>> org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.LegendItemCollection.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i2 = i2 + 1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : i2 = i2 + 1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : goto [?= (branch)]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : goto [?= return r2]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : goto [?= return r2] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : return r2
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems : return r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : virtualinvoke r1.<org.jfree.chart.LegendItemCollection: void addAll(org.jfree.chart.LegendItemCollection)>($r8)
org.jfree.chart.plot.CategoryPlot.getLegendItems : virtualinvoke r1.<org.jfree.chart.LegendItemCollection: void addAll(org.jfree.chart.LegendItemCollection)>($r8) >>>>>>>> org.jfree.chart.LegendItemCollection.addAll : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.addAll : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.addAll : $r3 = r1.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.addAll : $r3 = r1.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.addAll : interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3)
org.jfree.chart.LegendItemCollection.addAll : interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.getLegendItems : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.getLegendItems : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getLegendItems : return r1
org.jfree.chart.plot.CategoryPlot.getLegendItems : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null
org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : return $i0
org.jfree.chart.LegendItemCollection.getItemCount : return $i0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if i1 >= $i3
org.jfree.chart.title.LegendTitle.fetchLegendItems : if i1 >= $i3 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1) >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.LegendItemCollection.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r3 = (org.jfree.chart.LegendItem) $r2
org.jfree.chart.LegendItemCollection.get : $r3 = (org.jfree.chart.LegendItem) $r2 >>>>>>>> org.jfree.chart.LegendItemCollection.get : return $r3
org.jfree.chart.LegendItemCollection.get : return $r3 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : specialinvoke r0.<org.jfree.chart.title.LegendTitle: void addItemBlock(org.jfree.chart.LegendItem)>($r13)
org.jfree.chart.title.LegendTitle.fetchLegendItems : specialinvoke r0.<org.jfree.chart.title.LegendTitle: void addItemBlock(org.jfree.chart.LegendItem)>($r13) >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1)
org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r8 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getShape()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r8 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getShape()>() >>>>>>>> org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape>
org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape> >>>>>>>> org.jfree.chart.LegendItem.getShape : return $r1
org.jfree.chart.LegendItem.getShape : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>() >>>>>>>> org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint>
org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint> >>>>>>>> org.jfree.chart.LegendItem.getFillPaint : return $r1
org.jfree.chart.LegendItem.getFillPaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r7.<org.jfree.chart.title.LegendGraphic: void <init>(java.awt.Shape,java.awt.Paint)>($r8, $r9)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r7.<org.jfree.chart.title.LegendGraphic: void <init>(java.awt.Shape,java.awt.Paint)>($r8, $r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets
org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : specialinvoke $r1.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(d0, d1, d2, d3)
org.jfree.chart.block.AbstractBlock.setPadding : specialinvoke $r1.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(d0, d1, d2, d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r1)
org.jfree.chart.block.AbstractBlock.setPadding : virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r1) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r2 = $r7
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r2 = $r7 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>() >>>>>>>> org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer>
org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> >>>>>>>> org.jfree.chart.LegendItem.getFillPaintTransformer : return $r1
org.jfree.chart.LegendItem.getFillPaintTransformer : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setFillPaintTransformer(org.jfree.ui.GradientPaintTransformer)>($r10)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setFillPaintTransformer(org.jfree.ui.GradientPaintTransformer)>($r10) >>>>>>>> org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer")
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer") >>>>>>>> org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled>
org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled> >>>>>>>> org.jfree.chart.LegendItem.isShapeFilled : return $z0
org.jfree.chart.LegendItem.isShapeFilled : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeFilled(boolean)>($z0)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeFilled(boolean)>($z0) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0
org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>() >>>>>>>> org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line>
org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line> >>>>>>>> org.jfree.chart.LegendItem.getLine : return $r1
org.jfree.chart.LegendItem.getLine : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLine(java.awt.Shape)>($r11)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLine(java.awt.Shape)>($r11) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1
org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>() >>>>>>>> org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke>
org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke> >>>>>>>> org.jfree.chart.LegendItem.getLineStroke : return $r1
org.jfree.chart.LegendItem.getLineStroke : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineStroke(java.awt.Stroke)>($r12)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineStroke(java.awt.Stroke)>($r12) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1
org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>() >>>>>>>> org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint>
org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint> >>>>>>>> org.jfree.chart.LegendItem.getLinePaint : return $r1
org.jfree.chart.LegendItem.getLinePaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLinePaint(java.awt.Paint)>($r13)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLinePaint(java.awt.Paint)>($r13) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1
org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible>
org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible> >>>>>>>> org.jfree.chart.LegendItem.isLineVisible : return $z0
org.jfree.chart.LegendItem.isLineVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineVisible(boolean)>($z1)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineVisible(boolean)>($z1) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0
org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible>
org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible> >>>>>>>> org.jfree.chart.LegendItem.isShapeVisible : return $z0
org.jfree.chart.LegendItem.isShapeVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeVisible(boolean)>($z2)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeVisible(boolean)>($z2) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0
org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible>
org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible> >>>>>>>> org.jfree.chart.LegendItem.isShapeOutlineVisible : return $z0
org.jfree.chart.LegendItem.isShapeOutlineVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeOutlineVisible(boolean)>($z3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeOutlineVisible(boolean)>($z3) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0
org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>() >>>>>>>> org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint>
org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.LegendItem.getOutlinePaint : return $r1
org.jfree.chart.LegendItem.getOutlinePaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlinePaint(java.awt.Paint)>($r14)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlinePaint(java.awt.Paint)>($r14) >>>>>>>> org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1
org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>() >>>>>>>> org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke>
org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.LegendItem.getOutlineStroke : return $r1
org.jfree.chart.LegendItem.getOutlineStroke : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlineStroke(java.awt.Stroke)>($r15)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlineStroke(java.awt.Stroke)>($r15) >>>>>>>> org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1
org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setPadding(org.jfree.ui.RectangleInsets)>($r16)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setPadding(org.jfree.ui.RectangleInsets)>($r16) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r18 = new org.jfree.chart.block.BorderArrangement
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r18 = new org.jfree.chart.block.BorderArrangement >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r18.<org.jfree.chart.block.BorderArrangement: void <init>()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r18.<org.jfree.chart.block.BorderArrangement: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>() >>>>>>>> org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset>
org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> >>>>>>>> org.jfree.chart.LegendItem.getDataset : return $r1
org.jfree.chart.LegendItem.getDataset : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>() >>>>>>>> org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey>
org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> >>>>>>>> org.jfree.chart.LegendItem.getSeriesKey : return $r1
org.jfree.chart.LegendItem.getSeriesKey : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r17.<org.jfree.chart.title.LegendItemBlockContainer: void <init>(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)>($r18, $r19, $r20)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r17.<org.jfree.chart.title.LegendItemBlockContainer: void <init>(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)>($r18, $r19, $r20) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r3 = $r17
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r3 = $r17 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor> >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : return $r1
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeAnchor(org.jfree.ui.RectangleAnchor)>($r21)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeAnchor(org.jfree.ui.RectangleAnchor)>($r21) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor")
org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor") >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1
org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation> >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : return $r1
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeLocation(org.jfree.ui.RectangleAnchor)>($r22)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeLocation(org.jfree.ui.RectangleAnchor)>($r22) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location")
org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location") >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1
org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r2, $r23)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r2, $r23) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r2 != null
org.jfree.chart.block.BorderArrangement.add : if r2 != null >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r4
org.jfree.chart.block.BorderArrangement.add : if r3 != $r4 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r5
org.jfree.chart.block.BorderArrangement.add : if r3 != $r5 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r6
org.jfree.chart.block.BorderArrangement.add : if r3 != $r6 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : goto [?= return]
org.jfree.chart.block.BorderArrangement.add : goto [?= return] >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>() >>>>>>>> org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont>
org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.LegendItem.getLabelFont : return $r1
org.jfree.chart.LegendItem.getLabelFont : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>() >>>>>>>> org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint>
org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.LegendItem.getLabelPaint : return $r1
org.jfree.chart.LegendItem.getLabelPaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r25 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getLabel()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r25 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label>
org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label> >>>>>>>> org.jfree.chart.LegendItem.getLabel : return $r1
org.jfree.chart.LegendItem.getLabel : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r24.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>($r25, r4, r5)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r24.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>($r25, r4, r5) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r6 = $r24
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r6 = $r24 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r6.<org.jfree.chart.block.LabelBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r26)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r6.<org.jfree.chart.block.LabelBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r26) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6) >>>>>>>> org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null)
org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null) >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>() >>>>>>>> org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText>
org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText> >>>>>>>> org.jfree.chart.LegendItem.getToolTipText : return $r1
org.jfree.chart.LegendItem.getToolTipText : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setToolTipText(java.lang.String)>($r27)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setToolTipText(java.lang.String)>($r27) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1
org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>() >>>>>>>> org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText>
org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText> >>>>>>>> org.jfree.chart.LegendItem.getURLText : return $r1
org.jfree.chart.LegendItem.getURLText : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setURLText(java.lang.String)>($r28)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setURLText(java.lang.String)>($r28) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1
org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r30 = new org.jfree.chart.block.CenterArrangement
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r30 = new org.jfree.chart.block.CenterArrangement >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r30.<org.jfree.chart.block.CenterArrangement: void <init>()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r30.<org.jfree.chart.block.CenterArrangement: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r29.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>($r30)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r29.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>($r30) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r31 = $r29
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r31 = $r29 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31
org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31 >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r2)
org.jfree.chart.title.LegendTitle.addItemBlock : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r2) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = i1 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = i1 + 1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = i0 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = i0 + 1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= return]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= return] >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $z0 = virtualinvoke $r8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>()
org.jfree.chart.title.LegendTitle.arrange : $z0 = virtualinvoke $r8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()
org.jfree.chart.block.BlockContainer.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : return $z0
org.jfree.chart.block.BlockContainer.isEmpty : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : if $z0 == 0
org.jfree.chart.title.LegendTitle.arrange : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : if r5 != null
org.jfree.chart.title.LegendTitle.arrange : if r5 != null >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c") >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0
org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : return $d0
org.jfree.chart.block.RectangleConstraint.getWidth : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : return $d0
org.jfree.chart.block.RectangleConstraint.getHeight : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.getInsets : return $r1
org.jfree.chart.block.LineBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9)
org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7
org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6)
org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6) >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2)
org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r6
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r6 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r13
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r13 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r20
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r20 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r21
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r21 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r23
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r23 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r25
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r25 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.chart.block.BlockContainer.getBlocks : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : return $r2
org.jfree.chart.block.BlockContainer.getBlocks : return $r2 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r4 = newarray (org.jfree.ui.Size2D)[$i2]
org.jfree.chart.block.FlowArrangement.arrangeNN : r4 = newarray (org.jfree.ui.Size2D)[$i2] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i3 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i3 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i1 >= $i3
org.jfree.chart.block.FlowArrangement.arrangeNN : if i1 >= $i3 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r7
org.jfree.chart.block.FlowArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r7 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r8 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r8 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : if r4 != $r6
org.jfree.chart.block.CenterArrangement.arrange : if r4 != $r6 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : if r5 != $r7
org.jfree.chart.block.CenterArrangement.arrange : if r5 != $r7 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r4 = (org.jfree.chart.block.Block) $r7
org.jfree.chart.block.CenterArrangement.arrangeNN : r4 = (org.jfree.chart.block.Block) $r7 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r6 = interfaceinvoke r4.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r5)
org.jfree.chart.block.CenterArrangement.arrangeNN : r6 = interfaceinvoke r4.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r5) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3)
org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1
org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r5 = null
org.jfree.chart.block.BorderArrangement.arrange : r5 = null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r8
org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r8 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r9
org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r9 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r7 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r7 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r9 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r9 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r13 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r13 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r15 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r15 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r16 = interfaceinvoke $r14.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r15)
org.jfree.chart.block.BorderArrangement.arrangeNN : r16 = interfaceinvoke $r14.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r15) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r6 = null
org.jfree.chart.title.LegendGraphic.arrange : r6 = null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : if r4 != $r7
org.jfree.chart.title.LegendGraphic.arrange : if r4 != $r7 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : if r5 != $r8
org.jfree.chart.title.LegendGraphic.arrange : if r5 != $r8 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1)
org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r2.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r2.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = $r2
org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = $r2 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : if $r4 == null
org.jfree.chart.title.LegendGraphic.arrangeNN : if $r4 == null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r6 = interfaceinvoke $r5.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $r6 = interfaceinvoke $r5.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>($r6)
org.jfree.chart.title.LegendGraphic.arrangeNN : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>($r6) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : if $r7 == null
org.jfree.chart.title.LegendGraphic.arrangeNN : if $r7 == null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r9 = interfaceinvoke $r8.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $r9 = interfaceinvoke $r8.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>($r9)
org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>($r9) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r10.<org.jfree.ui.Size2D: void <init>(double,double)>($d0, $d1)
org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r10.<org.jfree.ui.Size2D: void <init>(double,double)>($d0, $d1) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : return $r10
org.jfree.chart.title.LegendGraphic.arrangeNN : return $r10 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : goto [?= $r27 = new org.jfree.ui.Size2D]
org.jfree.chart.title.LegendGraphic.arrange : goto [?= $r27 = new org.jfree.ui.Size2D] >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalWidth(double)>($d2)
org.jfree.chart.title.LegendGraphic.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalWidth(double)>($d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : return $r1
org.jfree.chart.block.BlockBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d5 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalHeight(double)>($d4)
org.jfree.chart.title.LegendGraphic.arrange : $d5 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalHeight(double)>($d4) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : specialinvoke $r27.<org.jfree.ui.Size2D: void <init>(double,double)>($d3, $d5)
org.jfree.chart.title.LegendGraphic.arrange : specialinvoke $r27.<org.jfree.ui.Size2D: void <init>(double,double)>($d3, $d5) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : return $r27
org.jfree.chart.title.LegendGraphic.arrange : return $r27 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3[2] = $d6
org.jfree.chart.block.BorderArrangement.arrangeNN : r3[2] = $d6 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d7
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d7 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r17 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r17 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d11 = r4[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d11 = r4[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d12 = staticinvoke <java.lang.Math: double max(double,double)>($d10, $d11)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d12 = staticinvoke <java.lang.Math: double max(double,double)>($d10, $d11) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d12
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d12 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[3] = $d13
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[3] = $d13 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r21 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r21 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r23 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r23 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r24 = interfaceinvoke $r22.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r23)
org.jfree.chart.block.BorderArrangement.arrangeNN : r24 = interfaceinvoke $r22.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r23) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font> >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r4)
org.jfree.chart.block.LabelBlock.arrange : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r4) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label> >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : r3 = virtualinvoke $r5.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r1)
org.jfree.chart.block.LabelBlock.arrange : r3 = virtualinvoke $r5.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D
org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d0 = virtualinvoke r3.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.LabelBlock.arrange : $d0 = virtualinvoke r3.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalWidth(double)>($d0)
org.jfree.chart.block.LabelBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalWidth(double)>($d0) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalHeight(double)>($d2)
org.jfree.chart.block.LabelBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalHeight(double)>($d2) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : specialinvoke $r6.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3)
org.jfree.chart.block.LabelBlock.arrange : specialinvoke $r6.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : return $r6
org.jfree.chart.block.LabelBlock.arrange : return $r6 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3[4] = $d14
org.jfree.chart.block.BorderArrangement.arrangeNN : r3[4] = $d14 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[4] = $d15
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[4] = $d15 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d17 = r3[1]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d17 = r3[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d18 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d18 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d19 = r3[4]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d19 = r3[4] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d20 = $d18 + $d19
org.jfree.chart.block.BorderArrangement.arrangeNN : $d20 = $d18 + $d19 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d21 = r3[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d21 = r3[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d22 = $d20 + $d21
org.jfree.chart.block.BorderArrangement.arrangeNN : $d22 = $d20 + $d21 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d23 = staticinvoke <java.lang.Math: double max(double,double)>($d17, $d22)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d23 = staticinvoke <java.lang.Math: double max(double,double)>($d17, $d22) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d24 = staticinvoke <java.lang.Math: double max(double,double)>($d16, $d23)
org.jfree.chart.block.BorderArrangement.arrangeNN : d24 = staticinvoke <java.lang.Math: double max(double,double)>($d16, $d23) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d26 = r4[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d26 = r4[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d27 = r4[4]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d27 = r4[4] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d28 = staticinvoke <java.lang.Math: double max(double,double)>($d26, $d27)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d28 = staticinvoke <java.lang.Math: double max(double,double)>($d26, $d27) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>($d25, $d28)
org.jfree.chart.block.BorderArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>($d25, $d28) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d30 = r4[1]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d30 = r4[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d31 = $d29 + $d30
org.jfree.chart.block.BorderArrangement.arrangeNN : $d31 = $d29 + $d30 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d1 = $d31 + d0
org.jfree.chart.block.BorderArrangement.arrangeNN : d1 = $d31 + d0 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r25 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r25 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r28 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r28 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r31 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r31 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r33 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeNN : $r33 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d36 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d36 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d37 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d37 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r33.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $d36, $d37, d0)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r33.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $d36, $d37, d0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r32.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r33)
org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r32.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r33) >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds") >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r34 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r34 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r37 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r37 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r39 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeNN : $r39 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d42 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d42 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d43 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d43 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d44 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d44 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d45 = d24 - $d44
org.jfree.chart.block.BorderArrangement.arrangeNN : $d45 = d24 - $d44 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d46 = r3[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d46 = r3[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d47 = $d45 - $d46
org.jfree.chart.block.BorderArrangement.arrangeNN : $d47 = $d45 - $d46 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r39.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d42, $d43, $d47, d0)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r39.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d42, $d43, $d47, d0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r38.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r39)
org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r38.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r39) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r40.<org.jfree.ui.Size2D: void <init>(double,double)>(d24, d1)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r40.<org.jfree.ui.Size2D: void <init>(double,double)>(d24, d1) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : return $r40
org.jfree.chart.block.BorderArrangement.arrangeNN : return $r40 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : goto [?= $r26 = new org.jfree.ui.Size2D]
org.jfree.chart.block.BorderArrangement.arrange : goto [?= $r26 = new org.jfree.ui.Size2D] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.BorderArrangement.arrange : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d2 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($d1)
org.jfree.chart.block.BorderArrangement.arrange : $d2 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($d1) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($d3)
org.jfree.chart.block.BorderArrangement.arrange : $d4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($d3) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : specialinvoke $r26.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4)
org.jfree.chart.block.BorderArrangement.arrange : specialinvoke $r26.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : return $r26
org.jfree.chart.block.BorderArrangement.arrange : return $r26 >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : return $r4
org.jfree.chart.block.BlockContainer.arrange : return $r4 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d0 = r6.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d0 = r6.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d1 = r6.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d1 = r6.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r8.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1)
org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r8.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : interfaceinvoke r4.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r8)
org.jfree.chart.block.CenterArrangement.arrangeNN : interfaceinvoke r4.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r8) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D
org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d2 = r6.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d2 = r6.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d3 = r6.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d3 = r6.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r9.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d3)
org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r9.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d3) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : return $r9
org.jfree.chart.block.CenterArrangement.arrangeNN : return $r9 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : return $r8
org.jfree.chart.block.CenterArrangement.arrange : return $r8 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r4[i1] = $r8
org.jfree.chart.block.FlowArrangement.arrangeNN : r4[i1] = $r8 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d3 = virtualinvoke $r9.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $d3 = virtualinvoke $r9.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = d1 + $d3
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = d1 + $d3 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d4 = $r10.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d4 = $r10.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = staticinvoke <java.lang.Math: double max(double,double)>($d4, d2)
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = staticinvoke <java.lang.Math: double max(double,double)>($d4, d2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r12 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r12 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d5 = $r12.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d5 = $r12.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r13 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r13 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d6 = $r13.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d6 = $r13.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, 0.0, $d5, $d6)
org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, 0.0, $d5, $d6) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : interfaceinvoke r5.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11)
org.jfree.chart.block.FlowArrangement.arrangeNN : interfaceinvoke r5.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d7 = $r14.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d7 = $r14.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d8 = d0 + $d7
org.jfree.chart.block.FlowArrangement.arrangeNN : $d8 = d0 + $d7 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d9 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d9 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = $d8 + $d9
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = $d8 + $d9 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = i1 + 1
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = i1 + 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i3 = interfaceinvoke r3.<java.util.List: int size()>()]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i3 = interfaceinvoke r3.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r16 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r16 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if $r15 == $r16
org.jfree.chart.block.FlowArrangement.arrangeNN : if $r15 == $r16 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i6 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i6 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i5 >= $i6
org.jfree.chart.block.FlowArrangement.arrangeNN : if i5 >= $i6 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r18 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r18 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if $r17 != $r18
org.jfree.chart.block.FlowArrangement.arrangeNN : if $r17 != $r18 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= i5 = i5 + 1]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= i5 = i5 + 1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = i5 + 1
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = i5 + 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i6 = interfaceinvoke r3.<java.util.List: int size()>()]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i6 = interfaceinvoke r3.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r21.<org.jfree.ui.Size2D: void <init>(double,double)>(d1, d2)
org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r21.<org.jfree.ui.Size2D: void <init>(double,double)>(d1, d2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : return $r21
org.jfree.chart.block.FlowArrangement.arrangeNN : return $r21 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $d0 = r4.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeRR : $d0 = r4.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0)
org.jfree.chart.block.FlowArrangement.arrangeRR : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0) >>>>>>>> org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.contains : $b0 = d0 cmpl $d1
org.jfree.data.Range.contains : $b0 = d0 cmpl $d1 >>>>>>>> org.jfree.data.Range.contains : if $b0 < 0
org.jfree.data.Range.contains : if $b0 < 0 >>>>>>>> org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.contains : $b1 = d0 cmpg $d2
org.jfree.data.Range.contains : $b1 = d0 cmpg $d2 >>>>>>>> org.jfree.data.Range.contains : if $b1 > 0
org.jfree.data.Range.contains : if $b1 > 0 >>>>>>>> org.jfree.data.Range.contains : $z0 = 1
org.jfree.data.Range.contains : $z0 = 1 >>>>>>>> org.jfree.data.Range.contains : goto [?= return $z0]
org.jfree.data.Range.contains : goto [?= return $z0] >>>>>>>> org.jfree.data.Range.contains : return $z0
org.jfree.data.Range.contains : return $z0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : if $z0 == 0
org.jfree.chart.block.FlowArrangement.arrangeRR : if $z0 == 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : return r4
org.jfree.chart.block.FlowArrangement.arrangeRR : return r4 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : return $r26
org.jfree.chart.block.FlowArrangement.arrange : return $r26 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalHeight(double)>($d0)
org.jfree.chart.title.LegendTitle.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalHeight(double)>($d0) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double height> = $d1
org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double height> = $d1 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalWidth(double)>($d2)
org.jfree.chart.title.LegendTitle.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalWidth(double)>($d2) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double width> = $d3
org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double width> = $d3 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : return r4
org.jfree.chart.title.LegendTitle.arrange : return r4 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>() >>>>>>>> org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.title.Title.getHorizontalAlignment : return $r1
org.jfree.chart.title.Title.getHorizontalAlignment : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r23 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $r23 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23)
org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r5
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r5 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r6
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r6 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d3 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d3 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d4 = $d3 / 2.0
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d4 = $d3 / 2.0 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = $d2 - $d4
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = $d2 - $d4 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>]
org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>] >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r8
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r8 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r9
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r9 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r10
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r10 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d11 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d11 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = $d10 - $d11
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = $d10 - $d11 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d12 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d12 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d13 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d13 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d12, $d13)
org.jfree.chart.JFreeChart.createAlignedRectangle2D : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d12, $d13) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : return $r11
org.jfree.chart.JFreeChart.createAlignedRectangle2D : return $r11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7)
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r4 = (java.awt.geom.Rectangle2D) $r11
org.jfree.chart.title.LegendTitle.draw : r4 = (java.awt.geom.Rectangle2D) $r11 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r5 = (java.awt.geom.Rectangle2D) $r12
org.jfree.chart.title.LegendTitle.draw : r5 = (java.awt.geom.Rectangle2D) $r12 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r6 = null
org.jfree.chart.title.LegendTitle.draw : r6 = null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z0 == 0
org.jfree.chart.title.LegendTitle.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r13 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendTitle.draw : $r13 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities>
org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> >>>>>>>> org.jfree.chart.block.BlockParams.getGenerateEntities : return $z0
org.jfree.chart.block.BlockParams.getGenerateEntities : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z1 == 0
org.jfree.chart.title.LegendTitle.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4)
org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimMargin : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : return r1
org.jfree.chart.block.AbstractBlock.trimMargin : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $r17 == null
org.jfree.chart.title.LegendTitle.draw : if $r17 == null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r18)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r18) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>()
org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.getFrame : return $r1
org.jfree.chart.block.AbstractBlock.getFrame : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b0 <= 0
org.jfree.chart.block.LineBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b1 = d1 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : $b1 = d1 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b1 > 0
org.jfree.chart.block.LineBorder.draw : if $b1 > 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d2 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>(d1)
org.jfree.chart.block.LineBorder.draw : d2 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>(d1) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d3 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>(d1)
org.jfree.chart.block.LineBorder.draw : d3 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>(d1) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d4 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>(d0)
org.jfree.chart.block.LineBorder.draw : d4 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>(d0) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d5 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>(d0)
org.jfree.chart.block.LineBorder.draw : d5 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>(d0) >>>>>>>> org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0
org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d8 = d6 + $d12
org.jfree.chart.block.LineBorder.draw : d8 = d6 + $d12 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0
org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d14 = d5 / 2.0
org.jfree.chart.block.LineBorder.draw : $d14 = d5 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d9 = $d13 - $d14
org.jfree.chart.block.LineBorder.draw : d9 = $d13 - $d14 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1
org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d16 = d3 / 2.0
org.jfree.chart.block.LineBorder.draw : $d16 = d3 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d10 = $d15 - $d16
org.jfree.chart.block.LineBorder.draw : d10 = $d15 - $d16 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0
org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d11 = d7 + $d17
org.jfree.chart.block.LineBorder.draw : d11 = d7 + $d17 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>()
org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>() >>>>>>>> org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint>
org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.LineBorder.getPaint : return $r1
org.jfree.chart.block.LineBorder.getPaint : return $r1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>()
org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>() >>>>>>>> org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke>
org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.block.LineBorder.getStroke : return $r1
org.jfree.chart.block.LineBorder.getStroke : return $r1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.block.LineBorder.draw : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>()>()
org.jfree.chart.block.LineBorder.draw : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : r3 = $r10
org.jfree.chart.block.LineBorder.draw : r3 = $r10 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b2 <= 0
org.jfree.chart.block.LineBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b3 <= 0
org.jfree.chart.block.LineBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b4 <= 0
org.jfree.chart.block.LineBorder.draw : if $b4 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b5 <= 0
org.jfree.chart.block.LineBorder.draw : if $b5 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke $r19.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke $r19.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if r8 != null
org.jfree.chart.title.LegendTitle.draw : if r8 != null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimPadding : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : return r1
org.jfree.chart.block.AbstractBlock.trimPadding : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3)
org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r4 = null
org.jfree.chart.block.BlockContainer.draw : r4 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z0 == 0
org.jfree.chart.block.BlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z1 == 0
org.jfree.chart.block.BlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15
org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.drawBorder : interfaceinvoke $r3.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.block.AbstractBlock.drawBorder : interfaceinvoke $r3.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d0 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>($d8)
org.jfree.chart.block.BlockBorder.draw : d0 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>($d8) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d1 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>($d9)
org.jfree.chart.block.BlockBorder.draw : d1 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>($d9) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d2 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>($d10)
org.jfree.chart.block.BlockBorder.draw : d2 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>($d10) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d3 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>($d11)
org.jfree.chart.block.BlockBorder.draw : d3 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>($d11) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8)
org.jfree.chart.block.BlockBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BlockBorder.draw : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.block.BlockBorder.draw : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : r3 = $r9
org.jfree.chart.block.BlockBorder.draw : r3 = $r9 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b0 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b1 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b1 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b2 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b3 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimBorder : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : virtualinvoke $r3.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimBorder : virtualinvoke $r3.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : return r1
org.jfree.chart.block.AbstractBlock.trimBorder : return r1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z2 == 0
org.jfree.chart.block.BlockContainer.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r8 = (org.jfree.chart.block.Block) $r20
org.jfree.chart.block.BlockContainer.draw : r8 = (org.jfree.chart.block.Block) $r20 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>()
org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.getBounds : return $r1
org.jfree.chart.block.AbstractBlock.getBounds : return $r1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d0 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : $d0 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d2 = $d0 + $d1
org.jfree.chart.block.BlockContainer.draw : $d2 = $d0 + $d1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d3 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockContainer.draw : $d3 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockContainer.draw : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d5 = $d3 + $d4
org.jfree.chart.block.BlockContainer.draw : $d5 = $d3 + $d4 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d7 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockContainer.draw : $d7 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, $d5, $d6, $d7)
org.jfree.chart.block.BlockContainer.draw : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, $d5, $d6, $d7) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r10 = $r21
org.jfree.chart.block.BlockContainer.draw : r10 = $r21 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3)
org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null)
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>
org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z0 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>
org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z1 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r15 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation>
org.jfree.chart.title.LegendGraphic.draw : $r15 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r16 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r9, $r15)
org.jfree.chart.title.LegendGraphic.draw : r16 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r9, $r15) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r17 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.draw : $r17 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r18 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor>
org.jfree.chart.title.LegendGraphic.draw : $r18 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $d2 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.title.LegendGraphic.draw : $d2 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $d3 = virtualinvoke r16.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.title.LegendGraphic.draw : $d3 = virtualinvoke r16.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r19 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape createTranslatedShape(java.awt.Shape,org.jfree.ui.RectangleAnchor,double,double)>($r17, $r18, $d2, $d3)
org.jfree.chart.title.LegendGraphic.draw : r19 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape createTranslatedShape(java.awt.Shape,org.jfree.ui.RectangleAnchor,double,double)>($r17, $r18, $d2, $d3) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z2 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled>
org.jfree.chart.title.LegendGraphic.draw : $z2 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z2 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>
org.jfree.chart.title.LegendGraphic.draw : r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z3 = r5 instanceof java.awt.GradientPaint
org.jfree.chart.title.LegendGraphic.draw : $z3 = r5 instanceof java.awt.GradientPaint >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z3 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z3 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r19)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r19) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z4 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible>
org.jfree.chart.title.LegendGraphic.draw : $z4 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z4 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z4 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r22 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint>
org.jfree.chart.title.LegendGraphic.draw : $r22 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r22)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r22) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r23 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke>
org.jfree.chart.title.LegendGraphic.draw : $r23 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r23)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r23) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r19)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r19) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : return null
org.jfree.chart.title.LegendGraphic.draw : return null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if r4 == null
org.jfree.chart.block.BlockContainer.draw : if r4 == null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10)
org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11)
org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r4 = null
org.jfree.chart.block.LabelBlock.draw : r4 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r5 = null
org.jfree.chart.block.LabelBlock.draw : r5 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r6 = null
org.jfree.chart.block.LabelBlock.draw : r6 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.block.LabelBlock.draw : if $z0 == 0
org.jfree.chart.block.LabelBlock.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>
org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r16)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r16) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor>
org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r7 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r12, $r17)
org.jfree.chart.block.LabelBlock.draw : r7 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r12, $r17) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $d0 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.block.LabelBlock.draw : $d0 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $f0 = (float) $d0
org.jfree.chart.block.LabelBlock.draw : $f0 = (float) $d0 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.block.LabelBlock.draw : $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $f1 = (float) $d1
org.jfree.chart.block.LabelBlock.draw : $f1 = (float) $d1 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r19 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlockAnchor contentAlignmentPoint>
org.jfree.chart.block.LabelBlock.draw : $r19 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlockAnchor contentAlignmentPoint> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke $r18.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor)>(r1, $f0, $f1, $r19)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke $r18.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor)>(r1, $f0, $f1, $r19) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r8 = null
org.jfree.chart.block.LabelBlock.draw : r8 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : if r4 == null
org.jfree.chart.block.LabelBlock.draw : if r4 == null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : return r8
org.jfree.chart.block.LabelBlock.draw : return r8 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r22 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : return r22 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null
org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke $r8.<org.jfree.chart.block.BlockResult: void <init>()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke $r8.<org.jfree.chart.block.BlockResult: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : r4 = $r8
org.jfree.chart.title.LegendItemBlockContainer.draw : r4 = $r8 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : if $z0 == 0
org.jfree.chart.title.LegendItemBlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : if $z1 == 0
org.jfree.chart.title.LegendItemBlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : return r4
org.jfree.chart.title.LegendItemBlockContainer.draw : return r4 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z2 == 0
org.jfree.chart.title.LegendTitle.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : return r9
org.jfree.chart.title.LegendTitle.draw : return r9 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d14 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.JFreeChart.drawTitle : $d14 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d17 = r21.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.drawTitle : $d17 = r21.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d18 = $d16 - $d17
org.jfree.chart.JFreeChart.drawTitle : $d18 = $d16 - $d17 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d13, $d14, $d15, $d18)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d13, $d14, $d15, $d18) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null]
org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null] >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r36 = null
org.jfree.chart.JFreeChart.drawTitle : r36 = null >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $z1 == 0
org.jfree.chart.JFreeChart.drawTitle : if $z1 == 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : return r36
org.jfree.chart.JFreeChart.drawTitle : return r36 >>>>>>>> org.jfree.chart.JFreeChart.draw : if r11 == null
org.jfree.chart.JFreeChart.draw : if r11 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : goto [?= $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.JFreeChart.draw : goto [?= $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.JFreeChart.draw : r45 = r28
org.jfree.chart.JFreeChart.draw : r45 = r28 >>>>>>>> org.jfree.chart.JFreeChart.draw : r46 = null
org.jfree.chart.JFreeChart.draw : r46 = null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke $r47.<org.jfree.chart.plot.Plot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r45, r3, null, r46)
org.jfree.chart.JFreeChart.draw : virtualinvoke $r47.<org.jfree.chart.plot.Plot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r45, r3, null, r46) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.CategoryPlot.draw : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $b2 = $d2 cmpg 10.0
org.jfree.chart.plot.CategoryPlot.draw : $b2 = $d2 cmpg 10.0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $b2 > 0
org.jfree.chart.plot.CategoryPlot.draw : if $b2 > 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z2 = 0
org.jfree.chart.plot.CategoryPlot.draw : $z2 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : z0 = $z2
org.jfree.chart.plot.CategoryPlot.draw : z0 = $z2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.CategoryPlot.draw : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $b3 = $d3 cmpg 10.0
org.jfree.chart.plot.CategoryPlot.draw : $b3 = $d3 cmpg 10.0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $b3 > 0
org.jfree.chart.plot.CategoryPlot.draw : if $b3 > 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z3 = 0
org.jfree.chart.plot.CategoryPlot.draw : $z3 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : z1 = $z3
org.jfree.chart.plot.CategoryPlot.draw : z1 = $z3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if z0 != 0
org.jfree.chart.plot.CategoryPlot.draw : if z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if z1 == 0
org.jfree.chart.plot.CategoryPlot.draw : if z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if r5 != null
org.jfree.chart.plot.CategoryPlot.draw : if r5 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r22 = new org.jfree.chart.plot.PlotRenderingInfo
org.jfree.chart.plot.CategoryPlot.draw : $r22 = new org.jfree.chart.plot.PlotRenderingInfo >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : specialinvoke $r22.<org.jfree.chart.plot.PlotRenderingInfo: void <init>(org.jfree.chart.ChartRenderingInfo)>(null)
org.jfree.chart.plot.CategoryPlot.draw : specialinvoke $r22.<org.jfree.chart.plot.PlotRenderingInfo: void <init>(org.jfree.chart.ChartRenderingInfo)>(null) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r5 = $r22
org.jfree.chart.plot.CategoryPlot.draw : r5 = $r22 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setPlotArea(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setPlotArea(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.PlotRenderingInfo.setPlotArea : r0.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea> = r1
org.jfree.chart.plot.PlotRenderingInfo.setPlotArea : r0.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.CategoryPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.getInsets : return $r1
org.jfree.chart.plot.Plot.getInsets : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.CategoryPlot.draw : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : $r3 = new org.jfree.chart.axis.AxisSpace
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : $r3 = new org.jfree.chart.axis.AxisSpace >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : specialinvoke $r3.<org.jfree.chart.axis.AxisSpace: void <init>()>()
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : specialinvoke $r3.<org.jfree.chart.axis.AxisSpace: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : r4 = $r3
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : r4 = $r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, r2, r4)
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, r2, r4) >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if r3 != null
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if r3 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if $r8 == null
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if $r8 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : i0 = 0
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r20 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r20 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $i1 = virtualinvoke $r20.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $i1 = virtualinvoke $r20.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : r5 = (org.jfree.chart.axis.Axis) $r22
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : r5 = (org.jfree.chart.axis.Axis) $r22 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if r5 == null
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if r5 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i0)
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : r1 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : r1 = (org.jfree.chart.axis.AxisLocation) $r4
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : r1 = (org.jfree.chart.axis.AxisLocation) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : return r1
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : $r3 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>(r1, $r2)
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : $r3 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>(r1, $r2) >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location") >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation") >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = null >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r3
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r3 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r6
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r6 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r7 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r7 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r7
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r7 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r8 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r8 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r8
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r8 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : goto [?= (branch)]
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r2 != null
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r2 != null >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : return r2
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : return r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : return $r3
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : return $r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : r3 = virtualinvoke r5.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r6, r3)
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : r3 = virtualinvoke r5.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r6, r3) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if r5 != null
org.jfree.chart.axis.ValueAxis.reserveSpace : if r5 != null >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean visible>
org.jfree.chart.axis.Axis.isVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean visible> >>>>>>>> org.jfree.chart.axis.Axis.isVisible : return $z0
org.jfree.chart.axis.Axis.isVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z0 != 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double getFixedDimension()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : d0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double getFixedDimension()>() >>>>>>>> org.jfree.chart.axis.Axis.getFixedDimension : $d0 = r0.<org.jfree.chart.axis.Axis: double fixedDimension>
org.jfree.chart.axis.Axis.getFixedDimension : $d0 = r0.<org.jfree.chart.axis.Axis: double fixedDimension> >>>>>>>> org.jfree.chart.axis.Axis.getFixedDimension : return $d0
org.jfree.chart.axis.Axis.getFixedDimension : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $b0 = d0 cmpl 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : $b0 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $b0 <= 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isTickLabelsVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible>
org.jfree.chart.axis.Axis.isTickLabelsVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible> >>>>>>>> org.jfree.chart.axis.Axis.isTickLabelsVisible : return $z0
org.jfree.chart.axis.Axis.isTickLabelsVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z1 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : return $r1
org.jfree.chart.axis.Axis.getTickLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r8)
org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r8) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.ValueAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : specialinvoke $r9.<org.jfree.chart.axis.AxisState: void <init>()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : specialinvoke $r9.<org.jfree.chart.axis.AxisState: void <init>()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : r6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, $r9, r3, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : r6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, $r9, r3, r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : $r5 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.refreshTicks : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.NumberAxis.refreshTicks : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = $r5
org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : if $z0 == 0
org.jfree.chart.axis.NumberAxis.refreshTicks : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : if $z1 == 0
org.jfree.chart.axis.NumberAxis.refreshTicks : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r4 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r5 = $r4
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r5 = $r4 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: void clear()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoTickUnitSelection()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z0 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : if $z0 == 0
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : if $z1 == 0
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1
org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d1 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d1 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d2 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d2 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getBottom()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : d0 = $d1 + $d2
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : d0 = $d1 + $d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r4 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r4 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $r5 = virtualinvoke r3.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("123", r4)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $r5 = virtualinvoke r3.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("123", r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $f0 = virtualinvoke $r5.<java.awt.font.LineMetrics: float getHeight()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $f0 = virtualinvoke $r5.<java.awt.font.LineMetrics: float getHeight()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d3 = (double) $f0
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d3 = (double) $f0 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : d4 = d0 + $d3
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : d4 = d0 + $d3 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : return d4
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : return d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits>
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits> >>>>>>>> org.jfree.chart.axis.ValueAxis.getStandardTickUnits : return $r1
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.NumberAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.NumberAxis.getTickUnit : return $r1
org.jfree.chart.axis.NumberAxis.getTickUnit : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r7)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r7) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 0
org.jfree.chart.axis.TickUnit.compareTo : return 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r5 = (org.jfree.chart.axis.TickUnit) $r4
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r5 = (org.jfree.chart.axis.TickUnit) $r4 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r5
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d4, r2, r3)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d4, r2, r3) >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(0.0, r1, r2)
org.jfree.chart.axis.ValueAxis.lengthToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(0.0, r1, r2) >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : return $r1
org.jfree.chart.axis.ValueAxis.getRange : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d2 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d2 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = 0.0
org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = 0.0
org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z0 == 0
org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z1 == 0
org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isInverted()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isInverted()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted> >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : return $z0
org.jfree.chart.axis.ValueAxis.isInverted : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z2 == 0
org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d11 = d0 - d1
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d11 = d0 - d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d12 = d2 - d1
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d12 = d2 - d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d13 = $d11 / $d12
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d13 = $d11 / $d12 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d14 = d4 - d3
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d14 = d4 - d3 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d15 = $d13 * $d14
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d15 = $d13 * $d14 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d16 = d3 + $d15
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d16 = d3 + $d15 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : return $d16
org.jfree.chart.axis.NumberAxis.valueToJava2D : return $d16 >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r1, r2)
org.jfree.chart.axis.ValueAxis.lengthToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r1, r2) >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d3 = d2 - d1
org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d3 = d2 - d1 >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3)
org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3) >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : return $d4
org.jfree.chart.axis.ValueAxis.lengthToJava2D : return $d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d5 = d0 / d1
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d5 = d0 / d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d6 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d6 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d2 = $d5 * $d6
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d2 = $d5 * $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r8 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r8 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : specialinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(d0, $r2)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : specialinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(d0, $r2) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = virtualinvoke r0.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = virtualinvoke r0.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r1) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i2 = neg $i1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i2 = neg $i1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r7 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r7 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i4 = $i3 - 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i4 = $i3 - 1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i5)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i5) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r9 = (org.jfree.chart.axis.TickUnit) $r8
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r9 = (org.jfree.chart.axis.TickUnit) $r8 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r9
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r9 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r3
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r3 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r6 = (org.jfree.chart.axis.NumberTickUnit) $r8
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r6 = (org.jfree.chart.axis.NumberTickUnit) $r8 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r2, r3)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $b0 = d8 cmpl d3
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $b0 = d8 cmpl d3 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : if $b0 <= 0
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0) >>>>>>>> org.jfree.chart.axis.NumberAxis.setTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit")
org.jfree.chart.axis.NumberAxis.setTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit") >>>>>>>> org.jfree.chart.axis.NumberAxis.setTickUnit : r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> = r1
org.jfree.chart.axis.NumberAxis.setTickUnit : r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> = r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.setTickUnit : if z1 == 0
org.jfree.chart.axis.NumberAxis.setTickUnit : if z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.setTickUnit : if z0 == 0
org.jfree.chart.axis.NumberAxis.setTickUnit : if z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d0 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d0 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int calculateVisibleTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int calculateVisibleTickCount()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : d0 = virtualinvoke $r2.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : d0 = virtualinvoke $r2.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d1 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d1 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d2 = $d1 / d0
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d2 = $d1 / d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2)
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2) >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d5 = $d4 / d0
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d5 = $d4 / d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5)
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5) >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d7 = $d3 - $d6
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d7 = $d3 - $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d8 = $d7 + 1.0
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d8 = $d7 + 1.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $i0 = (int) $d8
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $i0 = (int) $d8 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : return $i0
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double calculateLowestVisibleTickValue()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double calculateLowestVisibleTickValue()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : d0 = virtualinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : d0 = virtualinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d2 = virtualinvoke $r2.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d2 = virtualinvoke $r2.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d3 = $d2 / d0
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d3 = $d2 / d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : d1 = staticinvoke <java.lang.Math: double ceil(double)>($d3)
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : d1 = staticinvoke <java.lang.Math: double ceil(double)>($d3) >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d4 = d1 * d0
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d4 = d1 * d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : return $d4
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : return $d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i0 > 500
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i0 > 500 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount>
org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount> >>>>>>>> org.jfree.chart.axis.ValueAxis.getMinorTickCount : return $i0
org.jfree.chart.axis.ValueAxis.getMinorTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i1 > 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i1 > 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount>
org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount> >>>>>>>> org.jfree.chart.axis.TickUnit.getMinorTickCount : return $i0
org.jfree.chart.axis.TickUnit.getMinorTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i2 >= i1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i2 >= i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d6 = (double) i2
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d6 = (double) i2 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d7 = d0 * $d6
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d7 = d0 * $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d8 = (double) i1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d8 = (double) i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d9 = $d7 / $d8
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d9 = $d7 / $d8 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d2 = d1 - $d9
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d2 = d1 - $d9 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z1 = virtualinvoke $r15.<org.jfree.data.Range: boolean contains(double)>(d2)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z1 = virtualinvoke $r15.<org.jfree.data.Range: boolean contains(double)>(d2) >>>>>>>> org.jfree.data.Range.contains : $z0 = 0
org.jfree.data.Range.contains : $z0 = 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z1 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = i2 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = i2 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : goto [?= (branch)]
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i4 = 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i4 = 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i4 >= i0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i4 >= i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d10 = (double) i4
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d10 = (double) i4 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d11 = $d10 * d0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d11 = $d10 * d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d12 = d1 + $d11
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d12 = d1 + $d11 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : $r1 = r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride>
org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : $r1 = r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride> >>>>>>>> org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : return $r1
org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if r10 == null
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if r10 == null >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r18 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r18 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r11 = virtualinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: java.lang.String valueToString(double)>(d12)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r11 = virtualinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: java.lang.String valueToString(double)>(d12) >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter>
org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter> >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>(d0)
org.jfree.chart.axis.NumberTickUnit.valueToString : $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>(d0) >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : return $r2
org.jfree.chart.axis.NumberTickUnit.valueToString : return $r2 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d3 = 0.0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels> >>>>>>>> org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : return $z0
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z3 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if r3 != $r20
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if r3 != $r20 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r12 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER_RIGHT>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r12 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER_RIGHT> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r13 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER_RIGHT>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r13 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER_RIGHT> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : goto [?= $r21 = new org.jfree.chart.axis.NumberTick]
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : goto [?= $r21 = new org.jfree.chart.axis.NumberTick] >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r21 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r21 = new org.jfree.chart.axis.NumberTick >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r22 = new java.lang.Double
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r22 = new java.lang.Double >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r22.<java.lang.Double: void <init>(double)>(d12)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r22.<java.lang.Double: void <init>(double)>(d12) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r21.<org.jfree.chart.axis.NumberTick: void <init>(java.lang.Number,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>($r22, r11, r12, r13, d3)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r21.<org.jfree.chart.axis.NumberTick: void <init>(java.lang.Number,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>($r22, r11, r12, r13, d3) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r14 = $r21
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r14 = $r21 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r14)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r14) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $i5 = i4 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $i5 = i4 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d13 = (double) $i5
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d13 = (double) $i5 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d14 = $d13 * d0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d14 = $d13 * d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d4 = d1 + $d14
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d4 = d1 + $d14 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i3 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i3 = 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i3 >= i1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i3 >= i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d15 = d4 - d12
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d15 = d4 - d12 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d16 = (double) i3
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d16 = (double) i3 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d17 = $d15 * $d16
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d17 = $d15 * $d16 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d18 = (double) i1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d18 = (double) i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d19 = $d17 / $d18
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d19 = $d17 / $d18 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d5 = d12 + $d19
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d5 = d12 + $d19 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r23 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r23 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z5 = virtualinvoke $r23.<org.jfree.data.Range: boolean contains(double)>(d5)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z5 = virtualinvoke $r23.<org.jfree.data.Range: boolean contains(double)>(d5) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z5 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z5 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r24 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r24 = new org.jfree.chart.axis.NumberTick >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r25 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r25 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r26 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r26 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r27 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r27 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r24.<org.jfree.chart.axis.NumberTick: void <init>(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>($r25, d5, "", $r26, $r27, 0.0)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r24.<org.jfree.chart.axis.NumberTick: void <init>(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>($r25, d5, "", $r26, $r27, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i3 = i3 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i3 = i3 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i4 = i4 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i4 = i4 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : return r5
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : return r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : return r6
org.jfree.chart.axis.NumberAxis.refreshTicks : return r6 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z2 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z4 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : $z4 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z4 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z4 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z5)
org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z5) >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : d0 = 0.0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if z0 != 0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if z0 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r6 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r5)
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r6 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r5) >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if $z1 == 0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $r10 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $r10 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r8 = (org.jfree.chart.axis.Tick) $r10
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r8 = (org.jfree.chart.axis.Tick) $r10 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $r11 = virtualinvoke r8.<org.jfree.chart.axis.Tick: java.lang.String getText()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $r11 = virtualinvoke r8.<org.jfree.chart.axis.Tick: java.lang.String getText()>() >>>>>>>> org.jfree.chart.axis.Tick.getText : $r1 = r0.<org.jfree.chart.axis.Tick: java.lang.String text>
org.jfree.chart.axis.Tick.getText : $r1 = r0.<org.jfree.chart.axis.Tick: java.lang.String text> >>>>>>>> org.jfree.chart.axis.Tick.getText : return $r1
org.jfree.chart.axis.Tick.getText : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r9 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>($r11, r2, r6)
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r9 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>($r11, r2, r6) >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d1 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d1 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d2 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d2 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getLeft()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d3 = $d1 + $d2
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d3 = $d1 + $d2 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d4 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d4 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getRight()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d5 = $d3 + $d4
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d5 = $d3 + $d4 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $b0 = $d5 cmpl d0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $b0 = $d5 cmpl d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if $b0 <= 0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d7 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d7 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getLeft()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d8 = $d6 + $d7
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d8 = $d6 + $d7 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d9 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d9 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getRight()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : d0 = $d8 + $d9
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : d0 = $d8 + $d9 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : goto [?= return d0]
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : goto [?= return d0] >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : return d0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : return d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $r3 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.Axis.getLabelEnclosure : $r3 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : specialinvoke $r3.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : specialinvoke $r3.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = $r3
org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = $r3 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r5 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.lang.String getLabel()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r5 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabel : $r1 = r0.<org.jfree.chart.axis.Axis: java.lang.String label>
org.jfree.chart.axis.Axis.getLabel : $r1 = r0.<org.jfree.chart.axis.Axis: java.lang.String label> >>>>>>>> org.jfree.chart.axis.Axis.getLabel : return $r1
org.jfree.chart.axis.Axis.getLabel : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : if r5 == null
org.jfree.chart.axis.Axis.getLabelEnclosure : if r5 == null >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("")
org.jfree.chart.axis.Axis.getLabelEnclosure : $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : if $z0 != 0
org.jfree.chart.axis.Axis.getLabelEnclosure : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $r11 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : $r11 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont>
org.jfree.chart.axis.Axis.getLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.axis.Axis.getLabelFont : return $r1
org.jfree.chart.axis.Axis.getLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r6 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r11)
org.jfree.chart.axis.Axis.getLabelEnclosure : r6 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r11) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r7 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r5, r1, r6)
org.jfree.chart.axis.Axis.getLabelEnclosure : r7 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r5, r1, r6) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets>
org.jfree.chart.axis.Axis.getLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets> >>>>>>>> org.jfree.chart.axis.Axis.getLabelInsets : return $r1
org.jfree.chart.axis.Axis.getLabelInsets : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r12 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.axis.Axis.getLabelEnclosure : r12 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D)>(r7) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelAngle : $d0 = r0.<org.jfree.chart.axis.Axis: double labelAngle>
org.jfree.chart.axis.Axis.getLabelAngle : $d0 = r0.<org.jfree.chart.axis.Axis: double labelAngle> >>>>>>>> org.jfree.chart.axis.Axis.getLabelAngle : return $d0
org.jfree.chart.axis.Axis.getLabelAngle : return $d0 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.Axis.getLabelEnclosure : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : if r2 == $r13
org.jfree.chart.axis.Axis.getLabelEnclosure : if r2 == $r13 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = d0 - 1.5707963267948966
org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = d0 - 1.5707963267948966 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : d1 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : d1 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : d2 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : d2 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>(d0, d1, d2)
org.jfree.chart.axis.Axis.getLabelEnclosure : r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>(d0, d1, d2) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r10 = virtualinvoke r9.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r12)
org.jfree.chart.axis.Axis.getLabelEnclosure : r10 = virtualinvoke r9.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r12) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = interfaceinvoke r10.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = interfaceinvoke r10.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : return r4
org.jfree.chart.axis.Axis.getLabelEnclosure : return r4 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d3 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d4 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d4 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z6 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : $z6 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z6 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z6 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z7 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : $z7 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z7 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z7 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d7 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : d7 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $d8 = d7 + d2
org.jfree.chart.axis.ValueAxis.reserveSpace : $d8 = d7 + d2 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r5.<org.jfree.chart.axis.AxisSpace: void add(double,org.jfree.ui.RectangleEdge)>($d8, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r5.<org.jfree.chart.axis.AxisSpace: void add(double,org.jfree.ui.RectangleEdge)>($d8, r4) >>>>>>>> org.jfree.chart.axis.AxisSpace.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "edge")
org.jfree.chart.axis.AxisSpace.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "edge") >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.AxisSpace.add : $r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : if r1 != $r2
org.jfree.chart.axis.AxisSpace.add : if r1 != $r2 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.AxisSpace.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : if r1 != $r4
org.jfree.chart.axis.AxisSpace.add : if r1 != $r4 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.AxisSpace.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : if r1 != $r6
org.jfree.chart.axis.AxisSpace.add : if r1 != $r6 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $d5 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.add : $d5 = r0.<org.jfree.chart.axis.AxisSpace: double left> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $d6 = $d5 + d0
org.jfree.chart.axis.AxisSpace.add : $d6 = $d5 + d0 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : r0.<org.jfree.chart.axis.AxisSpace: double left> = $d6
org.jfree.chart.axis.AxisSpace.add : r0.<org.jfree.chart.axis.AxisSpace: double left> = $d6 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : goto [?= return]
org.jfree.chart.axis.AxisSpace.add : goto [?= return] >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : return r5
org.jfree.chart.axis.ValueAxis.reserveSpace : return r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : goto [?= $r20 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : goto [?= $r20 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : return r3
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : return r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, r2, r5)
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, r2, r5) >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if r3 != null
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if r3 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if $r9 == null
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if $r9 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r21 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>()
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r21 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation(int)>(0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation(int)>(0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : r1 = null
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : r1 = (org.jfree.chart.axis.AxisLocation) $r4
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : r1 = (org.jfree.chart.axis.AxisLocation) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : return r1
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : return $r1
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r22 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r22 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r5 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r21, $r22)
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r5 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r21, $r22) >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location") >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation") >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = null >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r3
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r3 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r6
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r6 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r9
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r9 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r12
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r12 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r1 != $r13
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r1 != $r13 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r1 != $r14
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r1 != $r14 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r2 != null
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r2 != null >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : return r2
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : return r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean drawSharedDomainAxis>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean drawSharedDomainAxis> >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : i0 = 0
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r24 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r24 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $i1 = virtualinvoke $r24.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $i1 = virtualinvoke $r24.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r25 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r25 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r26 = virtualinvoke $r25.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r26 = virtualinvoke $r25.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r6 = (org.jfree.chart.axis.Axis) $r26
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r6 = (org.jfree.chart.axis.Axis) $r26 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if r6 == null
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if r6 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i0)
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : n0 = null
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : n0 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : if r1 == null
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : r3 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>(r1, $r2)
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : r3 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>(r1, $r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : goto [?= return r3]
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : goto [?= return r3] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : return r3
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : return r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r3 = virtualinvoke r6.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r7, r3)
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r3 = virtualinvoke r6.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r7, r3) >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : if r5 != null
org.jfree.chart.axis.CategoryAxis.reserveSpace : if r5 != null >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isVisible()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isVisible()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : if $z0 != 0
org.jfree.chart.axis.CategoryAxis.reserveSpace : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : d0 = 0.0
org.jfree.chart.axis.CategoryAxis.reserveSpace : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : d1 = 0.0
org.jfree.chart.axis.CategoryAxis.reserveSpace : d1 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickLabelsVisible()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : if $z1 == 0
org.jfree.chart.axis.CategoryAxis.reserveSpace : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r8)
org.jfree.chart.axis.CategoryAxis.reserveSpace : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r8) >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : specialinvoke $r9.<org.jfree.chart.axis.AxisState: void <init>()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : specialinvoke $r9.<org.jfree.chart.axis.AxisState: void <init>()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : r6 = $r9
org.jfree.chart.axis.CategoryAxis.reserveSpace : r6 = $r9 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4)
org.jfree.chart.axis.CategoryAxis.reserveSpace : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r5 = new java.util.ArrayList
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : r6 = $r5
org.jfree.chart.axis.CategoryAxis.refreshTicks : r6 = $r5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $b1 = $d1 cmpg 0.0
org.jfree.chart.axis.CategoryAxis.refreshTicks : $b1 = $d1 cmpg 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : if $b1 <= 0
org.jfree.chart.axis.CategoryAxis.refreshTicks : if $b1 <= 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $b2 = $d2 cmpg 0.0
org.jfree.chart.axis.CategoryAxis.refreshTicks : $b2 = $d2 cmpg 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : if $b2 >= 0
org.jfree.chart.axis.CategoryAxis.refreshTicks : if $b2 >= 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r14 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r14 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : r7 = (org.jfree.chart.plot.CategoryPlot) $r14
org.jfree.chart.axis.CategoryAxis.refreshTicks : r7 = (org.jfree.chart.plot.CategoryPlot) $r14 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : r8 = virtualinvoke r7.<org.jfree.chart.plot.CategoryPlot: java.util.List getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)>(r0)
org.jfree.chart.axis.CategoryAxis.refreshTicks : r8 = virtualinvoke r7.<org.jfree.chart.plot.CategoryPlot: java.util.List getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $r2 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $r2 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r3 = $r2
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r3 = $r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : i0 = virtualinvoke $r8.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : i0 = virtualinvoke $r8.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r4 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List datasetsMappedToDomainAxis(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r4 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List datasetsMappedToDomainAxis(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r1 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r1 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : r3 = $r6
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : r3 = $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $i2 = virtualinvoke $r7.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $i2 = virtualinvoke $r7.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if i1 >= $i2
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if i1 >= $i2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r9 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r9 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : specialinvoke $r9.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : specialinvoke $r9.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r10 = virtualinvoke $r8.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r9)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r10 = virtualinvoke $r8.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : r4 = (java.util.List) $r10
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : r4 = (java.util.List) $r10 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r12 = virtualinvoke $r11.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r12 = virtualinvoke $r11.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : r5 = (org.jfree.data.category.CategoryDataset) $r12
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : r5 = (org.jfree.data.category.CategoryDataset) $r12 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if r4 != null
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if r4 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $z2 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $z2 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if $z2 == 0
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if r5 == null
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if r5 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : goto [?= $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : goto [?= $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : return r3
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : return r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r6 = (org.jfree.data.category.CategoryDataset) $r9
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r6 = (org.jfree.data.category.CategoryDataset) $r9 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : i1 = 0
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $i2 = interfaceinvoke r6.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $i2 = interfaceinvoke r6.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : if i1 >= $i2
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : if i1 >= $i2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r7 = interfaceinvoke r6.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getColumnKey(int)>(i1)
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r7 = interfaceinvoke r6.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getColumnKey(int)>(i1) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getColumnKey(int)>(i0)
org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getColumnKey(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r3 = (java.lang.Comparable) $r2
org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r3 = (java.lang.Comparable) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKey : return $r3
org.jfree.data.DefaultKeyedValues2D.getColumnKey : return $r3 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKey : return $r2
org.jfree.data.category.DefaultCategoryDataset.getColumnKey : return $r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $z1 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r7)
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $z1 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r7) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : if $z1 != 0
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7)
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : goto [?= $i2 = interfaceinvoke r6.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()]
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : goto [?= $i2 = interfaceinvoke r6.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : return r3
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : return r3 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : d0 = 0.0
org.jfree.chart.axis.CategoryAxis.refreshTicks : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : if r8 == null
org.jfree.chart.axis.CategoryAxis.refreshTicks : if r8 == null >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r15 = r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions>
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r15 = r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions> >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : r9 = virtualinvoke $r15.<org.jfree.chart.axis.CategoryLabelPositions: org.jfree.chart.axis.CategoryLabelPosition getLabelPosition(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.CategoryAxis.refreshTicks : r9 = virtualinvoke $r15.<org.jfree.chart.axis.CategoryLabelPositions: org.jfree.chart.axis.CategoryLabelPosition getLabelPosition(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : r2 = null
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : r2 = null >>>>>>>> org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : if r1 != $r3
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : if r1 != $r3 >>>>>>>> org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : if r1 != $r4
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : if r1 != $r4 >>>>>>>> org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : r2 = r0.<org.jfree.chart.axis.CategoryLabelPositions: org.jfree.chart.axis.CategoryLabelPosition positionForAxisAtBottom>
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : r2 = r0.<org.jfree.chart.axis.CategoryLabelPositions: org.jfree.chart.axis.CategoryLabelPosition positionForAxisAtBottom> >>>>>>>> org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : goto [?= return r2]
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : goto [?= return r2] >>>>>>>> org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : return r2
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : return r2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : f0 = r0.<org.jfree.chart.axis.CategoryAxis: float maximumCategoryLabelWidthRatio>
org.jfree.chart.axis.CategoryAxis.refreshTicks : f0 = r0.<org.jfree.chart.axis.CategoryAxis: float maximumCategoryLabelWidthRatio> >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $d3 = (double) f0
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d3 = (double) f0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $b3 = $d3 cmpg 0.0
org.jfree.chart.axis.CategoryAxis.refreshTicks : $b3 = $d3 cmpg 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : if $b3 > 0
org.jfree.chart.axis.CategoryAxis.refreshTicks : if $b3 > 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : f0 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: float getWidthRatio()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : f0 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: float getWidthRatio()>() >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getWidthRatio : $f0 = r0.<org.jfree.chart.axis.CategoryLabelPosition: float widthRatio>
org.jfree.chart.axis.CategoryLabelPosition.getWidthRatio : $f0 = r0.<org.jfree.chart.axis.CategoryLabelPosition: float widthRatio> >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getWidthRatio : return $f0
org.jfree.chart.axis.CategoryLabelPosition.getWidthRatio : return $f0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r16 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.chart.axis.CategoryLabelWidthType getWidthType()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r16 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.chart.axis.CategoryLabelWidthType getWidthType()>() >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getWidthType : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.chart.axis.CategoryLabelWidthType widthType>
org.jfree.chart.axis.CategoryLabelPosition.getWidthType : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.chart.axis.CategoryLabelWidthType widthType> >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getWidthType : return $r1
org.jfree.chart.axis.CategoryLabelPosition.getWidthType : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r17 = <org.jfree.chart.axis.CategoryLabelWidthType: org.jfree.chart.axis.CategoryLabelWidthType CATEGORY>
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r17 = <org.jfree.chart.axis.CategoryLabelWidthType: org.jfree.chart.axis.CategoryLabelWidthType CATEGORY> >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : if $r16 != $r17
org.jfree.chart.axis.CategoryAxis.refreshTicks : if $r16 != $r17 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $i4 = interfaceinvoke r8.<java.util.List: int size()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $i4 = interfaceinvoke r8.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $d4 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($i4, r3, r4)
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d4 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($i4, r3, r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : d0 = 0.0
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : if r2 == $r3
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : if r2 == $r3 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : if r2 != $r4
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : if r2 != $r4 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : goto [?= (branch)]
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : if i0 <= 1
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : if i0 <= 1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $d10 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getLowerMargin()>()
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $d10 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getLowerMargin()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.CategoryAxis: double lowerMargin>
org.jfree.chart.axis.CategoryAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.CategoryAxis: double lowerMargin> >>>>>>>> org.jfree.chart.axis.CategoryAxis.getLowerMargin : return $d0
org.jfree.chart.axis.CategoryAxis.getLowerMargin : return $d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $d11 = 1.0 - $d10
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $d11 = 1.0 - $d10 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $d12 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getUpperMargin()>()
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $d12 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getUpperMargin()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.CategoryAxis: double upperMargin>
org.jfree.chart.axis.CategoryAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.CategoryAxis: double upperMargin> >>>>>>>> org.jfree.chart.axis.CategoryAxis.getUpperMargin : return $d0
org.jfree.chart.axis.CategoryAxis.getUpperMargin : return $d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $d13 = $d11 - $d12
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : $d13 = $d11 - $d12 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : d9 = d0 * $d13
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : d9 = d0 * $d13 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategorySize : return d9
org.jfree.chart.axis.CategoryAxis.calculateCategorySize : return d9 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : f1 = (float) $d4
org.jfree.chart.axis.CategoryAxis.refreshTicks : f1 = (float) $d4 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : goto [?= i0 = 0]
org.jfree.chart.axis.CategoryAxis.refreshTicks : goto [?= i0 = 0] >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : i0 = 0
org.jfree.chart.axis.CategoryAxis.refreshTicks : i0 = 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : r10 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : r10 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : if $z1 == 0
org.jfree.chart.axis.CategoryAxis.refreshTicks : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r18 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r18 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : r11 = (java.lang.Comparable) $r18
org.jfree.chart.axis.CategoryAxis.refreshTicks : r11 = (java.lang.Comparable) $r18 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r19 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont(java.lang.Comparable)>(r11)
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r19 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont(java.lang.Comparable)>(r11) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "category")
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "category") >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : $r3 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelFontMap>
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : $r3 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelFontMap> >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : r2 = (java.awt.Font) $r4
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : r2 = (java.awt.Font) $r4 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : if r2 != null
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : if r2 != null >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : return r2
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : return r2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r19)
org.jfree.chart.axis.CategoryAxis.refreshTicks : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r19) >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $f2 = f1 * f0
org.jfree.chart.axis.CategoryAxis.refreshTicks : $f2 = f1 * f0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : r12 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.ui.RectangleEdge,java.awt.Graphics2D)>(r11, $f2, r4, r1)
org.jfree.chart.axis.CategoryAxis.refreshTicks : r12 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.ui.RectangleEdge,java.awt.Graphics2D)>(r11, $f2, r4, r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.createLabel : $r6 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.axis.CategoryAxis.createLabel : $r6 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.createLabel : $r7 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont(java.lang.Comparable)>(r1)
org.jfree.chart.axis.CategoryAxis.createLabel : $r7 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.createLabel : $r8 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickLabelPaint(java.lang.Comparable)>(r1)
org.jfree.chart.axis.CategoryAxis.createLabel : $r8 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickLabelPaint(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "category")
org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "category") >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : $r3 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelPaintMap>
org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : $r3 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelPaintMap> >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : r2 = (java.awt.Paint) $r4
org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : r2 = (java.awt.Paint) $r4 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : if r2 != null
org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : if r2 != null >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickLabelPaint()>()
org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickLabelPaint()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelPaint : return $r1
org.jfree.chart.axis.Axis.getTickLabelPaint : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : return r2
org.jfree.chart.axis.CategoryAxis.getTickLabelPaint : return r2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.createLabel : $i0 = r0.<org.jfree.chart.axis.CategoryAxis: int maximumCategoryLabelLines>
org.jfree.chart.axis.CategoryAxis.createLabel : $i0 = r0.<org.jfree.chart.axis.CategoryAxis: int maximumCategoryLabelLines> >>>>>>>> org.jfree.chart.axis.CategoryAxis.createLabel : $r4 = new org.jfree.text.G2TextMeasurer
org.jfree.chart.axis.CategoryAxis.createLabel : $r4 = new org.jfree.text.G2TextMeasurer >>>>>>>> org.jfree.chart.axis.CategoryAxis.createLabel : specialinvoke $r4.<org.jfree.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(r3)
org.jfree.chart.axis.CategoryAxis.createLabel : specialinvoke $r4.<org.jfree.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(r3) >>>>>>>> org.jfree.chart.axis.CategoryAxis.createLabel : r5 = staticinvoke <org.jfree.text.TextUtilities: org.jfree.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.text.TextMeasurer)>($r6, $r7, $r8, f0, $i0, $r4)
org.jfree.chart.axis.CategoryAxis.createLabel : r5 = staticinvoke <org.jfree.text.TextUtilities: org.jfree.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.text.TextMeasurer)>($r6, $r7, $r8, f0, $i0, $r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.createLabel : return r5
org.jfree.chart.axis.CategoryAxis.createLabel : return r5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : if r4 == $r20
org.jfree.chart.axis.CategoryAxis.refreshTicks : if r4 == $r20 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r21 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r21 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : if r4 != $r21
org.jfree.chart.axis.CategoryAxis.refreshTicks : if r4 != $r21 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $d7 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateTextBlockHeight(org.jfree.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)>(r12, r9, r1)
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d7 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateTextBlockHeight(org.jfree.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)>(r12, r9, r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : r4 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : r4 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : r5 = virtualinvoke r1.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r3)
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : r5 = virtualinvoke r1.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r3) >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $r8 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $r8 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d2 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d2 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : specialinvoke $r8.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d1, $d2)
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : specialinvoke $r8.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d1, $d2) >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : r6 = $r8
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : r6 = $r8 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d3 = virtualinvoke r2.<org.jfree.chart.axis.CategoryLabelPosition: double getAngle()>()
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d3 = virtualinvoke r2.<org.jfree.chart.axis.CategoryLabelPosition: double getAngle()>() >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getAngle : $d0 = r0.<org.jfree.chart.axis.CategoryLabelPosition: double angle>
org.jfree.chart.axis.CategoryLabelPosition.getAngle : $d0 = r0.<org.jfree.chart.axis.CategoryLabelPosition: double angle> >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getAngle : return $d0
org.jfree.chart.axis.CategoryLabelPosition.getAngle : return $d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : r7 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape rotateShape(java.awt.Shape,double,float,float)>(r6, $d3, 0.0F, 0.0F)
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : r7 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape rotateShape(java.awt.Shape,double,float,float)>(r6, $d3, 0.0F, 0.0F) >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $r9 = interfaceinvoke r7.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $r9 = interfaceinvoke r7.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d4 = virtualinvoke $r9.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d4 = virtualinvoke $r9.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d5 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d5 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d6 = $d4 + $d5
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d6 = $d4 + $d5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d7 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : $d7 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getBottom()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : d0 = $d6 + $d7
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : d0 = $d6 + $d7 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : return d0
org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight : return d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, $d7)
org.jfree.chart.axis.CategoryAxis.refreshTicks : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, $d7) >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : goto [?= $r24 = new org.jfree.chart.axis.CategoryTick]
org.jfree.chart.axis.CategoryAxis.refreshTicks : goto [?= $r24 = new org.jfree.chart.axis.CategoryTick] >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r24 = new org.jfree.chart.axis.CategoryTick
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r24 = new org.jfree.chart.axis.CategoryTick >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r25 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.text.TextBlockAnchor getLabelAnchor()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r25 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.text.TextBlockAnchor getLabelAnchor()>() >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getLabelAnchor : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.text.TextBlockAnchor labelAnchor>
org.jfree.chart.axis.CategoryLabelPosition.getLabelAnchor : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.text.TextBlockAnchor labelAnchor> >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getLabelAnchor : return $r1
org.jfree.chart.axis.CategoryLabelPosition.getLabelAnchor : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $r26 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.ui.TextAnchor getRotationAnchor()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r26 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.ui.TextAnchor getRotationAnchor()>() >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getRotationAnchor : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.axis.CategoryLabelPosition.getRotationAnchor : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.ui.TextAnchor rotationAnchor> >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getRotationAnchor : return $r1
org.jfree.chart.axis.CategoryLabelPosition.getRotationAnchor : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : $d9 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: double getAngle()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d9 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: double getAngle()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : specialinvoke $r24.<org.jfree.chart.axis.CategoryTick: void <init>(java.lang.Comparable,org.jfree.text.TextBlock,org.jfree.text.TextBlockAnchor,org.jfree.ui.TextAnchor,double)>(r11, r12, $r25, $r26, $d9)
org.jfree.chart.axis.CategoryAxis.refreshTicks : specialinvoke $r24.<org.jfree.chart.axis.CategoryTick: void <init>(java.lang.Comparable,org.jfree.text.TextBlock,org.jfree.text.TextBlockAnchor,org.jfree.ui.TextAnchor,double)>(r11, r12, $r25, $r26, $d9) >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : r13 = $r24
org.jfree.chart.axis.CategoryAxis.refreshTicks : r13 = $r24 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r13)
org.jfree.chart.axis.CategoryAxis.refreshTicks : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r13) >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : i0 = i0 + 1
org.jfree.chart.axis.CategoryAxis.refreshTicks : i0 = i0 + 1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.axis.CategoryAxis.refreshTicks : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : virtualinvoke r2.<org.jfree.chart.axis.AxisState: void setMax(double)>(d0)
org.jfree.chart.axis.CategoryAxis.refreshTicks : virtualinvoke r2.<org.jfree.chart.axis.AxisState: void setMax(double)>(d0) >>>>>>>> org.jfree.chart.axis.AxisState.setMax : r0.<org.jfree.chart.axis.AxisState: double max> = d0
org.jfree.chart.axis.AxisState.setMax : r0.<org.jfree.chart.axis.AxisState: double max> = d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.refreshTicks : return r6
org.jfree.chart.axis.CategoryAxis.refreshTicks : return r6 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $r11 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r11 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : if r4 != $r11
org.jfree.chart.axis.CategoryAxis.reserveSpace : if r4 != $r11 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $r12 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r12 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : if r4 != $r12
org.jfree.chart.axis.CategoryAxis.reserveSpace : if r4 != $r12 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : d0 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getMax()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : d0 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getMax()>() >>>>>>>> org.jfree.chart.axis.AxisState.getMax : $d0 = r0.<org.jfree.chart.axis.AxisState: double max>
org.jfree.chart.axis.AxisState.getMax : $d0 = r0.<org.jfree.chart.axis.AxisState: double max> >>>>>>>> org.jfree.chart.axis.AxisState.getMax : return $d0
org.jfree.chart.axis.AxisState.getMax : return $d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : goto [?= r15 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)]
org.jfree.chart.axis.CategoryAxis.reserveSpace : goto [?= r15 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)] >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : r15 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)
org.jfree.chart.axis.CategoryAxis.reserveSpace : r15 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $r14 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.axis.Axis.getLabelEnclosure : $r14 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT> >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : if r2 != $r14
org.jfree.chart.axis.Axis.getLabelEnclosure : if r2 != $r14 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.CategoryAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : if $z2 == 0
org.jfree.chart.axis.CategoryAxis.reserveSpace : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : d2 = virtualinvoke r15.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : d2 = virtualinvoke r15.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $d4 = d2 + d0
org.jfree.chart.axis.CategoryAxis.reserveSpace : $d4 = d2 + d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $i0 = r0.<org.jfree.chart.axis.CategoryAxis: int categoryLabelPositionOffset>
org.jfree.chart.axis.CategoryAxis.reserveSpace : $i0 = r0.<org.jfree.chart.axis.CategoryAxis: int categoryLabelPositionOffset> >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $d5 = (double) $i0
org.jfree.chart.axis.CategoryAxis.reserveSpace : $d5 = (double) $i0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : $d6 = $d4 + $d5
org.jfree.chart.axis.CategoryAxis.reserveSpace : $d6 = $d4 + $d5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : virtualinvoke r5.<org.jfree.chart.axis.AxisSpace: void add(double,org.jfree.ui.RectangleEdge)>($d6, r4)
org.jfree.chart.axis.CategoryAxis.reserveSpace : virtualinvoke r5.<org.jfree.chart.axis.AxisSpace: void add(double,org.jfree.ui.RectangleEdge)>($d6, r4) >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $d3 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.add : $d3 = r0.<org.jfree.chart.axis.AxisSpace: double bottom> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $d4 = $d3 + d0
org.jfree.chart.axis.AxisSpace.add : $d4 = $d3 + d0 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : r0.<org.jfree.chart.axis.AxisSpace: double bottom> = $d4
org.jfree.chart.axis.AxisSpace.add : r0.<org.jfree.chart.axis.AxisSpace: double bottom> = $d4 >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : goto [?= return r5]
org.jfree.chart.axis.CategoryAxis.reserveSpace : goto [?= return r5] >>>>>>>> org.jfree.chart.axis.CategoryAxis.reserveSpace : return r5
org.jfree.chart.axis.CategoryAxis.reserveSpace : return r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : goto [?= $r24 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : goto [?= $r24 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : return r3
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : return r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : return r6
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : return r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r8 = virtualinvoke r7.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.CategoryPlot.draw : r8 = virtualinvoke r7.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null) >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : if r2 != null
org.jfree.chart.axis.AxisSpace.shrink : if r2 != null >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $r3 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.AxisSpace.shrink : $r3 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : specialinvoke $r3.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.axis.AxisSpace.shrink : specialinvoke $r3.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : r2 = $r3
org.jfree.chart.axis.AxisSpace.shrink : r2 = $r3 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.AxisSpace.shrink : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d1 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.shrink : $d1 = r0.<org.jfree.chart.axis.AxisSpace: double left> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d2 = $d0 + $d1
org.jfree.chart.axis.AxisSpace.shrink : $d2 = $d0 + $d1 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.axis.AxisSpace.shrink : $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d4 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.shrink : $d4 = r0.<org.jfree.chart.axis.AxisSpace: double top> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d5 = $d3 + $d4
org.jfree.chart.axis.AxisSpace.shrink : $d5 = $d3 + $d4 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.AxisSpace.shrink : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d7 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.shrink : $d7 = r0.<org.jfree.chart.axis.AxisSpace: double left> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d8 = $d6 - $d7
org.jfree.chart.axis.AxisSpace.shrink : $d8 = $d6 - $d7 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d9 = r0.<org.jfree.chart.axis.AxisSpace: double right>
org.jfree.chart.axis.AxisSpace.shrink : $d9 = r0.<org.jfree.chart.axis.AxisSpace: double right> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d10 = $d8 - $d9
org.jfree.chart.axis.AxisSpace.shrink : $d10 = $d8 - $d9 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.AxisSpace.shrink : $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d12 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.shrink : $d12 = r0.<org.jfree.chart.axis.AxisSpace: double top> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d13 = $d11 - $d12
org.jfree.chart.axis.AxisSpace.shrink : $d13 = $d11 - $d12 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d14 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.shrink : $d14 = r0.<org.jfree.chart.axis.AxisSpace: double bottom> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d15 = $d13 - $d14
org.jfree.chart.axis.AxisSpace.shrink : $d15 = $d13 - $d14 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d2, $d5, $d10, $d15)
org.jfree.chart.axis.AxisSpace.shrink : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d2, $d5, $d10, $d15) >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : return r2
org.jfree.chart.axis.AxisSpace.shrink : return r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r23 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.CategoryPlot.draw : $r23 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke $r23.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke $r23.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r24 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Rectangle integerise(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.plot.CategoryPlot.draw : r24 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Rectangle integerise(java.awt.geom.Rectangle2D)>(r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.plot.CategoryPlot.integerise : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0)
org.jfree.chart.plot.CategoryPlot.integerise : $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : i0 = (int) $d1
org.jfree.chart.plot.CategoryPlot.integerise : i0 = (int) $d1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.CategoryPlot.integerise : $d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2)
org.jfree.chart.plot.CategoryPlot.integerise : $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : i1 = (int) $d3
org.jfree.chart.plot.CategoryPlot.integerise : i1 = (int) $d3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.CategoryPlot.integerise : $d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4)
org.jfree.chart.plot.CategoryPlot.integerise : $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4) >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : i2 = (int) $d5
org.jfree.chart.plot.CategoryPlot.integerise : i2 = (int) $d5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.plot.CategoryPlot.integerise : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $d7 = staticinvoke <java.lang.Math: double floor(double)>($d6)
org.jfree.chart.plot.CategoryPlot.integerise : $d7 = staticinvoke <java.lang.Math: double floor(double)>($d6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : i3 = (int) $d7
org.jfree.chart.plot.CategoryPlot.integerise : i3 = (int) $d7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $r2 = new java.awt.Rectangle
org.jfree.chart.plot.CategoryPlot.integerise : $r2 = new java.awt.Rectangle >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $i4 = i2 - i0
org.jfree.chart.plot.CategoryPlot.integerise : $i4 = i2 - i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : $i5 = i3 - i1
org.jfree.chart.plot.CategoryPlot.integerise : $i5 = i3 - i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : specialinvoke $r2.<java.awt.Rectangle: void <init>(int,int,int,int)>(i0, i1, $i4, $i5)
org.jfree.chart.plot.CategoryPlot.integerise : specialinvoke $r2.<java.awt.Rectangle: void <init>(int,int,int,int)>(i0, i1, $i4, $i5) >>>>>>>> org.jfree.chart.plot.CategoryPlot.integerise : return $r2
org.jfree.chart.plot.CategoryPlot.integerise : return $r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z4 = virtualinvoke r24.<java.awt.geom.Rectangle2D: boolean isEmpty()>()
org.jfree.chart.plot.CategoryPlot.draw : $z4 = virtualinvoke r24.<java.awt.geom.Rectangle2D: boolean isEmpty()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $z4 == 0
org.jfree.chart.plot.CategoryPlot.draw : if $z4 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setDataArea(java.awt.geom.Rectangle2D)>(r24)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setDataArea(java.awt.geom.Rectangle2D)>(r24) >>>>>>>> org.jfree.chart.plot.PlotRenderingInfo.setDataArea : r0.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea> = r1
org.jfree.chart.plot.PlotRenderingInfo.setDataArea : r0.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r25 = virtualinvoke r24.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.draw : $r25 = virtualinvoke r24.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r26 = (java.awt.geom.Rectangle2D) $r25
org.jfree.chart.plot.CategoryPlot.draw : $r26 = (java.awt.geom.Rectangle2D) $r25 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)>($r26, r5, null, null)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)>($r26, r5, null, null) >>>>>>>> org.jfree.chart.plot.Plot.createAndAddEntity : if r2 == null
org.jfree.chart.plot.Plot.createAndAddEntity : if r2 == null >>>>>>>> org.jfree.chart.plot.Plot.createAndAddEntity : $r7 = virtualinvoke r2.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>()
org.jfree.chart.plot.Plot.createAndAddEntity : $r7 = virtualinvoke r2.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>() >>>>>>>> org.jfree.chart.plot.PlotRenderingInfo.getOwner : $r1 = r0.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo owner>
org.jfree.chart.plot.PlotRenderingInfo.getOwner : $r1 = r0.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo owner> >>>>>>>> org.jfree.chart.plot.PlotRenderingInfo.getOwner : return $r1
org.jfree.chart.plot.PlotRenderingInfo.getOwner : return $r1 >>>>>>>> org.jfree.chart.plot.Plot.createAndAddEntity : if $r7 == null
org.jfree.chart.plot.Plot.createAndAddEntity : if $r7 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r27 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.draw : $r27 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRenderer : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRenderer : return $r1
org.jfree.chart.plot.CategoryPlot.getRenderer : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $r27 == null
org.jfree.chart.plot.CategoryPlot.draw : if $r27 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r28 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.draw : $r28 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : interfaceinvoke $r28.<org.jfree.chart.renderer.category.CategoryItemRenderer: void drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)>(r1, r0, r24)
org.jfree.chart.plot.CategoryPlot.draw : interfaceinvoke $r28.<org.jfree.chart.renderer.category.CategoryItemRenderer: void drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)>(r1, r0, r24) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawBackground : virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r3)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawBackground : virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawBackground : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.drawBackground : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)>(r1, r2, $r3)
org.jfree.chart.plot.CategoryPlot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)>(r1, r2, $r3) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "orientation")
org.jfree.chart.plot.Plot.fillBackground : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "orientation") >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : if $r6 != null
org.jfree.chart.plot.Plot.fillBackground : if $r6 != null >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $z0 = r4 instanceof java.awt.GradientPaint
org.jfree.chart.plot.Plot.fillBackground : $z0 = r4 instanceof java.awt.GradientPaint >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : if $z0 == 0
org.jfree.chart.plot.Plot.fillBackground : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : r15 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.Plot.fillBackground : r15 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>() >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $f8 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.fillBackground : $f8 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $r16 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f8)
org.jfree.chart.plot.Plot.fillBackground : $r16 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f8) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r16)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r16) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r15)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r15) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.CategoryPlot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.Plot.drawBackgroundImage : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.plot.Plot.drawBackgroundImage : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.plot.Plot.drawBackgroundImage : if $r6 != null
org.jfree.chart.plot.Plot.drawBackgroundImage : if $r6 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : goto [?= r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r24, r5)]
org.jfree.chart.plot.CategoryPlot.draw : goto [?= r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r24, r5)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r24, r5)
org.jfree.chart.plot.CategoryPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r24, r5) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r5 = new org.jfree.chart.axis.AxisCollection
org.jfree.chart.plot.CategoryPlot.drawAxes : $r5 = new org.jfree.chart.axis.AxisCollection >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : specialinvoke $r5.<org.jfree.chart.axis.AxisCollection: void <init>()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : specialinvoke $r5.<org.jfree.chart.axis.AxisCollection: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r6 = $r5
org.jfree.chart.plot.CategoryPlot.drawAxes : r6 = $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.drawAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r12 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r12 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $i1 = virtualinvoke $r12.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $i1 = virtualinvoke $r12.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.drawAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r14 = virtualinvoke $r13.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawAxes : $r14 = virtualinvoke $r13.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r7 = (org.jfree.chart.axis.CategoryAxis) $r14
org.jfree.chart.plot.CategoryPlot.drawAxes : r7 = (org.jfree.chart.axis.CategoryAxis) $r14 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if r7 == null
org.jfree.chart.plot.CategoryPlot.drawAxes : if r7 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawAxes : $r15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: void add(org.jfree.chart.axis.Axis,org.jfree.ui.RectangleEdge)>(r7, $r15)
org.jfree.chart.plot.CategoryPlot.drawAxes : virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: void add(org.jfree.chart.axis.Axis,org.jfree.ui.RectangleEdge)>(r7, $r15) >>>>>>>> org.jfree.chart.axis.AxisCollection.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axis")
org.jfree.chart.axis.AxisCollection.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axis") >>>>>>>> org.jfree.chart.axis.AxisCollection.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "edge")
org.jfree.chart.axis.AxisCollection.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "edge") >>>>>>>> org.jfree.chart.axis.AxisCollection.add : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.AxisCollection.add : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.AxisCollection.add : if r2 != $r3
org.jfree.chart.axis.AxisCollection.add : if r2 != $r3 >>>>>>>> org.jfree.chart.axis.AxisCollection.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.AxisCollection.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.AxisCollection.add : if r2 != $r5
org.jfree.chart.axis.AxisCollection.add : if r2 != $r5 >>>>>>>> org.jfree.chart.axis.AxisCollection.add : $r6 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtBottom>
org.jfree.chart.axis.AxisCollection.add : $r6 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtBottom> >>>>>>>> org.jfree.chart.axis.AxisCollection.add : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.AxisCollection.add : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.AxisCollection.add : goto [?= return]
org.jfree.chart.axis.AxisCollection.add : goto [?= return] >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.drawAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= $r12 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= $r12 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : i2 = 0
org.jfree.chart.plot.CategoryPlot.drawAxes : i2 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r16 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r16 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $i3 = virtualinvoke $r16.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $i3 = virtualinvoke $r16.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if i2 >= $i3
org.jfree.chart.plot.CategoryPlot.drawAxes : if i2 >= $i3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r17 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r17 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r18 = virtualinvoke $r17.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i2)
org.jfree.chart.plot.CategoryPlot.drawAxes : $r18 = virtualinvoke $r17.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r19 = (org.jfree.chart.axis.ValueAxis) $r18
org.jfree.chart.plot.CategoryPlot.drawAxes : r19 = (org.jfree.chart.axis.ValueAxis) $r18 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if r19 == null
org.jfree.chart.plot.CategoryPlot.drawAxes : if r19 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r20 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i2)
org.jfree.chart.plot.CategoryPlot.drawAxes : $r20 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: void add(org.jfree.chart.axis.Axis,org.jfree.ui.RectangleEdge)>(r19, $r20)
org.jfree.chart.plot.CategoryPlot.drawAxes : virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: void add(org.jfree.chart.axis.Axis,org.jfree.ui.RectangleEdge)>(r19, $r20) >>>>>>>> org.jfree.chart.axis.AxisCollection.add : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.AxisCollection.add : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.AxisCollection.add : if r2 != $r7
org.jfree.chart.axis.AxisCollection.add : if r2 != $r7 >>>>>>>> org.jfree.chart.axis.AxisCollection.add : $r8 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft>
org.jfree.chart.axis.AxisCollection.add : $r8 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft> >>>>>>>> org.jfree.chart.axis.AxisCollection.add : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.AxisCollection.add : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : i2 = i2 + 1
org.jfree.chart.plot.CategoryPlot.drawAxes : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= $r16 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= $r16 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r21 = new java.util.HashMap
org.jfree.chart.plot.CategoryPlot.drawAxes : $r21 = new java.util.HashMap >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r22 = $r21
org.jfree.chart.plot.CategoryPlot.drawAxes : r22 = $r21 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r23 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r23 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d2 = virtualinvoke $r23.<org.jfree.ui.RectangleInsets: double calculateTopOutset(double)>($d1)
org.jfree.chart.plot.CategoryPlot.drawAxes : $d2 = virtualinvoke $r23.<org.jfree.ui.RectangleInsets: double calculateTopOutset(double)>($d1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : d3 = $d0 - $d2
org.jfree.chart.plot.CategoryPlot.drawAxes : d3 = $d0 - $d2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r24 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtTop()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r24 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtTop()>() >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtTop : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtTop>
org.jfree.chart.axis.AxisCollection.getAxesAtTop : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtTop> >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtTop : return $r1
org.jfree.chart.axis.AxisCollection.getAxesAtTop : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r8 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : r8 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.drawAxes : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d4 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d4 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r27 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r27 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d6 = virtualinvoke $r27.<org.jfree.ui.RectangleInsets: double calculateBottomOutset(double)>($d5)
org.jfree.chart.plot.CategoryPlot.drawAxes : $d6 = virtualinvoke $r27.<org.jfree.ui.RectangleInsets: double calculateBottomOutset(double)>($d5) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : d7 = $d4 + $d6
org.jfree.chart.plot.CategoryPlot.drawAxes : d7 = $d4 + $d6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r28 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtBottom()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r28 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtBottom()>() >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtBottom : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtBottom>
org.jfree.chart.axis.AxisCollection.getAxesAtBottom : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtBottom> >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtBottom : return $r1
org.jfree.chart.axis.AxisCollection.getAxesAtBottom : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if $z1 == 0
org.jfree.chart.plot.CategoryPlot.drawAxes : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r31 = (org.jfree.chart.axis.Axis) $r30
org.jfree.chart.plot.CategoryPlot.drawAxes : r31 = (org.jfree.chart.axis.Axis) $r30 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if r31 == null
org.jfree.chart.plot.CategoryPlot.drawAxes : if r31 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r32 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r32 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r33 = virtualinvoke r31.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(r1, d7, r2, r3, $r32, r4)
org.jfree.chart.plot.CategoryPlot.drawAxes : r33 = virtualinvoke r31.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(r1, d7, r2, r3, $r32, r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isVisible()>()
org.jfree.chart.axis.CategoryAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isVisible()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : if $z0 != 0
org.jfree.chart.axis.CategoryAxis.draw : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : $z1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isAxisLineVisible()>()
org.jfree.chart.axis.CategoryAxis.draw : $z1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isAxisLineVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isAxisLineVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible>
org.jfree.chart.axis.Axis.isAxisLineVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible> >>>>>>>> org.jfree.chart.axis.Axis.isAxisLineVisible : return $z0
org.jfree.chart.axis.Axis.isAxisLineVisible : return $z0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : if $z1 == 0
org.jfree.chart.axis.CategoryAxis.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4)
org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4) >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : r4 = null
org.jfree.chart.axis.Axis.drawAxisLine : r4 = null >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.Axis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : if r3 != $r5
org.jfree.chart.axis.Axis.drawAxisLine : if r3 != $r5 >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.Axis.drawAxisLine : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : if r3 != $r7
org.jfree.chart.axis.Axis.drawAxisLine : if r3 != $r7 >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : $r8 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.Axis.drawAxisLine : $r8 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.Axis.drawAxisLine : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.Axis.drawAxisLine : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : specialinvoke $r8.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d3, d0, $d4, d0)
org.jfree.chart.axis.Axis.drawAxisLine : specialinvoke $r8.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d3, d0, $d4, d0) >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : r4 = $r8
org.jfree.chart.axis.Axis.drawAxisLine : r4 = $r8 >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : goto [?= $r13 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>]
org.jfree.chart.axis.Axis.drawAxisLine : goto [?= $r13 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>] >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : $r13 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.axis.Axis.drawAxisLine : $r13 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint> >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r13)
org.jfree.chart.axis.Axis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r13) >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : $r14 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.axis.Axis.drawAxisLine : $r14 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke> >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r14)
org.jfree.chart.axis.Axis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r14) >>>>>>>> org.jfree.chart.axis.Axis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.axis.Axis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : $r8 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.CategoryAxis.draw : $r8 = new org.jfree.chart.axis.AxisState >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : specialinvoke $r8.<org.jfree.chart.axis.AxisState: void <init>(double)>(d0)
org.jfree.chart.axis.CategoryAxis.draw : specialinvoke $r8.<org.jfree.chart.axis.AxisState: void <init>(double)>(d0) >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : r6 = $r8
org.jfree.chart.axis.CategoryAxis.draw : r6 = $r8 >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : $z2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickMarksVisible()>()
org.jfree.chart.axis.CategoryAxis.draw : $z2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickMarksVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible>
org.jfree.chart.axis.Axis.isTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.isTickMarksVisible : return $z0
org.jfree.chart.axis.Axis.isTickMarksVisible : return $z0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : if $z2 == 0
org.jfree.chart.axis.CategoryAxis.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>(r1, d0, r3, r4, r6)
org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>(r1, d0, r3, r4, r6) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : r5 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r5 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : if r5 != null
org.jfree.chart.axis.CategoryAxis.drawTickMarks : if r5 != null >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : r6 = (org.jfree.chart.plot.CategoryPlot) r5
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r6 = (org.jfree.chart.plot.CategoryPlot) r5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $f0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: float getTickMarkInsideLength()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $f0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: float getTickMarkInsideLength()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkInsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkInsideLength>
org.jfree.chart.axis.Axis.getTickMarkInsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkInsideLength> >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkInsideLength : return $f0
org.jfree.chart.axis.Axis.getTickMarkInsideLength : return $f0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : d1 = (double) $f0
org.jfree.chart.axis.CategoryAxis.drawTickMarks : d1 = (double) $f0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $f1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: float getTickMarkOutsideLength()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $f1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: float getTickMarkOutsideLength()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkOutsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength>
org.jfree.chart.axis.Axis.getTickMarkOutsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength> >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkOutsideLength : return $f0
org.jfree.chart.axis.Axis.getTickMarkOutsideLength : return $f0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : d2 = (double) $f1
org.jfree.chart.axis.CategoryAxis.drawTickMarks : d2 = (double) $f1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r11 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r11 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : specialinvoke $r11.<java.awt.geom.Line2D$Double: void <init>()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : specialinvoke $r11.<java.awt.geom.Line2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : r7 = $r11
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r7 = $r11 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : r8 = virtualinvoke r6.<org.jfree.chart.plot.CategoryPlot: java.util.List getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)>(r0)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r8 = virtualinvoke r6.<org.jfree.chart.plot.CategoryPlot: java.util.List getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)>(r0) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r12 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickMarkPaint()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r12 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickMarkPaint()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint>
org.jfree.chart.axis.Axis.getTickMarkPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint> >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkPaint : return $r1
org.jfree.chart.axis.Axis.getTickMarkPaint : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r12)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r12) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r13 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Stroke getTickMarkStroke()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r13 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Stroke getTickMarkStroke()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke>
org.jfree.chart.axis.Axis.getTickMarkStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke> >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkStroke : return $r1
org.jfree.chart.axis.Axis.getTickMarkStroke : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r13)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r13) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r14 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r14 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $z0 = virtualinvoke r3.<org.jfree.ui.RectangleEdge: boolean equals(java.lang.Object)>($r14)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $z0 = virtualinvoke r3.<org.jfree.ui.RectangleEdge: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : if $z0 == 0
org.jfree.chart.axis.CategoryAxis.drawTickMarks : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $z2 = virtualinvoke r3.<org.jfree.ui.RectangleEdge: boolean equals(java.lang.Object)>($r16)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $z2 = virtualinvoke r3.<org.jfree.ui.RectangleEdge: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : if $z2 == 0
org.jfree.chart.axis.CategoryAxis.drawTickMarks : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : r17 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r17 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : if $z3 == 0
org.jfree.chart.axis.CategoryAxis.drawTickMarks : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : r19 = (java.lang.Comparable) $r18
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r19 = (java.lang.Comparable) $r18 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : d6 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r19, r8, r2, r3)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : d6 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r19, r8, r2, r3) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "categories")
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "categories") >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : i0 = interfaceinvoke r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : i0 = interfaceinvoke r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : i1 = interfaceinvoke r2.<java.util.List: int size()>()
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : i1 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, i1, r3, r4)
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, i1, r3, r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : if i0 < 0
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : if i0 < 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : if i0 < i1
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : if i0 < i1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, i1, r1, r2)
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, i1, r1, r2) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : d0 = 0.0
org.jfree.chart.axis.CategoryAxis.getCategoryStart : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : if r2 == $r3
org.jfree.chart.axis.CategoryAxis.getCategoryStart : if r2 == $r3 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : if r2 != $r4
org.jfree.chart.axis.CategoryAxis.getCategoryStart : if r2 != $r4 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d5 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getLowerMargin()>()
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d5 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getLowerMargin()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d6 = $d4 * $d5
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d6 = $d4 * $d5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : d0 = $d3 + $d6
org.jfree.chart.axis.CategoryAxis.getCategoryStart : d0 = $d3 + $d6 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : goto [?= d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2)]
org.jfree.chart.axis.CategoryAxis.getCategoryStart : goto [?= d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2)] >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2)
org.jfree.chart.axis.CategoryAxis.getCategoryStart : d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : d2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2)
org.jfree.chart.axis.CategoryAxis.getCategoryStart : d2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2) >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : d0 = 0.0
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : d1 = 0.0
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : d1 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : if r2 == $r3
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : if r2 == $r3 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : if r2 != $r4
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : if r2 != $r4 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : goto [?= (branch)]
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : if i0 <= 1
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : if i0 <= 1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : return d0
org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize : return d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d11 = (double) i0
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d11 = (double) i0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d12 = d1 + d2
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d12 = d1 + d2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d13 = $d11 * $d12
org.jfree.chart.axis.CategoryAxis.getCategoryStart : $d13 = $d11 * $d12 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : d14 = d0 + $d13
org.jfree.chart.axis.CategoryAxis.getCategoryStart : d14 = d0 + $d13 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryStart : return d14
org.jfree.chart.axis.CategoryAxis.getCategoryStart : return d14 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2)
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d2 = $d1 / 2.0
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d2 = $d1 / 2.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d3 = $d0 + $d2
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : $d3 = $d0 + $d2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : return $d3
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : return $d3 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : return $d0
org.jfree.chart.axis.CategoryAxis.getCategoryMiddle : return $d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $d7 = d0 - d1
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $d7 = d0 - d1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r7.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d6, d0, d6, $d7)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r7.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d6, d0, d6, $d7) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r7)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r7) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : $d8 = d0 + d2
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $d8 = d0 + d2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r7.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d6, d0, d6, $d8)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r7.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d6, d0, d6, $d8) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : goto [?= $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.axis.CategoryAxis.drawTickMarks : goto [?= $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r4.<org.jfree.chart.axis.AxisState: void cursorDown(double)>(d2)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r4.<org.jfree.chart.axis.AxisState: void cursorDown(double)>(d2) >>>>>>>> org.jfree.chart.axis.AxisState.cursorDown : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.axis.AxisState.cursorDown : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor> >>>>>>>> org.jfree.chart.axis.AxisState.cursorDown : $d2 = $d1 + d0
org.jfree.chart.axis.AxisState.cursorDown : $d2 = $d1 + d0 >>>>>>>> org.jfree.chart.axis.AxisState.cursorDown : r0.<org.jfree.chart.axis.AxisState: double cursor> = $d2
org.jfree.chart.axis.AxisState.cursorDown : r0.<org.jfree.chart.axis.AxisState: double cursor> = $d2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawTickMarks : goto [?= return]
org.jfree.chart.axis.CategoryAxis.drawTickMarks : goto [?= return] >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r6, r3, r4, r5)
org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r6, r3, r4, r5) >>>>>>>> org.jfree.chart.axis.Axis.createAndAddEntity : if r4 == null
org.jfree.chart.axis.Axis.createAndAddEntity : if r4 == null >>>>>>>> org.jfree.chart.axis.Axis.createAndAddEntity : $r8 = virtualinvoke r4.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>()
org.jfree.chart.axis.Axis.createAndAddEntity : $r8 = virtualinvoke r4.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>() >>>>>>>> org.jfree.chart.axis.Axis.createAndAddEntity : if $r8 != null
org.jfree.chart.axis.Axis.createAndAddEntity : if $r8 != null >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r3, r4, r6, r5)
org.jfree.chart.axis.CategoryAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r3, r4, r6, r5) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r5, "state")
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r5, "state") >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickLabelsVisible()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $z0 == 0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r5, r2, r4)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r5, r2, r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r5.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r5.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7) >>>>>>>> org.jfree.chart.axis.AxisState.setTicks : r0.<org.jfree.chart.axis.AxisState: java.util.List ticks> = r1
org.jfree.chart.axis.AxisState.setTicks : r0.<org.jfree.chart.axis.AxisState: java.util.List ticks> = r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : i0 = 0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : i0 = 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $z1 == 0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r17 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r17 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r9 = (org.jfree.chart.axis.CategoryTick) $r17
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r9 = (org.jfree.chart.axis.CategoryTick) $r17 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r18 = virtualinvoke r9.<org.jfree.chart.axis.CategoryTick: java.lang.Comparable getCategory()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r18 = virtualinvoke r9.<org.jfree.chart.axis.CategoryTick: java.lang.Comparable getCategory()>() >>>>>>>> org.jfree.chart.axis.CategoryTick.getCategory : $r1 = r0.<org.jfree.chart.axis.CategoryTick: java.lang.Comparable category>
org.jfree.chart.axis.CategoryTick.getCategory : $r1 = r0.<org.jfree.chart.axis.CategoryTick: java.lang.Comparable category> >>>>>>>> org.jfree.chart.axis.CategoryTick.getCategory : return $r1
org.jfree.chart.axis.CategoryTick.getCategory : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r19 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont(java.lang.Comparable)>($r18)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r19 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont(java.lang.Comparable)>($r18) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r19)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r19) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r20 = virtualinvoke r9.<org.jfree.chart.axis.CategoryTick: java.lang.Comparable getCategory()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r20 = virtualinvoke r9.<org.jfree.chart.axis.CategoryTick: java.lang.Comparable getCategory()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r21 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickLabelPaint(java.lang.Comparable)>($r20)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r21 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickLabelPaint(java.lang.Comparable)>($r20) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r21)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r21) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r22 = r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r22 = r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r10 = virtualinvoke $r22.<org.jfree.chart.axis.CategoryLabelPositions: org.jfree.chart.axis.CategoryLabelPosition getLabelPosition(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r10 = virtualinvoke $r22.<org.jfree.chart.axis.CategoryLabelPositions: org.jfree.chart.axis.CategoryLabelPosition getLabelPosition(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d0 = 0.0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d1 = 0.0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d1 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d2 = 0.0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d2 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d3 = 0.0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r23 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r23 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if r4 != $r23
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if r4 != $r23 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r24 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r24 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if r4 != $r24
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if r4 != $r24 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $i4 = interfaceinvoke r7.<java.util.List: int size()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $i4 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, $i4, r3, r4)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, $i4, r3, r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $i5 = interfaceinvoke r7.<java.util.List: int size()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $i5 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, $i5, r3, r4)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, $i5, r3, r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryEnd : $d0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, i1, r1, r2)
org.jfree.chart.axis.CategoryAxis.getCategoryEnd : $d0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i0, i1, r1, r2) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryEnd : $d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2)
org.jfree.chart.axis.CategoryAxis.getCategoryEnd : $d1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: double calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, r1, r2) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryEnd : $d2 = $d0 + $d1
org.jfree.chart.axis.CategoryAxis.getCategoryEnd : $d2 = $d0 + $d1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryEnd : return $d2
org.jfree.chart.axis.CategoryAxis.getCategoryEnd : return $d2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d7 = virtualinvoke r5.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d7 = virtualinvoke r5.<org.jfree.chart.axis.AxisState: double getCursor()>() >>>>>>>> org.jfree.chart.axis.AxisState.getCursor : $d0 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.axis.AxisState.getCursor : $d0 = r0.<org.jfree.chart.axis.AxisState: double cursor> >>>>>>>> org.jfree.chart.axis.AxisState.getCursor : return $d0
org.jfree.chart.axis.AxisState.getCursor : return $d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $i6 = r0.<org.jfree.chart.axis.CategoryAxis: int categoryLabelPositionOffset>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $i6 = r0.<org.jfree.chart.axis.CategoryAxis: int categoryLabelPositionOffset> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d8 = (double) $i6
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d8 = (double) $i6 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d2 = $d7 + $d8
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d2 = $d7 + $d8 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d9 = virtualinvoke r5.<org.jfree.chart.axis.AxisState: double getMax()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d9 = virtualinvoke r5.<org.jfree.chart.axis.AxisState: double getMax()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d3 = d2 + $d9
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d3 = d2 + $d9 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : goto [?= $r27 = new java.awt.geom.Rectangle2D$Double]
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : goto [?= $r27 = new java.awt.geom.Rectangle2D$Double] >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r27 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d16 = d1 - d0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d16 = d1 - d0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d17 = d3 - d2
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d17 = d3 - d2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d2, $d16, $d17)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d2, $d16, $d17) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r11 = $r27
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r11 = $r27 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r28 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.ui.RectangleAnchor getCategoryAnchor()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r28 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.ui.RectangleAnchor getCategoryAnchor()>() >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getCategoryAnchor : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.ui.RectangleAnchor categoryAnchor>
org.jfree.chart.axis.CategoryLabelPosition.getCategoryAnchor : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.ui.RectangleAnchor categoryAnchor> >>>>>>>> org.jfree.chart.axis.CategoryLabelPosition.getCategoryAnchor : return $r1
org.jfree.chart.axis.CategoryLabelPosition.getCategoryAnchor : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r12 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r11, $r28)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r12 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r11, $r28) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r13 = virtualinvoke r9.<org.jfree.chart.axis.CategoryTick: org.jfree.text.TextBlock getLabel()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r13 = virtualinvoke r9.<org.jfree.chart.axis.CategoryTick: org.jfree.text.TextBlock getLabel()>() >>>>>>>> org.jfree.chart.axis.CategoryTick.getLabel : $r1 = r0.<org.jfree.chart.axis.CategoryTick: org.jfree.text.TextBlock label>
org.jfree.chart.axis.CategoryTick.getLabel : $r1 = r0.<org.jfree.chart.axis.CategoryTick: org.jfree.text.TextBlock label> >>>>>>>> org.jfree.chart.axis.CategoryTick.getLabel : return $r1
org.jfree.chart.axis.CategoryTick.getLabel : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d18 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d18 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f0 = (float) $d18
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f0 = (float) $d18 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d19 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d19 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f1 = (float) $d19
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f1 = (float) $d19 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r29 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.text.TextBlockAnchor getLabelAnchor()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r29 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.text.TextBlockAnchor getLabelAnchor()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d20 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d20 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f2 = (float) $d20
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f2 = (float) $d20 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d21 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d21 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f3 = (float) $d21
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f3 = (float) $d21 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d22 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: double getAngle()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d22 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: double getAngle()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r13.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor,float,float,double)>(r1, $f0, $f1, $r29, $f2, $f3, $d22)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r13.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor,float,float,double)>(r1, $f0, $f1, $r29, $f2, $f3, $d22) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d23 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d23 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f4 = (float) $d23
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f4 = (float) $d23 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d24 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d24 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f5 = (float) $d24
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f5 = (float) $d24 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r30 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.text.TextBlockAnchor getLabelAnchor()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r30 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.text.TextBlockAnchor getLabelAnchor()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d25 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d25 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f6 = (float) $d25
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f6 = (float) $d25 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d26 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d26 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f7 = (float) $d26
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $f7 = (float) $d26 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d27 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: double getAngle()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d27 = virtualinvoke r10.<org.jfree.chart.axis.CategoryLabelPosition: double getAngle()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r14 = virtualinvoke r13.<org.jfree.text.TextBlock: java.awt.Shape calculateBounds(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor,float,float,double)>(r1, $f4, $f5, $r30, $f6, $f7, $d27)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r14 = virtualinvoke r13.<org.jfree.text.TextBlock: java.awt.Shape calculateBounds(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor,float,float,double)>(r1, $f4, $f5, $r30, $f6, $f7, $d27) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if r6 == null
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if r6 == null >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r31 = virtualinvoke r6.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r31 = virtualinvoke r6.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $r31 == null
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $r31 == null >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : i0 = i0 + 1
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : i0 = i0 + 1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z2 = virtualinvoke r4.<org.jfree.ui.RectangleEdge: boolean equals(java.lang.Object)>($r36)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z2 = virtualinvoke r4.<org.jfree.ui.RectangleEdge: boolean equals(java.lang.Object)>($r36) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $z2 == 0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r37 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r37 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z3 = virtualinvoke r4.<org.jfree.ui.RectangleEdge: boolean equals(java.lang.Object)>($r37)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z3 = virtualinvoke r4.<org.jfree.ui.RectangleEdge: boolean equals(java.lang.Object)>($r37) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $z3 == 0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d31 = virtualinvoke r5.<org.jfree.chart.axis.AxisState: double getMax()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d31 = virtualinvoke r5.<org.jfree.chart.axis.AxisState: double getMax()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $i14 = r0.<org.jfree.chart.axis.CategoryAxis: int categoryLabelPositionOffset>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $i14 = r0.<org.jfree.chart.axis.CategoryAxis: int categoryLabelPositionOffset> >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d32 = (double) $i14
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d32 = (double) $i14 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d33 = $d31 + $d32
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : d33 = $d31 + $d32 >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r5.<org.jfree.chart.axis.AxisState: void cursorDown(double)>(d33)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r5.<org.jfree.chart.axis.AxisState: void cursorDown(double)>(d33) >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : goto [?= return r5]
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : goto [?= return r5] >>>>>>>> org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : return r5
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : return r5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.CategoryAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : r11 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>($r10, r1, r2, r3, r4, r9)
org.jfree.chart.axis.CategoryAxis.draw : r11 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>($r10, r1, r2, r3, r4, r9) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r6, "state")
org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r6, "state") >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if r1 == null
org.jfree.chart.axis.Axis.drawLabel : if r1 == null >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("")
org.jfree.chart.axis.Axis.drawLabel : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if $z0 == 0
org.jfree.chart.axis.Axis.drawLabel : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r7 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>()
org.jfree.chart.axis.Axis.drawLabel : r7 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>()
org.jfree.chart.axis.Axis.drawLabel : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r7)
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r7) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r14 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Paint getLabelPaint()>()
org.jfree.chart.axis.Axis.drawLabel : $r14 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Paint getLabelPaint()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint>
org.jfree.chart.axis.Axis.getLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.axis.Axis.getLabelPaint : return $r1
org.jfree.chart.axis.Axis.getLabelPaint : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14)
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r9 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>()
org.jfree.chart.axis.Axis.drawLabel : r9 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r10 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r1, r2, r9)
org.jfree.chart.axis.Axis.drawLabel : r10 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r1, r2, r9) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r15 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.Axis.drawLabel : $r15 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if r5 != $r15
org.jfree.chart.axis.Axis.drawLabel : if r5 != $r15 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r18 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.Axis.drawLabel : $r18 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if r5 != $r18
org.jfree.chart.axis.Axis.drawLabel : if r5 != $r18 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d16 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : $d16 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d17 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.drawLabel : $d17 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d18 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : $d18 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r19 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d16, $d17, $d18)
org.jfree.chart.axis.Axis.drawLabel : r19 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d16, $d17, $d18) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r20 = virtualinvoke r19.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10)
org.jfree.chart.axis.Axis.drawLabel : r20 = virtualinvoke r19.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r21 = interfaceinvoke r20.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.drawLabel : r21 = interfaceinvoke r20.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : d19 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.drawLabel : d19 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d20 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.axis.Axis.drawLabel : $d20 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d21 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.Axis.drawLabel : $d21 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d22 = $d20 + $d21
org.jfree.chart.axis.Axis.drawLabel : $d22 = $d20 + $d21 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d23 = virtualinvoke r21.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.Axis.drawLabel : $d23 = virtualinvoke r21.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d24 = $d23 / 2.0
org.jfree.chart.axis.Axis.drawLabel : $d24 = $d23 / 2.0 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : d25 = $d22 + $d24
org.jfree.chart.axis.Axis.drawLabel : d25 = $d22 + $d24 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $f2 = (float) d19
org.jfree.chart.axis.Axis.drawLabel : $f2 = (float) d19 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $f3 = (float) d25
org.jfree.chart.axis.Axis.drawLabel : $f3 = (float) d25 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r22 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER>
org.jfree.chart.axis.Axis.drawLabel : $r22 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d26 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : $d26 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r23 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER>
org.jfree.chart.axis.Axis.drawLabel : $r23 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>(r1, r2, $f2, $f3, $r22, $d26, $r23)
org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>(r1, r2, $f2, $f3, $r22, $d26, $r23) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d27 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.Axis.drawLabel : $d27 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d28 = virtualinvoke r21.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.Axis.drawLabel : $d28 = virtualinvoke r21.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d29 = $d27 + $d28
org.jfree.chart.axis.Axis.drawLabel : $d29 = $d27 + $d28 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d30 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.Axis.drawLabel : $d30 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getBottom()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d31 = $d29 + $d30
org.jfree.chart.axis.Axis.drawLabel : $d31 = $d29 + $d30 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorDown(double)>($d31)
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorDown(double)>($d31) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : goto [?= return r6]
org.jfree.chart.axis.Axis.drawLabel : goto [?= return r6] >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : return r6
org.jfree.chart.axis.Axis.drawLabel : return r6 >>>>>>>> org.jfree.chart.axis.CategoryAxis.draw : return r11
org.jfree.chart.axis.CategoryAxis.draw : return r11 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : d7 = virtualinvoke r33.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : d7 = virtualinvoke r33.<org.jfree.chart.axis.AxisState: double getCursor()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r33)
org.jfree.chart.plot.CategoryPlot.drawAxes : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r33) >>>>>>>> org.jfree.chart.axis.CategoryAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.CategoryAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.hashCode : if $r1 == null
org.jfree.chart.axis.CategoryAxis.hashCode : if $r1 == null >>>>>>>> org.jfree.chart.axis.CategoryAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.CategoryAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.jfree.chart.axis.CategoryAxis.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.hashCode : return $i0
org.jfree.chart.axis.CategoryAxis.hashCode : return $i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d8 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d8 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinX()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r35 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r35 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d9 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d9 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d10 = virtualinvoke $r35.<org.jfree.ui.RectangleInsets: double calculateLeftOutset(double)>($d9)
org.jfree.chart.plot.CategoryPlot.drawAxes : $d10 = virtualinvoke $r35.<org.jfree.ui.RectangleInsets: double calculateLeftOutset(double)>($d9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : d11 = $d8 - $d10
org.jfree.chart.plot.CategoryPlot.drawAxes : d11 = $d8 - $d10 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r36 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtLeft()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r36 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtLeft()>() >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtLeft : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft>
org.jfree.chart.axis.AxisCollection.getAxesAtLeft : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft> >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtLeft : return $r1
org.jfree.chart.axis.AxisCollection.getAxesAtLeft : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r37 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : r37 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if $z2 == 0
org.jfree.chart.plot.CategoryPlot.drawAxes : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r39 = (org.jfree.chart.axis.Axis) $r38
org.jfree.chart.plot.CategoryPlot.drawAxes : r39 = (org.jfree.chart.axis.Axis) $r38 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if r39 == null
org.jfree.chart.plot.CategoryPlot.drawAxes : if r39 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r40 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r40 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r41 = virtualinvoke r39.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(r1, d11, r2, r3, $r40, r4)
org.jfree.chart.plot.CategoryPlot.drawAxes : r41 = virtualinvoke r39.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(r1, d11, r2, r3, $r40, r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : n0 = null
org.jfree.chart.axis.NumberAxis.draw : n0 = null >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVisible()>()
org.jfree.chart.axis.NumberAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVisible()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : if $z0 != 0
org.jfree.chart.axis.NumberAxis.draw : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r2, r3, r4)
org.jfree.chart.axis.NumberAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r2, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r5 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r5 = new org.jfree.chart.axis.AxisState >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : specialinvoke $r5.<org.jfree.chart.axis.AxisState: void <init>(double)>(d0)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : specialinvoke $r5.<org.jfree.chart.axis.AxisState: void <init>(double)>(d0) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r6 = $r5
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r6 = $r5 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isAxisLineVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isAxisLineVisible()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z0 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = null
org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = null >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r5
org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r5 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r10 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r10 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r10
org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r10 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r12 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r12 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r12
org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r12 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r13 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r13 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : specialinvoke $r13.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(d0, $d7, d0, $d8)
org.jfree.chart.axis.ValueAxis.drawAxisLine : specialinvoke $r13.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(d0, $d7, d0, $d8) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = $r13
org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = $r13 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : goto [?= $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>()]
org.jfree.chart.axis.ValueAxis.drawAxisLine : goto [?= $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>()] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>() >>>>>>>> org.jfree.chart.axis.Axis.getAxisLinePaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.axis.Axis.getAxisLinePaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint> >>>>>>>> org.jfree.chart.axis.Axis.getAxisLinePaint : return $r1
org.jfree.chart.axis.Axis.getAxisLinePaint : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r16)
org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r16) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r17 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getAxisLineStroke()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r17 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getAxisLineStroke()>() >>>>>>>> org.jfree.chart.axis.Axis.getAxisLineStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.axis.Axis.getAxisLineStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke> >>>>>>>> org.jfree.chart.axis.Axis.getAxisLineStroke : return $r1
org.jfree.chart.axis.Axis.getAxisLineStroke : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r17)
org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r17) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : z0 = 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : z0 = 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : z1 = 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : z1 = 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if $z2 == 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $z4 = r0.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $z4 = r0.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if $z4 == 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : if $z4 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if z0 == 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if z1 == 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : if z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r12 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r12 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r12)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r12) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z1 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r9 = (org.jfree.chart.axis.ValueTick) $r13
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r9 = (org.jfree.chart.axis.ValueTick) $r13 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z2 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r14 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickLabelPaint()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r14 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickLabelPaint()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float[] calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r9, d0, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float[] calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r9, d0, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5 = newarray (float)[2]
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5 = newarray (float)[2] >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r6
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r6 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r7
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r7 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r8 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r8 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r8
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r8 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d11 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d11 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getLeft()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d12 = d0 - $d11
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d12 = d0 - $d11 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d13 = $d12 - 2.0
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d13 = $d12 - 2.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $f4 = (float) $d13
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $f4 = (float) $d13 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5[0] = $f4
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5[0] = $f4 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d14 = virtualinvoke r1.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d14 = virtualinvoke r1.<org.jfree.chart.axis.ValueTick: double getValue()>() >>>>>>>> org.jfree.chart.axis.ValueTick.getValue : $d0 = r0.<org.jfree.chart.axis.ValueTick: double value>
org.jfree.chart.axis.ValueTick.getValue : $d0 = r0.<org.jfree.chart.axis.ValueTick: double value> >>>>>>>> org.jfree.chart.axis.ValueTick.getValue : return $d0
org.jfree.chart.axis.ValueTick.getValue : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d15 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d14, r2, r3)
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d15 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d14, r2, r3) >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $f5 = (float) $d15
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $f5 = (float) $d15 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5[1] = $f5
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5[1] = $f5 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : goto [?= return r5]
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : goto [?= return r5] >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : return r5
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : return r5 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r15 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: java.lang.String getText()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r15 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: java.lang.String getText()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f1 = r10[0]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f1 = r10[0] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f2 = r10[1]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f2 = r10[1] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r16 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getTextAnchor()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r16 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getTextAnchor()>() >>>>>>>> org.jfree.chart.axis.Tick.getTextAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.axis.Tick.getTextAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor textAnchor> >>>>>>>> org.jfree.chart.axis.Tick.getTextAnchor : return $r1
org.jfree.chart.axis.Tick.getTextAnchor : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d2 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getAngle()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d2 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getAngle()>() >>>>>>>> org.jfree.chart.axis.Tick.getAngle : $d0 = r0.<org.jfree.chart.axis.Tick: double angle>
org.jfree.chart.axis.Tick.getAngle : $d0 = r0.<org.jfree.chart.axis.Tick: double angle> >>>>>>>> org.jfree.chart.axis.Tick.getAngle : return $d0
org.jfree.chart.axis.Tick.getAngle : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r17 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getRotationAnchor()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r17 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getRotationAnchor()>() >>>>>>>> org.jfree.chart.axis.Tick.getRotationAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.axis.Tick.getRotationAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor rotationAnchor> >>>>>>>> org.jfree.chart.axis.Tick.getRotationAnchor : return $r1
org.jfree.chart.axis.Tick.getRotationAnchor : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>($r15, r1, $f1, $f2, $r16, $d2, $r17)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>($r15, r1, $f1, $f2, $r16, $d2, $r17) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickMarksVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickMarksVisible()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z3 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r18 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r18 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.axis.ValueTick.getTickType : $r1 = r0.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType tickType>
org.jfree.chart.axis.ValueTick.getTickType : $r1 = r0.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType tickType> >>>>>>>> org.jfree.chart.axis.ValueTick.getTickType : return $r1
org.jfree.chart.axis.ValueTick.getTickType : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r19 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MAJOR>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r19 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MAJOR> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z4 = virtualinvoke $r18.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r19)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z4 = virtualinvoke $r18.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r19) >>>>>>>> org.jfree.chart.axis.TickType.equals : if r0 != r1
org.jfree.chart.axis.TickType.equals : if r0 != r1 >>>>>>>> org.jfree.chart.axis.TickType.equals : return 1
org.jfree.chart.axis.TickType.equals : return 1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z4 != 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z4 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r22 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r22 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r23 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r23 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z7 = virtualinvoke $r22.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r23)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z7 = virtualinvoke $r22.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r23) >>>>>>>> org.jfree.chart.axis.TickType.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickType
org.jfree.chart.axis.TickType.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickType >>>>>>>> org.jfree.chart.axis.TickType.equals : if $z0 != 0
org.jfree.chart.axis.TickType.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.TickType.equals : r2 = (org.jfree.chart.axis.TickType) r1
org.jfree.chart.axis.TickType.equals : r2 = (org.jfree.chart.axis.TickType) r1 >>>>>>>> org.jfree.chart.axis.TickType.equals : $r3 = r0.<org.jfree.chart.axis.TickType: java.lang.String name>
org.jfree.chart.axis.TickType.equals : $r3 = r0.<org.jfree.chart.axis.TickType: java.lang.String name> >>>>>>>> org.jfree.chart.axis.TickType.equals : $r4 = r2.<org.jfree.chart.axis.TickType: java.lang.String name>
org.jfree.chart.axis.TickType.equals : $r4 = r2.<org.jfree.chart.axis.TickType: java.lang.String name> >>>>>>>> org.jfree.chart.axis.TickType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.TickType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.TickType.equals : if $z1 != 0
org.jfree.chart.axis.TickType.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.axis.TickType.equals : return 0
org.jfree.chart.axis.TickType.equals : return 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z7 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z7 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkOutsideLength()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkOutsideLength()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d3 = (double) $f4
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d3 = (double) $f4 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d4 = $d3
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d4 = $d3 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r24 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r24 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r25 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r25 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z8 = virtualinvoke $r24.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r25)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z8 = virtualinvoke $r24.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z8 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z8 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkInsideLength()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkInsideLength()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d5 = (double) $f6
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d5 = (double) $f6 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d1 = $d5
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d1 = $d5 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d6 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d6 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d6, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d6, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : f0 = (float) $d7
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : f0 = (float) $d7 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = null
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = null >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r26 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getTickMarkStroke()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r26 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getTickMarkStroke()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r26)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r26) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r27 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickMarkPaint()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r27 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickMarkPaint()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r27)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r27) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r28 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r28 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r28
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r28 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r29 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r29 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d8 = d0 - d4
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d8 = d0 - d4 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d9 = (double) f0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d9 = (double) f0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d10 = d0 + d1
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d10 = d0 + d1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d11 = (double) f0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d11 = (double) f0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : specialinvoke $r29.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d8, $d9, $d10, $d11)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : specialinvoke $r29.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d8, $d9, $d10, $d11) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = $r29
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = $r29 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11)]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11)] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isMinorTickMarksVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isMinorTickMarksVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isMinorTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible>
org.jfree.chart.axis.Axis.isMinorTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.isMinorTickMarksVisible : return $z0
org.jfree.chart.axis.Axis.isMinorTickMarksVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z5 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z5 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d24 = 0.0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d24 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z9 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z9 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z9 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z9 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r36
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r36 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d25 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r7, r1, r2, $z10)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d25 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r7, r1, r2, $z10) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d26 = d24 + $d25
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d26 = d24 + $d25 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorLeft(double)>(d26)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorLeft(double)>(d26) >>>>>>>> org.jfree.chart.axis.AxisState.cursorLeft : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.axis.AxisState.cursorLeft : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor> >>>>>>>> org.jfree.chart.axis.AxisState.cursorLeft : $d2 = $d1 - d0
org.jfree.chart.axis.AxisState.cursorLeft : $d2 = $d1 - d0 >>>>>>>> org.jfree.chart.axis.AxisState.cursorLeft : r0.<org.jfree.chart.axis.AxisState: double cursor> = $d2
org.jfree.chart.axis.AxisState.cursorLeft : r0.<org.jfree.chart.axis.AxisState: double cursor> = $d2 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= return r6]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= return r6] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : return r6
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : return r6 >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.NumberAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : r11 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>($r10, r1, r2, r3, r4, r9)
org.jfree.chart.axis.NumberAxis.draw : r11 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>($r10, r1, r2, r3, r4, r9) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r24 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.Axis.drawLabel : $r24 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if r5 != $r24
org.jfree.chart.axis.Axis.drawLabel : if r5 != $r24 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d32 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : $d32 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d33 = $d32 - 1.5707963267948966
org.jfree.chart.axis.Axis.drawLabel : $d33 = $d32 - 1.5707963267948966 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d34 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.drawLabel : $d34 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d35 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : $d35 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r25 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d33, $d34, $d35)
org.jfree.chart.axis.Axis.drawLabel : r25 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d33, $d34, $d35) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r26 = virtualinvoke r25.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10)
org.jfree.chart.axis.Axis.drawLabel : r26 = virtualinvoke r25.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r27 = interfaceinvoke r26.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.drawLabel : r27 = interfaceinvoke r26.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d36 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.axis.Axis.drawLabel : $d36 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d37 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.Axis.drawLabel : $d37 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getRight()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d38 = $d36 - $d37
org.jfree.chart.axis.Axis.drawLabel : $d38 = $d36 - $d37 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d39 = virtualinvoke r27.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.Axis.drawLabel : $d39 = virtualinvoke r27.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d40 = $d39 / 2.0
org.jfree.chart.axis.Axis.drawLabel : $d40 = $d39 / 2.0 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : d41 = $d38 - $d40
org.jfree.chart.axis.Axis.drawLabel : d41 = $d38 - $d40 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : d42 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : d42 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $f4 = (float) d41
org.jfree.chart.axis.Axis.drawLabel : $f4 = (float) d41 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $f5 = (float) d42
org.jfree.chart.axis.Axis.drawLabel : $f5 = (float) d42 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r28 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER>
org.jfree.chart.axis.Axis.drawLabel : $r28 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d43 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : $d43 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d44 = $d43 - 1.5707963267948966
org.jfree.chart.axis.Axis.drawLabel : $d44 = $d43 - 1.5707963267948966 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r29 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER>
org.jfree.chart.axis.Axis.drawLabel : $r29 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>(r1, r2, $f4, $f5, $r28, $d44, $r29)
org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>(r1, r2, $f4, $f5, $r28, $d44, $r29) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d45 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.Axis.drawLabel : $d45 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getLeft()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d46 = virtualinvoke r27.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.Axis.drawLabel : $d46 = virtualinvoke r27.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d47 = $d45 + $d46
org.jfree.chart.axis.Axis.drawLabel : $d47 = $d45 + $d46 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d48 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.Axis.drawLabel : $d48 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getRight()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d49 = $d47 + $d48
org.jfree.chart.axis.Axis.drawLabel : $d49 = $d47 + $d48 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorLeft(double)>($d49)
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorLeft(double)>($d49) >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r11, r3, r4, r5)
org.jfree.chart.axis.NumberAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r11, r3, r4, r5) >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : return r11
org.jfree.chart.axis.NumberAxis.draw : return r11 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : d11 = virtualinvoke r41.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : d11 = virtualinvoke r41.<org.jfree.chart.axis.AxisState: double getCursor()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r39, r41)
org.jfree.chart.plot.CategoryPlot.drawAxes : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r39, r41) >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.NumberAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : if $r1 == null
org.jfree.chart.axis.NumberAxis.hashCode : if $r1 == null >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.NumberAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.jfree.chart.axis.NumberAxis.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : return $i0
org.jfree.chart.axis.NumberAxis.hashCode : return $i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d12 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d12 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r43 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r43 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $d14 = virtualinvoke $r43.<org.jfree.ui.RectangleInsets: double calculateRightOutset(double)>($d13)
org.jfree.chart.plot.CategoryPlot.drawAxes : $d14 = virtualinvoke $r43.<org.jfree.ui.RectangleInsets: double calculateRightOutset(double)>($d13) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : d15 = $d12 + $d14
org.jfree.chart.plot.CategoryPlot.drawAxes : d15 = $d12 + $d14 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $r44 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtRight()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r44 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtRight()>() >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtRight : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtRight>
org.jfree.chart.axis.AxisCollection.getAxesAtRight : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtRight> >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtRight : return $r1
org.jfree.chart.axis.AxisCollection.getAxesAtRight : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : r45 = interfaceinvoke $r44.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : r45 = interfaceinvoke $r44.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : $z3 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $z3 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : if $z3 == 0
org.jfree.chart.plot.CategoryPlot.drawAxes : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAxes : return r22
org.jfree.chart.plot.CategoryPlot.drawAxes : return r22 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if r3 == null
org.jfree.chart.plot.CategoryPlot.draw : if r3 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r29 = new org.jfree.chart.plot.CategoryCrosshairState
org.jfree.chart.plot.CategoryPlot.draw : $r29 = new org.jfree.chart.plot.CategoryCrosshairState >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : specialinvoke $r29.<org.jfree.chart.plot.CategoryCrosshairState: void <init>()>()
org.jfree.chart.plot.CategoryPlot.draw : specialinvoke $r29.<org.jfree.chart.plot.CategoryCrosshairState: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r10 = $r29
org.jfree.chart.plot.CategoryPlot.draw : r10 = $r29 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setCrosshairDistance(double)>(#Infinity)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setCrosshairDistance(double)>(#Infinity) >>>>>>>> org.jfree.chart.plot.CrosshairState.setCrosshairDistance : r0.<org.jfree.chart.plot.CrosshairState: double distance> = d0
org.jfree.chart.plot.CrosshairState.setCrosshairDistance : r0.<org.jfree.chart.plot.CrosshairState: double distance> = d0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchor(java.awt.geom.Point2D)>(r3)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchor(java.awt.geom.Point2D)>(r3) >>>>>>>> org.jfree.chart.plot.CrosshairState.setAnchor : r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor> = r1
org.jfree.chart.plot.CrosshairState.setAnchor : r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchorX(double)>(#NaN)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchorX(double)>(#NaN) >>>>>>>> org.jfree.chart.plot.CrosshairState.setAnchorX : r0.<org.jfree.chart.plot.CrosshairState: double anchorX> = d0
org.jfree.chart.plot.CrosshairState.setAnchorX : r0.<org.jfree.chart.plot.CrosshairState: double anchorX> = d0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchorY(double)>(#NaN)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchorY(double)>(#NaN) >>>>>>>> org.jfree.chart.plot.CrosshairState.setAnchorY : r0.<org.jfree.chart.plot.CrosshairState: double anchorY> = d0
org.jfree.chart.plot.CrosshairState.setAnchorY : r0.<org.jfree.chart.plot.CrosshairState: double anchorY> = d0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r34 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable getDomainCrosshairRowKey()>()
org.jfree.chart.plot.CategoryPlot.draw : $r34 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable getDomainCrosshairRowKey()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainCrosshairRowKey : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey>
org.jfree.chart.plot.CategoryPlot.getDomainCrosshairRowKey : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainCrosshairRowKey : return $r1
org.jfree.chart.plot.CategoryPlot.getDomainCrosshairRowKey : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setRowKey(java.lang.Comparable)>($r34)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setRowKey(java.lang.Comparable)>($r34) >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.setRowKey : r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable rowKey> = r1
org.jfree.chart.plot.CategoryCrosshairState.setRowKey : r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable rowKey> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r35 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable getDomainCrosshairColumnKey()>()
org.jfree.chart.plot.CategoryPlot.draw : $r35 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable getDomainCrosshairColumnKey()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainCrosshairColumnKey : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey>
org.jfree.chart.plot.CategoryPlot.getDomainCrosshairColumnKey : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainCrosshairColumnKey : return $r1
org.jfree.chart.plot.CategoryPlot.getDomainCrosshairColumnKey : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setColumnKey(java.lang.Comparable)>($r35)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setColumnKey(java.lang.Comparable)>($r35) >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.setColumnKey : r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable columnKey> = r1
org.jfree.chart.plot.CategoryCrosshairState.setColumnKey : r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable columnKey> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $d8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: double getRangeCrosshairValue()>()
org.jfree.chart.plot.CategoryPlot.draw : $d8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: double getRangeCrosshairValue()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeCrosshairValue : $d0 = r0.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue>
org.jfree.chart.plot.CategoryPlot.getRangeCrosshairValue : $d0 = r0.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeCrosshairValue : return $d0
org.jfree.chart.plot.CategoryPlot.getRangeCrosshairValue : return $d0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setCrosshairY(double)>($d8)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setCrosshairY(double)>($d8) >>>>>>>> org.jfree.chart.plot.CrosshairState.setCrosshairY : r0.<org.jfree.chart.plot.CrosshairState: double crosshairY> = d0
org.jfree.chart.plot.CrosshairState.setCrosshairY : r0.<org.jfree.chart.plot.CrosshairState: double crosshairY> = d0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r36 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.CategoryPlot.draw : r36 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r24)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r24) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawDomainGridlines : $z0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isDomainGridlinesVisible()>()
org.jfree.chart.plot.CategoryPlot.drawDomainGridlines : $z0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isDomainGridlinesVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.isDomainGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.isDomainGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.isDomainGridlinesVisible : return $z0
org.jfree.chart.plot.CategoryPlot.isDomainGridlinesVisible : return $z0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawDomainGridlines : if $z0 != 0
org.jfree.chart.plot.CategoryPlot.drawDomainGridlines : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r37 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.CategoryPlot.draw : $r37 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : return $r1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r38 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r37)
org.jfree.chart.plot.CategoryPlot.draw : $r38 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r37) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r39 = (org.jfree.chart.axis.AxisState) $r38
org.jfree.chart.plot.CategoryPlot.draw : r39 = (org.jfree.chart.axis.AxisState) $r38 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if r39 != null
org.jfree.chart.plot.CategoryPlot.draw : if r39 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if r39 == null
org.jfree.chart.plot.CategoryPlot.draw : if r39 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r43 = virtualinvoke r39.<org.jfree.chart.axis.AxisState: java.util.List getTicks()>()
org.jfree.chart.plot.CategoryPlot.draw : $r43 = virtualinvoke r39.<org.jfree.chart.axis.AxisState: java.util.List getTicks()>() >>>>>>>> org.jfree.chart.axis.AxisState.getTicks : $r1 = r0.<org.jfree.chart.axis.AxisState: java.util.List ticks>
org.jfree.chart.axis.AxisState.getTicks : $r1 = r0.<org.jfree.chart.axis.AxisState: java.util.List ticks> >>>>>>>> org.jfree.chart.axis.AxisState.getTicks : return $r1
org.jfree.chart.axis.AxisState.getTicks : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)>(r1, r24, $r43)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)>(r1, r24, $r43) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeGridlinesVisible()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeGridlinesVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.isRangeGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeGridlinesVisible : return $z0
org.jfree.chart.plot.CategoryPlot.isRangeGridlinesVisible : return $z0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z1 != 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if r4 != null
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if r4 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if r5 != null
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if r5 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r6 = null
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r6 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r7 = null
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r7 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z0 = 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r8 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r8 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z3 == 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z4 = 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z4 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r12 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r12 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r9 = (org.jfree.chart.axis.ValueTick) $r12
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r9 = (org.jfree.chart.axis.ValueTick) $r12 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r13 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r13 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r10 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR>
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r10 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $r13 != $r10
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $r13 != $r10 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r14 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r14 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r15 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MAJOR>
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r15 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MAJOR> >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $r14 != $r15
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $r14 != $r15 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeGridlinesVisible()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeGridlinesVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z6 == 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z6 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke getRangeGridlineStroke()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke getRangeGridlineStroke()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeGridlineStroke : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.CategoryPlot.getRangeGridlineStroke : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeGridlineStroke : return $r1
org.jfree.chart.plot.CategoryPlot.getRangeGridlineStroke : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint getRangeGridlinePaint()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint getRangeGridlinePaint()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeGridlinePaint : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.CategoryPlot.getRangeGridlinePaint : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeGridlinePaint : return $r1
org.jfree.chart.plot.CategoryPlot.getRangeGridlinePaint : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z4 = 1
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z4 = 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $d0 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $d0 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $b0 = $d0 cmpl 0.0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $b0 = $d0 cmpl 0.0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $b0 != 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $b0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeZeroBaselineVisible()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeZeroBaselineVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeZeroBaselineVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.plot.CategoryPlot.isRangeZeroBaselineVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeZeroBaselineVisible : return $z0
org.jfree.chart.plot.CategoryPlot.isRangeZeroBaselineVisible : return $z0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z7 != 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z7 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if z4 == 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if z4 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z8 = r5 instanceof org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z8 = r5 instanceof org.jfree.chart.renderer.category.AbstractCategoryItemRenderer >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z8 == 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z8 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r11 = (org.jfree.chart.renderer.category.AbstractCategoryItemRenderer) r5
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r11 = (org.jfree.chart.renderer.category.AbstractCategoryItemRenderer) r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $d1 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $d1 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : virtualinvoke r11.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)>(r1, r0, r4, r2, $d1, r7, r6)
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : virtualinvoke r11.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)>(r1, r0, r4, r2, $d1, r7, r6) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r7 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r7 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $z0 = virtualinvoke r7.<org.jfree.data.Range: boolean contains(double)>(d0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $z0 = virtualinvoke r7.<org.jfree.data.Range: boolean contains(double)>(d0) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : if $z0 != 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : if $z0 != 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r8 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r8 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getOrientation : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.getOrientation : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getOrientation : return $r1
org.jfree.chart.plot.CategoryPlot.getOrientation : return $r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r9 = null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r9 = null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r10 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r10 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : return $r1
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : return $r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : d1 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r4, $r10)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : d1 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r4, $r10) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r11 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r11 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : if r8 != $r11
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : if r8 != $r11 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : if r8 != $r13
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : if r8 != $r13 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r14 = new java.awt.geom.Line2D$Double
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r14 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $d4 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $d4 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getMinX()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $d5 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $d5 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : specialinvoke $r14.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d4, d1, $d5, d1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : specialinvoke $r14.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d4, d1, $d5, d1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r9 = $r14
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r9 = $r14 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r6)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r6) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r9)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : goto [?= $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : goto [?= $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeMinorGridlinesVisible()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeMinorGridlinesVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible : return $z0
org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible : return $z0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z5 == 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if $z5 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawZeroRangeBaseline : $z0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeZeroBaselineVisible()>()
org.jfree.chart.plot.CategoryPlot.drawZeroRangeBaseline : $z0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeZeroBaselineVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawZeroRangeBaseline : if $z0 != 0
org.jfree.chart.plot.CategoryPlot.drawZeroRangeBaseline : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r12 = r1
org.jfree.chart.plot.CategoryPlot.draw : r12 = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r13 = null
org.jfree.chart.plot.CategoryPlot.draw : r13 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r44 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.CategoryPlot.draw : $r44 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $r44 == null
org.jfree.chart.plot.CategoryPlot.draw : if $r44 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i0 = 0
org.jfree.chart.plot.CategoryPlot.draw : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r47 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.draw : $r47 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $i6 = virtualinvoke $r47.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.draw : $i6 = virtualinvoke $r47.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if i0 >= $i6
org.jfree.chart.plot.CategoryPlot.draw : if i0 >= $i6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r48 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.draw : $r48 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.ui.Layer)>(r1, r24, i0, $r48)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.ui.Layer)>(r1, r24, i0, $r48) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : if r4 != null
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : if r4 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Collection getDomainMarkers(int,org.jfree.ui.Layer)>(i0, r3)
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Collection getDomainMarkers(int,org.jfree.ui.Layer)>(i0, r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r2 = null
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r2 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r3 = $r4
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r3 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : if r1 != $r5
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : if r1 != $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r8 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r8 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : if r1 != $r8
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : if r1 != $r8 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r2 = (java.util.Collection) $r10
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r2 = (java.util.Collection) $r10 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : if r2 == null
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : return r2
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : return r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxisForDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxisForDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : n0 = null
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : n0 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r5 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r5 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r6 = virtualinvoke $r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r5)
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r6 = virtualinvoke $r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : r1 = (java.util.List) $r6
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : r1 = (java.util.List) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : if r1 == null
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : r2 = (java.lang.Integer) $r7
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : r2 = (java.lang.Integer) $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxis(int)>($i1)
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxis(int)>($i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : r1 = null
org.jfree.chart.plot.CategoryPlot.getDomainAxis : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.getDomainAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getDomainAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getDomainAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.getDomainAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDomainAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : r1 = (org.jfree.chart.axis.CategoryAxis) $r6
org.jfree.chart.plot.CategoryPlot.getDomainAxis : r1 = (org.jfree.chart.axis.CategoryAxis) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : if r1 != null
org.jfree.chart.plot.CategoryPlot.getDomainAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxis : return r1
org.jfree.chart.plot.CategoryPlot.getDomainAxis : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : goto [?= return r8]
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : goto [?= return r8] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : return r8
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : return r8 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : if r5 == null
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : if r5 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.draw : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : goto [?= $r47 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>]
org.jfree.chart.plot.CategoryPlot.draw : goto [?= $r47 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i7 = 0
org.jfree.chart.plot.CategoryPlot.draw : i7 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r49 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.draw : $r49 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $i8 = virtualinvoke $r49.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.draw : $i8 = virtualinvoke $r49.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if i7 >= $i8
org.jfree.chart.plot.CategoryPlot.draw : if i7 >= $i8 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r50 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.draw : $r50 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.ui.Layer)>(r1, r24, i7, $r50)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.ui.Layer)>(r1, r24, i7, $r50) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : if r4 != null
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : if r4 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Collection getRangeMarkers(int,org.jfree.ui.Layer)>(i0, r3)
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Collection getRangeMarkers(int,org.jfree.ui.Layer)>(i0, r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r2 = null
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r2 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r3 = $r4
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r3 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : if r1 != $r5
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : if r1 != $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r8 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r8 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : if r1 != $r8
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : if r1 != $r8 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r2 = (java.util.Collection) $r10
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r2 = (java.util.Collection) $r10 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : if r2 == null
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : return r2
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : return r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : n0 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : n0 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r5 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r5 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r6 = virtualinvoke $r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r5)
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r6 = virtualinvoke $r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : r1 = (java.util.List) $r6
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : r1 = (java.util.List) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : if r1 == null
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : r2 = (java.lang.Integer) $r7
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : r2 = (java.lang.Integer) $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>($i1)
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>($i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : goto [?= return r8]
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : goto [?= return r8] >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : return r8
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : return r8 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : if r5 == null
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : if r5 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i7 = i7 + 1
org.jfree.chart.plot.CategoryPlot.draw : i7 = i7 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : goto [?= $r49 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>]
org.jfree.chart.plot.CategoryPlot.draw : goto [?= $r49 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : z6 = 0
org.jfree.chart.plot.CategoryPlot.draw : z6 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r14 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.CategoryPlot.draw : r14 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: float getForegroundAlpha()>()
org.jfree.chart.plot.CategoryPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: float getForegroundAlpha()>() >>>>>>>> org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.getForegroundAlpha : return $f0
org.jfree.chart.plot.Plot.getForegroundAlpha : return $f0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r51 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.CategoryPlot.draw : $r51 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r51)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r51) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder getDatasetRenderingOrder()>()
org.jfree.chart.plot.CategoryPlot.draw : r15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder getDatasetRenderingOrder()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDatasetRenderingOrder : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder renderingOrder>
org.jfree.chart.plot.CategoryPlot.getDatasetRenderingOrder : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder renderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDatasetRenderingOrder : return $r1
org.jfree.chart.plot.CategoryPlot.getDatasetRenderingOrder : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r52 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder FORWARD>
org.jfree.chart.plot.CategoryPlot.draw : $r52 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder FORWARD> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if r15 != $r52
org.jfree.chart.plot.CategoryPlot.draw : if r15 != $r52 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r54 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.draw : $r54 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $i10 = virtualinvoke $r54.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.draw : $i10 = virtualinvoke $r54.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i11 = $i10 - 1
org.jfree.chart.plot.CategoryPlot.draw : i11 = $i10 - 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if i11 < 0
org.jfree.chart.plot.CategoryPlot.draw : if i11 < 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)>(r1, r24, i11, r5, r10)
org.jfree.chart.plot.CategoryPlot.draw : $z9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)>(r1, r24, i11, r5, r10) >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : z0 = 0
org.jfree.chart.plot.CategoryPlot.render : z0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.render : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0)
org.jfree.chart.plot.CategoryPlot.render : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxisForDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.render : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxisForDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.render : r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : $z2 = staticinvoke <org.jfree.data.general.DatasetUtilities: boolean isEmptyOrNull(org.jfree.data.category.CategoryDataset)>(r5)
org.jfree.chart.plot.CategoryPlot.render : $z2 = staticinvoke <org.jfree.data.general.DatasetUtilities: boolean isEmptyOrNull(org.jfree.data.category.CategoryDataset)>(r5) >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 != 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i2 >= i0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i2 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i3 >= i1
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i3 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3)
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $r1 == null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $r1 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : if $z2 != 0
org.jfree.chart.plot.CategoryPlot.render : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : $z3 = 1
org.jfree.chart.plot.CategoryPlot.render : $z3 = 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : goto [?= z1 = $z3]
org.jfree.chart.plot.CategoryPlot.render : goto [?= z1 = $z3] >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : z1 = $z3
org.jfree.chart.plot.CategoryPlot.render : z1 = $z3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : if z1 == 0
org.jfree.chart.plot.CategoryPlot.render : if z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : if r6 == null
org.jfree.chart.plot.CategoryPlot.render : if r6 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : z0 = 1
org.jfree.chart.plot.CategoryPlot.render : z0 = 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : r9 = interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: org.jfree.chart.renderer.category.CategoryItemRendererState initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r0, i0, r3)
org.jfree.chart.plot.CategoryPlot.render : r9 = interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: org.jfree.chart.renderer.category.CategoryItemRendererState initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r0, i0, r3) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void setPlot(org.jfree.chart.plot.CategoryPlot)>(r3)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void setPlot(org.jfree.chart.plot.CategoryPlot)>(r3) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r5 = virtualinvoke r3.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r5 = virtualinvoke r3.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : if r5 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : if r5 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $i3 = interfaceinvoke r5.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $i3 = interfaceinvoke r5.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int rowCount> = $i3
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int rowCount> = $i3 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $i4 = interfaceinvoke r5.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $i4 = interfaceinvoke r5.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int columnCount> = $i4
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int columnCount> = $i4 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : goto [?= r6 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.renderer.category.CategoryItemRendererState createState(org.jfree.chart.plot.PlotRenderingInfo)>(r4)]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : goto [?= r6 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.renderer.category.CategoryItemRendererState createState(org.jfree.chart.plot.PlotRenderingInfo)>(r4)] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r6 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.renderer.category.CategoryItemRendererState createState(org.jfree.chart.plot.PlotRenderingInfo)>(r4)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r6 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.renderer.category.CategoryItemRendererState createState(org.jfree.chart.plot.PlotRenderingInfo)>(r4) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.createState : $r2 = new org.jfree.chart.renderer.category.CategoryItemRendererState
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.createState : $r2 = new org.jfree.chart.renderer.category.CategoryItemRendererState >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.createState : specialinvoke $r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: void <init>(org.jfree.chart.plot.PlotRenderingInfo)>(r1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.createState : specialinvoke $r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: void <init>(org.jfree.chart.plot.PlotRenderingInfo)>(r1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.createState : return $r2
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.createState : return $r2 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $i5 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int rowCount>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $i5 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int rowCount> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r7 = newarray (int)[$i5]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r7 = newarray (int)[$i5] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : i1 = 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : i1 = 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : i2 = 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : i2 = 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $i6 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int rowCount>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $i6 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int rowCount> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : if i2 >= $i6
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : if i2 >= $i6 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisible(int)>(i2)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisible(int)>(i2) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : if $z0 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r7[i1] = i2
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r7[i1] = i2 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : i1 = i1 + 1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : i2 = i2 + 1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : i2 = i2 + 1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : goto [?= $i6 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int rowCount>]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : goto [?= $i6 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int rowCount>] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r8 = newarray (int)[i1]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : r8 = newarray (int)[i1] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r8, 0, i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r8, 0, i1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : virtualinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRendererState: void setVisibleSeriesArray(int[])>(r8)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : virtualinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRendererState: void setVisibleSeriesArray(int[])>(r8) >>>>>>>> org.jfree.chart.renderer.category.CategoryItemRendererState.setVisibleSeriesArray : r0.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries> = r1
org.jfree.chart.renderer.category.CategoryItemRendererState.setVisibleSeriesArray : r0.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries> = r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : return r6
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise : return r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : virtualinvoke r9.<org.jfree.chart.renderer.category.CategoryItemRendererState: void setCrosshairState(org.jfree.chart.plot.CategoryCrosshairState)>(r4)
org.jfree.chart.plot.CategoryPlot.render : virtualinvoke r9.<org.jfree.chart.renderer.category.CategoryItemRendererState: void setCrosshairState(org.jfree.chart.plot.CategoryCrosshairState)>(r4) >>>>>>>> org.jfree.chart.renderer.category.CategoryItemRendererState.setCrosshairState : r0.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.plot.CategoryCrosshairState crosshairState> = r1
org.jfree.chart.renderer.category.CategoryItemRendererState.setCrosshairState : r0.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.plot.CategoryCrosshairState crosshairState> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i1 = interfaceinvoke r5.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.chart.plot.CategoryPlot.render : i1 = interfaceinvoke r5.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i2 = interfaceinvoke r5.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.chart.plot.CategoryPlot.render : i2 = interfaceinvoke r5.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i3 = interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: int getPassCount()>()
org.jfree.chart.plot.CategoryPlot.render : i3 = interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: int getPassCount()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPassCount : return 1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPassCount : return 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i4 = 0
org.jfree.chart.plot.CategoryPlot.render : i4 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : if i4 >= i3
org.jfree.chart.plot.CategoryPlot.render : if i4 >= i3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : $r10 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder columnRenderingOrder>
org.jfree.chart.plot.CategoryPlot.render : $r10 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder columnRenderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : $r11 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.chart.plot.CategoryPlot.render : $r11 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : if $r10 != $r11
org.jfree.chart.plot.CategoryPlot.render : if $r10 != $r11 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i5 = 0
org.jfree.chart.plot.CategoryPlot.render : i5 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : if i5 >= i1
org.jfree.chart.plot.CategoryPlot.render : if i5 >= i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : $r12 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder>
org.jfree.chart.plot.CategoryPlot.render : $r12 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.SortOrder rowRenderingOrder> >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : $r13 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.chart.plot.CategoryPlot.render : $r13 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : if $r12 != $r13
org.jfree.chart.plot.CategoryPlot.render : if $r12 != $r13 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i6 = 0
org.jfree.chart.plot.CategoryPlot.render : i6 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : if i6 >= i2
org.jfree.chart.plot.CategoryPlot.render : if i6 >= i2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,int)>(r1, r9, r2, r0, r7, r8, r5, i6, i5, i4)
org.jfree.chart.plot.CategoryPlot.render : interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,int)>(r1, r9, r2, r0, r7, r8, r5, i6, i5, i4) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r8 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, i1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r8 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if r8 == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if r8 == null >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $i3 = virtualinvoke r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int getColumnCount()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $i3 = virtualinvoke r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int getColumnCount()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getColumnCount : $i0 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int columnCount>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getColumnCount : $i0 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: int columnCount> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getColumnCount : return $i0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getColumnCount : return $i0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r12 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r12 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : return $r1
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : return $r1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : d0 = virtualinvoke r5.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, $i3, r3, $r12)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : d0 = virtualinvoke r5.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, $i3, r3, $r12) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d7 = virtualinvoke r8.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d7 = virtualinvoke r8.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r13 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r13 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : d1 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r3, $r13)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : d1 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r3, $r13) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r14 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r14 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d8 = d0 - 4.0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d8 = d0 - 4.0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d9 = d1 - 4.0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d9 = d1 - 4.0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : specialinvoke $r14.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d8, $d9, 8.0, 8.0)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : specialinvoke $r14.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d8, $d9, 8.0, 8.0) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r9 = $r14
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r9 = $r14 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r15 = virtualinvoke r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint getItemPaint(int,int)>(i0, i1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r15 = virtualinvoke r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint getItemPaint(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemPaint : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint lookupSeriesPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint lookupSeriesPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemPaint : return $r1
org.jfree.chart.renderer.AbstractRenderer.getItemPaint : return $r1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r16 = virtualinvoke r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke getItemStroke(int,int)>(i0, i1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r16 = virtualinvoke r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke getItemStroke(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemStroke : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke lookupSeriesStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke lookupSeriesStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Stroke getNextStroke()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Stroke getNextStroke()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemStroke : return $r1
org.jfree.chart.renderer.AbstractRenderer.getItemStroke : return $r1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r16)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r16) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r10 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r10 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r17 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r17 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if r10 != $r17
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if r10 != $r17 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r18 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon objectIcon>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $r18 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon objectIcon> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $i4 = (int) d0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $i4 = (int) d0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $i5 = (int) d1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $i5 = (int) d1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : interfaceinvoke $r18.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(null, r1, $i4, $i5)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : interfaceinvoke $r18.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(null, r1, $i4, $i5) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : r3 = (java.awt.Graphics2D) r2
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : r3 = (java.awt.Graphics2D) r2 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r4 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: java.awt.geom.GeneralPath val$path>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r4 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: java.awt.geom.GeneralPath val$path> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $d0 = (double) i0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $d0 = (double) i0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $d1 = (double) i1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $d1 = (double) i1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r5 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r5 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : virtualinvoke $r4.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r5)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : virtualinvoke $r4.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r5) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $z0 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: boolean val$fill>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $z0 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: boolean val$fill> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : if $z0 == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $z1 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: boolean val$outline>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $z1 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: boolean val$outline> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : if $z1 == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r7 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: java.awt.geom.GeneralPath val$path>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r7 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: java.awt.geom.GeneralPath val$path> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : virtualinvoke r3.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r7)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : virtualinvoke r3.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r7) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r8 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: java.awt.geom.GeneralPath val$path>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r8 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: java.awt.geom.GeneralPath val$path> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $i2 = neg i0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $i2 = neg i0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $d2 = (double) $i2
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $d2 = (double) $i2 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $i3 = neg i1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $i3 = neg i1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $d3 = (double) $i3
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $d3 = (double) $i3 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d2, $d3)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : $r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d2, $d3) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : virtualinvoke $r8.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r9)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2.paintIcon : virtualinvoke $r8.<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>($r9) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : goto [?= $i8 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory>]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : goto [?= $i8 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory>] >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $i8 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $i8 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if $i8 != i1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if $i8 != i1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory> = i1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory> = i1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d18 = virtualinvoke r8.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d18 = virtualinvoke r8.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double min> = $d18
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double min> = $d18 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d19 = virtualinvoke r8.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $d19 = virtualinvoke r8.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double max> = $d19
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double max> = $d19 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $z0 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : $z0 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if $z0 == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r39 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : r39 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>() >>>>>>>> org.jfree.chart.renderer.RendererState.getEntityCollection : r1 = null
org.jfree.chart.renderer.RendererState.getEntityCollection : r1 = null >>>>>>>> org.jfree.chart.renderer.RendererState.getEntityCollection : $r3 = r0.<org.jfree.chart.renderer.RendererState: org.jfree.chart.plot.PlotRenderingInfo info>
org.jfree.chart.renderer.RendererState.getEntityCollection : $r3 = r0.<org.jfree.chart.renderer.RendererState: org.jfree.chart.plot.PlotRenderingInfo info> >>>>>>>> org.jfree.chart.renderer.RendererState.getEntityCollection : if $r3 == null
org.jfree.chart.renderer.RendererState.getEntityCollection : if $r3 == null >>>>>>>> org.jfree.chart.renderer.RendererState.getEntityCollection : $r4 = r0.<org.jfree.chart.renderer.RendererState: org.jfree.chart.plot.PlotRenderingInfo info>
org.jfree.chart.renderer.RendererState.getEntityCollection : $r4 = r0.<org.jfree.chart.renderer.RendererState: org.jfree.chart.plot.PlotRenderingInfo info> >>>>>>>> org.jfree.chart.renderer.RendererState.getEntityCollection : r2 = virtualinvoke $r4.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>()
org.jfree.chart.renderer.RendererState.getEntityCollection : r2 = virtualinvoke $r4.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>() >>>>>>>> org.jfree.chart.renderer.RendererState.getEntityCollection : if r2 == null
org.jfree.chart.renderer.RendererState.getEntityCollection : if r2 == null >>>>>>>> org.jfree.chart.renderer.RendererState.getEntityCollection : return r1
org.jfree.chart.renderer.RendererState.getEntityCollection : return r1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if r39 == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem : if r39 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i6 = i6 + 1
org.jfree.chart.plot.CategoryPlot.render : i6 = i6 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.render : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : goto [?= i5 = i5 + 1]
org.jfree.chart.plot.CategoryPlot.render : goto [?= i5 = i5 + 1] >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i5 = i5 + 1
org.jfree.chart.plot.CategoryPlot.render : i5 = i5 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : goto [?= i4 = i4 + 1]
org.jfree.chart.plot.CategoryPlot.render : goto [?= i4 = i4 + 1] >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : i4 = i4 + 1
org.jfree.chart.plot.CategoryPlot.render : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.render : return z0
org.jfree.chart.plot.CategoryPlot.render : return z0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $z9 != 0
org.jfree.chart.plot.CategoryPlot.draw : if $z9 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z10 = 1
org.jfree.chart.plot.CategoryPlot.draw : $z10 = 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : goto [?= z6 = $z10]
org.jfree.chart.plot.CategoryPlot.draw : goto [?= z6 = $z10] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : z6 = $z10
org.jfree.chart.plot.CategoryPlot.draw : z6 = $z10 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i11 = i11 + -1
org.jfree.chart.plot.CategoryPlot.draw : i11 = i11 + -1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.draw : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i12 = 0
org.jfree.chart.plot.CategoryPlot.draw : i12 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r55 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.draw : $r55 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $i13 = virtualinvoke $r55.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.draw : $i13 = virtualinvoke $r55.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if i12 >= $i13
org.jfree.chart.plot.CategoryPlot.draw : if i12 >= $i13 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r56 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.draw : $r56 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.ui.Layer)>(r1, r24, i12, $r56)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.ui.Layer)>(r1, r24, i12, $r56) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r2 = (java.util.Collection) $r7
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r2 = (java.util.Collection) $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDomainMarkers : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i12 = i12 + 1
org.jfree.chart.plot.CategoryPlot.draw : i12 = i12 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : goto [?= $r55 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>]
org.jfree.chart.plot.CategoryPlot.draw : goto [?= $r55 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i14 = 0
org.jfree.chart.plot.CategoryPlot.draw : i14 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r57 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.draw : $r57 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $i15 = virtualinvoke $r57.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.draw : $i15 = virtualinvoke $r57.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if i14 >= $i15
org.jfree.chart.plot.CategoryPlot.draw : if i14 >= $i15 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r58 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.draw : $r58 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.ui.Layer)>(r1, r24, i14, $r58)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.ui.Layer)>(r1, r24, i14, $r58) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r2 = (java.util.Collection) $r7
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r2 = (java.util.Collection) $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMarkers : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i14 = i14 + 1
org.jfree.chart.plot.CategoryPlot.draw : i14 = i14 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : goto [?= $r57 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>]
org.jfree.chart.plot.CategoryPlot.draw : goto [?= $r57 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24) >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAnnotations : $r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List getAnnotations()>()
org.jfree.chart.plot.CategoryPlot.drawAnnotations : $r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List getAnnotations()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getAnnotations : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations>
org.jfree.chart.plot.CategoryPlot.getAnnotations : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getAnnotations : return $r1
org.jfree.chart.plot.CategoryPlot.getAnnotations : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAnnotations : if $r5 == null
org.jfree.chart.plot.CategoryPlot.drawAnnotations : if $r5 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAnnotations : $r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List getAnnotations()>()
org.jfree.chart.plot.CategoryPlot.drawAnnotations : $r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List getAnnotations()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAnnotations : r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.drawAnnotations : r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAnnotations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAnnotations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.drawAnnotations : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.drawAnnotations : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r59 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.CategoryPlot.draw : $r59 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $r59 == null
org.jfree.chart.plot.CategoryPlot.draw : if $r59 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r36)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r36) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r14)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r14) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if z6 != 0
org.jfree.chart.plot.CategoryPlot.draw : if z6 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : i24 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: int getDatasetIndex()>()
org.jfree.chart.plot.CategoryPlot.draw : i24 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: int getDatasetIndex()>() >>>>>>>> org.jfree.chart.plot.CrosshairState.getDatasetIndex : $i0 = r0.<org.jfree.chart.plot.CrosshairState: int datasetIndex>
org.jfree.chart.plot.CrosshairState.getDatasetIndex : $i0 = r0.<org.jfree.chart.plot.CrosshairState: int datasetIndex> >>>>>>>> org.jfree.chart.plot.CrosshairState.getDatasetIndex : return $i0
org.jfree.chart.plot.CrosshairState.getDatasetIndex : return $i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setCrosshairDatasetIndex(int,boolean)>(i24, 0)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setCrosshairDatasetIndex(int,boolean)>(i24, 0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setCrosshairDatasetIndex : r0.<org.jfree.chart.plot.CategoryPlot: int crosshairDatasetIndex> = i0
org.jfree.chart.plot.CategoryPlot.setCrosshairDatasetIndex : r0.<org.jfree.chart.plot.CategoryPlot: int crosshairDatasetIndex> = i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setCrosshairDatasetIndex : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setCrosshairDatasetIndex : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r16 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable getRowKey()>()
org.jfree.chart.plot.CategoryPlot.draw : r16 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable getRowKey()>() >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.getRowKey : $r1 = r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable rowKey>
org.jfree.chart.plot.CategoryCrosshairState.getRowKey : $r1 = r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable rowKey> >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.getRowKey : return $r1
org.jfree.chart.plot.CategoryCrosshairState.getRowKey : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r17 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable getColumnKey()>()
org.jfree.chart.plot.CategoryPlot.draw : r17 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable getColumnKey()>() >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : $r1 = r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable columnKey>
org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : $r1 = r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable columnKey> >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : return $r1
org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainCrosshairRowKey(java.lang.Comparable,boolean)>(r16, 0)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainCrosshairRowKey(java.lang.Comparable,boolean)>(r16, 0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainCrosshairRowKey : r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey> = r1
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairRowKey : r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainCrosshairRowKey : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairRowKey : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainCrosshairColumnKey(java.lang.Comparable,boolean)>(r17, 0)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainCrosshairColumnKey(java.lang.Comparable,boolean)>(r17, 0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey> = r1
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z13 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isDomainCrosshairVisible()>()
org.jfree.chart.plot.CategoryPlot.draw : $z13 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isDomainCrosshairVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.isDomainCrosshairVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainCrosshairVisible>
org.jfree.chart.plot.CategoryPlot.isDomainCrosshairVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainCrosshairVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.isDomainCrosshairVisible : return $z0
org.jfree.chart.plot.CategoryPlot.isDomainCrosshairVisible : return $z0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $z13 == 0
org.jfree.chart.plot.CategoryPlot.draw : if $z13 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r65 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i24)
org.jfree.chart.plot.CategoryPlot.draw : r65 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i24) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : r66 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.plot.CategoryPlot.draw : r66 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z14 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.CategoryPlot.draw : $z14 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $z14 != 0
org.jfree.chart.plot.CategoryPlot.draw : if $z14 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $d21 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: double getCrosshairY()>()
org.jfree.chart.plot.CategoryPlot.draw : $d21 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: double getCrosshairY()>() >>>>>>>> org.jfree.chart.plot.CrosshairState.getCrosshairY : $d0 = r0.<org.jfree.chart.plot.CrosshairState: double crosshairY>
org.jfree.chart.plot.CrosshairState.getCrosshairY : $d0 = r0.<org.jfree.chart.plot.CrosshairState: double crosshairY> >>>>>>>> org.jfree.chart.plot.CrosshairState.getCrosshairY : return $d0
org.jfree.chart.plot.CrosshairState.getCrosshairY : return $d0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeCrosshairValue(double,boolean)>($d21, 0)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeCrosshairValue(double,boolean)>($d21, 0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue : r0.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue> = d0
org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue : r0.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue> = d0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue : $z1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeCrosshairVisible()>()
org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue : $z1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeCrosshairVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeCrosshairVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairVisible>
org.jfree.chart.plot.CategoryPlot.isRangeCrosshairVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeCrosshairVisible : return $z0
org.jfree.chart.plot.CategoryPlot.isRangeCrosshairVisible : return $z0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue : if $z1 == 0
org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeCrosshairVisible()>()
org.jfree.chart.plot.CategoryPlot.draw : $z15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeCrosshairVisible()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $z15 == 0
org.jfree.chart.plot.CategoryPlot.draw : if $z15 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $z16 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isOutlineVisible()>()
org.jfree.chart.plot.CategoryPlot.draw : $z16 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isOutlineVisible()>() >>>>>>>> org.jfree.chart.plot.Plot.isOutlineVisible : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.isOutlineVisible : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.isOutlineVisible : return $z0
org.jfree.chart.plot.Plot.isOutlineVisible : return $z0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $z16 == 0
org.jfree.chart.plot.CategoryPlot.draw : if $z16 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r70 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.draw : $r70 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : if $r70 == null
org.jfree.chart.plot.CategoryPlot.draw : if $r70 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : $r71 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.draw : $r71 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : interfaceinvoke $r71.<org.jfree.chart.renderer.category.CategoryItemRenderer: void drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)>(r1, r0, r24)
org.jfree.chart.plot.CategoryPlot.draw : interfaceinvoke $r71.<org.jfree.chart.renderer.category.CategoryItemRenderer: void drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)>(r1, r0, r24) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawOutline : virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r3)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawOutline : virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r3) >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.drawOutline : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : if $z0 != 0
org.jfree.chart.plot.Plot.drawOutline : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : if $r3 == null
org.jfree.chart.plot.Plot.drawOutline : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.drawOutline : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : if $r4 == null
org.jfree.chart.plot.Plot.drawOutline : if $r4 == null >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5)
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5) >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.drawOutline : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r6)
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r6) >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.draw : goto [?= return]
org.jfree.chart.plot.CategoryPlot.draw : goto [?= return] >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r48.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 2, 100)
org.jfree.chart.JFreeChart.draw : specialinvoke $r48.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 2, 100) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r48)
org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r48) >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : virtualinvoke r4.<java.awt.Graphics2D: void dispose()>()
org.jfree.chart.JFreeChart.createBufferedImage : virtualinvoke r4.<java.awt.Graphics2D: void dispose()>() >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : return r3
org.jfree.chart.JFreeChart.createBufferedImage : return r3 >>>>>>>> org.jfree.chart.JFreeChart.createBufferedImage : return $r2
