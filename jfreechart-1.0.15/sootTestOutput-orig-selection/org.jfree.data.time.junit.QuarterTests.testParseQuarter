org.jfree.data.time.Quarter.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] FIRST_MONTH_IN_QUARTER>
org.jfree.data.time.Quarter.getFirstMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] FIRST_MONTH_IN_QUARTER> >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Quarter: byte quarter>
org.jfree.data.time.Quarter.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Quarter: byte quarter> >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : i0 = $r2[$b1]
org.jfree.data.time.Quarter.getFirstMillisecond : i0 = $r2[$b1] >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $s2 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getFirstMillisecond : $s2 = r0.<org.jfree.data.time.Quarter: short year> >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $i3 = i0 - 1
org.jfree.data.time.Quarter.getFirstMillisecond : $i3 = i0 - 1 >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s2, $i3, 1, 0, 0, 0)
org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s2, $i3, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Quarter.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : return $l4
org.jfree.data.time.Quarter.getFirstMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Quarter.peg : r0.<org.jfree.data.time.Quarter: long firstMillisecond> = $l0
org.jfree.data.time.Quarter.peg : r0.<org.jfree.data.time.Quarter: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Quarter.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Quarter.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] LAST_MONTH_IN_QUARTER>
org.jfree.data.time.Quarter.getLastMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] LAST_MONTH_IN_QUARTER> >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $b2 = r0.<org.jfree.data.time.Quarter: byte quarter>
org.jfree.data.time.Quarter.getLastMillisecond : $b2 = r0.<org.jfree.data.time.Quarter: byte quarter> >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : i0 = $r2[$b2]
org.jfree.data.time.Quarter.getLastMillisecond : i0 = $r2[$b2] >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $s3 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getLastMillisecond : $s3 = r0.<org.jfree.data.time.Quarter: short year> >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : i1 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>(i0, $s3)
org.jfree.data.time.Quarter.getLastMillisecond : i1 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>(i0, $s3) >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $s4 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getLastMillisecond : $s4 = r0.<org.jfree.data.time.Quarter: short year> >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $i5 = i0 - 1
org.jfree.data.time.Quarter.getLastMillisecond : $i5 = i0 - 1 >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s4, $i5, i1, 23, 59, 59)
org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s4, $i5, i1, 23, 59, 59) >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Quarter.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : return $l6
org.jfree.data.time.Quarter.getLastMillisecond : return $l6 >>>>>>>> org.jfree.data.time.Quarter.peg : r0.<org.jfree.data.time.Quarter: long lastMillisecond> = $l1
org.jfree.data.time.Quarter.peg : r0.<org.jfree.data.time.Quarter: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("Q")
org.jfree.data.time.Quarter.parseQuarter : i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("Q") >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : if i0 != -1
org.jfree.data.time.Quarter.parseQuarter : if i0 != -1 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.jfree.data.time.Quarter.parseQuarter : $i2 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i3 = $i2 - 1
org.jfree.data.time.Quarter.parseQuarter : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : if i0 != $i3
org.jfree.data.time.Quarter.parseQuarter : if i0 != $i3 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i4 = i0 + 1
org.jfree.data.time.Quarter.parseQuarter : $i4 = i0 + 1 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i5 = i0 + 2
org.jfree.data.time.Quarter.parseQuarter : $i5 = i0 + 2 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5)
org.jfree.data.time.Quarter.parseQuarter : r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1)
org.jfree.data.time.Quarter.parseQuarter : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r7 = new java.lang.StringBuilder
org.jfree.data.time.Quarter.parseQuarter : $r7 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.jfree.data.time.Quarter.parseQuarter : $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.jfree.data.time.Quarter.parseQuarter : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i6 = i0 + 2
org.jfree.data.time.Quarter.parseQuarter : $i6 = i0 + 2 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i7 = virtualinvoke r0.<java.lang.String: int length()>()
org.jfree.data.time.Quarter.parseQuarter : $i7 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7)
org.jfree.data.time.Quarter.parseQuarter : $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.jfree.data.time.Quarter.parseQuarter : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.time.Quarter.parseQuarter : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r12 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(47, 32)
org.jfree.data.time.Quarter.parseQuarter : r12 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(47, 32) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r13 = virtualinvoke r12.<java.lang.String: java.lang.String replace(char,char)>(44, 32)
org.jfree.data.time.Quarter.parseQuarter : r13 = virtualinvoke r12.<java.lang.String: java.lang.String replace(char,char)>(44, 32) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r14 = virtualinvoke r13.<java.lang.String: java.lang.String replace(char,char)>(45, 32)
org.jfree.data.time.Quarter.parseQuarter : r14 = virtualinvoke r13.<java.lang.String: java.lang.String replace(char,char)>(45, 32) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r15 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>()
org.jfree.data.time.Quarter.parseQuarter : $r15 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r3 = staticinvoke <org.jfree.data.time.Year: org.jfree.data.time.Year parseYear(java.lang.String)>($r15)
org.jfree.data.time.Quarter.parseQuarter : r3 = staticinvoke <org.jfree.data.time.Year: org.jfree.data.time.Year parseYear(java.lang.String)>($r15) >>>>>>>> org.jfree.data.time.Year.parseYear : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.jfree.data.time.Year.parseYear : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.jfree.data.time.Year.parseYear : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
org.jfree.data.time.Year.parseYear : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.jfree.data.time.Year.parseYear : goto [?= $r5 = new org.jfree.data.time.Year]
org.jfree.data.time.Year.parseYear : goto [?= $r5 = new org.jfree.data.time.Year] >>>>>>>> org.jfree.data.time.Year.parseYear : $r5 = new org.jfree.data.time.Year
org.jfree.data.time.Year.parseYear : $r5 = new org.jfree.data.time.Year >>>>>>>> org.jfree.data.time.Year.parseYear : specialinvoke $r5.<org.jfree.data.time.Year: void <init>(int)>(i0)
org.jfree.data.time.Year.parseYear : specialinvoke $r5.<org.jfree.data.time.Year: void <init>(int)>(i0) >>>>>>>> org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : return $l1
org.jfree.data.time.Year.getFirstMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : return $l1
org.jfree.data.time.Year.getLastMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Year.parseYear : return $r5
org.jfree.data.time.Year.parseYear : return $r5 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r16 = new org.jfree.data.time.Quarter
org.jfree.data.time.Quarter.parseQuarter : $r16 = new org.jfree.data.time.Quarter >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r16.<org.jfree.data.time.Quarter: void <init>(int,org.jfree.data.time.Year)>(i1, r3)
org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r16.<org.jfree.data.time.Quarter: void <init>(int,org.jfree.data.time.Year)>(i1, r3) >>>>>>>> org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getYear : return $s0
org.jfree.data.time.Year.getYear : return $s0 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r4 = $r16
org.jfree.data.time.Quarter.parseQuarter : r4 = $r16 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : return r4
org.jfree.data.time.Quarter.parseQuarter : return r4 >>>>>>>> org.jfree.data.time.Quarter.getQuarter : $b0 = r0.<org.jfree.data.time.Quarter: byte quarter>
org.jfree.data.time.Quarter.getQuarter : $b0 = r0.<org.jfree.data.time.Quarter: byte quarter> >>>>>>>> org.jfree.data.time.Quarter.getQuarter : return $b0
org.jfree.data.time.Quarter.getQuarter : return $b0 >>>>>>>> org.jfree.data.time.Quarter.getYear : $r1 = new org.jfree.data.time.Year
org.jfree.data.time.Quarter.getYear : $r1 = new org.jfree.data.time.Year >>>>>>>> org.jfree.data.time.Quarter.getYear : $s0 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getYear : $s0 = r0.<org.jfree.data.time.Quarter: short year> >>>>>>>> org.jfree.data.time.Quarter.getYear : specialinvoke $r1.<org.jfree.data.time.Year: void <init>(int)>($s0)
org.jfree.data.time.Quarter.getYear : specialinvoke $r1.<org.jfree.data.time.Year: void <init>(int)>($s0) >>>>>>>> org.jfree.data.time.Quarter.getYear : return $r1
