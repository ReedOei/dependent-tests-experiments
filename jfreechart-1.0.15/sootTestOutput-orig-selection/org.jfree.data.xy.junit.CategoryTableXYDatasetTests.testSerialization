org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : $r2 = new java.lang.Double
org.jfree.data.xy.CategoryTableXYDataset.add : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.xy.CategoryTableXYDataset.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : $r3 = new java.lang.Double
org.jfree.data.xy.CategoryTableXYDataset.add : $r3 = new java.lang.Double >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d1)
org.jfree.data.xy.CategoryTableXYDataset.add : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d1) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: void add(java.lang.Number,java.lang.Number,java.lang.String,boolean)>($r2, $r3, r1, 1)
org.jfree.data.xy.CategoryTableXYDataset.add : virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: void add(java.lang.Number,java.lang.Number,java.lang.String,boolean)>($r2, $r3, r1, 1) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : $r4 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.add : $r4 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : $r5 = (java.lang.Comparable) r1
org.jfree.data.xy.CategoryTableXYDataset.add : $r5 = (java.lang.Comparable) r1 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r2, $r5, r3)
org.jfree.data.xy.CategoryTableXYDataset.add : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r2, $r5, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $i2 = neg i0
org.jfree.data.DefaultKeyedValues2D.setValue : $i2 = neg i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i3 = $i2 - 1
org.jfree.data.DefaultKeyedValues2D.setValue : i3 = $i2 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(i3, r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(i3, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(i3, r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(i3, r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : goto [?= virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)]
org.jfree.data.DefaultKeyedValues2D.setValue : goto [?= virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)] >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : if z0 == 0
org.jfree.data.xy.CategoryTableXYDataset.add : if z0 == 0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.add : virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: void fireDatasetChanged()>()
org.jfree.data.xy.CategoryTableXYDataset.add : virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener"
org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener" >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2]
org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5
org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1)
org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $d0 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double recalculateInterval()>()
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $d0 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double recalculateInterval()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : d0 = #Infinity
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : d0 = #Infinity >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i0 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i0 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : return $i0
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i1 = 0
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i1 = 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : if i1 >= i0
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : if i1 >= i0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : $d1 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double calculateIntervalForSeries(int)>(i1)
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : $d1 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double calculateIntervalForSeries(int)>(i1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = #Infinity
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = #Infinity >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i1 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i1 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: int getItemCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: int getItemCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i0
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i1
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i1 <= 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i1 <= 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : return d0
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : return d0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d1)
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i1 = i1 + 1
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : goto [?= (branch)]
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : return d0
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : return d0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> = $d0
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> = $d0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)]
org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r2 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r2 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = interfaceinvoke $r2.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, 0)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = interfaceinvoke $r2.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, 0) >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getX : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.getX : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getX : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i1)
org.jfree.data.xy.CategoryTableXYDataset.getX : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3
org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getX : $r3 = (java.lang.Number) $r2
org.jfree.data.xy.CategoryTableXYDataset.getX : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getX : return $r3
org.jfree.data.xy.CategoryTableXYDataset.getX : return $r3 >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null
org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : return d0
org.jfree.data.xy.AbstractXYDataset.getXValue : return d0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i2 >= i1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i2 >= i1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $d3 = d2 - d1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $d3 = d2 - d1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d3)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d3) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = d2
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = d2 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = i2 + 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = i2 + 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : goto [?= (branch)]
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : goto [?= (branch)] >>>>>>>> org.jfree.data.general.AbstractDataset.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.data.general.AbstractDataset.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.AbstractDataset.readObject : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.AbstractDataset.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.data.general.AbstractDataset.readObject : r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void registerValidation(java.io.ObjectInputValidation,int)>(r0, 10)
org.jfree.data.general.AbstractDataset.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void registerValidation(java.io.ObjectInputValidation,int)>(r0, 10) >>>>>>>> org.jfree.data.general.AbstractDataset.validateObject : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void fireDatasetChanged()>()
org.jfree.data.general.AbstractDataset.validateObject : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : $z0 = r1 instanceof org.jfree.data.xy.CategoryTableXYDataset
org.jfree.data.xy.CategoryTableXYDataset.equals : $z0 = r1 instanceof org.jfree.data.xy.CategoryTableXYDataset >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : if $z0 != 0
org.jfree.data.xy.CategoryTableXYDataset.equals : if $z0 != 0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : r2 = (org.jfree.data.xy.CategoryTableXYDataset) r1
org.jfree.data.xy.CategoryTableXYDataset.equals : r2 = (org.jfree.data.xy.CategoryTableXYDataset) r1 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : $r3 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate>
org.jfree.data.xy.CategoryTableXYDataset.equals : $r3 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : $r4 = r2.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate>
org.jfree.data.xy.CategoryTableXYDataset.equals : $r4 = r2.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : $z1 = virtualinvoke $r3.<org.jfree.data.xy.IntervalXYDelegate: boolean equals(java.lang.Object)>($r4)
org.jfree.data.xy.CategoryTableXYDataset.equals : $z1 = virtualinvoke $r3.<org.jfree.data.xy.IntervalXYDelegate: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : if r1 != r0
org.jfree.data.xy.IntervalXYDelegate.equals : if r1 != r0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $z0 = r1 instanceof org.jfree.data.xy.IntervalXYDelegate
org.jfree.data.xy.IntervalXYDelegate.equals : $z0 = r1 instanceof org.jfree.data.xy.IntervalXYDelegate >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : if $z0 != 0
org.jfree.data.xy.IntervalXYDelegate.equals : if $z0 != 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : r2 = (org.jfree.data.xy.IntervalXYDelegate) r1
org.jfree.data.xy.IntervalXYDelegate.equals : r2 = (org.jfree.data.xy.IntervalXYDelegate) r1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $z1 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.xy.IntervalXYDelegate.equals : $z1 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $z2 = r2.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.xy.IntervalXYDelegate.equals : $z2 = r2.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : if $z1 == $z2
org.jfree.data.xy.IntervalXYDelegate.equals : if $z1 == $z2 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $d0 = r0.<org.jfree.data.xy.IntervalXYDelegate: double intervalPositionFactor>
org.jfree.data.xy.IntervalXYDelegate.equals : $d0 = r0.<org.jfree.data.xy.IntervalXYDelegate: double intervalPositionFactor> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $d1 = r2.<org.jfree.data.xy.IntervalXYDelegate: double intervalPositionFactor>
org.jfree.data.xy.IntervalXYDelegate.equals : $d1 = r2.<org.jfree.data.xy.IntervalXYDelegate: double intervalPositionFactor> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $b0 = $d0 cmpl $d1
org.jfree.data.xy.IntervalXYDelegate.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : if $b0 == 0
org.jfree.data.xy.IntervalXYDelegate.equals : if $b0 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $d2 = r0.<org.jfree.data.xy.IntervalXYDelegate: double fixedIntervalWidth>
org.jfree.data.xy.IntervalXYDelegate.equals : $d2 = r0.<org.jfree.data.xy.IntervalXYDelegate: double fixedIntervalWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $d3 = r2.<org.jfree.data.xy.IntervalXYDelegate: double fixedIntervalWidth>
org.jfree.data.xy.IntervalXYDelegate.equals : $d3 = r2.<org.jfree.data.xy.IntervalXYDelegate: double fixedIntervalWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : $b1 = $d2 cmpl $d3
org.jfree.data.xy.IntervalXYDelegate.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : if $b1 == 0
org.jfree.data.xy.IntervalXYDelegate.equals : if $b1 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.equals : return 1
org.jfree.data.xy.IntervalXYDelegate.equals : return 1 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : if $z1 != 0
org.jfree.data.xy.CategoryTableXYDataset.equals : if $z1 != 0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : $r5 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.equals : $r5 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : $r6 = r2.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.equals : $r6 = r2.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : $z2 = virtualinvoke $r5.<org.jfree.data.DefaultKeyedValues2D: boolean equals(java.lang.Object)>($r6)
org.jfree.data.xy.CategoryTableXYDataset.equals : $z2 = virtualinvoke $r5.<org.jfree.data.DefaultKeyedValues2D: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if r1 != null
org.jfree.data.DefaultKeyedValues2D.equals : if r1 != null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if r1 != r0
org.jfree.data.DefaultKeyedValues2D.equals : if r1 != r0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $z0 = r1 instanceof org.jfree.data.KeyedValues2D
org.jfree.data.DefaultKeyedValues2D.equals : $z0 = r1 instanceof org.jfree.data.KeyedValues2D >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if $z0 != 0
org.jfree.data.DefaultKeyedValues2D.equals : if $z0 != 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : r2 = (org.jfree.data.KeyedValues2D) r1
org.jfree.data.DefaultKeyedValues2D.equals : r2 = (org.jfree.data.KeyedValues2D) r1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $r5 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List getRowKeys()>()
org.jfree.data.DefaultKeyedValues2D.equals : $r5 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List getRowKeys()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKeys : return $r2
org.jfree.data.DefaultKeyedValues2D.getRowKeys : return $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $r6 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: java.util.List getRowKeys()>()
org.jfree.data.DefaultKeyedValues2D.equals : $r6 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: java.util.List getRowKeys()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $z1 = interfaceinvoke $r5.<java.util.List: boolean equals(java.lang.Object)>($r6)
org.jfree.data.DefaultKeyedValues2D.equals : $z1 = interfaceinvoke $r5.<java.util.List: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if $z1 != 0
org.jfree.data.DefaultKeyedValues2D.equals : if $z1 != 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List getColumnKeys()>()
org.jfree.data.DefaultKeyedValues2D.equals : $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List getColumnKeys()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : return $r2
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : return $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $r8 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: java.util.List getColumnKeys()>()
org.jfree.data.DefaultKeyedValues2D.equals : $r8 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: java.util.List getColumnKeys()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $z2 = interfaceinvoke $r7.<java.util.List: boolean equals(java.lang.Object)>($r8)
org.jfree.data.DefaultKeyedValues2D.equals : $z2 = interfaceinvoke $r7.<java.util.List: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if $z2 != 0
org.jfree.data.DefaultKeyedValues2D.equals : if $z2 != 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.DefaultKeyedValues2D.equals : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $i4 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: int getRowCount()>()
org.jfree.data.DefaultKeyedValues2D.equals : $i4 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if i0 == $i4
org.jfree.data.DefaultKeyedValues2D.equals : if i0 == $i4 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : i1 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.DefaultKeyedValues2D.equals : i1 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $i5 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: int getColumnCount()>()
org.jfree.data.DefaultKeyedValues2D.equals : $i5 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if i1 == $i5
org.jfree.data.DefaultKeyedValues2D.equals : if i1 == $i5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : i2 = 0
org.jfree.data.DefaultKeyedValues2D.equals : i2 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if i2 >= i0
org.jfree.data.DefaultKeyedValues2D.equals : if i2 >= i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : i3 = 0
org.jfree.data.DefaultKeyedValues2D.equals : i3 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if i3 >= i1
org.jfree.data.DefaultKeyedValues2D.equals : if i3 >= i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : r3 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i2, i3)
org.jfree.data.DefaultKeyedValues2D.equals : r3 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5
org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null
org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7
org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0
org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2)
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : return r1
org.jfree.data.DefaultKeyedValues2D.getValue : return r1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : r4 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: java.lang.Number getValue(int,int)>(i2, i3)
org.jfree.data.DefaultKeyedValues2D.equals : r4 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: java.lang.Number getValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if r3 != null
org.jfree.data.DefaultKeyedValues2D.equals : if r3 != null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : $z3 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.equals : $z3 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : if $z3 != 0
org.jfree.data.DefaultKeyedValues2D.equals : if $z3 != 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : i3 = i3 + 1
org.jfree.data.DefaultKeyedValues2D.equals : i3 = i3 + 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : goto [?= (branch)]
org.jfree.data.DefaultKeyedValues2D.equals : goto [?= (branch)] >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : i2 = i2 + 1
org.jfree.data.DefaultKeyedValues2D.equals : i2 = i2 + 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.equals : return 1
org.jfree.data.DefaultKeyedValues2D.equals : return 1 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : if $z2 != 0
org.jfree.data.xy.CategoryTableXYDataset.equals : if $z2 != 0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : return 1
