org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader> >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null
org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0)
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0) >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5
org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5 >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : r2 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset>
org.jfree.chart.plot.MeterPlot.setDataset : r2 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset> >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : if r2 == null
org.jfree.chart.plot.MeterPlot.setDataset : if r2 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset> = r1
org.jfree.chart.plot.MeterPlot.setDataset : r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset> = r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : if r1 == null
org.jfree.chart.plot.MeterPlot.setDataset : if r1 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : $r4 = interfaceinvoke r1.<org.jfree.data.general.ValueDataset: org.jfree.data.general.DatasetGroup getGroup()>()
org.jfree.chart.plot.MeterPlot.setDataset : $r4 = interfaceinvoke r1.<org.jfree.data.general.ValueDataset: org.jfree.data.general.DatasetGroup getGroup()>() >>>>>>>> org.jfree.data.general.AbstractDataset.getGroup : $r1 = r0.<org.jfree.data.general.AbstractDataset: org.jfree.data.general.DatasetGroup group>
org.jfree.data.general.AbstractDataset.getGroup : $r1 = r0.<org.jfree.data.general.AbstractDataset: org.jfree.data.general.DatasetGroup group> >>>>>>>> org.jfree.data.general.AbstractDataset.getGroup : return $r1
org.jfree.data.general.AbstractDataset.getGroup : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void setDatasetGroup(org.jfree.data.general.DatasetGroup)>($r4)
org.jfree.chart.plot.MeterPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void setDatasetGroup(org.jfree.data.general.DatasetGroup)>($r4) >>>>>>>> org.jfree.chart.plot.Plot.setDatasetGroup : r0.<org.jfree.chart.plot.Plot: org.jfree.data.general.DatasetGroup datasetGroup> = r1
org.jfree.chart.plot.Plot.setDatasetGroup : r0.<org.jfree.chart.plot.Plot: org.jfree.data.general.DatasetGroup datasetGroup> = r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : interfaceinvoke r1.<org.jfree.data.general.ValueDataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0)
org.jfree.chart.plot.MeterPlot.setDataset : interfaceinvoke r1.<org.jfree.data.general.ValueDataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0) >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : $r5 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.MeterPlot.setDataset : $r5 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : specialinvoke $r5.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r1)
org.jfree.chart.plot.MeterPlot.setDataset : specialinvoke $r5.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r1) >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : r3 = $r5
org.jfree.chart.plot.MeterPlot.setDataset : r3 = $r5 >>>>>>>> org.jfree.chart.plot.MeterPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r3)
org.jfree.chart.plot.MeterPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r3) >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : $r2 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.datasetChanged : $r2 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : specialinvoke $r2.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.datasetChanged : specialinvoke $r2.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : r3 = $r2
org.jfree.chart.plot.Plot.datasetChanged : r3 = $r2 >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : $r4 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.Plot.datasetChanged : $r4 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : virtualinvoke r3.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r4)
org.jfree.chart.plot.Plot.datasetChanged : virtualinvoke r3.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r4) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r3)
org.jfree.chart.plot.Plot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r3) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.plot.MeterPlot.addInterval : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "interval")
org.jfree.chart.plot.MeterPlot.addInterval : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "interval") >>>>>>>> org.jfree.chart.plot.MeterPlot.addInterval : $r2 = r0.<org.jfree.chart.plot.MeterPlot: java.util.List intervals>
org.jfree.chart.plot.MeterPlot.addInterval : $r2 = r0.<org.jfree.chart.plot.MeterPlot: java.util.List intervals> >>>>>>>> org.jfree.chart.plot.MeterPlot.addInterval : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.MeterPlot.addInterval : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.MeterPlot.addInterval : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void fireChangeEvent()>()
org.jfree.chart.plot.MeterPlot.addInterval : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1)
org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding") >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin") >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame") >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if $z0 == 0
org.jfree.chart.title.Title.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2
org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if i0 < 0
org.jfree.chart.title.Title.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.setPosition : if $r2 == r1
org.jfree.chart.title.Title.setPosition : if $r2 == r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3)
org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3) >>>>>>>> org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1)
org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r5.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 1, 0)
org.jfree.chart.JFreeChart.draw : specialinvoke $r5.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 1, 0) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r5)
org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r5) >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners> >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2
org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0
org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : r6 = null
org.jfree.chart.JFreeChart.draw : r6 = null >>>>>>>> org.jfree.chart.JFreeChart.draw : if r4 == null
org.jfree.chart.JFreeChart.draw : if r4 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : if r6 == null
org.jfree.chart.JFreeChart.draw : if r6 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints>
org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>($r15)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>($r15) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r16 == null
org.jfree.chart.JFreeChart.draw : if $r16 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage>
org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r18 == null
org.jfree.chart.JFreeChart.draw : if $r18 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>()
org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>() >>>>>>>> org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible>
org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible> >>>>>>>> org.jfree.chart.JFreeChart.isBorderVisible : return $z0
org.jfree.chart.JFreeChart.isBorderVisible : return $z0 >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z1 == 0
org.jfree.chart.JFreeChart.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.JFreeChart.draw : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : r28 = $r27
org.jfree.chart.JFreeChart.draw : r28 = $r27 >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke $r29.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r28)
org.jfree.chart.JFreeChart.draw : virtualinvoke $r29.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r28) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r30 == null
org.jfree.chart.JFreeChart.draw : if $r30 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles> >>>>>>>> org.jfree.chart.JFreeChart.draw : r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.JFreeChart.draw : r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z4 == 0
org.jfree.chart.JFreeChart.draw : if $z4 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : r40 = (org.jfree.chart.title.Title) $r39
org.jfree.chart.JFreeChart.draw : r40 = (org.jfree.chart.title.Title) $r39 >>>>>>>> org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>() >>>>>>>> org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.isVisible : return $z0
org.jfree.chart.title.Title.isVisible : return $z0 >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z5 == 0
org.jfree.chart.JFreeChart.draw : if $z5 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $z6 = 0
org.jfree.chart.JFreeChart.draw : $z6 = 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : r11 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r40, r1, r28, $z6)
org.jfree.chart.JFreeChart.draw : r11 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r40, r1, r28, $z6) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t")
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t") >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area")
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area") >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.getPosition : return $r1
org.jfree.chart.title.Title.getPosition : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $b0 > 0
org.jfree.chart.JFreeChart.drawTitle : if $b0 > 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $b1 > 0
org.jfree.chart.JFreeChart.drawTitle : if $b1 > 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r5 = new org.jfree.data.Range
org.jfree.chart.JFreeChart.drawTitle : $r5 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r5.<org.jfree.data.Range: void <init>(double,double)>(0.0, d0)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r5.<org.jfree.data.Range: void <init>(double,double)>(0.0, d0) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.JFreeChart.drawTitle : $r12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r13 = new org.jfree.data.Range
org.jfree.chart.JFreeChart.drawTitle : $r13 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r13.<org.jfree.data.Range: void <init>(double,double)>(0.0, d1)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r13.<org.jfree.data.Range: void <init>(double,double)>(0.0, d1) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.JFreeChart.drawTitle : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r11.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r5, $r12, d1, $r13, $r14)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r11.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r5, $r12, d1, $r13, $r14) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r6 = $r11
org.jfree.chart.JFreeChart.drawTitle : r6 = $r11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : n0 = null
org.jfree.chart.JFreeChart.drawTitle : n0 = null >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams
org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r15.<org.jfree.chart.block.BlockParams: void <init>()>()
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r15.<org.jfree.chart.block.BlockParams: void <init>()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r7 = $r15
org.jfree.chart.JFreeChart.drawTitle : r7 = $r15 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0) >>>>>>>> org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0
org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if r4 != $r16
org.jfree.chart.JFreeChart.drawTitle : if r4 != $r16 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if r4 != $r20
org.jfree.chart.JFreeChart.drawTitle : if r4 != $r20 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>()>()
org.jfree.chart.title.LegendTitle.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4 = $r3
org.jfree.chart.title.LegendTitle.arrange : r4 = $r3 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>()
org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void clear()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z0 == 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r4.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($r5)
org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r4.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($r5) >>>>>>>> org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement")
org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement") >>>>>>>> org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1
org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r9 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r9 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $z1 = virtualinvoke $r8.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r9)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z1 = virtualinvoke $r8.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z1 == 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $i2 = lengthof $r10
org.jfree.chart.title.LegendTitle.fetchLegendItems : $i2 = lengthof $r10 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if i0 >= $i2
org.jfree.chart.title.LegendTitle.fetchLegendItems : if i0 >= $i2 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r12 = $r11[i0]
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r12 = $r11[i0] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.MeterPlot.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : r2 = $r1
org.jfree.chart.plot.MeterPlot.getLegendItems : r2 = $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $r8 = r0.<org.jfree.chart.plot.MeterPlot: java.util.List intervals>
org.jfree.chart.plot.MeterPlot.getLegendItems : $r8 = r0.<org.jfree.chart.plot.MeterPlot: java.util.List intervals> >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : if $z0 == 0
org.jfree.chart.plot.MeterPlot.getLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : r4 = (org.jfree.chart.plot.MeterInterval) $r9
org.jfree.chart.plot.MeterPlot.getLegendItems : r4 = (org.jfree.chart.plot.MeterInterval) $r9 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : r5 = virtualinvoke r4.<org.jfree.chart.plot.MeterInterval: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : r5 = virtualinvoke r4.<org.jfree.chart.plot.MeterInterval: java.awt.Paint getBackgroundPaint()>() >>>>>>>> org.jfree.chart.plot.MeterInterval.getBackgroundPaint : $r1 = r0.<org.jfree.chart.plot.MeterInterval: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.MeterInterval.getBackgroundPaint : $r1 = r0.<org.jfree.chart.plot.MeterInterval: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.MeterInterval.getBackgroundPaint : return $r1
org.jfree.chart.plot.MeterInterval.getBackgroundPaint : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : if r5 != null
org.jfree.chart.plot.MeterPlot.getLegendItems : if r5 != null >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : r5 = virtualinvoke r4.<org.jfree.chart.plot.MeterInterval: java.awt.Paint getOutlinePaint()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : r5 = virtualinvoke r4.<org.jfree.chart.plot.MeterInterval: java.awt.Paint getOutlinePaint()>() >>>>>>>> org.jfree.chart.plot.MeterInterval.getOutlinePaint : $r1 = r0.<org.jfree.chart.plot.MeterInterval: java.awt.Paint outlinePaint>
org.jfree.chart.plot.MeterInterval.getOutlinePaint : $r1 = r0.<org.jfree.chart.plot.MeterInterval: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.MeterInterval.getOutlinePaint : return $r1
org.jfree.chart.plot.MeterInterval.getOutlinePaint : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $r10 = new org.jfree.chart.LegendItem
org.jfree.chart.plot.MeterPlot.getLegendItems : $r10 = new org.jfree.chart.LegendItem >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $r11 = virtualinvoke r4.<org.jfree.chart.plot.MeterInterval: java.lang.String getLabel()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : $r11 = virtualinvoke r4.<org.jfree.chart.plot.MeterInterval: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.plot.MeterInterval.getLabel : $r1 = r0.<org.jfree.chart.plot.MeterInterval: java.lang.String label>
org.jfree.chart.plot.MeterInterval.getLabel : $r1 = r0.<org.jfree.chart.plot.MeterInterval: java.lang.String label> >>>>>>>> org.jfree.chart.plot.MeterInterval.getLabel : return $r1
org.jfree.chart.plot.MeterInterval.getLabel : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $r12 = virtualinvoke r4.<org.jfree.chart.plot.MeterInterval: java.lang.String getLabel()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : $r12 = virtualinvoke r4.<org.jfree.chart.plot.MeterInterval: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $r6 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.MeterPlot.getLegendItems : $r6 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(-4.0, -4.0, 8.0, 8.0)
org.jfree.chart.plot.MeterPlot.getLegendItems : specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(-4.0, -4.0, 8.0, 8.0) >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : specialinvoke $r10.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)>($r11, $r12, null, null, $r6, r5)
org.jfree.chart.plot.MeterPlot.getLegendItems : specialinvoke $r10.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)>($r11, $r12, null, null, $r6, r5) >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : r7 = $r10
org.jfree.chart.plot.MeterPlot.getLegendItems : r7 = $r10 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : $r13 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset getDataset()>()
org.jfree.chart.plot.MeterPlot.getLegendItems : $r13 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset getDataset()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.getDataset : $r1 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset>
org.jfree.chart.plot.MeterPlot.getDataset : $r1 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset> >>>>>>>> org.jfree.chart.plot.MeterPlot.getDataset : return $r1
org.jfree.chart.plot.MeterPlot.getDataset : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : virtualinvoke r7.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>($r13)
org.jfree.chart.plot.MeterPlot.getLegendItems : virtualinvoke r7.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>($r13) >>>>>>>> org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1
org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r7)
org.jfree.chart.plot.MeterPlot.getLegendItems : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r7) >>>>>>>> org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.LegendItemCollection.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.MeterPlot.getLegendItems : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.MeterPlot.getLegendItems : return r2
org.jfree.chart.plot.MeterPlot.getLegendItems : return r2 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null
org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : return $i0
org.jfree.chart.LegendItemCollection.getItemCount : return $i0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if i1 >= $i3
org.jfree.chart.title.LegendTitle.fetchLegendItems : if i1 >= $i3 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1) >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.LegendItemCollection.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r3 = (org.jfree.chart.LegendItem) $r2
org.jfree.chart.LegendItemCollection.get : $r3 = (org.jfree.chart.LegendItem) $r2 >>>>>>>> org.jfree.chart.LegendItemCollection.get : return $r3
org.jfree.chart.LegendItemCollection.get : return $r3 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : specialinvoke r0.<org.jfree.chart.title.LegendTitle: void addItemBlock(org.jfree.chart.LegendItem)>($r13)
org.jfree.chart.title.LegendTitle.fetchLegendItems : specialinvoke r0.<org.jfree.chart.title.LegendTitle: void addItemBlock(org.jfree.chart.LegendItem)>($r13) >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1)
org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r8 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getShape()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r8 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getShape()>() >>>>>>>> org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape>
org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape> >>>>>>>> org.jfree.chart.LegendItem.getShape : return $r1
org.jfree.chart.LegendItem.getShape : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>() >>>>>>>> org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint>
org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint> >>>>>>>> org.jfree.chart.LegendItem.getFillPaint : return $r1
org.jfree.chart.LegendItem.getFillPaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r7.<org.jfree.chart.title.LegendGraphic: void <init>(java.awt.Shape,java.awt.Paint)>($r8, $r9)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r7.<org.jfree.chart.title.LegendGraphic: void <init>(java.awt.Shape,java.awt.Paint)>($r8, $r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets
org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : specialinvoke $r1.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(d0, d1, d2, d3)
org.jfree.chart.block.AbstractBlock.setPadding : specialinvoke $r1.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(d0, d1, d2, d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r1)
org.jfree.chart.block.AbstractBlock.setPadding : virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r1) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r2 = $r7
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r2 = $r7 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>() >>>>>>>> org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer>
org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> >>>>>>>> org.jfree.chart.LegendItem.getFillPaintTransformer : return $r1
org.jfree.chart.LegendItem.getFillPaintTransformer : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setFillPaintTransformer(org.jfree.ui.GradientPaintTransformer)>($r10)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setFillPaintTransformer(org.jfree.ui.GradientPaintTransformer)>($r10) >>>>>>>> org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer")
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer") >>>>>>>> org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled>
org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled> >>>>>>>> org.jfree.chart.LegendItem.isShapeFilled : return $z0
org.jfree.chart.LegendItem.isShapeFilled : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeFilled(boolean)>($z0)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeFilled(boolean)>($z0) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0
org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>() >>>>>>>> org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line>
org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line> >>>>>>>> org.jfree.chart.LegendItem.getLine : return $r1
org.jfree.chart.LegendItem.getLine : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLine(java.awt.Shape)>($r11)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLine(java.awt.Shape)>($r11) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1
org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>() >>>>>>>> org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke>
org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke> >>>>>>>> org.jfree.chart.LegendItem.getLineStroke : return $r1
org.jfree.chart.LegendItem.getLineStroke : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineStroke(java.awt.Stroke)>($r12)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineStroke(java.awt.Stroke)>($r12) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1
org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>() >>>>>>>> org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint>
org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint> >>>>>>>> org.jfree.chart.LegendItem.getLinePaint : return $r1
org.jfree.chart.LegendItem.getLinePaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLinePaint(java.awt.Paint)>($r13)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLinePaint(java.awt.Paint)>($r13) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1
org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible>
org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible> >>>>>>>> org.jfree.chart.LegendItem.isLineVisible : return $z0
org.jfree.chart.LegendItem.isLineVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineVisible(boolean)>($z1)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineVisible(boolean)>($z1) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0
org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible>
org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible> >>>>>>>> org.jfree.chart.LegendItem.isShapeVisible : return $z0
org.jfree.chart.LegendItem.isShapeVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeVisible(boolean)>($z2)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeVisible(boolean)>($z2) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0
org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible>
org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible> >>>>>>>> org.jfree.chart.LegendItem.isShapeOutlineVisible : return $z0
org.jfree.chart.LegendItem.isShapeOutlineVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeOutlineVisible(boolean)>($z3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeOutlineVisible(boolean)>($z3) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0
org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>() >>>>>>>> org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint>
org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.LegendItem.getOutlinePaint : return $r1
org.jfree.chart.LegendItem.getOutlinePaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlinePaint(java.awt.Paint)>($r14)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlinePaint(java.awt.Paint)>($r14) >>>>>>>> org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1
org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>() >>>>>>>> org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke>
org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.LegendItem.getOutlineStroke : return $r1
org.jfree.chart.LegendItem.getOutlineStroke : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlineStroke(java.awt.Stroke)>($r15)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlineStroke(java.awt.Stroke)>($r15) >>>>>>>> org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1
org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setPadding(org.jfree.ui.RectangleInsets)>($r16)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setPadding(org.jfree.ui.RectangleInsets)>($r16) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r18 = new org.jfree.chart.block.BorderArrangement
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r18 = new org.jfree.chart.block.BorderArrangement >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r18.<org.jfree.chart.block.BorderArrangement: void <init>()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r18.<org.jfree.chart.block.BorderArrangement: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>() >>>>>>>> org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset>
org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> >>>>>>>> org.jfree.chart.LegendItem.getDataset : return $r1
org.jfree.chart.LegendItem.getDataset : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>() >>>>>>>> org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey>
org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> >>>>>>>> org.jfree.chart.LegendItem.getSeriesKey : return $r1
org.jfree.chart.LegendItem.getSeriesKey : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r17.<org.jfree.chart.title.LegendItemBlockContainer: void <init>(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)>($r18, $r19, $r20)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r17.<org.jfree.chart.title.LegendItemBlockContainer: void <init>(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)>($r18, $r19, $r20) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r3 = $r17
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r3 = $r17 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor> >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : return $r1
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeAnchor(org.jfree.ui.RectangleAnchor)>($r21)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeAnchor(org.jfree.ui.RectangleAnchor)>($r21) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor")
org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor") >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1
org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation> >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : return $r1
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeLocation(org.jfree.ui.RectangleAnchor)>($r22)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeLocation(org.jfree.ui.RectangleAnchor)>($r22) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location")
org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location") >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1
org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r2, $r23)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r2, $r23) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r2 != null
org.jfree.chart.block.BorderArrangement.add : if r2 != null >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r4
org.jfree.chart.block.BorderArrangement.add : if r3 != $r4 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r5
org.jfree.chart.block.BorderArrangement.add : if r3 != $r5 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r6
org.jfree.chart.block.BorderArrangement.add : if r3 != $r6 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : goto [?= return]
org.jfree.chart.block.BorderArrangement.add : goto [?= return] >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>() >>>>>>>> org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont>
org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.LegendItem.getLabelFont : return $r1
org.jfree.chart.LegendItem.getLabelFont : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>() >>>>>>>> org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint>
org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.LegendItem.getLabelPaint : return $r1
org.jfree.chart.LegendItem.getLabelPaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r25 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getLabel()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r25 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label>
org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label> >>>>>>>> org.jfree.chart.LegendItem.getLabel : return $r1
org.jfree.chart.LegendItem.getLabel : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r24.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>($r25, r4, r5)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r24.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>($r25, r4, r5) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r6 = $r24
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r6 = $r24 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r6.<org.jfree.chart.block.LabelBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r26)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r6.<org.jfree.chart.block.LabelBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r26) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6) >>>>>>>> org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null)
org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null) >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>() >>>>>>>> org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText>
org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText> >>>>>>>> org.jfree.chart.LegendItem.getToolTipText : return $r1
org.jfree.chart.LegendItem.getToolTipText : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setToolTipText(java.lang.String)>($r27)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setToolTipText(java.lang.String)>($r27) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1
org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>() >>>>>>>> org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText>
org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText> >>>>>>>> org.jfree.chart.LegendItem.getURLText : return $r1
org.jfree.chart.LegendItem.getURLText : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setURLText(java.lang.String)>($r28)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setURLText(java.lang.String)>($r28) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1
org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r30 = new org.jfree.chart.block.CenterArrangement
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r30 = new org.jfree.chart.block.CenterArrangement >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r30.<org.jfree.chart.block.CenterArrangement: void <init>()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r30.<org.jfree.chart.block.CenterArrangement: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r29.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>($r30)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r29.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>($r30) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r31 = $r29
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r31 = $r29 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31
org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31 >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r2)
org.jfree.chart.title.LegendTitle.addItemBlock : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r2) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = i1 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = i1 + 1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = i0 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = i0 + 1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= return]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= return] >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $z0 = virtualinvoke $r8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>()
org.jfree.chart.title.LegendTitle.arrange : $z0 = virtualinvoke $r8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()
org.jfree.chart.block.BlockContainer.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : return $z0
org.jfree.chart.block.BlockContainer.isEmpty : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : if $z0 == 0
org.jfree.chart.title.LegendTitle.arrange : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : if r5 != null
org.jfree.chart.title.LegendTitle.arrange : if r5 != null >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c") >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0
org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : return $d0
org.jfree.chart.block.RectangleConstraint.getWidth : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : return $d0
org.jfree.chart.block.RectangleConstraint.getHeight : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.getInsets : return $r1
org.jfree.chart.block.LineBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9)
org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7
org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6)
org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6) >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2)
org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r6
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r6 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r13
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r13 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r20
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r20 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r21
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r21 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r23
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r23 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r25
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r25 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.chart.block.BlockContainer.getBlocks : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : return $r2
org.jfree.chart.block.BlockContainer.getBlocks : return $r2 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r4 = newarray (org.jfree.ui.Size2D)[$i2]
org.jfree.chart.block.FlowArrangement.arrangeNN : r4 = newarray (org.jfree.ui.Size2D)[$i2] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i3 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i3 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i1 >= $i3
org.jfree.chart.block.FlowArrangement.arrangeNN : if i1 >= $i3 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r7
org.jfree.chart.block.FlowArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r7 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r8 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r8 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : if r4 != $r6
org.jfree.chart.block.CenterArrangement.arrange : if r4 != $r6 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : if r5 != $r7
org.jfree.chart.block.CenterArrangement.arrange : if r5 != $r7 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r4 = (org.jfree.chart.block.Block) $r7
org.jfree.chart.block.CenterArrangement.arrangeNN : r4 = (org.jfree.chart.block.Block) $r7 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r6 = interfaceinvoke r4.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r5)
org.jfree.chart.block.CenterArrangement.arrangeNN : r6 = interfaceinvoke r4.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r5) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3)
org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1
org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r5 = null
org.jfree.chart.block.BorderArrangement.arrange : r5 = null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r8
org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r8 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r9
org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r9 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r7 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r7 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r9 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r9 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r13 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r13 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r15 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r15 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r16 = interfaceinvoke $r14.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r15)
org.jfree.chart.block.BorderArrangement.arrangeNN : r16 = interfaceinvoke $r14.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r15) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r6 = null
org.jfree.chart.title.LegendGraphic.arrange : r6 = null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : if r4 != $r7
org.jfree.chart.title.LegendGraphic.arrange : if r4 != $r7 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : if r5 != $r8
org.jfree.chart.title.LegendGraphic.arrange : if r5 != $r8 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1)
org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r2.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r2.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = $r2
org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = $r2 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : if $r4 == null
org.jfree.chart.title.LegendGraphic.arrangeNN : if $r4 == null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r6 = interfaceinvoke $r5.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $r6 = interfaceinvoke $r5.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>($r6)
org.jfree.chart.title.LegendGraphic.arrangeNN : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>($r6) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : if $r7 == null
org.jfree.chart.title.LegendGraphic.arrangeNN : if $r7 == null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r9 = interfaceinvoke $r8.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $r9 = interfaceinvoke $r8.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>($r9)
org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>($r9) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r10.<org.jfree.ui.Size2D: void <init>(double,double)>($d0, $d1)
org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r10.<org.jfree.ui.Size2D: void <init>(double,double)>($d0, $d1) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : return $r10
org.jfree.chart.title.LegendGraphic.arrangeNN : return $r10 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : goto [?= $r27 = new org.jfree.ui.Size2D]
org.jfree.chart.title.LegendGraphic.arrange : goto [?= $r27 = new org.jfree.ui.Size2D] >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalWidth(double)>($d2)
org.jfree.chart.title.LegendGraphic.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalWidth(double)>($d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : return $r1
org.jfree.chart.block.BlockBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d5 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalHeight(double)>($d4)
org.jfree.chart.title.LegendGraphic.arrange : $d5 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalHeight(double)>($d4) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : specialinvoke $r27.<org.jfree.ui.Size2D: void <init>(double,double)>($d3, $d5)
org.jfree.chart.title.LegendGraphic.arrange : specialinvoke $r27.<org.jfree.ui.Size2D: void <init>(double,double)>($d3, $d5) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : return $r27
org.jfree.chart.title.LegendGraphic.arrange : return $r27 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3[2] = $d6
org.jfree.chart.block.BorderArrangement.arrangeNN : r3[2] = $d6 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d7
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d7 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r17 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r17 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d11 = r4[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d11 = r4[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d12 = staticinvoke <java.lang.Math: double max(double,double)>($d10, $d11)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d12 = staticinvoke <java.lang.Math: double max(double,double)>($d10, $d11) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d12
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d12 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[3] = $d13
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[3] = $d13 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r21 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r21 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r23 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r23 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r24 = interfaceinvoke $r22.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r23)
org.jfree.chart.block.BorderArrangement.arrangeNN : r24 = interfaceinvoke $r22.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r23) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font> >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r4)
org.jfree.chart.block.LabelBlock.arrange : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r4) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label> >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : r3 = virtualinvoke $r5.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r1)
org.jfree.chart.block.LabelBlock.arrange : r3 = virtualinvoke $r5.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D
org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d0 = virtualinvoke r3.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.LabelBlock.arrange : $d0 = virtualinvoke r3.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalWidth(double)>($d0)
org.jfree.chart.block.LabelBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalWidth(double)>($d0) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalHeight(double)>($d2)
org.jfree.chart.block.LabelBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalHeight(double)>($d2) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : specialinvoke $r6.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3)
org.jfree.chart.block.LabelBlock.arrange : specialinvoke $r6.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : return $r6
org.jfree.chart.block.LabelBlock.arrange : return $r6 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3[4] = $d14
org.jfree.chart.block.BorderArrangement.arrangeNN : r3[4] = $d14 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[4] = $d15
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[4] = $d15 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d17 = r3[1]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d17 = r3[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d18 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d18 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d19 = r3[4]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d19 = r3[4] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d20 = $d18 + $d19
org.jfree.chart.block.BorderArrangement.arrangeNN : $d20 = $d18 + $d19 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d21 = r3[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d21 = r3[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d22 = $d20 + $d21
org.jfree.chart.block.BorderArrangement.arrangeNN : $d22 = $d20 + $d21 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d23 = staticinvoke <java.lang.Math: double max(double,double)>($d17, $d22)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d23 = staticinvoke <java.lang.Math: double max(double,double)>($d17, $d22) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d24 = staticinvoke <java.lang.Math: double max(double,double)>($d16, $d23)
org.jfree.chart.block.BorderArrangement.arrangeNN : d24 = staticinvoke <java.lang.Math: double max(double,double)>($d16, $d23) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d26 = r4[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d26 = r4[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d27 = r4[4]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d27 = r4[4] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d28 = staticinvoke <java.lang.Math: double max(double,double)>($d26, $d27)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d28 = staticinvoke <java.lang.Math: double max(double,double)>($d26, $d27) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>($d25, $d28)
org.jfree.chart.block.BorderArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>($d25, $d28) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d30 = r4[1]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d30 = r4[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d31 = $d29 + $d30
org.jfree.chart.block.BorderArrangement.arrangeNN : $d31 = $d29 + $d30 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d1 = $d31 + d0
org.jfree.chart.block.BorderArrangement.arrangeNN : d1 = $d31 + d0 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r25 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r25 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r28 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r28 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r31 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r31 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r33 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeNN : $r33 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d36 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d36 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d37 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d37 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r33.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $d36, $d37, d0)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r33.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $d36, $d37, d0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r32.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r33)
org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r32.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r33) >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds") >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r34 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r34 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r37 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r37 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r39 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeNN : $r39 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d42 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d42 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d43 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d43 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d44 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d44 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d45 = d24 - $d44
org.jfree.chart.block.BorderArrangement.arrangeNN : $d45 = d24 - $d44 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d46 = r3[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d46 = r3[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d47 = $d45 - $d46
org.jfree.chart.block.BorderArrangement.arrangeNN : $d47 = $d45 - $d46 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r39.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d42, $d43, $d47, d0)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r39.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d42, $d43, $d47, d0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r38.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r39)
org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r38.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r39) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r40.<org.jfree.ui.Size2D: void <init>(double,double)>(d24, d1)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r40.<org.jfree.ui.Size2D: void <init>(double,double)>(d24, d1) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : return $r40
org.jfree.chart.block.BorderArrangement.arrangeNN : return $r40 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : goto [?= $r26 = new org.jfree.ui.Size2D]
org.jfree.chart.block.BorderArrangement.arrange : goto [?= $r26 = new org.jfree.ui.Size2D] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.BorderArrangement.arrange : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d2 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($d1)
org.jfree.chart.block.BorderArrangement.arrange : $d2 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($d1) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($d3)
org.jfree.chart.block.BorderArrangement.arrange : $d4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($d3) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : specialinvoke $r26.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4)
org.jfree.chart.block.BorderArrangement.arrange : specialinvoke $r26.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : return $r26
org.jfree.chart.block.BorderArrangement.arrange : return $r26 >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : return $r4
org.jfree.chart.block.BlockContainer.arrange : return $r4 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d0 = r6.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d0 = r6.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d1 = r6.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d1 = r6.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r8.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1)
org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r8.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : interfaceinvoke r4.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r8)
org.jfree.chart.block.CenterArrangement.arrangeNN : interfaceinvoke r4.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r8) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D
org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d2 = r6.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d2 = r6.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d3 = r6.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d3 = r6.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r9.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d3)
org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r9.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d3) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : return $r9
org.jfree.chart.block.CenterArrangement.arrangeNN : return $r9 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : return $r8
org.jfree.chart.block.CenterArrangement.arrange : return $r8 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r4[i1] = $r8
org.jfree.chart.block.FlowArrangement.arrangeNN : r4[i1] = $r8 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d3 = virtualinvoke $r9.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $d3 = virtualinvoke $r9.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = d1 + $d3
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = d1 + $d3 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d4 = $r10.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d4 = $r10.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = staticinvoke <java.lang.Math: double max(double,double)>($d4, d2)
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = staticinvoke <java.lang.Math: double max(double,double)>($d4, d2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r12 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r12 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d5 = $r12.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d5 = $r12.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r13 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r13 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d6 = $r13.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d6 = $r13.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, 0.0, $d5, $d6)
org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, 0.0, $d5, $d6) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : interfaceinvoke r5.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11)
org.jfree.chart.block.FlowArrangement.arrangeNN : interfaceinvoke r5.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d7 = $r14.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d7 = $r14.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d8 = d0 + $d7
org.jfree.chart.block.FlowArrangement.arrangeNN : $d8 = d0 + $d7 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d9 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d9 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = $d8 + $d9
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = $d8 + $d9 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = i1 + 1
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = i1 + 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i3 = interfaceinvoke r3.<java.util.List: int size()>()]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i3 = interfaceinvoke r3.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r16 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r16 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if $r15 == $r16
org.jfree.chart.block.FlowArrangement.arrangeNN : if $r15 == $r16 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i6 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i6 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i5 >= $i6
org.jfree.chart.block.FlowArrangement.arrangeNN : if i5 >= $i6 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r18 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r18 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if $r17 != $r18
org.jfree.chart.block.FlowArrangement.arrangeNN : if $r17 != $r18 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= i5 = i5 + 1]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= i5 = i5 + 1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = i5 + 1
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = i5 + 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i6 = interfaceinvoke r3.<java.util.List: int size()>()]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i6 = interfaceinvoke r3.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r21.<org.jfree.ui.Size2D: void <init>(double,double)>(d1, d2)
org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r21.<org.jfree.ui.Size2D: void <init>(double,double)>(d1, d2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : return $r21
org.jfree.chart.block.FlowArrangement.arrangeNN : return $r21 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $d0 = r4.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeRR : $d0 = r4.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0)
org.jfree.chart.block.FlowArrangement.arrangeRR : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0) >>>>>>>> org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.contains : $b0 = d0 cmpl $d1
org.jfree.data.Range.contains : $b0 = d0 cmpl $d1 >>>>>>>> org.jfree.data.Range.contains : if $b0 < 0
org.jfree.data.Range.contains : if $b0 < 0 >>>>>>>> org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.contains : $b1 = d0 cmpg $d2
org.jfree.data.Range.contains : $b1 = d0 cmpg $d2 >>>>>>>> org.jfree.data.Range.contains : if $b1 > 0
org.jfree.data.Range.contains : if $b1 > 0 >>>>>>>> org.jfree.data.Range.contains : $z0 = 1
org.jfree.data.Range.contains : $z0 = 1 >>>>>>>> org.jfree.data.Range.contains : goto [?= return $z0]
org.jfree.data.Range.contains : goto [?= return $z0] >>>>>>>> org.jfree.data.Range.contains : return $z0
org.jfree.data.Range.contains : return $z0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : if $z0 == 0
org.jfree.chart.block.FlowArrangement.arrangeRR : if $z0 == 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : return r4
org.jfree.chart.block.FlowArrangement.arrangeRR : return r4 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : return $r26
org.jfree.chart.block.FlowArrangement.arrange : return $r26 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalHeight(double)>($d0)
org.jfree.chart.title.LegendTitle.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalHeight(double)>($d0) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double height> = $d1
org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double height> = $d1 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalWidth(double)>($d2)
org.jfree.chart.title.LegendTitle.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalWidth(double)>($d2) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double width> = $d3
org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double width> = $d3 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : return r4
org.jfree.chart.title.LegendTitle.arrange : return r4 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>() >>>>>>>> org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.title.Title.getHorizontalAlignment : return $r1
org.jfree.chart.title.Title.getHorizontalAlignment : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r23 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $r23 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23)
org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r5
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r5 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r6
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r6 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d3 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d3 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d4 = $d3 / 2.0
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d4 = $d3 / 2.0 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = $d2 - $d4
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = $d2 - $d4 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>]
org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>] >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r8
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r8 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r9
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r9 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r10
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r10 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d11 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d11 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = $d10 - $d11
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = $d10 - $d11 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d12 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d12 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d13 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d13 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d12, $d13)
org.jfree.chart.JFreeChart.createAlignedRectangle2D : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d12, $d13) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : return $r11
org.jfree.chart.JFreeChart.createAlignedRectangle2D : return $r11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7)
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r4 = (java.awt.geom.Rectangle2D) $r11
org.jfree.chart.title.LegendTitle.draw : r4 = (java.awt.geom.Rectangle2D) $r11 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r5 = (java.awt.geom.Rectangle2D) $r12
org.jfree.chart.title.LegendTitle.draw : r5 = (java.awt.geom.Rectangle2D) $r12 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r6 = null
org.jfree.chart.title.LegendTitle.draw : r6 = null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z0 == 0
org.jfree.chart.title.LegendTitle.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r13 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendTitle.draw : $r13 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities>
org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> >>>>>>>> org.jfree.chart.block.BlockParams.getGenerateEntities : return $z0
org.jfree.chart.block.BlockParams.getGenerateEntities : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z1 == 0
org.jfree.chart.title.LegendTitle.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4)
org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimMargin : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : return r1
org.jfree.chart.block.AbstractBlock.trimMargin : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $r17 == null
org.jfree.chart.title.LegendTitle.draw : if $r17 == null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r18)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r18) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>()
org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.getFrame : return $r1
org.jfree.chart.block.AbstractBlock.getFrame : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b0 <= 0
org.jfree.chart.block.LineBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b1 = d1 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : $b1 = d1 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b1 > 0
org.jfree.chart.block.LineBorder.draw : if $b1 > 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d2 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>(d1)
org.jfree.chart.block.LineBorder.draw : d2 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>(d1) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d3 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>(d1)
org.jfree.chart.block.LineBorder.draw : d3 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>(d1) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d4 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>(d0)
org.jfree.chart.block.LineBorder.draw : d4 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>(d0) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d5 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>(d0)
org.jfree.chart.block.LineBorder.draw : d5 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>(d0) >>>>>>>> org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0
org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d8 = d6 + $d12
org.jfree.chart.block.LineBorder.draw : d8 = d6 + $d12 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0
org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d14 = d5 / 2.0
org.jfree.chart.block.LineBorder.draw : $d14 = d5 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d9 = $d13 - $d14
org.jfree.chart.block.LineBorder.draw : d9 = $d13 - $d14 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1
org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d16 = d3 / 2.0
org.jfree.chart.block.LineBorder.draw : $d16 = d3 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d10 = $d15 - $d16
org.jfree.chart.block.LineBorder.draw : d10 = $d15 - $d16 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0
org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d11 = d7 + $d17
org.jfree.chart.block.LineBorder.draw : d11 = d7 + $d17 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>()
org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>() >>>>>>>> org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint>
org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.LineBorder.getPaint : return $r1
org.jfree.chart.block.LineBorder.getPaint : return $r1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>()
org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>() >>>>>>>> org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke>
org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.block.LineBorder.getStroke : return $r1
org.jfree.chart.block.LineBorder.getStroke : return $r1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.block.LineBorder.draw : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>()>()
org.jfree.chart.block.LineBorder.draw : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : r3 = $r10
org.jfree.chart.block.LineBorder.draw : r3 = $r10 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b2 <= 0
org.jfree.chart.block.LineBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b3 <= 0
org.jfree.chart.block.LineBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b4 <= 0
org.jfree.chart.block.LineBorder.draw : if $b4 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b5 <= 0
org.jfree.chart.block.LineBorder.draw : if $b5 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke $r19.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke $r19.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if r8 != null
org.jfree.chart.title.LegendTitle.draw : if r8 != null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimPadding : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : return r1
org.jfree.chart.block.AbstractBlock.trimPadding : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3)
org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r4 = null
org.jfree.chart.block.BlockContainer.draw : r4 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z0 == 0
org.jfree.chart.block.BlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z1 == 0
org.jfree.chart.block.BlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15
org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.drawBorder : interfaceinvoke $r3.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.block.AbstractBlock.drawBorder : interfaceinvoke $r3.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d0 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>($d8)
org.jfree.chart.block.BlockBorder.draw : d0 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>($d8) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d1 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>($d9)
org.jfree.chart.block.BlockBorder.draw : d1 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>($d9) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d2 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>($d10)
org.jfree.chart.block.BlockBorder.draw : d2 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>($d10) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d3 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>($d11)
org.jfree.chart.block.BlockBorder.draw : d3 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>($d11) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8)
org.jfree.chart.block.BlockBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BlockBorder.draw : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.block.BlockBorder.draw : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : r3 = $r9
org.jfree.chart.block.BlockBorder.draw : r3 = $r9 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b0 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b1 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b1 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b2 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b3 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimBorder : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : virtualinvoke $r3.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimBorder : virtualinvoke $r3.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : return r1
org.jfree.chart.block.AbstractBlock.trimBorder : return r1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z2 == 0
org.jfree.chart.block.BlockContainer.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r8 = (org.jfree.chart.block.Block) $r20
org.jfree.chart.block.BlockContainer.draw : r8 = (org.jfree.chart.block.Block) $r20 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>()
org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.getBounds : return $r1
org.jfree.chart.block.AbstractBlock.getBounds : return $r1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d0 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : $d0 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d2 = $d0 + $d1
org.jfree.chart.block.BlockContainer.draw : $d2 = $d0 + $d1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d3 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockContainer.draw : $d3 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockContainer.draw : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d5 = $d3 + $d4
org.jfree.chart.block.BlockContainer.draw : $d5 = $d3 + $d4 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d7 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockContainer.draw : $d7 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, $d5, $d6, $d7)
org.jfree.chart.block.BlockContainer.draw : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, $d5, $d6, $d7) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r10 = $r21
org.jfree.chart.block.BlockContainer.draw : r10 = $r21 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3)
org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null)
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>
org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z0 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>
org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z1 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r15 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation>
org.jfree.chart.title.LegendGraphic.draw : $r15 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r16 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r9, $r15)
org.jfree.chart.title.LegendGraphic.draw : r16 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r9, $r15) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r17 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.draw : $r17 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r18 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor>
org.jfree.chart.title.LegendGraphic.draw : $r18 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $d2 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.title.LegendGraphic.draw : $d2 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $d3 = virtualinvoke r16.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.title.LegendGraphic.draw : $d3 = virtualinvoke r16.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r19 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape createTranslatedShape(java.awt.Shape,org.jfree.ui.RectangleAnchor,double,double)>($r17, $r18, $d2, $d3)
org.jfree.chart.title.LegendGraphic.draw : r19 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape createTranslatedShape(java.awt.Shape,org.jfree.ui.RectangleAnchor,double,double)>($r17, $r18, $d2, $d3) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z2 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled>
org.jfree.chart.title.LegendGraphic.draw : $z2 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z2 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>
org.jfree.chart.title.LegendGraphic.draw : r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z3 = r5 instanceof java.awt.GradientPaint
org.jfree.chart.title.LegendGraphic.draw : $z3 = r5 instanceof java.awt.GradientPaint >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z3 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z3 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r19)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r19) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z4 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible>
org.jfree.chart.title.LegendGraphic.draw : $z4 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z4 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z4 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : return null
org.jfree.chart.title.LegendGraphic.draw : return null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if r4 == null
org.jfree.chart.block.BlockContainer.draw : if r4 == null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10)
org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11)
org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r4 = null
org.jfree.chart.block.LabelBlock.draw : r4 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r5 = null
org.jfree.chart.block.LabelBlock.draw : r5 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r6 = null
org.jfree.chart.block.LabelBlock.draw : r6 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.block.LabelBlock.draw : if $z0 == 0
org.jfree.chart.block.LabelBlock.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>
org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r16)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r16) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor>
org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r7 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r12, $r17)
org.jfree.chart.block.LabelBlock.draw : r7 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r12, $r17) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $d0 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.block.LabelBlock.draw : $d0 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $f0 = (float) $d0
org.jfree.chart.block.LabelBlock.draw : $f0 = (float) $d0 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.block.LabelBlock.draw : $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $f1 = (float) $d1
org.jfree.chart.block.LabelBlock.draw : $f1 = (float) $d1 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r19 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlockAnchor contentAlignmentPoint>
org.jfree.chart.block.LabelBlock.draw : $r19 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlockAnchor contentAlignmentPoint> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke $r18.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor)>(r1, $f0, $f1, $r19)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke $r18.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor)>(r1, $f0, $f1, $r19) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r8 = null
org.jfree.chart.block.LabelBlock.draw : r8 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : if r4 == null
org.jfree.chart.block.LabelBlock.draw : if r4 == null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : return r8
org.jfree.chart.block.LabelBlock.draw : return r8 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r22 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : return r22 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null
org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke $r8.<org.jfree.chart.block.BlockResult: void <init>()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke $r8.<org.jfree.chart.block.BlockResult: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : r4 = $r8
org.jfree.chart.title.LegendItemBlockContainer.draw : r4 = $r8 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : if $z0 == 0
org.jfree.chart.title.LegendItemBlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : if $z1 == 0
org.jfree.chart.title.LegendItemBlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : return r4
org.jfree.chart.title.LegendItemBlockContainer.draw : return r4 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z2 == 0
org.jfree.chart.title.LegendTitle.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : return r9
org.jfree.chart.title.LegendTitle.draw : return r9 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d14 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.JFreeChart.drawTitle : $d14 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d17 = r21.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.drawTitle : $d17 = r21.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d18 = $d16 - $d17
org.jfree.chart.JFreeChart.drawTitle : $d18 = $d16 - $d17 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d13, $d14, $d15, $d18)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d13, $d14, $d15, $d18) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null]
org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null] >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r36 = null
org.jfree.chart.JFreeChart.drawTitle : r36 = null >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $z1 == 0
org.jfree.chart.JFreeChart.drawTitle : if $z1 == 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : return r36
org.jfree.chart.JFreeChart.drawTitle : return r36 >>>>>>>> org.jfree.chart.JFreeChart.draw : if r11 == null
org.jfree.chart.JFreeChart.draw : if r11 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : goto [?= $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.JFreeChart.draw : goto [?= $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.JFreeChart.draw : r45 = r28
org.jfree.chart.JFreeChart.draw : r45 = r28 >>>>>>>> org.jfree.chart.JFreeChart.draw : r46 = null
org.jfree.chart.JFreeChart.draw : r46 = null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke $r47.<org.jfree.chart.plot.Plot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r45, r3, null, r46)
org.jfree.chart.JFreeChart.draw : virtualinvoke $r47.<org.jfree.chart.plot.Plot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r45, r3, null, r46) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if r5 == null
org.jfree.chart.plot.MeterPlot.draw : if r5 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.MeterPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.getInsets : return $r1
org.jfree.chart.plot.Plot.getInsets : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d18 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.draw : $d18 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d19 = $d18 + 4.0
org.jfree.chart.plot.MeterPlot.draw : $d19 = $d18 + 4.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d20 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.draw : $d20 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d21 = $d20 + 4.0
org.jfree.chart.plot.MeterPlot.draw : $d21 = $d20 + 4.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d22 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.draw : $d22 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d23 = $d22 - 8.0
org.jfree.chart.plot.MeterPlot.draw : $d23 = $d22 - 8.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d24 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.draw : $d24 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d25 = $d24 - 8.0
org.jfree.chart.plot.MeterPlot.draw : $d25 = $d24 - 8.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d19, $d21, $d23, $d25)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d19, $d21, $d23, $d25) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z0 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder>
org.jfree.chart.plot.MeterPlot.draw : $z0 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $z0 == 0
org.jfree.chart.plot.MeterPlot.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d0 = 6.0
org.jfree.chart.plot.MeterPlot.draw : d0 = 6.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d1 = 6.0
org.jfree.chart.plot.MeterPlot.draw : d1 = 6.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d26 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.draw : $d26 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d27 = d0 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d27 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d2 = $d26 + $d27
org.jfree.chart.plot.MeterPlot.draw : d2 = $d26 + $d27 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d28 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.draw : $d28 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d29 = d1 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d29 = d1 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d3 = $d28 + $d29
org.jfree.chart.plot.MeterPlot.draw : d3 = $d28 + $d29 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d30 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.draw : $d30 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d4 = $d30 - d0
org.jfree.chart.plot.MeterPlot.draw : d4 = $d30 - d0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d31 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.draw : $d31 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d32 = $d31 - d1
org.jfree.chart.plot.MeterPlot.draw : $d32 = $d31 - d1 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i0 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle>
org.jfree.chart.plot.MeterPlot.draw : $i0 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $i0 > 180
org.jfree.chart.plot.MeterPlot.draw : if $i0 > 180 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d34 = 0.0
org.jfree.chart.plot.MeterPlot.draw : $d34 = 0.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d5 = $d32 + $d34
org.jfree.chart.plot.MeterPlot.draw : d5 = $d32 + $d34 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d35 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d5)
org.jfree.chart.plot.MeterPlot.draw : $d35 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d5) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d6 = $d35 / 2.0
org.jfree.chart.plot.MeterPlot.draw : d6 = $d35 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d36 = d2 + d2
org.jfree.chart.plot.MeterPlot.draw : $d36 = d2 + d2 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d37 = $d36 + d4
org.jfree.chart.plot.MeterPlot.draw : $d37 = $d36 + d4 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d38 = $d37 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d38 = $d37 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d39 = $d38 - d6
org.jfree.chart.plot.MeterPlot.draw : d39 = $d38 - d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d40 = d3 + d3
org.jfree.chart.plot.MeterPlot.draw : $d40 = d3 + d3 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d41 = $d40 + d5
org.jfree.chart.plot.MeterPlot.draw : $d41 = $d40 + d5 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d42 = $d41 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d42 = $d41 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d43 = $d42 - d6
org.jfree.chart.plot.MeterPlot.draw : d43 = $d42 - d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d44 = 2.0 * d6
org.jfree.chart.plot.MeterPlot.draw : d44 = 2.0 * d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d45 = 2.0 * d6
org.jfree.chart.plot.MeterPlot.draw : d45 = 2.0 * d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r17 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.MeterPlot.draw : $r17 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r17.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d39, d43, d44, d45)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r17.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d39, d43, d44, d45) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r7 = $r17
org.jfree.chart.plot.MeterPlot.draw : r7 = $r17 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r18 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.MeterPlot.draw : $r18 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d46 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.draw : $d46 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d47 = $d46 - 4.0
org.jfree.chart.plot.MeterPlot.draw : $d47 = $d46 - 4.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d48 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.draw : $d48 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d49 = $d48 - 4.0
org.jfree.chart.plot.MeterPlot.draw : $d49 = $d48 - 4.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d50 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.draw : $d50 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d51 = $d50 + 8.0
org.jfree.chart.plot.MeterPlot.draw : $d51 = $d50 + 8.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d52 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.draw : $d52 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d53 = $d52 + 8.0
org.jfree.chart.plot.MeterPlot.draw : $d53 = $d52 + 8.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r18.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d47, $d49, $d51, $d53)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r18.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d47, $d49, $d51, $d53) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r8 = $r18
org.jfree.chart.plot.MeterPlot.draw : r8 = $r18 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d7 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.plot.MeterPlot.draw : d7 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d8 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.plot.MeterPlot.draw : d8 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset getDataset()>()
org.jfree.chart.plot.MeterPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset getDataset()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if r9 == null
org.jfree.chart.plot.MeterPlot.draw : if r9 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r19 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.draw : $r19 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d9 = virtualinvoke $r19.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.plot.MeterPlot.draw : d9 = virtualinvoke $r19.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r20 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.draw : $r20 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d10 = virtualinvoke $r20.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.plot.MeterPlot.draw : d10 = virtualinvoke $r20.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r10 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.MeterPlot.draw : r10 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r8)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r8) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r11 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.MeterPlot.draw : r11 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: float getForegroundAlpha()>()
org.jfree.chart.plot.MeterPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: float getForegroundAlpha()>() >>>>>>>> org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.getForegroundAlpha : return $f0
org.jfree.chart.plot.Plot.getForegroundAlpha : return $f0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r21 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.MeterPlot.draw : $r21 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r21)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r21) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r22 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialBackgroundPaint>
org.jfree.chart.plot.MeterPlot.draw : $r22 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialBackgroundPaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $r22 == null
org.jfree.chart.plot.MeterPlot.draw : if $r22 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r23 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialBackgroundPaint>
org.jfree.chart.plot.MeterPlot.draw : $r23 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialBackgroundPaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void fillArc(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double,java.awt.Paint,boolean)>(r1, r8, d9, d10, $r23, 1)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void fillArc(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double,java.awt.Paint,boolean)>(r1, r8, d9, d10, $r23, 1) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "paint")
org.jfree.chart.plot.MeterPlot.fillArc : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "paint") >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d2 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d1)
org.jfree.chart.plot.MeterPlot.fillArc : d2 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d1) >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $r1 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.valueToAngle : $r1 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $d2 = virtualinvoke $r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.plot.MeterPlot.valueToAngle : $d2 = virtualinvoke $r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : d3 = d0 - $d2
org.jfree.chart.plot.MeterPlot.valueToAngle : d3 = d0 - $d2 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $i0 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle>
org.jfree.chart.plot.MeterPlot.valueToAngle : $i0 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle> >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $i1 = $i0 - 180
org.jfree.chart.plot.MeterPlot.valueToAngle : $i1 = $i0 - 180 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $i2 = $i1 / 2
org.jfree.chart.plot.MeterPlot.valueToAngle : $i2 = $i1 / 2 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $i3 = 180 + $i2
org.jfree.chart.plot.MeterPlot.valueToAngle : $i3 = 180 + $i2 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : d1 = (double) $i3
org.jfree.chart.plot.MeterPlot.valueToAngle : d1 = (double) $i3 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $r2 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.valueToAngle : $r2 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $d4 = virtualinvoke $r2.<org.jfree.data.Range: double getLength()>()
org.jfree.chart.plot.MeterPlot.valueToAngle : $d4 = virtualinvoke $r2.<org.jfree.data.Range: double getLength()>() >>>>>>>> org.jfree.data.Range.getLength : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getLength : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getLength : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLength : $d1 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLength : $d2 = $d0 - $d1
org.jfree.data.Range.getLength : $d2 = $d0 - $d1 >>>>>>>> org.jfree.data.Range.getLength : return $d2
org.jfree.data.Range.getLength : return $d2 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $d5 = d3 / $d4
org.jfree.chart.plot.MeterPlot.valueToAngle : $d5 = d3 / $d4 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $i4 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle>
org.jfree.chart.plot.MeterPlot.valueToAngle : $i4 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle> >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $d6 = (double) $i4
org.jfree.chart.plot.MeterPlot.valueToAngle : $d6 = (double) $i4 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $d7 = $d5 * $d6
org.jfree.chart.plot.MeterPlot.valueToAngle : $d7 = $d5 * $d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : $d8 = d1 - $d7
org.jfree.chart.plot.MeterPlot.valueToAngle : $d8 = d1 - $d7 >>>>>>>> org.jfree.chart.plot.MeterPlot.valueToAngle : return $d8
org.jfree.chart.plot.MeterPlot.valueToAngle : return $d8 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d3 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d0)
org.jfree.chart.plot.MeterPlot.fillArc : d3 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d0) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d4 = d3 - d2
org.jfree.chart.plot.MeterPlot.fillArc : d4 = d3 - d2 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.fillArc : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.fillArc : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.fillArc : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.fillArc : d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : z1 = 0
org.jfree.chart.plot.MeterPlot.fillArc : z1 = 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r5 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape>
org.jfree.chart.plot.MeterPlot.fillArc : $r5 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r6 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape PIE>
org.jfree.chart.plot.MeterPlot.fillArc : $r6 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape PIE> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if $r5 != $r6
org.jfree.chart.plot.MeterPlot.fillArc : if $r5 != $r6 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r7 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape>
org.jfree.chart.plot.MeterPlot.fillArc : $r7 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r8 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CHORD>
org.jfree.chart.plot.MeterPlot.fillArc : $r8 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CHORD> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if $r7 != $r8
org.jfree.chart.plot.MeterPlot.fillArc : if $r7 != $r8 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r9 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape>
org.jfree.chart.plot.MeterPlot.fillArc : $r9 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r10 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CIRCLE>
org.jfree.chart.plot.MeterPlot.fillArc : $r10 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CIRCLE> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if $r9 != $r10
org.jfree.chart.plot.MeterPlot.fillArc : if $r9 != $r10 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2
org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if z0 == 0
org.jfree.chart.plot.MeterPlot.fillArc : if z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d4 = 360.0
org.jfree.chart.plot.MeterPlot.fillArc : d4 = 360.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)]
org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)] >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)
org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r12 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.MeterPlot.fillArc : $r12 = new java.awt.geom.Arc2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : specialinvoke $r12.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d5, d6, d7, d8, d2, d4, b0)
org.jfree.chart.plot.MeterPlot.fillArc : specialinvoke $r12.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d5, d6, d7, d8, d2, d4, b0) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : r4 = $r12
org.jfree.chart.plot.MeterPlot.fillArc : r4 = $r12 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r4)
org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r4) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTicks(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double)>(r1, r7, d9, d10)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTicks(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double)>(r1, r7, d9, d10) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTicks : d2 = d0
org.jfree.chart.plot.MeterPlot.drawTicks : d2 = d0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTicks : $b0 = d2 cmpg d1
org.jfree.chart.plot.MeterPlot.drawTicks : $b0 = d2 cmpg d1 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTicks : if $b0 > 0
org.jfree.chart.plot.MeterPlot.drawTicks : if $b0 > 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTicks : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTick(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double)>(r1, r2, d2)
org.jfree.chart.plot.MeterPlot.drawTicks : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTick(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double)>(r1, r2, d2) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTick(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,boolean)>(r1, r2, d0, 0)
org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTick(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,boolean)>(r1, r2, d0, 0) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d1 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d0)
org.jfree.chart.plot.MeterPlot.drawTick : d1 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d0) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.plot.MeterPlot.drawTick : d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.plot.MeterPlot.drawTick : d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $r7 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint tickPaint>
org.jfree.chart.plot.MeterPlot.drawTick : $r7 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint tickPaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r7)
org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r7) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $r8 = new java.awt.BasicStroke
org.jfree.chart.plot.MeterPlot.drawTick : $r8 = new java.awt.BasicStroke >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : specialinvoke $r8.<java.awt.BasicStroke: void <init>(float)>(2.0F)
org.jfree.chart.plot.MeterPlot.drawTick : specialinvoke $r8.<java.awt.BasicStroke: void <init>(float)>(2.0F) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r8)
org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r8) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d4 = 0.0
org.jfree.chart.plot.MeterPlot.drawTick : d4 = 0.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d5 = 0.0
org.jfree.chart.plot.MeterPlot.drawTick : d5 = 0.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.drawTick : $d12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d13 = $d12 / 2.0
org.jfree.chart.plot.MeterPlot.drawTick : $d13 = $d12 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d6 = $d13 + 3.0
org.jfree.chart.plot.MeterPlot.drawTick : d6 = $d13 + 3.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d7 = d6 - 15.0
org.jfree.chart.plot.MeterPlot.drawTick : d7 = d6 - 15.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d14 = d1 / 180.0
org.jfree.chart.plot.MeterPlot.drawTick : $d14 = d1 / 180.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d15 = 3.141592653589793 * $d14
org.jfree.chart.plot.MeterPlot.drawTick : $d15 = 3.141592653589793 * $d14 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d16 = staticinvoke <java.lang.Math: double cos(double)>($d15)
org.jfree.chart.plot.MeterPlot.drawTick : $d16 = staticinvoke <java.lang.Math: double cos(double)>($d15) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d17 = d6 * $d16
org.jfree.chart.plot.MeterPlot.drawTick : $d17 = d6 * $d16 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d8 = d2 + $d17
org.jfree.chart.plot.MeterPlot.drawTick : d8 = d2 + $d17 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d18 = d1 / 180.0
org.jfree.chart.plot.MeterPlot.drawTick : $d18 = d1 / 180.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d19 = 3.141592653589793 * $d18
org.jfree.chart.plot.MeterPlot.drawTick : $d19 = 3.141592653589793 * $d18 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d20 = staticinvoke <java.lang.Math: double sin(double)>($d19)
org.jfree.chart.plot.MeterPlot.drawTick : $d20 = staticinvoke <java.lang.Math: double sin(double)>($d19) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d21 = d6 * $d20
org.jfree.chart.plot.MeterPlot.drawTick : $d21 = d6 * $d20 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d9 = d3 - $d21
org.jfree.chart.plot.MeterPlot.drawTick : d9 = d3 - $d21 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d22 = d1 / 180.0
org.jfree.chart.plot.MeterPlot.drawTick : $d22 = d1 / 180.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d23 = 3.141592653589793 * $d22
org.jfree.chart.plot.MeterPlot.drawTick : $d23 = 3.141592653589793 * $d22 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d24 = staticinvoke <java.lang.Math: double cos(double)>($d23)
org.jfree.chart.plot.MeterPlot.drawTick : $d24 = staticinvoke <java.lang.Math: double cos(double)>($d23) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d25 = d7 * $d24
org.jfree.chart.plot.MeterPlot.drawTick : $d25 = d7 * $d24 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d26 = d2 + $d25
org.jfree.chart.plot.MeterPlot.drawTick : d26 = d2 + $d25 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d27 = d1 / 180.0
org.jfree.chart.plot.MeterPlot.drawTick : $d27 = d1 / 180.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d28 = 3.141592653589793 * $d27
org.jfree.chart.plot.MeterPlot.drawTick : $d28 = 3.141592653589793 * $d27 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d29 = staticinvoke <java.lang.Math: double sin(double)>($d28)
org.jfree.chart.plot.MeterPlot.drawTick : $d29 = staticinvoke <java.lang.Math: double sin(double)>($d28) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d30 = d7 * $d29
org.jfree.chart.plot.MeterPlot.drawTick : $d30 = d7 * $d29 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d31 = d3 - $d30
org.jfree.chart.plot.MeterPlot.drawTick : d31 = d3 - $d30 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $r9 = new java.awt.geom.Line2D$Double
org.jfree.chart.plot.MeterPlot.drawTick : $r9 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : specialinvoke $r9.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(d8, d9, d26, d31)
org.jfree.chart.plot.MeterPlot.drawTick : specialinvoke $r9.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(d8, d9, d26, d31) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : r3 = $r9
org.jfree.chart.plot.MeterPlot.drawTick : r3 = $r9 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $z1 = r0.<org.jfree.chart.plot.MeterPlot: boolean tickLabelsVisible>
org.jfree.chart.plot.MeterPlot.drawTick : $z1 = r0.<org.jfree.chart.plot.MeterPlot: boolean tickLabelsVisible> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $z1 == 0
org.jfree.chart.plot.MeterPlot.drawTick : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if z0 == 0
org.jfree.chart.plot.MeterPlot.drawTick : if z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTicks : $d3 = r0.<org.jfree.chart.plot.MeterPlot: double tickSize>
org.jfree.chart.plot.MeterPlot.drawTicks : $d3 = r0.<org.jfree.chart.plot.MeterPlot: double tickSize> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTicks : d2 = d2 + $d3
org.jfree.chart.plot.MeterPlot.drawTicks : d2 = d2 + $d3 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTicks : goto [?= $b0 = d2 cmpg d1]
org.jfree.chart.plot.MeterPlot.drawTicks : goto [?= $b0 = d2 cmpg d1] >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r24 = new org.jfree.chart.plot.MeterInterval
org.jfree.chart.plot.MeterPlot.draw : $r24 = new org.jfree.chart.plot.MeterInterval >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r25 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.draw : $r25 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r26 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialOutlinePaint>
org.jfree.chart.plot.MeterPlot.draw : $r26 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialOutlinePaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r27 = new java.awt.BasicStroke
org.jfree.chart.plot.MeterPlot.draw : $r27 = new java.awt.BasicStroke >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r27.<java.awt.BasicStroke: void <init>(float)>(1.0F)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r27.<java.awt.BasicStroke: void <init>(float)>(1.0F) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r24.<org.jfree.chart.plot.MeterInterval: void <init>(java.lang.String,org.jfree.data.Range,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>("", $r25, $r26, $r27, null)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r24.<org.jfree.chart.plot.MeterInterval: void <init>(java.lang.String,org.jfree.data.Range,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>("", $r25, $r26, $r27, null) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArcForInterval(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.MeterInterval)>(r1, r7, $r24)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArcForInterval(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.MeterInterval)>(r1, r7, $r24) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : $r7 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: org.jfree.data.Range getRange()>()
org.jfree.chart.plot.MeterPlot.drawArcForInterval : $r7 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.plot.MeterInterval.getRange : $r1 = r0.<org.jfree.chart.plot.MeterInterval: org.jfree.data.Range range>
org.jfree.chart.plot.MeterInterval.getRange : $r1 = r0.<org.jfree.chart.plot.MeterInterval: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterInterval.getRange : return $r1
org.jfree.chart.plot.MeterInterval.getRange : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : d0 = virtualinvoke $r7.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.plot.MeterPlot.drawArcForInterval : d0 = virtualinvoke $r7.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : $r8 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: org.jfree.data.Range getRange()>()
org.jfree.chart.plot.MeterPlot.drawArcForInterval : $r8 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : d1 = virtualinvoke $r8.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.plot.MeterPlot.drawArcForInterval : d1 = virtualinvoke $r8.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : r4 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: java.awt.Paint getOutlinePaint()>()
org.jfree.chart.plot.MeterPlot.drawArcForInterval : r4 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: java.awt.Paint getOutlinePaint()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : r5 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: java.awt.Stroke getOutlineStroke()>()
org.jfree.chart.plot.MeterPlot.drawArcForInterval : r5 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: java.awt.Stroke getOutlineStroke()>() >>>>>>>> org.jfree.chart.plot.MeterInterval.getOutlineStroke : $r1 = r0.<org.jfree.chart.plot.MeterInterval: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.MeterInterval.getOutlineStroke : $r1 = r0.<org.jfree.chart.plot.MeterInterval: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.MeterInterval.getOutlineStroke : return $r1
org.jfree.chart.plot.MeterInterval.getOutlineStroke : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : r6 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.plot.MeterPlot.drawArcForInterval : r6 = virtualinvoke r3.<org.jfree.chart.plot.MeterInterval: java.awt.Paint getBackgroundPaint()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : if r6 == null
org.jfree.chart.plot.MeterPlot.drawArcForInterval : if r6 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : if r4 == null
org.jfree.chart.plot.MeterPlot.drawArcForInterval : if r4 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r28 = r0.<org.jfree.chart.plot.MeterPlot: java.util.List intervals>
org.jfree.chart.plot.MeterPlot.draw : $r28 = r0.<org.jfree.chart.plot.MeterPlot: java.util.List intervals> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r12 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.MeterPlot.draw : r12 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.MeterPlot.draw : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $z1 == 0
org.jfree.chart.plot.MeterPlot.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r29 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.MeterPlot.draw : $r29 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r13 = (org.jfree.chart.plot.MeterInterval) $r29
org.jfree.chart.plot.MeterPlot.draw : r13 = (org.jfree.chart.plot.MeterInterval) $r29 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArcForInterval(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.MeterInterval)>(r1, r7, r13)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArcForInterval(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.MeterInterval)>(r1, r7, r13) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : if r5 == null
org.jfree.chart.plot.MeterPlot.drawArcForInterval : if r5 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArc(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double,java.awt.Paint,java.awt.Stroke)>(r1, r2, d0, d1, r4, r5)
org.jfree.chart.plot.MeterPlot.drawArcForInterval : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArc(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double,java.awt.Paint,java.awt.Stroke)>(r1, r2, d0, d1, r4, r5) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : d2 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d1)
org.jfree.chart.plot.MeterPlot.drawArc : d2 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d1) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : d3 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d0)
org.jfree.chart.plot.MeterPlot.drawArc : d3 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d0) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : d4 = d3 - d2
org.jfree.chart.plot.MeterPlot.drawArc : d4 = d3 - d2 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.drawArc : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.drawArc : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.drawArc : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.drawArc : d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)
org.jfree.chart.plot.MeterPlot.drawArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r4)
org.jfree.chart.plot.MeterPlot.drawArc : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r4) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : if r3 == null
org.jfree.chart.plot.MeterPlot.drawArc : if r3 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : if r4 == null
org.jfree.chart.plot.MeterPlot.drawArc : if r4 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : $r6 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.MeterPlot.drawArc : $r6 = new java.awt.geom.Arc2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : specialinvoke $r6.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d5, d6, d7, d8, d2, d4, 0)
org.jfree.chart.plot.MeterPlot.drawArc : specialinvoke $r6.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d5, d6, d7, d8, d2, d4, 0) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : r5 = $r6
org.jfree.chart.plot.MeterPlot.drawArc : r5 = $r6 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArc : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r5)
org.jfree.chart.plot.MeterPlot.drawArc : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r5) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTick(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,boolean)>(r1, r2, d0, 1)
org.jfree.chart.plot.MeterPlot.drawArcForInterval : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTick(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,boolean)>(r1, r2, d0, 1) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $r10 = r0.<org.jfree.chart.plot.MeterPlot: java.text.NumberFormat tickLabelFormat>
org.jfree.chart.plot.MeterPlot.drawTick : $r10 = r0.<org.jfree.chart.plot.MeterPlot: java.text.NumberFormat tickLabelFormat> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : r4 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>(d0)
org.jfree.chart.plot.MeterPlot.drawTick : r4 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>(d0) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $r11 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Font tickLabelFont>
org.jfree.chart.plot.MeterPlot.drawTick : $r11 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r11)
org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r11) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $r12 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint tickLabelPaint>
org.jfree.chart.plot.MeterPlot.drawTick : $r12 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint tickLabelPaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r12)
org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r12) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : r5 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>()
org.jfree.chart.plot.MeterPlot.drawTick : r5 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : r6 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r4, r1, r5)
org.jfree.chart.plot.MeterPlot.drawTick : r6 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r4, r1, r5) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d10 = d26
org.jfree.chart.plot.MeterPlot.drawTick : d10 = d26 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d11 = d31
org.jfree.chart.plot.MeterPlot.drawTick : d11 = d31 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $b0 = d1 cmpl 90.0
org.jfree.chart.plot.MeterPlot.drawTick : $b0 = d1 cmpl 90.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $b0 == 0
org.jfree.chart.plot.MeterPlot.drawTick : if $b0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $b1 = d1 cmpl 270.0
org.jfree.chart.plot.MeterPlot.drawTick : $b1 = d1 cmpl 270.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $b1 != 0
org.jfree.chart.plot.MeterPlot.drawTick : if $b1 != 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $b2 = d1 cmpg 90.0
org.jfree.chart.plot.MeterPlot.drawTick : $b2 = d1 cmpg 90.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $b2 < 0
org.jfree.chart.plot.MeterPlot.drawTick : if $b2 < 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $b3 = d1 cmpl 270.0
org.jfree.chart.plot.MeterPlot.drawTick : $b3 = d1 cmpl 270.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $b3 <= 0
org.jfree.chart.plot.MeterPlot.drawTick : if $b3 <= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $b4 = d1 cmpl 135.0
org.jfree.chart.plot.MeterPlot.drawTick : $b4 = d1 cmpl 135.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $b4 <= 0
org.jfree.chart.plot.MeterPlot.drawTick : if $b4 <= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $b5 = d1 cmpg 225.0
org.jfree.chart.plot.MeterPlot.drawTick : $b5 = d1 cmpg 225.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $b5 < 0
org.jfree.chart.plot.MeterPlot.drawTick : if $b5 < 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $b6 = d1 cmpl 315.0
org.jfree.chart.plot.MeterPlot.drawTick : $b6 = d1 cmpl 315.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $b6 > 0
org.jfree.chart.plot.MeterPlot.drawTick : if $b6 > 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $b7 = d1 cmpg 45.0
org.jfree.chart.plot.MeterPlot.drawTick : $b7 = d1 cmpg 45.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : if $b7 >= 0
org.jfree.chart.plot.MeterPlot.drawTick : if $b7 >= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d38 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.drawTick : $d38 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d39 = $d38 / 2.0
org.jfree.chart.plot.MeterPlot.drawTick : $d39 = $d38 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d37 = d11 + $d39
org.jfree.chart.plot.MeterPlot.drawTick : d37 = d11 + $d39 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $f0 = (float) d10
org.jfree.chart.plot.MeterPlot.drawTick : $f0 = (float) d10 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $f1 = (float) d37
org.jfree.chart.plot.MeterPlot.drawTick : $f1 = (float) d37 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void drawString(java.lang.String,float,float)>(r4, $f0, $f1)
org.jfree.chart.plot.MeterPlot.drawTick : virtualinvoke r1.<java.awt.Graphics2D: void drawString(java.lang.String,float,float)>(r4, $f0, $f1) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawArcForInterval : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTick(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,boolean)>(r1, r2, d1, 1)
org.jfree.chart.plot.MeterPlot.drawArcForInterval : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTick(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,boolean)>(r1, r2, d1, 1) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d34 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.drawTick : $d34 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d10 = d10 - $d34
org.jfree.chart.plot.MeterPlot.drawTick : d10 = d10 - $d34 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d35 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.drawTick : $d35 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : $d36 = $d35 / 2.0
org.jfree.chart.plot.MeterPlot.drawTick : $d36 = $d35 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : d37 = d11 - $d36
org.jfree.chart.plot.MeterPlot.drawTick : d37 = d11 - $d36 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawTick : goto [?= $f0 = (float) d10]
org.jfree.chart.plot.MeterPlot.drawTick : goto [?= $f0 = (float) d10] >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.MeterPlot.draw : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r30 = interfaceinvoke r9.<org.jfree.data.general.ValueDataset: java.lang.Number getValue()>()
org.jfree.chart.plot.MeterPlot.draw : r30 = interfaceinvoke r9.<org.jfree.data.general.ValueDataset: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.general.DefaultValueDataset.getValue : $r1 = r0.<org.jfree.data.general.DefaultValueDataset: java.lang.Number value>
org.jfree.data.general.DefaultValueDataset.getValue : $r1 = r0.<org.jfree.data.general.DefaultValueDataset: java.lang.Number value> >>>>>>>> org.jfree.data.general.DefaultValueDataset.getValue : return $r1
org.jfree.data.general.DefaultValueDataset.getValue : return $r1 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if r30 == null
org.jfree.chart.plot.MeterPlot.draw : if r30 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d11 = virtualinvoke r30.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.MeterPlot.draw : d11 = virtualinvoke r30.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawValueLabel(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawValueLabel(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r6 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Font valueFont>
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r6 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Font valueFont> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r6)
org.jfree.chart.plot.MeterPlot.drawValueLabel : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r6) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r7 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint valuePaint>
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r7 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint valuePaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r7)
org.jfree.chart.plot.MeterPlot.drawValueLabel : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r7) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : r3 = "No value"
org.jfree.chart.plot.MeterPlot.drawValueLabel : r3 = "No value" >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r8 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset>
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r8 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : if $r8 == null
org.jfree.chart.plot.MeterPlot.drawValueLabel : if $r8 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r9 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset>
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r9 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset dataset> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : r4 = interfaceinvoke $r9.<org.jfree.data.general.ValueDataset: java.lang.Number getValue()>()
org.jfree.chart.plot.MeterPlot.drawValueLabel : r4 = interfaceinvoke $r9.<org.jfree.data.general.ValueDataset: java.lang.Number getValue()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : if r4 == null
org.jfree.chart.plot.MeterPlot.drawValueLabel : if r4 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r10 = new java.lang.StringBuilder
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r10 = new java.lang.StringBuilder >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.jfree.chart.plot.MeterPlot.drawValueLabel : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r11 = r0.<org.jfree.chart.plot.MeterPlot: java.text.NumberFormat tickLabelFormat>
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r11 = r0.<org.jfree.chart.plot.MeterPlot: java.text.NumberFormat tickLabelFormat> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.MeterPlot.drawValueLabel : $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r12 = virtualinvoke $r11.<java.text.NumberFormat: java.lang.String format(double)>($d0)
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r12 = virtualinvoke $r11.<java.text.NumberFormat: java.lang.String format(double)>($d0) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r15 = r0.<org.jfree.chart.plot.MeterPlot: java.lang.String units>
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r15 = r0.<org.jfree.chart.plot.MeterPlot: java.lang.String units> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.chart.plot.MeterPlot.drawValueLabel : r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.plot.MeterPlot.drawValueLabel : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : f1 = (float) $d1
org.jfree.chart.plot.MeterPlot.drawValueLabel : f1 = (float) $d1 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.plot.MeterPlot.drawValueLabel : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $f2 = (float) $d2
org.jfree.chart.plot.MeterPlot.drawValueLabel : $f2 = (float) $d2 >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : f0 = $f2 + 10.0F
org.jfree.chart.plot.MeterPlot.drawValueLabel : f0 = $f2 + 10.0F >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : $r5 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.plot.MeterPlot.drawValueLabel : $r5 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER> >>>>>>>> org.jfree.chart.plot.MeterPlot.drawValueLabel : staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor)>(r3, r1, f1, f0, $r5)
org.jfree.chart.plot.MeterPlot.drawValueLabel : staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor)>(r3, r1, f1, f0, $r5) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r31 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.draw : $r31 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z2 = virtualinvoke $r31.<org.jfree.data.Range: boolean contains(double)>(d11)
org.jfree.chart.plot.MeterPlot.draw : $z2 = virtualinvoke $r31.<org.jfree.data.Range: boolean contains(double)>(d11) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $z2 == 0
org.jfree.chart.plot.MeterPlot.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r32 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint needlePaint>
org.jfree.chart.plot.MeterPlot.draw : $r32 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint needlePaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r32)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r32) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r33 = new java.awt.BasicStroke
org.jfree.chart.plot.MeterPlot.draw : $r33 = new java.awt.BasicStroke >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r33.<java.awt.BasicStroke: void <init>(float)>(2.0F)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r33.<java.awt.BasicStroke: void <init>(float)>(2.0F) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r33)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r33) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d54 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.draw : $d54 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d55 = $d54 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d55 = $d54 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d56 = $d55 + 3.0
org.jfree.chart.plot.MeterPlot.draw : $d56 = $d55 + 3.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d12 = $d56 + 15.0
org.jfree.chart.plot.MeterPlot.draw : d12 = $d56 + 15.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d13 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d11)
org.jfree.chart.plot.MeterPlot.draw : d13 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d11) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d57 = d13 / 180.0
org.jfree.chart.plot.MeterPlot.draw : $d57 = d13 / 180.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d58 = 3.141592653589793 * $d57
org.jfree.chart.plot.MeterPlot.draw : $d58 = 3.141592653589793 * $d57 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d59 = staticinvoke <java.lang.Math: double cos(double)>($d58)
org.jfree.chart.plot.MeterPlot.draw : $d59 = staticinvoke <java.lang.Math: double cos(double)>($d58) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d60 = d12 * $d59
org.jfree.chart.plot.MeterPlot.draw : $d60 = d12 * $d59 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d14 = d7 + $d60
org.jfree.chart.plot.MeterPlot.draw : d14 = d7 + $d60 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d61 = d13 / 180.0
org.jfree.chart.plot.MeterPlot.draw : $d61 = d13 / 180.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d62 = 3.141592653589793 * $d61
org.jfree.chart.plot.MeterPlot.draw : $d62 = 3.141592653589793 * $d61 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d63 = staticinvoke <java.lang.Math: double sin(double)>($d62)
org.jfree.chart.plot.MeterPlot.draw : $d63 = staticinvoke <java.lang.Math: double sin(double)>($d62) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d64 = d12 * $d63
org.jfree.chart.plot.MeterPlot.draw : $d64 = d12 * $d63 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d15 = d8 - $d64
org.jfree.chart.plot.MeterPlot.draw : d15 = d8 - $d64 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r34 = new java.awt.Polygon
org.jfree.chart.plot.MeterPlot.draw : $r34 = new java.awt.Polygon >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r34.<java.awt.Polygon: void <init>()>()
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r34.<java.awt.Polygon: void <init>()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r14 = $r34
org.jfree.chart.plot.MeterPlot.draw : r14 = $r34 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $b1 = d13 cmpl 135.0
org.jfree.chart.plot.MeterPlot.draw : $b1 = d13 cmpl 135.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $b1 <= 0
org.jfree.chart.plot.MeterPlot.draw : if $b1 <= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $b3 = d13 cmpg 45.0
org.jfree.chart.plot.MeterPlot.draw : $b3 = d13 cmpg 45.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $b3 >= 0
org.jfree.chart.plot.MeterPlot.draw : if $b3 >= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d65 = d7 - 2.5
org.jfree.chart.plot.MeterPlot.draw : $d65 = d7 - 2.5 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i9 = (int) $d65
org.jfree.chart.plot.MeterPlot.draw : $i9 = (int) $d65 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i10 = (int) d8
org.jfree.chart.plot.MeterPlot.draw : $i10 = (int) d8 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i9, $i10)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i9, $i10) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d66 = d7 + 2.5
org.jfree.chart.plot.MeterPlot.draw : $d66 = d7 + 2.5 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i11 = (int) $d66
org.jfree.chart.plot.MeterPlot.draw : $i11 = (int) $d66 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i12 = (int) d8
org.jfree.chart.plot.MeterPlot.draw : $i12 = (int) d8 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i11, $i12)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i11, $i12) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i13 = (int) d14
org.jfree.chart.plot.MeterPlot.draw : $i13 = (int) d14 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i14 = (int) d15
org.jfree.chart.plot.MeterPlot.draw : $i14 = (int) d15 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i13, $i14)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i13, $i14) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r14)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r14) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r35 = new java.awt.geom.Ellipse2D$Double
org.jfree.chart.plot.MeterPlot.draw : $r35 = new java.awt.geom.Ellipse2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d67 = d7 - 5.0
org.jfree.chart.plot.MeterPlot.draw : $d67 = d7 - 5.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d68 = d8 - 5.0
org.jfree.chart.plot.MeterPlot.draw : $d68 = d8 - 5.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r35.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($d67, $d68, 10.0, 10.0)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r35.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($d67, $d68, 10.0, 10.0) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r36 = $r35
org.jfree.chart.plot.MeterPlot.draw : r36 = $r35 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r36)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r36) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r10)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r10) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r11)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r11) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z3 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder>
org.jfree.chart.plot.MeterPlot.draw : $z3 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $z3 == 0
org.jfree.chart.plot.MeterPlot.draw : if $z3 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r48.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 2, 100)
org.jfree.chart.JFreeChart.draw : specialinvoke $r48.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 2, 100) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r48)
