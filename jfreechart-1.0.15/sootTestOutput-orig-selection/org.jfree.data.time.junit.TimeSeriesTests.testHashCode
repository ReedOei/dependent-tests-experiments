org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : return $l1
org.jfree.data.time.Year.getFirstMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : return $l1
org.jfree.data.time.Year.getLastMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)>(r1, r2, 1)
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)>(r1, r2, 1) >>>>>>>> org.jfree.data.time.TimeSeries.add : $r3 = new org.jfree.data.time.TimeSeriesDataItem
org.jfree.data.time.TimeSeries.add : $r3 = new org.jfree.data.time.TimeSeriesDataItem >>>>>>>> org.jfree.data.time.TimeSeries.add : specialinvoke $r3.<org.jfree.data.time.TimeSeriesDataItem: void <init>(org.jfree.data.time.RegularTimePeriod,java.lang.Number)>(r1, r2)
org.jfree.data.time.TimeSeries.add : specialinvoke $r3.<org.jfree.data.time.TimeSeriesDataItem: void <init>(org.jfree.data.time.RegularTimePeriod,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.time.TimeSeries.add : r4 = $r3
org.jfree.data.time.TimeSeries.add : r4 = $r3 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.TimeSeriesDataItem,boolean)>(r4, z0)
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.TimeSeriesDataItem,boolean)>(r4, z0) >>>>>>>> org.jfree.data.time.TimeSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.time.TimeSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.time.TimeSeries.add : $r6 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>()
org.jfree.data.time.TimeSeries.add : $r6 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.clone : r1 = null
org.jfree.data.time.TimeSeriesDataItem.clone : r1 = null >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.time.TimeSeriesDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.clone : goto [?= return r1]
org.jfree.data.time.TimeSeriesDataItem.clone : goto [?= return r1] >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.clone : return r1
org.jfree.data.time.TimeSeriesDataItem.clone : return r1 >>>>>>>> org.jfree.data.time.TimeSeries.add : r7 = (org.jfree.data.time.TimeSeriesDataItem) $r6
org.jfree.data.time.TimeSeries.add : r7 = (org.jfree.data.time.TimeSeriesDataItem) $r6 >>>>>>>> org.jfree.data.time.TimeSeries.add : $r8 = virtualinvoke r7.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>()
org.jfree.data.time.TimeSeries.add : $r8 = virtualinvoke r7.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.getPeriod : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.time.TimeSeriesDataItem.getPeriod : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.getPeriod : return $r1
org.jfree.data.time.TimeSeriesDataItem.getPeriod : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.add : r2 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>()
org.jfree.data.time.TimeSeries.add : r2 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.jfree.data.time.TimeSeries.add : $r9 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.add : $r9 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.add : if $r9 != null
org.jfree.data.time.TimeSeries.add : if $r9 != null >>>>>>>> org.jfree.data.time.TimeSeries.add : $r10 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.add : $r10 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.add : $z1 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r2)
org.jfree.data.time.TimeSeries.add : $z1 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.time.TimeSeries.add : if $z1 != 0
org.jfree.data.time.TimeSeries.add : if $z1 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : z2 = 0
org.jfree.data.time.TimeSeries.add : z2 = 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.add : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.getItemCount : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.time.TimeSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : return $i0
org.jfree.data.time.TimeSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.time.TimeSeries.add : if i0 != 0
org.jfree.data.time.TimeSeries.add : if i0 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : $r25 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.add : $r25 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.add : interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r7)
org.jfree.data.time.TimeSeries.add : interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.jfree.data.time.TimeSeries.add : z4 = 1
org.jfree.data.time.TimeSeries.add : z4 = 1 >>>>>>>> org.jfree.data.time.TimeSeries.add : goto [?= (branch)]
org.jfree.data.time.TimeSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.time.TimeSeries.add : if z4 == 0
org.jfree.data.time.TimeSeries.add : if z4 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r7)
org.jfree.data.time.TimeSeries.add : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r7) >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r2 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r2 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.getValue : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesDataItem.getValue : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.getValue : return $r1
org.jfree.data.time.TimeSeriesDataItem.getValue : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $r3 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $r3 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : if $r3 == null
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : if $r3 == null >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d1 = r0.<org.jfree.data.time.TimeSeries: double minY>
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d1 = r0.<org.jfree.data.time.TimeSeries: double minY> >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d2 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double minIgnoreNaN(double,double)>($d1, d0)
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d2 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double minIgnoreNaN(double,double)>($d1, d0) >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.time.TimeSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : if $z0 == 0
org.jfree.data.time.TimeSeries.minIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : return d1
org.jfree.data.time.TimeSeries.minIgnoreNaN : return d1 >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r0.<org.jfree.data.time.TimeSeries: double minY> = $d2
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r0.<org.jfree.data.time.TimeSeries: double minY> = $d2 >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d3 = r0.<org.jfree.data.time.TimeSeries: double maxY>
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d3 = r0.<org.jfree.data.time.TimeSeries: double maxY> >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d4 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double maxIgnoreNaN(double,double)>($d3, d0)
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d4 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double maxIgnoreNaN(double,double)>($d3, d0) >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.time.TimeSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : if $z0 == 0
org.jfree.data.time.TimeSeries.maxIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : return d1
org.jfree.data.time.TimeSeries.maxIgnoreNaN : return d1 >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r0.<org.jfree.data.time.TimeSeries: double maxY> = $d4
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r0.<org.jfree.data.time.TimeSeries: double maxY> = $d4 >>>>>>>> org.jfree.data.time.TimeSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.add : $i8 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount>
org.jfree.data.time.TimeSeries.add : $i8 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> >>>>>>>> org.jfree.data.time.TimeSeries.add : if $i7 <= $i8
org.jfree.data.time.TimeSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0) >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.removeAgedItems : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : if $i1 <= 1
org.jfree.data.time.TimeSeries.removeAgedItems : if $i1 <= 1 >>>>>>>> org.jfree.data.time.TimeSeries.add : if z0 == 0
org.jfree.data.time.TimeSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>()
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.add : $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.add : $i3 = $i2 - 1
org.jfree.data.time.TimeSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.time.TimeSeries.add : r4 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>($i3)
org.jfree.data.time.TimeSeries.add : r4 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>($i3) >>>>>>>> org.jfree.data.time.TimeSeries.getTimePeriod : $r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>(i0)
org.jfree.data.time.TimeSeries.getTimePeriod : $r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>(i0) >>>>>>>> org.jfree.data.time.TimeSeries.getRawDataItem : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.getRawDataItem : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.time.TimeSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.time.TimeSeries.getRawDataItem : $r3 = (org.jfree.data.time.TimeSeriesDataItem) $r2
org.jfree.data.time.TimeSeries.getRawDataItem : $r3 = (org.jfree.data.time.TimeSeriesDataItem) $r2 >>>>>>>> org.jfree.data.time.TimeSeries.getRawDataItem : return $r3
org.jfree.data.time.TimeSeries.getRawDataItem : return $r3 >>>>>>>> org.jfree.data.time.TimeSeries.getTimePeriod : $r2 = virtualinvoke $r1.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>()
org.jfree.data.time.TimeSeries.getTimePeriod : $r2 = virtualinvoke $r1.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>() >>>>>>>> org.jfree.data.time.TimeSeries.getTimePeriod : return $r2
org.jfree.data.time.TimeSeries.getTimePeriod : return $r2 >>>>>>>> org.jfree.data.time.TimeSeries.add : $r26 = virtualinvoke r7.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>()
org.jfree.data.time.TimeSeries.add : $r26 = virtualinvoke r7.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>() >>>>>>>> org.jfree.data.time.TimeSeries.add : $i4 = virtualinvoke $r26.<org.jfree.data.time.RegularTimePeriod: int compareTo(java.lang.Object)>(r4)
org.jfree.data.time.TimeSeries.add : $i4 = virtualinvoke $r26.<org.jfree.data.time.RegularTimePeriod: int compareTo(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.time.Year.compareTo : $z0 = r1 instanceof org.jfree.data.time.Year
org.jfree.data.time.Year.compareTo : $z0 = r1 instanceof org.jfree.data.time.Year >>>>>>>> org.jfree.data.time.Year.compareTo : if $z0 == 0
org.jfree.data.time.Year.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.time.Year.compareTo : r2 = (org.jfree.data.time.Year) r1
org.jfree.data.time.Year.compareTo : r2 = (org.jfree.data.time.Year) r1 >>>>>>>> org.jfree.data.time.Year.compareTo : $s1 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.compareTo : $s1 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.compareTo : $i2 = virtualinvoke r2.<org.jfree.data.time.Year: int getYear()>()
org.jfree.data.time.Year.compareTo : $i2 = virtualinvoke r2.<org.jfree.data.time.Year: int getYear()>() >>>>>>>> org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getYear : return $s0
org.jfree.data.time.Year.getYear : return $s0 >>>>>>>> org.jfree.data.time.Year.compareTo : i0 = $s1 - $i2
org.jfree.data.time.Year.compareTo : i0 = $s1 - $i2 >>>>>>>> org.jfree.data.time.Year.compareTo : goto [?= return i0]
org.jfree.data.time.Year.compareTo : goto [?= return i0] >>>>>>>> org.jfree.data.time.Year.compareTo : return i0
org.jfree.data.time.Year.compareTo : return i0 >>>>>>>> org.jfree.data.time.TimeSeries.add : if $i4 <= 0
org.jfree.data.time.TimeSeries.add : if $i4 <= 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : $r27 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.add : $r27 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.add : interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>(r7)
org.jfree.data.time.TimeSeries.add : interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.time.TimeSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : if $z1 == 0
org.jfree.data.time.TimeSeries.minIgnoreNaN : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1)
org.jfree.data.time.TimeSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1) >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : return $d2
org.jfree.data.time.TimeSeries.minIgnoreNaN : return $d2 >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.time.TimeSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : if $z1 == 0
org.jfree.data.time.TimeSeries.maxIgnoreNaN : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1)
org.jfree.data.time.TimeSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1) >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : return $d2
org.jfree.data.time.TimeSeries.maxIgnoreNaN : return $d2 >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.removeAgedItems : $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $i3 = $i2 - 1
org.jfree.data.time.TimeSeries.removeAgedItems : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>($i3)
org.jfree.data.time.TimeSeries.removeAgedItems : $r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>($i3) >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : l0 = virtualinvoke $r1.<org.jfree.data.time.RegularTimePeriod: long getSerialIndex()>()
org.jfree.data.time.TimeSeries.removeAgedItems : l0 = virtualinvoke $r1.<org.jfree.data.time.RegularTimePeriod: long getSerialIndex()>() >>>>>>>> org.jfree.data.time.Year.getSerialIndex : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getSerialIndex : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getSerialIndex : $l1 = (long) $s0
org.jfree.data.time.Year.getSerialIndex : $l1 = (long) $s0 >>>>>>>> org.jfree.data.time.Year.getSerialIndex : return $l1
org.jfree.data.time.Year.getSerialIndex : return $l1 >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : z1 = 0
org.jfree.data.time.TimeSeries.removeAgedItems : z1 = 0 >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $r2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>(0)
org.jfree.data.time.TimeSeries.removeAgedItems : $r2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>(0) >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $l4 = virtualinvoke $r2.<org.jfree.data.time.RegularTimePeriod: long getSerialIndex()>()
org.jfree.data.time.TimeSeries.removeAgedItems : $l4 = virtualinvoke $r2.<org.jfree.data.time.RegularTimePeriod: long getSerialIndex()>() >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $l5 = l0 - $l4
org.jfree.data.time.TimeSeries.removeAgedItems : $l5 = l0 - $l4 >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $l6 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge>
org.jfree.data.time.TimeSeries.removeAgedItems : $l6 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge> >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $b7 = $l5 cmp $l6
org.jfree.data.time.TimeSeries.removeAgedItems : $b7 = $l5 cmp $l6 >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : if $b7 <= 0
org.jfree.data.time.TimeSeries.removeAgedItems : if $b7 <= 0 >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : if z1 == 0
org.jfree.data.time.TimeSeries.removeAgedItems : if z1 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : if r1 != r0
org.jfree.data.time.TimeSeries.equals : if r1 != r0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeries
org.jfree.data.time.TimeSeries.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeries >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z0 != 0
org.jfree.data.time.TimeSeries.equals : if $z0 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : r2 = (org.jfree.data.time.TimeSeries) r1
org.jfree.data.time.TimeSeries.equals : r2 = (org.jfree.data.time.TimeSeries) r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r3 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>()
org.jfree.data.time.TimeSeries.equals : $r3 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.getDomainDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain>
org.jfree.data.time.TimeSeries.getDomainDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain> >>>>>>>> org.jfree.data.time.TimeSeries.getDomainDescription : return $r1
org.jfree.data.time.TimeSeries.getDomainDescription : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r4 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>()
org.jfree.data.time.TimeSeries.equals : $r4 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.data.time.TimeSeries.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z1 != 0
org.jfree.data.time.TimeSeries.equals : if $z1 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>()
org.jfree.data.time.TimeSeries.equals : $r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.getRangeDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range>
org.jfree.data.time.TimeSeries.getRangeDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range> >>>>>>>> org.jfree.data.time.TimeSeries.getRangeDescription : return $r1
org.jfree.data.time.TimeSeries.getRangeDescription : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>()
org.jfree.data.time.TimeSeries.equals : $r6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.time.TimeSeries.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z2 != 0
org.jfree.data.time.TimeSeries.equals : if $z2 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.equals : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r8 = r2.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.equals : $r8 = r2.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8)
org.jfree.data.time.TimeSeries.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z3 != 0
org.jfree.data.time.TimeSeries.equals : if $z3 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $l1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>()
org.jfree.data.time.TimeSeries.equals : $l1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>() >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemAge : $l0 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge>
org.jfree.data.time.TimeSeries.getMaximumItemAge : $l0 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge> >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemAge : return $l0
org.jfree.data.time.TimeSeries.getMaximumItemAge : return $l0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $l2 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>()
org.jfree.data.time.TimeSeries.equals : $l2 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $b3 = $l1 cmp $l2
org.jfree.data.time.TimeSeries.equals : $b3 = $l1 cmp $l2 >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $b3 == 0
org.jfree.data.time.TimeSeries.equals : if $b3 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i4 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i4 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemCount : $i0 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount>
org.jfree.data.time.TimeSeries.getMaximumItemCount : $i0 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemCount : return $i0
org.jfree.data.time.TimeSeries.getMaximumItemCount : return $i0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i5 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i5 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $i4 == $i5
org.jfree.data.time.TimeSeries.equals : if $i4 == $i5 >>>>>>>> org.jfree.data.time.TimeSeries.equals : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.equals : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : if i0 == $i6
org.jfree.data.time.TimeSeries.equals : if i0 == $i6 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r9 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.equals : $r9 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r10 = r2.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.equals : $r10 = r2.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.data.time.TimeSeries.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z4 != 0
org.jfree.data.time.TimeSeries.equals : if $z4 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z5 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1)
org.jfree.data.time.TimeSeries.equals : $z5 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.equals : if r1 != r0
org.jfree.data.general.Series.equals : if r1 != r0 >>>>>>>> org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series
org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series >>>>>>>> org.jfree.data.general.Series.equals : if $z0 != 0
org.jfree.data.general.Series.equals : if $z0 != 0 >>>>>>>> org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1
org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1 >>>>>>>> org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.getKey : return $r1
org.jfree.data.general.Series.getKey : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.general.Series.equals : if $z1 != 0
org.jfree.data.general.Series.equals : if $z1 != 0 >>>>>>>> org.jfree.data.general.Series.equals : $r5 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.String getDescription()>()
org.jfree.data.general.Series.equals : $r5 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.String getDescription()>() >>>>>>>> org.jfree.data.general.Series.getDescription : $r1 = r0.<org.jfree.data.general.Series: java.lang.String description>
org.jfree.data.general.Series.getDescription : $r1 = r0.<org.jfree.data.general.Series: java.lang.String description> >>>>>>>> org.jfree.data.general.Series.getDescription : return $r1
org.jfree.data.general.Series.getDescription : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r6 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.String getDescription()>()
org.jfree.data.general.Series.equals : $r6 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.String getDescription()>() >>>>>>>> org.jfree.data.general.Series.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.general.Series.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.general.Series.equals : if $z2 != 0
org.jfree.data.general.Series.equals : if $z2 != 0 >>>>>>>> org.jfree.data.general.Series.equals : return 1
org.jfree.data.general.Series.equals : return 1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : return $z5
org.jfree.data.time.TimeSeries.equals : return $z5 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i0 = specialinvoke r0.<org.jfree.data.general.Series: int hashCode()>()
org.jfree.data.time.TimeSeries.hashCode : i0 = specialinvoke r0.<org.jfree.data.general.Series: int hashCode()>() >>>>>>>> org.jfree.data.general.Series.hashCode : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.hashCode : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.hashCode : i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>()
org.jfree.data.general.Series.hashCode : i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.data.general.Series.hashCode : $i1 = 29 * i0
org.jfree.data.general.Series.hashCode : $i1 = 29 * i0 >>>>>>>> org.jfree.data.general.Series.hashCode : $r2 = r0.<org.jfree.data.general.Series: java.lang.String description>
org.jfree.data.general.Series.hashCode : $r2 = r0.<org.jfree.data.general.Series: java.lang.String description> >>>>>>>> org.jfree.data.general.Series.hashCode : if $r2 == null
org.jfree.data.general.Series.hashCode : if $r2 == null >>>>>>>> org.jfree.data.general.Series.hashCode : $i2 = 0
org.jfree.data.general.Series.hashCode : $i2 = 0 >>>>>>>> org.jfree.data.general.Series.hashCode : i3 = $i1 + $i2
org.jfree.data.general.Series.hashCode : i3 = $i1 + $i2 >>>>>>>> org.jfree.data.general.Series.hashCode : return i3
org.jfree.data.general.Series.hashCode : return i3 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i2 = 29 * i0
org.jfree.data.time.TimeSeries.hashCode : $i2 = 29 * i0 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $r2 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain>
org.jfree.data.time.TimeSeries.hashCode : $r2 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain> >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : if $r2 == null
org.jfree.data.time.TimeSeries.hashCode : if $r2 == null >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $r3 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain>
org.jfree.data.time.TimeSeries.hashCode : $r3 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain> >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.jfree.data.time.TimeSeries.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : goto [?= i4 = $i2 + $i3]
org.jfree.data.time.TimeSeries.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i4 = $i2 + $i3
org.jfree.data.time.TimeSeries.hashCode : i4 = $i2 + $i3 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i5 = 29 * i4
org.jfree.data.time.TimeSeries.hashCode : $i5 = 29 * i4 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $r4 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range>
org.jfree.data.time.TimeSeries.hashCode : $r4 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range> >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : if $r4 == null
org.jfree.data.time.TimeSeries.hashCode : if $r4 == null >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $r5 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range>
org.jfree.data.time.TimeSeries.hashCode : $r5 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range> >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i6 = virtualinvoke $r5.<java.lang.String: int hashCode()>()
org.jfree.data.time.TimeSeries.hashCode : $i6 = virtualinvoke $r5.<java.lang.String: int hashCode()>() >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : goto [?= i7 = $i5 + $i6]
org.jfree.data.time.TimeSeries.hashCode : goto [?= i7 = $i5 + $i6] >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i7 = $i5 + $i6
org.jfree.data.time.TimeSeries.hashCode : i7 = $i5 + $i6 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i8 = 29 * i7
org.jfree.data.time.TimeSeries.hashCode : $i8 = 29 * i7 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $r6 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.hashCode : $r6 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : if $r6 == null
org.jfree.data.time.TimeSeries.hashCode : if $r6 == null >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i9 = 0
org.jfree.data.time.TimeSeries.hashCode : $i9 = 0 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i10 = $i8 + $i9
org.jfree.data.time.TimeSeries.hashCode : i10 = $i8 + $i9 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.hashCode : i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : if i1 <= 0
org.jfree.data.time.TimeSeries.hashCode : if i1 <= 0 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : if i1 <= 1
org.jfree.data.time.TimeSeries.hashCode : if i1 <= 1 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : if i1 <= 2
org.jfree.data.time.TimeSeries.hashCode : if i1 <= 2 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i19 = 29 * i10
org.jfree.data.time.TimeSeries.hashCode : $i19 = 29 * i10 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i20 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount>
org.jfree.data.time.TimeSeries.hashCode : $i20 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i21 = $i19 + $i20
org.jfree.data.time.TimeSeries.hashCode : i21 = $i19 + $i20 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i22 = 29 * i21
org.jfree.data.time.TimeSeries.hashCode : $i22 = 29 * i21 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $l23 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge>
org.jfree.data.time.TimeSeries.hashCode : $l23 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge> >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i24 = (int) $l23
org.jfree.data.time.TimeSeries.hashCode : $i24 = (int) $l23 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i25 = $i22 + $i24
org.jfree.data.time.TimeSeries.hashCode : i25 = $i22 + $i24 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : return i25
org.jfree.data.time.TimeSeries.hashCode : return i25 >>>>>>>> org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : return $l4
org.jfree.data.time.Day.getFirstMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : return $l4
org.jfree.data.time.Day.getLastMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double,boolean)>(r1, d0, 1)
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double,boolean)>(r1, d0, 1) >>>>>>>> org.jfree.data.time.TimeSeries.add : $r2 = new org.jfree.data.time.TimeSeriesDataItem
org.jfree.data.time.TimeSeries.add : $r2 = new org.jfree.data.time.TimeSeriesDataItem >>>>>>>> org.jfree.data.time.TimeSeries.add : specialinvoke $r2.<org.jfree.data.time.TimeSeriesDataItem: void <init>(org.jfree.data.time.RegularTimePeriod,double)>(r1, d0)
org.jfree.data.time.TimeSeries.add : specialinvoke $r2.<org.jfree.data.time.TimeSeriesDataItem: void <init>(org.jfree.data.time.RegularTimePeriod,double)>(r1, d0) >>>>>>>> org.jfree.data.time.TimeSeries.add : r3 = $r2
org.jfree.data.time.TimeSeries.add : r3 = $r2 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.TimeSeriesDataItem,boolean)>(r3, z0)
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.TimeSeriesDataItem,boolean)>(r3, z0) >>>>>>>> org.jfree.data.time.TimeSeries.add : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = r2
org.jfree.data.time.TimeSeries.add : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = r2 >>>>>>>> org.jfree.data.time.TimeSeries.add : goto [?= z2 = 0]
org.jfree.data.time.TimeSeries.add : goto [?= z2 = 0] >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : if r0 != r1
org.jfree.data.time.TimeSeriesDataItem.equals : if r0 != r1 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeriesDataItem
org.jfree.data.time.TimeSeriesDataItem.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeriesDataItem >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : if $z0 != 0
org.jfree.data.time.TimeSeriesDataItem.equals : if $z0 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : r2 = (org.jfree.data.time.TimeSeriesDataItem) r1
org.jfree.data.time.TimeSeriesDataItem.equals : r2 = (org.jfree.data.time.TimeSeriesDataItem) r1 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $r3 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.time.TimeSeriesDataItem.equals : $r3 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $r4 = r2.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.time.TimeSeriesDataItem.equals : $r4 = r2.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.data.time.TimeSeriesDataItem.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.data.time.Day.equals : if r1 != r0
org.jfree.data.time.Day.equals : if r1 != r0 >>>>>>>> org.jfree.data.time.Day.equals : $z0 = r1 instanceof org.jfree.data.time.Day
org.jfree.data.time.Day.equals : $z0 = r1 instanceof org.jfree.data.time.Day >>>>>>>> org.jfree.data.time.Day.equals : if $z0 != 0
org.jfree.data.time.Day.equals : if $z0 != 0 >>>>>>>> org.jfree.data.time.Day.equals : r2 = (org.jfree.data.time.Day) r1
org.jfree.data.time.Day.equals : r2 = (org.jfree.data.time.Day) r1 >>>>>>>> org.jfree.data.time.Day.equals : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.equals : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.equals : $r4 = virtualinvoke r2.<org.jfree.data.time.Day: org.jfree.date.SerialDate getSerialDate()>()
org.jfree.data.time.Day.equals : $r4 = virtualinvoke r2.<org.jfree.data.time.Day: org.jfree.date.SerialDate getSerialDate()>() >>>>>>>> org.jfree.data.time.Day.getSerialDate : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getSerialDate : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getSerialDate : return $r1
org.jfree.data.time.Day.getSerialDate : return $r1 >>>>>>>> org.jfree.data.time.Day.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.data.time.Day.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.time.Day.equals : if $z1 != 0
org.jfree.data.time.Day.equals : if $z1 != 0 >>>>>>>> org.jfree.data.time.Day.equals : return 1
org.jfree.data.time.Day.equals : return 1 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : if $z1 != 0
org.jfree.data.time.TimeSeriesDataItem.equals : if $z1 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $r5 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesDataItem.equals : $r5 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $r6 = r2.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesDataItem.equals : $r6 = r2.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.time.TimeSeriesDataItem.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : if $z2 != 0
org.jfree.data.time.TimeSeriesDataItem.equals : if $z2 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : return 1
org.jfree.data.time.TimeSeriesDataItem.equals : return 1 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.hashCode : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i9 = virtualinvoke $r7.<java.lang.Object: int hashCode()>()
org.jfree.data.time.TimeSeries.hashCode : $i9 = virtualinvoke $r7.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : goto [?= i10 = $i8 + $i9]
org.jfree.data.time.TimeSeries.hashCode : goto [?= i10 = $i8 + $i9] >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>(0)
org.jfree.data.time.TimeSeries.hashCode : r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>(0) >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i11 = 29 * i10
org.jfree.data.time.TimeSeries.hashCode : $i11 = 29 * i10 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i12 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: int hashCode()>()
org.jfree.data.time.TimeSeries.hashCode : $i12 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: int hashCode()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.time.TimeSeriesDataItem.hashCode : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : if $r1 == null
org.jfree.data.time.TimeSeriesDataItem.hashCode : if $r1 == null >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : $r2 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.time.TimeSeriesDataItem.hashCode : $r2 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()
org.jfree.data.time.TimeSeriesDataItem.hashCode : $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.data.time.Day.hashCode : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.hashCode : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.hashCode : $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>()
org.jfree.data.time.Day.hashCode : $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.data.time.Day.hashCode : return $i0
org.jfree.data.time.Day.hashCode : return $i0 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : goto [?= i0 = $i1]
org.jfree.data.time.TimeSeriesDataItem.hashCode : goto [?= i0 = $i1] >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : i0 = $i1
org.jfree.data.time.TimeSeriesDataItem.hashCode : i0 = $i1 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : $i2 = 29 * i0
org.jfree.data.time.TimeSeriesDataItem.hashCode : $i2 = 29 * i0 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : $r3 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesDataItem.hashCode : $r3 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : if $r3 == null
org.jfree.data.time.TimeSeriesDataItem.hashCode : if $r3 == null >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : $r4 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesDataItem.hashCode : $r4 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : $i3 = virtualinvoke $r4.<java.lang.Object: int hashCode()>()
org.jfree.data.time.TimeSeriesDataItem.hashCode : $i3 = virtualinvoke $r4.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : goto [?= i4 = $i2 + $i3]
org.jfree.data.time.TimeSeriesDataItem.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : i4 = $i2 + $i3
org.jfree.data.time.TimeSeriesDataItem.hashCode : i4 = $i2 + $i3 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : return i4
org.jfree.data.time.TimeSeriesDataItem.hashCode : return i4 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i10 = $i11 + $i12
org.jfree.data.time.TimeSeries.hashCode : i10 = $i11 + $i12 >>>>>>>> org.jfree.data.time.Day.compareTo : $z0 = r1 instanceof org.jfree.data.time.Day
org.jfree.data.time.Day.compareTo : $z0 = r1 instanceof org.jfree.data.time.Day >>>>>>>> org.jfree.data.time.Day.compareTo : if $z0 == 0
org.jfree.data.time.Day.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.time.Day.compareTo : r2 = (org.jfree.data.time.Day) r1
org.jfree.data.time.Day.compareTo : r2 = (org.jfree.data.time.Day) r1 >>>>>>>> org.jfree.data.time.Day.compareTo : $r3 = virtualinvoke r2.<org.jfree.data.time.Day: org.jfree.date.SerialDate getSerialDate()>()
org.jfree.data.time.Day.compareTo : $r3 = virtualinvoke r2.<org.jfree.data.time.Day: org.jfree.date.SerialDate getSerialDate()>() >>>>>>>> org.jfree.data.time.Day.compareTo : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.compareTo : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.compareTo : $i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int compare(org.jfree.date.SerialDate)>($r4)
org.jfree.data.time.Day.compareTo : $i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int compare(org.jfree.date.SerialDate)>($r4) >>>>>>>> org.jfree.data.time.Day.compareTo : i0 = neg $i1
org.jfree.data.time.Day.compareTo : i0 = neg $i1 >>>>>>>> org.jfree.data.time.Day.compareTo : goto [?= return i0]
org.jfree.data.time.Day.compareTo : goto [?= return i0] >>>>>>>> org.jfree.data.time.Day.compareTo : return i0
org.jfree.data.time.Day.compareTo : return i0 >>>>>>>> org.jfree.data.time.Day.getSerialIndex : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getSerialIndex : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getSerialIndex : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int toSerial()>()
org.jfree.data.time.Day.getSerialIndex : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int toSerial()>() >>>>>>>> org.jfree.data.time.Day.getSerialIndex : $l1 = (long) $i0
org.jfree.data.time.Day.getSerialIndex : $l1 = (long) $i0 >>>>>>>> org.jfree.data.time.Day.getSerialIndex : return $l1
org.jfree.data.time.Day.getSerialIndex : return $l1 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i13 = i1 - 1
org.jfree.data.time.TimeSeries.hashCode : $i13 = i1 - 1 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : r8 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>($i13)
org.jfree.data.time.TimeSeries.hashCode : r8 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>($i13) >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i14 = 29 * i10
org.jfree.data.time.TimeSeries.hashCode : $i14 = 29 * i10 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i15 = virtualinvoke r8.<org.jfree.data.time.TimeSeriesDataItem: int hashCode()>()
org.jfree.data.time.TimeSeries.hashCode : $i15 = virtualinvoke r8.<org.jfree.data.time.TimeSeriesDataItem: int hashCode()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.hashCode : $i3 = 0
org.jfree.data.time.TimeSeriesDataItem.hashCode : $i3 = 0 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i10 = $i14 + $i15
org.jfree.data.time.TimeSeries.hashCode : i10 = $i14 + $i15 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i16 = i1 / 2
org.jfree.data.time.TimeSeries.hashCode : $i16 = i1 / 2 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : r9 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>($i16)
org.jfree.data.time.TimeSeries.hashCode : r9 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>($i16) >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i17 = 29 * i10
org.jfree.data.time.TimeSeries.hashCode : $i17 = 29 * i10 >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : $i18 = virtualinvoke r9.<org.jfree.data.time.TimeSeriesDataItem: int hashCode()>()
org.jfree.data.time.TimeSeries.hashCode : $i18 = virtualinvoke r9.<org.jfree.data.time.TimeSeriesDataItem: int hashCode()>() >>>>>>>> org.jfree.data.time.TimeSeries.hashCode : i10 = $i17 + $i18
