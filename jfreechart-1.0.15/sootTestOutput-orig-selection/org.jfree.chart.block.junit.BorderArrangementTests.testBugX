org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.setWidth : r0.<org.jfree.chart.block.AbstractBlock: double width> = d0
org.jfree.chart.block.AbstractBlock.setWidth : r0.<org.jfree.chart.block.AbstractBlock: double width> = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.setHeight : r0.<org.jfree.chart.block.AbstractBlock: double height> = d0
org.jfree.chart.block.AbstractBlock.setHeight : r0.<org.jfree.chart.block.AbstractBlock: double height> = d0 >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r2 != null
org.jfree.chart.block.BorderArrangement.add : if r2 != null >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r4
org.jfree.chart.block.BorderArrangement.add : if r3 != $r4 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r5
org.jfree.chart.block.BorderArrangement.add : if r3 != $r5 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r6
org.jfree.chart.block.BorderArrangement.add : if r3 != $r6 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : goto [?= return]
org.jfree.chart.block.BorderArrangement.add : goto [?= return] >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.block.BorderArrangement.add : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r7
org.jfree.chart.block.BorderArrangement.add : if r3 != $r7 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> = r1 >>>>>>>> org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null)
org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null) >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1 >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2)
org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3)
org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c") >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0
org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : return $d0
org.jfree.chart.block.RectangleConstraint.getWidth : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : return $d0
org.jfree.chart.block.RectangleConstraint.getHeight : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : return $r1
org.jfree.chart.block.BlockBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9)
org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7
org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r5 = null
org.jfree.chart.block.BorderArrangement.arrange : r5 = null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r8
org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r8 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.BorderArrangement.arrange : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r14
org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r14 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r18 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.BorderArrangement.arrange : $r18 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r18
org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r18 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r19 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : $r19 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r19
org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r19 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.BorderArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r21
org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r21 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.BorderArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r23
org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r23 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r24 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.BorderArrangement.arrange : $r24 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r25 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.BorderArrangement.arrange : $r25 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)>(r1, $r24, $r25, r2)
org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)>(r1, $r24, $r25, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r5 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeRR : r5 = newarray (double)[5] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r6 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeRR : r6 = newarray (double)[5] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r12 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r12 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r12 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r12 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r15 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r15 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r15 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r15 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d7 = r6[0]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d7 = r6[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d8 = r6[1]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d8 = r6[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d9 = $d7 + $d8
org.jfree.chart.block.BorderArrangement.arrangeRR : $d9 = $d7 + $d8 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d10 = neg $d9
org.jfree.chart.block.BorderArrangement.arrangeRR : $d10 = neg $d9 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r20 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double)>(r3, $d10)
org.jfree.chart.block.BorderArrangement.arrangeRR : r20 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double)>(r3, $d10) >>>>>>>> org.jfree.data.Range.shift : $r1 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(r0, d0, 0)
org.jfree.data.Range.shift : $r1 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(r0, d0, 0) >>>>>>>> org.jfree.data.Range.shift : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "base")
org.jfree.data.Range.shift : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "base") >>>>>>>> org.jfree.data.Range.shift : if z0 == 0
org.jfree.data.Range.shift : if z0 == 0 >>>>>>>> org.jfree.data.Range.shift : $r2 = new org.jfree.data.Range
org.jfree.data.Range.shift : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.shift : $d5 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.shift : $d5 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.shift : $d6 = staticinvoke <org.jfree.data.Range: double shiftWithNoZeroCrossing(double,double)>($d5, d0)
org.jfree.data.Range.shift : $d6 = staticinvoke <org.jfree.data.Range: double shiftWithNoZeroCrossing(double,double)>($d5, d0) >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : $b0 = d0 cmpl 0.0
org.jfree.data.Range.shiftWithNoZeroCrossing : $b0 = d0 cmpl 0.0 >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : if $b0 <= 0
org.jfree.data.Range.shiftWithNoZeroCrossing : if $b0 <= 0 >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : $b1 = d0 cmpg 0.0
org.jfree.data.Range.shiftWithNoZeroCrossing : $b1 = d0 cmpg 0.0 >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : if $b1 >= 0
org.jfree.data.Range.shiftWithNoZeroCrossing : if $b1 >= 0 >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : $d6 = d0 + d1
org.jfree.data.Range.shiftWithNoZeroCrossing : $d6 = d0 + d1 >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : return $d6
org.jfree.data.Range.shiftWithNoZeroCrossing : return $d6 >>>>>>>> org.jfree.data.Range.shift : $d7 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.shift : $d7 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.shift : $d8 = staticinvoke <org.jfree.data.Range: double shiftWithNoZeroCrossing(double,double)>($d7, d0)
org.jfree.data.Range.shift : $d8 = staticinvoke <org.jfree.data.Range: double shiftWithNoZeroCrossing(double,double)>($d7, d0) >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : $d2 = d0 + d1
org.jfree.data.Range.shiftWithNoZeroCrossing : $d2 = d0 + d1 >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : $d3 = staticinvoke <java.lang.Math: double max(double,double)>($d2, 0.0)
org.jfree.data.Range.shiftWithNoZeroCrossing : $d3 = staticinvoke <java.lang.Math: double max(double,double)>($d2, 0.0) >>>>>>>> org.jfree.data.Range.shiftWithNoZeroCrossing : return $d3
org.jfree.data.Range.shiftWithNoZeroCrossing : return $d3 >>>>>>>> org.jfree.data.Range.shift : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d6, $d8)
org.jfree.data.Range.shift : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d6, $d8) >>>>>>>> org.jfree.data.Range.shift : return $r2
org.jfree.data.Range.shift : return $r2 >>>>>>>> org.jfree.data.Range.shift : return $r1
org.jfree.data.Range.shift : return $r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r21 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r21 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r22 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.BorderArrangement.arrangeRR : $r22 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r22.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(r2, r20)
org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r22.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(r2, r20) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r23 = $r22
org.jfree.chart.block.BorderArrangement.arrangeRR : r23 = $r22 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r24 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r24 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r25 = interfaceinvoke $r24.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r4, r23)
org.jfree.chart.block.BorderArrangement.arrangeRR : r25 = interfaceinvoke $r24.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r4, r23) >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.block.EmptyBlock.arrange : $r3 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $d0 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double getWidth()>()
org.jfree.chart.block.EmptyBlock.arrange : $d0 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double getWidth()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getWidth : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double width>
org.jfree.chart.block.AbstractBlock.getWidth : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double width> >>>>>>>> org.jfree.chart.block.AbstractBlock.getWidth : return $d0
org.jfree.chart.block.AbstractBlock.getWidth : return $d0 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double calculateTotalWidth(double)>($d0)
org.jfree.chart.block.EmptyBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double calculateTotalWidth(double)>($d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $d2 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double getHeight()>()
org.jfree.chart.block.EmptyBlock.arrange : $d2 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double getHeight()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getHeight : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height>
org.jfree.chart.block.AbstractBlock.getHeight : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height> >>>>>>>> org.jfree.chart.block.AbstractBlock.getHeight : return $d0
org.jfree.chart.block.AbstractBlock.getHeight : return $d0 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double calculateTotalHeight(double)>($d2)
org.jfree.chart.block.EmptyBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.EmptyBlock: double calculateTotalHeight(double)>($d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3)
org.jfree.chart.block.EmptyBlock.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3) >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : r4 = $r3
org.jfree.chart.block.EmptyBlock.arrange : r4 = $r3 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : $r5 = virtualinvoke r2.<org.jfree.chart.block.RectangleConstraint: org.jfree.ui.Size2D calculateConstrainedSize(org.jfree.ui.Size2D)>(r4)
org.jfree.chart.block.EmptyBlock.arrange : $r5 = virtualinvoke r2.<org.jfree.chart.block.RectangleConstraint: org.jfree.ui.Size2D calculateConstrainedSize(org.jfree.ui.Size2D)>(r4) >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r2 = new org.jfree.ui.Size2D
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r2 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : specialinvoke $r2.<org.jfree.ui.Size2D: void <init>()>()
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : specialinvoke $r2.<org.jfree.ui.Size2D: void <init>()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3 = $r2
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3 = $r2 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r4 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r4 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r5 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r5 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r4 != $r5
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r4 != $r5 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r13 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r13 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r13 != $r14
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r13 != $r14 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r15 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r15 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d5 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d5 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d6 = virtualinvoke $r15.<org.jfree.data.Range: double constrain(double)>($d5)
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d6 = virtualinvoke $r15.<org.jfree.data.Range: double constrain(double)>($d5) >>>>>>>> org.jfree.data.Range.constrain : d1 = d0
org.jfree.data.Range.constrain : d1 = d0 >>>>>>>> org.jfree.data.Range.constrain : $z0 = virtualinvoke r0.<org.jfree.data.Range: boolean contains(double)>(d0)
org.jfree.data.Range.constrain : $z0 = virtualinvoke r0.<org.jfree.data.Range: boolean contains(double)>(d0) >>>>>>>> org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.contains : $b0 = d0 cmpl $d1
org.jfree.data.Range.contains : $b0 = d0 cmpl $d1 >>>>>>>> org.jfree.data.Range.contains : if $b0 < 0
org.jfree.data.Range.contains : if $b0 < 0 >>>>>>>> org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.contains : $b1 = d0 cmpg $d2
org.jfree.data.Range.contains : $b1 = d0 cmpg $d2 >>>>>>>> org.jfree.data.Range.contains : if $b1 > 0
org.jfree.data.Range.contains : if $b1 > 0 >>>>>>>> org.jfree.data.Range.contains : $z0 = 1
org.jfree.data.Range.contains : $z0 = 1 >>>>>>>> org.jfree.data.Range.contains : goto [?= return $z0]
org.jfree.data.Range.contains : goto [?= return $z0] >>>>>>>> org.jfree.data.Range.contains : return $z0
org.jfree.data.Range.contains : return $z0 >>>>>>>> org.jfree.data.Range.constrain : if $z0 != 0
org.jfree.data.Range.constrain : if $z0 != 0 >>>>>>>> org.jfree.data.Range.constrain : return d1
org.jfree.data.Range.constrain : return d1 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3.<org.jfree.ui.Size2D: double width> = $d6
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3.<org.jfree.ui.Size2D: double width> = $d6 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r16 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r16 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r17 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r17 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r16 != $r17
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r16 != $r17 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r18 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r18 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r19 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r19 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r18 != $r19
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : if $r18 != $r19 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r20 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $r20 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d8 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d8 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d9 = virtualinvoke $r20.<org.jfree.data.Range: double constrain(double)>($d8)
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : $d9 = virtualinvoke $r20.<org.jfree.data.Range: double constrain(double)>($d8) >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3.<org.jfree.ui.Size2D: double height> = $d9
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : r3.<org.jfree.ui.Size2D: double height> = $d9 >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : goto [?= return r3]
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : goto [?= return r3] >>>>>>>> org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : return r3
org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize : return r3 >>>>>>>> org.jfree.chart.block.EmptyBlock.arrange : return $r5
org.jfree.chart.block.EmptyBlock.arrange : return $r5 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d11 = r25.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeRR : $d11 = r25.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r5[2] = $d11
org.jfree.chart.block.BorderArrangement.arrangeRR : r5[2] = $d11 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d12 = r25.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeRR : $d12 = r25.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r6[2] = $d12
org.jfree.chart.block.BorderArrangement.arrangeRR : r6[2] = $d12 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d13 = r5[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d13 = r5[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d14 = neg $d13
org.jfree.chart.block.BorderArrangement.arrangeRR : $d14 = neg $d13 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r26 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(r2, $d14, 0)
org.jfree.chart.block.BorderArrangement.arrangeRR : r26 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(r2, $d14, 0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r27 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r27 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r27 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r27 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r28 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.BorderArrangement.arrangeRR : $r28 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r28.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(r26, r20)
org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r28.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(r26, r20) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r29 = $r28
org.jfree.chart.block.BorderArrangement.arrangeRR : r29 = $r28 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r30 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r30 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r10 = interfaceinvoke $r30.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r4, r29)
org.jfree.chart.block.BorderArrangement.arrangeRR : r10 = interfaceinvoke $r30.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r4, r29) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d15 = r10.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeRR : $d15 = r10.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r5[3] = $d15
org.jfree.chart.block.BorderArrangement.arrangeRR : r5[3] = $d15 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d16 = r10.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeRR : $d16 = r10.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r6[3] = $d16
org.jfree.chart.block.BorderArrangement.arrangeRR : r6[3] = $d16 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d17 = r6[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d17 = r6[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d18 = r6[3]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d18 = r6[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d19 = staticinvoke <java.lang.Math: double max(double,double)>($d17, $d18)
org.jfree.chart.block.BorderArrangement.arrangeRR : $d19 = staticinvoke <java.lang.Math: double max(double,double)>($d17, $d18) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r6[2] = $d19
org.jfree.chart.block.BorderArrangement.arrangeRR : r6[2] = $d19 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d20 = r6[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d20 = r6[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r6[3] = $d20
org.jfree.chart.block.BorderArrangement.arrangeRR : r6[3] = $d20 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d21 = r5[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d21 = r5[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d22 = r5[3]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d22 = r5[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d23 = $d21 + $d22
org.jfree.chart.block.BorderArrangement.arrangeRR : $d23 = $d21 + $d22 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d24 = neg $d23
org.jfree.chart.block.BorderArrangement.arrangeRR : $d24 = neg $d23 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r31 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(r2, $d24, 0)
org.jfree.chart.block.BorderArrangement.arrangeRR : r31 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(r2, $d24, 0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r32 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r32 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r33 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.BorderArrangement.arrangeRR : $r33 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r33.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(r31, r20)
org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r33.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(r31, r20) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r34 = $r33
org.jfree.chart.block.BorderArrangement.arrangeRR : r34 = $r33 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r35 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r35 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r11 = interfaceinvoke $r35.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r4, r34)
org.jfree.chart.block.BorderArrangement.arrangeRR : r11 = interfaceinvoke $r35.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r4, r34) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d25 = r11.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeRR : $d25 = r11.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r5[4] = $d25
org.jfree.chart.block.BorderArrangement.arrangeRR : r5[4] = $d25 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d26 = r11.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeRR : $d26 = r11.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : r6[4] = $d26
org.jfree.chart.block.BorderArrangement.arrangeRR : r6[4] = $d26 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d27 = r5[0]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d27 = r5[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d28 = r5[1]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d28 = r5[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d29 = r5[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d29 = r5[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d30 = r5[4]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d30 = r5[4] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d31 = $d29 + $d30
org.jfree.chart.block.BorderArrangement.arrangeRR : $d31 = $d29 + $d30 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d32 = r5[3]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d32 = r5[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d33 = $d31 + $d32
org.jfree.chart.block.BorderArrangement.arrangeRR : $d33 = $d31 + $d32 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d34 = staticinvoke <java.lang.Math: double max(double,double)>($d28, $d33)
org.jfree.chart.block.BorderArrangement.arrangeRR : $d34 = staticinvoke <java.lang.Math: double max(double,double)>($d28, $d33) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : d35 = staticinvoke <java.lang.Math: double max(double,double)>($d27, $d34)
org.jfree.chart.block.BorderArrangement.arrangeRR : d35 = staticinvoke <java.lang.Math: double max(double,double)>($d27, $d34) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d36 = r6[0]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d36 = r6[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d37 = r6[1]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d37 = r6[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d38 = $d36 + $d37
org.jfree.chart.block.BorderArrangement.arrangeRR : $d38 = $d36 + $d37 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d39 = r6[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d39 = r6[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d40 = r6[3]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d40 = r6[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d41 = r6[4]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d41 = r6[4] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d42 = staticinvoke <java.lang.Math: double max(double,double)>($d40, $d41)
org.jfree.chart.block.BorderArrangement.arrangeRR : $d42 = staticinvoke <java.lang.Math: double max(double,double)>($d40, $d41) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d43 = staticinvoke <java.lang.Math: double max(double,double)>($d39, $d42)
org.jfree.chart.block.BorderArrangement.arrangeRR : $d43 = staticinvoke <java.lang.Math: double max(double,double)>($d39, $d42) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : d0 = $d38 + $d43
org.jfree.chart.block.BorderArrangement.arrangeRR : d0 = $d38 + $d43 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r36 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r36 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r36 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r36 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r39 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r39 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r39 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r39 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r42 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r42 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r42 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r42 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r43 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r43 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r44 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeRR : $r44 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d48 = r6[0]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d48 = r6[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d49 = r5[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d49 = r5[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d50 = r6[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d50 = r6[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r44.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $d48, $d49, $d50)
org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r44.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $d48, $d49, $d50) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : interfaceinvoke $r43.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r44)
org.jfree.chart.block.BorderArrangement.arrangeRR : interfaceinvoke $r43.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r44) >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds") >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r45 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r45 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r45 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r45 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r46 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r46 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r47 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeRR : $r47 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d51 = r5[3]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d51 = r5[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d52 = d35 - $d51
org.jfree.chart.block.BorderArrangement.arrangeRR : $d52 = d35 - $d51 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d53 = r6[0]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d53 = r6[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d54 = r5[3]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d54 = r5[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d55 = r6[3]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d55 = r6[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r47.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d52, $d53, $d54, $d55)
org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r47.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d52, $d53, $d54, $d55) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : interfaceinvoke $r46.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r47)
org.jfree.chart.block.BorderArrangement.arrangeRR : interfaceinvoke $r46.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r47) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r48 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r48 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : if $r48 == null
org.jfree.chart.block.BorderArrangement.arrangeRR : if $r48 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r49 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeRR : $r49 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r50 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeRR : $r50 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d56 = r5[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d56 = r5[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d57 = r6[0]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d57 = r6[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d58 = r5[2]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d58 = r5[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d59 = d35 - $d58
org.jfree.chart.block.BorderArrangement.arrangeRR : $d59 = d35 - $d58 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d60 = r5[3]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d60 = r5[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d61 = $d59 - $d60
org.jfree.chart.block.BorderArrangement.arrangeRR : $d61 = $d59 - $d60 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d62 = r6[0]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d62 = r6[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d63 = d0 - $d62
org.jfree.chart.block.BorderArrangement.arrangeRR : $d63 = d0 - $d62 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d64 = r6[1]
org.jfree.chart.block.BorderArrangement.arrangeRR : $d64 = r6[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $d65 = $d63 - $d64
org.jfree.chart.block.BorderArrangement.arrangeRR : $d65 = $d63 - $d64 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r50.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d56, $d57, $d61, $d65)
org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r50.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d56, $d57, $d61, $d65) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : interfaceinvoke $r49.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r50)
org.jfree.chart.block.BorderArrangement.arrangeRR : interfaceinvoke $r49.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r50) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : $r51 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrangeRR : $r51 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r51.<org.jfree.ui.Size2D: void <init>(double,double)>(d35, d0)
org.jfree.chart.block.BorderArrangement.arrangeRR : specialinvoke $r51.<org.jfree.ui.Size2D: void <init>(double,double)>(d35, d0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeRR : return $r51
org.jfree.chart.block.BorderArrangement.arrangeRR : return $r51 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.BorderArrangement.arrange : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d2 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($d1)
org.jfree.chart.block.BorderArrangement.arrange : $d2 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($d1) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($d3)
org.jfree.chart.block.BorderArrangement.arrange : $d4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($d3) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : specialinvoke $r26.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4)
org.jfree.chart.block.BorderArrangement.arrange : specialinvoke $r26.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : return $r26
org.jfree.chart.block.BorderArrangement.arrange : return $r26 >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : return $r4
org.jfree.chart.block.BlockContainer.arrange : return $r4 >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = null
org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = null >>>>>>>> org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> = null
org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> = null >>>>>>>> org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> = null
org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> = null >>>>>>>> org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = null
org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = null >>>>>>>> org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> = null
org.jfree.chart.block.BorderArrangement.clear : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> = null >>>>>>>> org.jfree.data.Range.contains : $z0 = 0
org.jfree.data.Range.contains : $z0 = 0 >>>>>>>> org.jfree.data.Range.constrain : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.constrain : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.constrain : $b0 = d0 cmpl $d2
org.jfree.data.Range.constrain : $b0 = d0 cmpl $d2 >>>>>>>> org.jfree.data.Range.constrain : if $b0 <= 0
org.jfree.data.Range.constrain : if $b0 <= 0 >>>>>>>> org.jfree.data.Range.constrain : d1 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.constrain : d1 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.constrain : goto [?= return d1]
