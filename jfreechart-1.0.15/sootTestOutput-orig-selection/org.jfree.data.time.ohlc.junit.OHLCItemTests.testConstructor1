org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : return $l1
org.jfree.data.time.Year.getFirstMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : return $l1
org.jfree.data.time.Year.getLastMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1 >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getPeriod : $r1 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Comparable getComparable()>()
org.jfree.data.time.ohlc.OHLCItem.getPeriod : $r1 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Comparable getComparable()>() >>>>>>>> org.jfree.data.ComparableObjectItem.getComparable : $r1 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x>
org.jfree.data.ComparableObjectItem.getComparable : $r1 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x> >>>>>>>> org.jfree.data.ComparableObjectItem.getComparable : return $r1
org.jfree.data.ComparableObjectItem.getComparable : return $r1 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getPeriod : $r2 = (org.jfree.data.time.RegularTimePeriod) $r1
org.jfree.data.time.ohlc.OHLCItem.getPeriod : $r2 = (org.jfree.data.time.RegularTimePeriod) $r1 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getPeriod : return $r2
org.jfree.data.time.ohlc.OHLCItem.getPeriod : return $r2 >>>>>>>> org.jfree.data.time.Year.equals : if r1 != r0
org.jfree.data.time.Year.equals : if r1 != r0 >>>>>>>> org.jfree.data.time.Year.equals : $z0 = r1 instanceof org.jfree.data.time.Year
org.jfree.data.time.Year.equals : $z0 = r1 instanceof org.jfree.data.time.Year >>>>>>>> org.jfree.data.time.Year.equals : if $z0 != 0
org.jfree.data.time.Year.equals : if $z0 != 0 >>>>>>>> org.jfree.data.time.Year.equals : r2 = (org.jfree.data.time.Year) r1
org.jfree.data.time.Year.equals : r2 = (org.jfree.data.time.Year) r1 >>>>>>>> org.jfree.data.time.Year.equals : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.equals : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.equals : $s1 = r2.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.equals : $s1 = r2.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.equals : if $s0 != $s1
org.jfree.data.time.Year.equals : if $s0 != $s1 >>>>>>>> org.jfree.data.time.Year.equals : $z1 = 1
org.jfree.data.time.Year.equals : $z1 = 1 >>>>>>>> org.jfree.data.time.Year.equals : goto [?= return $z1]
org.jfree.data.time.Year.equals : goto [?= return $z1] >>>>>>>> org.jfree.data.time.Year.equals : return $z1
org.jfree.data.time.Year.equals : return $z1 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getOpenValue : $r2 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Object getObject()>()
org.jfree.data.time.ohlc.OHLCItem.getOpenValue : $r2 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Object getObject()>() >>>>>>>> org.jfree.data.ComparableObjectItem.getObject : $r1 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj>
org.jfree.data.ComparableObjectItem.getObject : $r1 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj> >>>>>>>> org.jfree.data.ComparableObjectItem.getObject : return $r1
org.jfree.data.ComparableObjectItem.getObject : return $r1 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getOpenValue : r1 = (org.jfree.data.time.ohlc.OHLC) $r2
org.jfree.data.time.ohlc.OHLCItem.getOpenValue : r1 = (org.jfree.data.time.ohlc.OHLC) $r2 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getOpenValue : if r1 == null
org.jfree.data.time.ohlc.OHLCItem.getOpenValue : if r1 == null >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getOpenValue : $d0 = virtualinvoke r1.<org.jfree.data.time.ohlc.OHLC: double getOpen()>()
org.jfree.data.time.ohlc.OHLCItem.getOpenValue : $d0 = virtualinvoke r1.<org.jfree.data.time.ohlc.OHLC: double getOpen()>() >>>>>>>> org.jfree.data.time.ohlc.OHLC.getOpen : $d0 = r0.<org.jfree.data.time.ohlc.OHLC: double open>
org.jfree.data.time.ohlc.OHLC.getOpen : $d0 = r0.<org.jfree.data.time.ohlc.OHLC: double open> >>>>>>>> org.jfree.data.time.ohlc.OHLC.getOpen : return $d0
org.jfree.data.time.ohlc.OHLC.getOpen : return $d0 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getOpenValue : return $d0
org.jfree.data.time.ohlc.OHLCItem.getOpenValue : return $d0 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getHighValue : $r2 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Object getObject()>()
org.jfree.data.time.ohlc.OHLCItem.getHighValue : $r2 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Object getObject()>() >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getHighValue : r1 = (org.jfree.data.time.ohlc.OHLC) $r2
org.jfree.data.time.ohlc.OHLCItem.getHighValue : r1 = (org.jfree.data.time.ohlc.OHLC) $r2 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getHighValue : if r1 == null
org.jfree.data.time.ohlc.OHLCItem.getHighValue : if r1 == null >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getHighValue : $d0 = virtualinvoke r1.<org.jfree.data.time.ohlc.OHLC: double getHigh()>()
org.jfree.data.time.ohlc.OHLCItem.getHighValue : $d0 = virtualinvoke r1.<org.jfree.data.time.ohlc.OHLC: double getHigh()>() >>>>>>>> org.jfree.data.time.ohlc.OHLC.getHigh : $d0 = r0.<org.jfree.data.time.ohlc.OHLC: double high>
org.jfree.data.time.ohlc.OHLC.getHigh : $d0 = r0.<org.jfree.data.time.ohlc.OHLC: double high> >>>>>>>> org.jfree.data.time.ohlc.OHLC.getHigh : return $d0
org.jfree.data.time.ohlc.OHLC.getHigh : return $d0 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getHighValue : return $d0
org.jfree.data.time.ohlc.OHLCItem.getHighValue : return $d0 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getLowValue : $r2 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Object getObject()>()
org.jfree.data.time.ohlc.OHLCItem.getLowValue : $r2 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Object getObject()>() >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getLowValue : r1 = (org.jfree.data.time.ohlc.OHLC) $r2
org.jfree.data.time.ohlc.OHLCItem.getLowValue : r1 = (org.jfree.data.time.ohlc.OHLC) $r2 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getLowValue : if r1 == null
org.jfree.data.time.ohlc.OHLCItem.getLowValue : if r1 == null >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getLowValue : $d0 = virtualinvoke r1.<org.jfree.data.time.ohlc.OHLC: double getLow()>()
org.jfree.data.time.ohlc.OHLCItem.getLowValue : $d0 = virtualinvoke r1.<org.jfree.data.time.ohlc.OHLC: double getLow()>() >>>>>>>> org.jfree.data.time.ohlc.OHLC.getLow : $d0 = r0.<org.jfree.data.time.ohlc.OHLC: double low>
org.jfree.data.time.ohlc.OHLC.getLow : $d0 = r0.<org.jfree.data.time.ohlc.OHLC: double low> >>>>>>>> org.jfree.data.time.ohlc.OHLC.getLow : return $d0
org.jfree.data.time.ohlc.OHLC.getLow : return $d0 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getLowValue : return $d0
org.jfree.data.time.ohlc.OHLCItem.getLowValue : return $d0 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getCloseValue : $r2 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Object getObject()>()
org.jfree.data.time.ohlc.OHLCItem.getCloseValue : $r2 = virtualinvoke r0.<org.jfree.data.time.ohlc.OHLCItem: java.lang.Object getObject()>() >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getCloseValue : r1 = (org.jfree.data.time.ohlc.OHLC) $r2
org.jfree.data.time.ohlc.OHLCItem.getCloseValue : r1 = (org.jfree.data.time.ohlc.OHLC) $r2 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getCloseValue : if r1 == null
org.jfree.data.time.ohlc.OHLCItem.getCloseValue : if r1 == null >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getCloseValue : $d0 = virtualinvoke r1.<org.jfree.data.time.ohlc.OHLC: double getClose()>()
org.jfree.data.time.ohlc.OHLCItem.getCloseValue : $d0 = virtualinvoke r1.<org.jfree.data.time.ohlc.OHLC: double getClose()>() >>>>>>>> org.jfree.data.time.ohlc.OHLC.getClose : $d0 = r0.<org.jfree.data.time.ohlc.OHLC: double close>
org.jfree.data.time.ohlc.OHLC.getClose : $d0 = r0.<org.jfree.data.time.ohlc.OHLC: double close> >>>>>>>> org.jfree.data.time.ohlc.OHLC.getClose : return $d0
org.jfree.data.time.ohlc.OHLC.getClose : return $d0 >>>>>>>> org.jfree.data.time.ohlc.OHLCItem.getCloseValue : return $d0
