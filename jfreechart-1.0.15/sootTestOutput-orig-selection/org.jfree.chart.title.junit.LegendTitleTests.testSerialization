org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4
org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.plot.XYPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null
org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5
org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding") >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.block.AbstractBlock.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.block.BlockBorder.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.block.BlockBorder.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.block.BlockBorder.writeObject : $r2 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.writeObject : $r2 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.BlockBorder.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.block.BlockBorder.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.writeObject : $r2 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.writeObject : $r2 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.block.AbstractBlock.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.title.Title.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.title.Title.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.title.LegendTitle.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.title.LegendTitle.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.plot.Plot.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.plot.Plot.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i0 = lengthof $r2
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i0 = lengthof $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i1 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i1 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i1 >= i0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r4 = $r3[i1]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r4 = $r3[i1] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i1 = i1 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : goto [?= (branch)]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i6 = lengthof $r5
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i6 = lengthof $r5 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i6)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i6) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i2 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i2 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i2 >= i6
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i2 >= i6 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r7 = $r6[i2]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r7 = $r6[i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i2 = i2 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i7 = lengthof $r8
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i7 = lengthof $r8 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i7)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i7) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i3 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i3 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i3 >= i7
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i3 >= i7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r10 = $r9[i3]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r10 = $r9[i3] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i3 = i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i3 = i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i8 = lengthof $r11
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i8 = lengthof $r11 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i8)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i8) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i4 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i4 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i4 >= i8
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i4 >= i8 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r12 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r12 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r13 = $r12[i4]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r13 = $r12[i4] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r13, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r13, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i4 = i4 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r14 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r14 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i9 = lengthof $r14
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i9 = lengthof $r14 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i9)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i9) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i5 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i5 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i5 >= i9
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : if i5 >= i9 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r15 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r15 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r16 = $r15[i5]
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : $r16 = $r15[i5] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r16, r1)
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($r16, r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i5 = i5 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.writeObject : i5 = i5 + 1 >>>>>>>> org.jfree.chart.plot.Plot.writeObject : $r2 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint>
org.jfree.chart.plot.Plot.writeObject : $r2 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> >>>>>>>> org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.plot.Plot.writeObject : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.writeObject : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.plot.Plot.writeObject : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.writeObject : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.plot.Plot.writeObject : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.writeObject : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1)
org.jfree.chart.plot.Plot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
org.jfree.chart.plot.XYPlot.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r3 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r3 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r4 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r4 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r4, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r4, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r5, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r6, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r6, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r7 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r7 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r7, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r8 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r8 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r8, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r8, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r9 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r9 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r9, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r9, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r10, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r11 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r11 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r11, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r11, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r12 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r12 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r12, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r12, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r13 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r13 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r13, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r13, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r14 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r14 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r14, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r14, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r15 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r15 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r15, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r15, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r16 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r16 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r16, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r16, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r17, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r17, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r18 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin>
org.jfree.chart.plot.XYPlot.writeObject : $r18 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)>($r18, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)>($r18, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : i0 = 0
org.jfree.chart.plot.XYPlot.writeObject : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : if i0 >= 4
org.jfree.chart.plot.XYPlot.writeObject : if i0 >= 4 >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r19 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.writeObject : $r19 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r20 = $r19[i0]
org.jfree.chart.plot.XYPlot.writeObject : $r20 = $r19[i0] >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r20, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r20, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.writeObject : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.writeObject : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.writeObject : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r21, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($r21, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : $r22 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.writeObject : $r22 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r22, r1)
org.jfree.chart.plot.XYPlot.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r22, r1) >>>>>>>> org.jfree.chart.title.LegendTitle.writeObject : $r2 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.writeObject : $r2 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1)
org.jfree.chart.title.LegendTitle.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r2, r1) >>>>>>>> org.jfree.chart.title.LegendTitle.writeObject : $r3 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.writeObject : $r3 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1)
org.jfree.chart.title.LegendTitle.writeObject : staticinvoke <org.jfree.io.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($r3, r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.block.AbstractBlock.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.block.BlockBorder.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.block.BlockBorder.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.block.BlockBorder.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.block.BlockBorder.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.block.BlockBorder.readObject : r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> = $r2
org.jfree.chart.block.BlockBorder.readObject : r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> = $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.block.AbstractBlock.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.readObject : $r3 = (java.awt.geom.Rectangle2D) $r2
org.jfree.chart.block.AbstractBlock.readObject : $r3 = (java.awt.geom.Rectangle2D) $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.readObject : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = $r3
org.jfree.chart.block.AbstractBlock.readObject : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = $r3 >>>>>>>> org.jfree.chart.title.Title.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.title.Title.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.title.Title.readObject : $r2 = new javax.swing.event.EventListenerList
org.jfree.chart.title.Title.readObject : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.title.Title.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.title.Title.readObject : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.title.Title.readObject : r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.chart.title.Title.readObject : r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.chart.title.LegendTitle.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.title.LegendTitle.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.plot.Plot.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.plot.Plot.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r2 = newarray (java.awt.Paint)[i0]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r2 = newarray (java.awt.Paint)[i0] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> = $r2
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> = $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i1 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i1 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i1 >= i0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r3[i1] = $r4
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r3[i1] = $r4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i1 = i1 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : goto [?= (branch)]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i6 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i6 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r5 = newarray (java.awt.Paint)[i6]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r5 = newarray (java.awt.Paint)[i6] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> = $r5
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> = $r5 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i2 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i2 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i2 >= i6
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i2 >= i6 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r6[i2] = $r7
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r6[i2] = $r7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i2 = i2 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i7 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i7 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r8 = newarray (java.awt.Stroke)[i7]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r8 = newarray (java.awt.Stroke)[i7] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> = $r8
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> = $r8 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i3 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i3 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i3 >= i7
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i3 >= i7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r9[i3] = $r10
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r9[i3] = $r10 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i3 = i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i3 = i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i8 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i8 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r11 = newarray (java.awt.Stroke)[i8]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r11 = newarray (java.awt.Stroke)[i8] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> = $r11
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> = $r11 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i4 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i4 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i4 >= i8
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i4 >= i8 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r12 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r12 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r12[i4] = $r13
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r12[i4] = $r13 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i4 = i4 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i9 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>()
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i9 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r14 = newarray (java.awt.Shape)[i9]
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r14 = newarray (java.awt.Shape)[i9] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> = $r14
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> = $r14 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i5 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i5 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i5 >= i9
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : if i5 >= i9 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r15 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r15 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r15[i5] = $r16
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : $r15[i5] = $r16 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i5 = i5 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.readObject : i5 = i5 + 1 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.Plot.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> = $r2
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> = $r2 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.Plot.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> = $r3
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> = $r3 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.Plot.readObject : $r4 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = $r4
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = $r4 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.Plot.readObject : $r5 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = $r5
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = $r5 >>>>>>>> org.jfree.chart.plot.Plot.readObject : $r6 = new javax.swing.event.EventListenerList
org.jfree.chart.plot.Plot.readObject : $r6 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.plot.Plot.readObject : specialinvoke $r6.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.plot.Plot.readObject : specialinvoke $r6.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r6
org.jfree.chart.plot.Plot.readObject : r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r6 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>()
org.jfree.chart.plot.XYPlot.readObject : virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>() >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r1 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder FORWARD>
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r1 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder FORWARD> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.DatasetRenderingOrder: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.DatasetRenderingOrder: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : if r0 != r1
org.jfree.chart.plot.DatasetRenderingOrder.equals : if r0 != r1 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : $z0 = r1 instanceof org.jfree.chart.plot.DatasetRenderingOrder
org.jfree.chart.plot.DatasetRenderingOrder.equals : $z0 = r1 instanceof org.jfree.chart.plot.DatasetRenderingOrder >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : if $z0 != 0
org.jfree.chart.plot.DatasetRenderingOrder.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : r2 = (org.jfree.chart.plot.DatasetRenderingOrder) r1
org.jfree.chart.plot.DatasetRenderingOrder.equals : r2 = (org.jfree.chart.plot.DatasetRenderingOrder) r1 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : $r3 = r0.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String name>
org.jfree.chart.plot.DatasetRenderingOrder.equals : $r3 = r0.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String name> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String toString()>()
org.jfree.chart.plot.DatasetRenderingOrder.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.toString : $r1 = r0.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String name>
org.jfree.chart.plot.DatasetRenderingOrder.toString : $r1 = r0.<org.jfree.chart.plot.DatasetRenderingOrder: java.lang.String name> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.toString : return $r1
org.jfree.chart.plot.DatasetRenderingOrder.toString : return $r1 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.plot.DatasetRenderingOrder.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : if $z1 != 0
org.jfree.chart.plot.DatasetRenderingOrder.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : return 0
org.jfree.chart.plot.DatasetRenderingOrder.equals : return 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : if $z0 == 0
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r3 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE>
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r3 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.DatasetRenderingOrder: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.DatasetRenderingOrder: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.equals : return 1
org.jfree.chart.plot.DatasetRenderingOrder.equals : return 1 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : if $z1 == 0
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r4 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE>
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : $r4 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE> >>>>>>>> org.jfree.chart.plot.DatasetRenderingOrder.readResolve : return $r4
org.jfree.chart.plot.DatasetRenderingOrder.readResolve : return $r4 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r1 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.axis.AxisLocation.readResolve : $r1 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.axis.AxisLocation.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : if r0 != r1
org.jfree.chart.axis.AxisLocation.equals : if r0 != r1 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : $z0 = r1 instanceof org.jfree.chart.axis.AxisLocation
org.jfree.chart.axis.AxisLocation.equals : $z0 = r1 instanceof org.jfree.chart.axis.AxisLocation >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : if $z0 != 0
org.jfree.chart.axis.AxisLocation.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : r2 = (org.jfree.chart.axis.AxisLocation) r1
org.jfree.chart.axis.AxisLocation.equals : r2 = (org.jfree.chart.axis.AxisLocation) r1 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : $r3 = r0.<org.jfree.chart.axis.AxisLocation: java.lang.String name>
org.jfree.chart.axis.AxisLocation.equals : $r3 = r0.<org.jfree.chart.axis.AxisLocation: java.lang.String name> >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.AxisLocation: java.lang.String toString()>()
org.jfree.chart.axis.AxisLocation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.AxisLocation: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.AxisLocation.toString : $r1 = r0.<org.jfree.chart.axis.AxisLocation: java.lang.String name>
org.jfree.chart.axis.AxisLocation.toString : $r1 = r0.<org.jfree.chart.axis.AxisLocation: java.lang.String name> >>>>>>>> org.jfree.chart.axis.AxisLocation.toString : return $r1
org.jfree.chart.axis.AxisLocation.toString : return $r1 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.AxisLocation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : if $z1 != 0
org.jfree.chart.axis.AxisLocation.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : return 0
org.jfree.chart.axis.AxisLocation.equals : return 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : if $z0 == 0
org.jfree.chart.axis.AxisLocation.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT>
org.jfree.chart.axis.AxisLocation.readResolve : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.axis.AxisLocation.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : if $z1 == 0
org.jfree.chart.axis.AxisLocation.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r5 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.axis.AxisLocation.readResolve : $r5 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $z2 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r5)
org.jfree.chart.axis.AxisLocation.readResolve : $z2 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : if $z2 == 0
org.jfree.chart.axis.AxisLocation.readResolve : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r7 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.axis.AxisLocation.readResolve : $r7 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $z3 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r7)
org.jfree.chart.axis.AxisLocation.readResolve : $z3 = virtualinvoke r0.<org.jfree.chart.axis.AxisLocation: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.axis.AxisLocation.equals : return 1
org.jfree.chart.axis.AxisLocation.equals : return 1 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : if $z3 == 0
org.jfree.chart.axis.AxisLocation.readResolve : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : $r8 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.axis.AxisLocation.readResolve : $r8 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.readResolve : return $r8
org.jfree.chart.axis.AxisLocation.readResolve : return $r8 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : r1 = null
org.jfree.chart.plot.PlotOrientation.readResolve : r1 = null >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : $r2 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.PlotOrientation.readResolve : $r2 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r2)
org.jfree.chart.plot.PlotOrientation.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : if r0 != r1
org.jfree.chart.plot.PlotOrientation.equals : if r0 != r1 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : $z0 = r1 instanceof org.jfree.chart.plot.PlotOrientation
org.jfree.chart.plot.PlotOrientation.equals : $z0 = r1 instanceof org.jfree.chart.plot.PlotOrientation >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : if $z0 != 0
org.jfree.chart.plot.PlotOrientation.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : r2 = (org.jfree.chart.plot.PlotOrientation) r1
org.jfree.chart.plot.PlotOrientation.equals : r2 = (org.jfree.chart.plot.PlotOrientation) r1 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : $r3 = r0.<org.jfree.chart.plot.PlotOrientation: java.lang.String name>
org.jfree.chart.plot.PlotOrientation.equals : $r3 = r0.<org.jfree.chart.plot.PlotOrientation: java.lang.String name> >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.PlotOrientation: java.lang.String toString()>()
org.jfree.chart.plot.PlotOrientation.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.PlotOrientation: java.lang.String toString()>() >>>>>>>> org.jfree.chart.plot.PlotOrientation.toString : $r1 = r0.<org.jfree.chart.plot.PlotOrientation: java.lang.String name>
org.jfree.chart.plot.PlotOrientation.toString : $r1 = r0.<org.jfree.chart.plot.PlotOrientation: java.lang.String name> >>>>>>>> org.jfree.chart.plot.PlotOrientation.toString : return $r1
org.jfree.chart.plot.PlotOrientation.toString : return $r1 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.plot.PlotOrientation.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : if $z1 != 0
org.jfree.chart.plot.PlotOrientation.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : return 0
org.jfree.chart.plot.PlotOrientation.equals : return 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : if $z0 == 0
org.jfree.chart.plot.PlotOrientation.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : $r3 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.PlotOrientation.readResolve : $r3 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.plot.PlotOrientation.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.PlotOrientation.equals : return 1
org.jfree.chart.plot.PlotOrientation.equals : return 1 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : if $z1 == 0
org.jfree.chart.plot.PlotOrientation.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : r1 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.PlotOrientation.readResolve : r1 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.PlotOrientation.readResolve : return r1
org.jfree.chart.plot.PlotOrientation.readResolve : return r1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r1 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder FORWARD>
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r1 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder FORWARD> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.SeriesRenderingOrder: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $z0 = virtualinvoke r0.<org.jfree.chart.plot.SeriesRenderingOrder: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : if r0 != r1
org.jfree.chart.plot.SeriesRenderingOrder.equals : if r0 != r1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : $z0 = r1 instanceof org.jfree.chart.plot.SeriesRenderingOrder
org.jfree.chart.plot.SeriesRenderingOrder.equals : $z0 = r1 instanceof org.jfree.chart.plot.SeriesRenderingOrder >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : if $z0 != 0
org.jfree.chart.plot.SeriesRenderingOrder.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : r2 = (org.jfree.chart.plot.SeriesRenderingOrder) r1
org.jfree.chart.plot.SeriesRenderingOrder.equals : r2 = (org.jfree.chart.plot.SeriesRenderingOrder) r1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : $r3 = r0.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String name>
org.jfree.chart.plot.SeriesRenderingOrder.equals : $r3 = r0.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String name> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String toString()>()
org.jfree.chart.plot.SeriesRenderingOrder.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.toString : $r1 = r0.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String name>
org.jfree.chart.plot.SeriesRenderingOrder.toString : $r1 = r0.<org.jfree.chart.plot.SeriesRenderingOrder: java.lang.String name> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.toString : return $r1
org.jfree.chart.plot.SeriesRenderingOrder.toString : return $r1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.plot.SeriesRenderingOrder.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : if $z1 != 0
org.jfree.chart.plot.SeriesRenderingOrder.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : return 0
org.jfree.chart.plot.SeriesRenderingOrder.equals : return 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : if $z0 == 0
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r3 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE>
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r3 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.SeriesRenderingOrder: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $z1 = virtualinvoke r0.<org.jfree.chart.plot.SeriesRenderingOrder: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.equals : return 1
org.jfree.chart.plot.SeriesRenderingOrder.equals : return 1 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : if $z1 == 0
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r4 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE>
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : $r4 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE> >>>>>>>> org.jfree.chart.plot.SeriesRenderingOrder.readResolve : return $r4
org.jfree.chart.plot.SeriesRenderingOrder.readResolve : return $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r6 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r6 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> = $r6
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> = $r6 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r7 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> = $r7
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> = $r7 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r8 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r8 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> = $r8
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> = $r8 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r9 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r9 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> = $r9
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> = $r9 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r10 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> = $r10
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> = $r10 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r11 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r11 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> = $r11
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> = $r11 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r12 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r12 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> = $r12
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> = $r12 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r13 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> = $r13
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> = $r13 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r14 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r14 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> = $r14
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> = $r14 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r15 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r15 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> = $r15
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> = $r15 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r16 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> = $r16
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> = $r16 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r17 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r17 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> = $r17
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> = $r17 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r18 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r18 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> = $r18
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> = $r18 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r19 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r19 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> = $r19
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> = $r19 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r20 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r20 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> = $r20
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> = $r20 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r21 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r21 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> = $r21
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> = $r21 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r22 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.geom.Point2D readPoint2D(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r22 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.geom.Point2D readPoint2D(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> = $r22
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> = $r22 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r23 = newarray (java.awt.Paint)[4]
org.jfree.chart.plot.XYPlot.readObject : $r23 = newarray (java.awt.Paint)[4] >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> = $r23
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> = $r23 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i0 = 0
org.jfree.chart.plot.XYPlot.readObject : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i0 >= 4
org.jfree.chart.plot.XYPlot.readObject : if i0 >= 4 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r24 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.readObject : $r24 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r25 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r25 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r24[i0] = $r25
org.jfree.chart.plot.XYPlot.readObject : $r24[i0] = $r25 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.readObject : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.readObject : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r26 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r26 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> = $r26
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> = $r26 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r27 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.plot.XYPlot.readObject : $r27 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> = $r27
org.jfree.chart.plot.XYPlot.readObject : r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> = $r27 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r28 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.readObject : $r28 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i2 = virtualinvoke $r28.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.readObject : i2 = virtualinvoke $r28.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i1 = 0
org.jfree.chart.plot.XYPlot.readObject : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i1 >= i2
org.jfree.chart.plot.XYPlot.readObject : if i1 >= i2 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r29 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.readObject : $r29 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r30 = virtualinvoke $r29.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.readObject : $r30 = virtualinvoke $r29.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r2 = (org.jfree.chart.axis.Axis) $r30
org.jfree.chart.plot.XYPlot.readObject : r2 = (org.jfree.chart.axis.Axis) $r30 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if r2 == null
org.jfree.chart.plot.XYPlot.readObject : if r2 == null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.readObject : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r31 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.readObject : $r31 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i3 = virtualinvoke $r31.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.readObject : i3 = virtualinvoke $r31.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i4 = 0
org.jfree.chart.plot.XYPlot.readObject : i4 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i4 >= i3
org.jfree.chart.plot.XYPlot.readObject : if i4 >= i3 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r32 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.readObject : $r32 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r33 = virtualinvoke $r32.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i4)
org.jfree.chart.plot.XYPlot.readObject : $r33 = virtualinvoke $r32.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i4) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r3 = (org.jfree.chart.axis.Axis) $r33
org.jfree.chart.plot.XYPlot.readObject : r3 = (org.jfree.chart.axis.Axis) $r33 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if r3 == null
org.jfree.chart.plot.XYPlot.readObject : if r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i4 = i4 + 1
org.jfree.chart.plot.XYPlot.readObject : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r34 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.readObject : $r34 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i5 = virtualinvoke $r34.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.readObject : i5 = virtualinvoke $r34.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i6 = 0
org.jfree.chart.plot.XYPlot.readObject : i6 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i6 >= i5
org.jfree.chart.plot.XYPlot.readObject : if i6 >= i5 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r35 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.readObject : $r35 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r36 = virtualinvoke $r35.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6)
org.jfree.chart.plot.XYPlot.readObject : $r36 = virtualinvoke $r35.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r4 = (org.jfree.data.general.Dataset) $r36
org.jfree.chart.plot.XYPlot.readObject : r4 = (org.jfree.data.general.Dataset) $r36 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if r4 == null
org.jfree.chart.plot.XYPlot.readObject : if r4 == null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i6 = i6 + 1
org.jfree.chart.plot.XYPlot.readObject : i6 = i6 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r37 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.readObject : $r37 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i7 = virtualinvoke $r37.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.readObject : i7 = virtualinvoke $r37.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i8 = 0
org.jfree.chart.plot.XYPlot.readObject : i8 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if i8 >= i7
org.jfree.chart.plot.XYPlot.readObject : if i8 >= i7 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r38 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.readObject : $r38 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : $r39 = virtualinvoke $r38.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i8)
org.jfree.chart.plot.XYPlot.readObject : $r39 = virtualinvoke $r38.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i8) >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : r5 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r39
org.jfree.chart.plot.XYPlot.readObject : r5 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r39 >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : if r5 == null
org.jfree.chart.plot.XYPlot.readObject : if r5 == null >>>>>>>> org.jfree.chart.plot.XYPlot.readObject : i8 = i8 + 1
org.jfree.chart.plot.XYPlot.readObject : i8 = i8 + 1 >>>>>>>> org.jfree.chart.title.LegendTitle.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.title.LegendTitle.readObject : $r2 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.readObject : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = $r2
org.jfree.chart.title.LegendTitle.readObject : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = $r2 >>>>>>>> org.jfree.chart.title.LegendTitle.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1)
org.jfree.chart.title.LegendTitle.readObject : $r3 = staticinvoke <org.jfree.io.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.readObject : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = $r3
org.jfree.chart.title.LegendTitle.readObject : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = $r3 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if r1 != r0
org.jfree.chart.title.LegendTitle.equals : if r1 != r0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z0 = r1 instanceof org.jfree.chart.title.LegendTitle
org.jfree.chart.title.LegendTitle.equals : $z0 = r1 instanceof org.jfree.chart.title.LegendTitle >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z0 != 0
org.jfree.chart.title.LegendTitle.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z1 = specialinvoke r0.<org.jfree.chart.title.Title: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.LegendTitle.equals : $z1 = specialinvoke r0.<org.jfree.chart.title.Title: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.title.Title.equals : if r1 != r0
org.jfree.chart.title.Title.equals : if r1 != r0 >>>>>>>> org.jfree.chart.title.Title.equals : $z0 = r1 instanceof org.jfree.chart.title.Title
org.jfree.chart.title.Title.equals : $z0 = r1 instanceof org.jfree.chart.title.Title >>>>>>>> org.jfree.chart.title.Title.equals : if $z0 != 0
org.jfree.chart.title.Title.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.title.Title.equals : r2 = (org.jfree.chart.title.Title) r1
org.jfree.chart.title.Title.equals : r2 = (org.jfree.chart.title.Title) r1 >>>>>>>> org.jfree.chart.title.Title.equals : $z1 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.equals : $z1 = r0.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.equals : $z2 = r2.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.equals : $z2 = r2.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.equals : if $z1 == $z2
org.jfree.chart.title.Title.equals : if $z1 == $z2 >>>>>>>> org.jfree.chart.title.Title.equals : $r3 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.equals : $r3 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.equals : $r4 = r2.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.equals : $r4 = r2.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.equals : if $r3 == $r4
org.jfree.chart.title.Title.equals : if $r3 == $r4 >>>>>>>> org.jfree.chart.title.Title.equals : $r5 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.equals : $r5 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.title.Title.equals : $r6 = r2.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.equals : $r6 = r2.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.title.Title.equals : if $r5 == $r6
org.jfree.chart.title.Title.equals : if $r5 == $r6 >>>>>>>> org.jfree.chart.title.Title.equals : $r7 = r0.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.title.Title.equals : $r7 = r0.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.title.Title.equals : $r8 = r2.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.title.Title.equals : $r8 = r2.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.title.Title.equals : if $r7 == $r8
org.jfree.chart.title.Title.equals : if $r7 == $r8 >>>>>>>> org.jfree.chart.title.Title.equals : $z3 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.equals : $z3 = r0.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.equals : $z4 = r2.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.equals : $z4 = r2.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.equals : if $z3 == $z4
org.jfree.chart.title.Title.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.title.Title.equals : $z5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.Title.equals : $z5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if r1 != r0
org.jfree.chart.block.AbstractBlock.equals : if r1 != r0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z0 = r1 instanceof org.jfree.chart.block.AbstractBlock
org.jfree.chart.block.AbstractBlock.equals : $z0 = r1 instanceof org.jfree.chart.block.AbstractBlock >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z0 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : r2 = (org.jfree.chart.block.AbstractBlock) r1
org.jfree.chart.block.AbstractBlock.equals : r2 = (org.jfree.chart.block.AbstractBlock) r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r3 = r0.<org.jfree.chart.block.AbstractBlock: java.lang.String id>
org.jfree.chart.block.AbstractBlock.equals : $r3 = r0.<org.jfree.chart.block.AbstractBlock: java.lang.String id> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r4 = r2.<org.jfree.chart.block.AbstractBlock: java.lang.String id>
org.jfree.chart.block.AbstractBlock.equals : $r4 = r2.<org.jfree.chart.block.AbstractBlock: java.lang.String id> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.block.AbstractBlock.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z1 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r5 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.equals : $r5 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r6 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.equals : $r6 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.block.AbstractBlock.equals : $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.block.BlockBorder.equals : if r1 != r0
org.jfree.chart.block.BlockBorder.equals : if r1 != r0 >>>>>>>> org.jfree.chart.block.BlockBorder.equals : $z0 = r1 instanceof org.jfree.chart.block.BlockBorder
org.jfree.chart.block.BlockBorder.equals : $z0 = r1 instanceof org.jfree.chart.block.BlockBorder >>>>>>>> org.jfree.chart.block.BlockBorder.equals : if $z0 != 0
org.jfree.chart.block.BlockBorder.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.block.BlockBorder.equals : r2 = (org.jfree.chart.block.BlockBorder) r1
org.jfree.chart.block.BlockBorder.equals : r2 = (org.jfree.chart.block.BlockBorder) r1 >>>>>>>> org.jfree.chart.block.BlockBorder.equals : $r3 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.equals : $r3 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.equals : $r4 = r2.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.equals : $r4 = r2.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.equals : $z1 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.block.BlockBorder.equals : $z1 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.block.BlockBorder.equals : if $z1 != 0
org.jfree.chart.block.BlockBorder.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.block.BlockBorder.equals : $r5 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.equals : $r5 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.BlockBorder.equals : $r6 = r2.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.equals : $r6 = r2.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.BlockBorder.equals : $z2 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r5, $r6)
org.jfree.chart.block.BlockBorder.equals : $z2 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r5, $r6) >>>>>>>> org.jfree.chart.block.BlockBorder.equals : if $z2 != 0
org.jfree.chart.block.BlockBorder.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.block.BlockBorder.equals : return 1
org.jfree.chart.block.BlockBorder.equals : return 1 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z2 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r7 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.equals : $r7 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r8 = r2.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.equals : $r8 = r2.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z3 = virtualinvoke $r7.<java.awt.geom.Rectangle2D: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.block.AbstractBlock.equals : $z3 = virtualinvoke $r7.<java.awt.geom.Rectangle2D: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z3 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r9 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.equals : $r9 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r10 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.equals : $r10 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.block.AbstractBlock.equals : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z4 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r11 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.equals : $r11 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $r12 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.equals : $r12 = r2.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $z5 = virtualinvoke $r11.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r12)
org.jfree.chart.block.AbstractBlock.equals : $z5 = virtualinvoke $r11.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $z5 != 0
org.jfree.chart.block.AbstractBlock.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height>
org.jfree.chart.block.AbstractBlock.equals : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $d1 = r2.<org.jfree.chart.block.AbstractBlock: double height>
org.jfree.chart.block.AbstractBlock.equals : $d1 = r2.<org.jfree.chart.block.AbstractBlock: double height> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.block.AbstractBlock.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $b0 == 0
org.jfree.chart.block.AbstractBlock.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $d2 = r0.<org.jfree.chart.block.AbstractBlock: double width>
org.jfree.chart.block.AbstractBlock.equals : $d2 = r0.<org.jfree.chart.block.AbstractBlock: double width> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $d3 = r2.<org.jfree.chart.block.AbstractBlock: double width>
org.jfree.chart.block.AbstractBlock.equals : $d3 = r2.<org.jfree.chart.block.AbstractBlock: double width> >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : $b1 = $d2 cmpl $d3
org.jfree.chart.block.AbstractBlock.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : if $b1 == 0
org.jfree.chart.block.AbstractBlock.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.equals : return 1
org.jfree.chart.block.AbstractBlock.equals : return 1 >>>>>>>> org.jfree.chart.title.Title.equals : return $z5
org.jfree.chart.title.Title.equals : return $z5 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z1 != 0
org.jfree.chart.title.LegendTitle.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : r2 = (org.jfree.chart.title.LegendTitle) r1
org.jfree.chart.title.LegendTitle.equals : r2 = (org.jfree.chart.title.LegendTitle) r1 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r3 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.equals : $r3 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r4 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.equals : $r4 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z2 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r3, $r4)
org.jfree.chart.title.LegendTitle.equals : $z2 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r3, $r4) >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z2 != 0
org.jfree.chart.title.LegendTitle.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.title.LegendTitle.equals : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r6 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.title.LegendTitle.equals : $r6 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $r5 == $r6
org.jfree.chart.title.LegendTitle.equals : if $r5 == $r6 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r7 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendTitle.equals : $r7 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r8 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendTitle.equals : $r8 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $r7 == $r8
org.jfree.chart.title.LegendTitle.equals : if $r7 == $r8 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r9 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.title.LegendTitle.equals : $r9 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r10 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.title.LegendTitle.equals : $r10 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $r9 == $r10
org.jfree.chart.title.LegendTitle.equals : if $r9 == $r10 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r11 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.equals : $r11 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r12 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.equals : $r12 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z3 = virtualinvoke $r11.<java.awt.Font: boolean equals(java.lang.Object)>($r12)
org.jfree.chart.title.LegendTitle.equals : $z3 = virtualinvoke $r11.<java.awt.Font: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z3 != 0
org.jfree.chart.title.LegendTitle.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r13 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.equals : $r13 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r14 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.equals : $r14 = r2.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z4 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14)
org.jfree.chart.title.LegendTitle.equals : $z4 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z4 != 0
org.jfree.chart.title.LegendTitle.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r15 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.equals : $r15 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r16 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.equals : $r16 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z5 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16)
org.jfree.chart.title.LegendTitle.equals : $z5 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : if r1 != r0
org.jfree.chart.block.FlowArrangement.equals : if r1 != r0 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $z0 = r1 instanceof org.jfree.chart.block.FlowArrangement
org.jfree.chart.block.FlowArrangement.equals : $z0 = r1 instanceof org.jfree.chart.block.FlowArrangement >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : if $z0 != 0
org.jfree.chart.block.FlowArrangement.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : r2 = (org.jfree.chart.block.FlowArrangement) r1
org.jfree.chart.block.FlowArrangement.equals : r2 = (org.jfree.chart.block.FlowArrangement) r1 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $r3 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.block.FlowArrangement.equals : $r3 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $r4 = r2.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.block.FlowArrangement.equals : $r4 = r2.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : if $r3 == $r4
org.jfree.chart.block.FlowArrangement.equals : if $r3 == $r4 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $r5 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.equals : $r5 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $r6 = r2.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.equals : $r6 = r2.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : if $r5 == $r6
org.jfree.chart.block.FlowArrangement.equals : if $r5 == $r6 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $d0 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.equals : $d0 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $d1 = r2.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.equals : $d1 = r2.<org.jfree.chart.block.FlowArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.block.FlowArrangement.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : if $b0 == 0
org.jfree.chart.block.FlowArrangement.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $d2 = r0.<org.jfree.chart.block.FlowArrangement: double verticalGap>
org.jfree.chart.block.FlowArrangement.equals : $d2 = r0.<org.jfree.chart.block.FlowArrangement: double verticalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $d3 = r2.<org.jfree.chart.block.FlowArrangement: double verticalGap>
org.jfree.chart.block.FlowArrangement.equals : $d3 = r2.<org.jfree.chart.block.FlowArrangement: double verticalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : $b1 = $d2 cmpl $d3
org.jfree.chart.block.FlowArrangement.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : if $b1 == 0
org.jfree.chart.block.FlowArrangement.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.equals : return 1
org.jfree.chart.block.FlowArrangement.equals : return 1 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z5 != 0
org.jfree.chart.title.LegendTitle.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r17 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout>
org.jfree.chart.title.LegendTitle.equals : $r17 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r18 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout>
org.jfree.chart.title.LegendTitle.equals : $r18 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z6 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18)
org.jfree.chart.title.LegendTitle.equals : $z6 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : if r1 != r0
org.jfree.chart.block.ColumnArrangement.equals : if r1 != r0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $z0 = r1 instanceof org.jfree.chart.block.ColumnArrangement
org.jfree.chart.block.ColumnArrangement.equals : $z0 = r1 instanceof org.jfree.chart.block.ColumnArrangement >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : if $z0 != 0
org.jfree.chart.block.ColumnArrangement.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : r2 = (org.jfree.chart.block.ColumnArrangement) r1
org.jfree.chart.block.ColumnArrangement.equals : r2 = (org.jfree.chart.block.ColumnArrangement) r1 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $r3 = r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.block.ColumnArrangement.equals : $r3 = r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $r4 = r2.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.block.ColumnArrangement.equals : $r4 = r2.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : if $r3 == $r4
org.jfree.chart.block.ColumnArrangement.equals : if $r3 == $r4 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $r5 = r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.ColumnArrangement.equals : $r5 = r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $r6 = r2.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.ColumnArrangement.equals : $r6 = r2.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : if $r5 == $r6
org.jfree.chart.block.ColumnArrangement.equals : if $r5 == $r6 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $d0 = r0.<org.jfree.chart.block.ColumnArrangement: double horizontalGap>
org.jfree.chart.block.ColumnArrangement.equals : $d0 = r0.<org.jfree.chart.block.ColumnArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $d1 = r2.<org.jfree.chart.block.ColumnArrangement: double horizontalGap>
org.jfree.chart.block.ColumnArrangement.equals : $d1 = r2.<org.jfree.chart.block.ColumnArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $b0 = $d0 cmpl $d1
org.jfree.chart.block.ColumnArrangement.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : if $b0 == 0
org.jfree.chart.block.ColumnArrangement.equals : if $b0 == 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $d2 = r0.<org.jfree.chart.block.ColumnArrangement: double verticalGap>
org.jfree.chart.block.ColumnArrangement.equals : $d2 = r0.<org.jfree.chart.block.ColumnArrangement: double verticalGap> >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $d3 = r2.<org.jfree.chart.block.ColumnArrangement: double verticalGap>
org.jfree.chart.block.ColumnArrangement.equals : $d3 = r2.<org.jfree.chart.block.ColumnArrangement: double verticalGap> >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : $b1 = $d2 cmpl $d3
org.jfree.chart.block.ColumnArrangement.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : if $b1 == 0
org.jfree.chart.block.ColumnArrangement.equals : if $b1 == 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.equals : return 1
org.jfree.chart.block.ColumnArrangement.equals : return 1 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z6 != 0
org.jfree.chart.title.LegendTitle.equals : if $z6 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r19 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.equals : $r19 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $r20 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.equals : $r20 = r2.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder> >>>>>>>> org.jfree.chart.title.LegendTitle.equals : $z7 = virtualinvoke $r19.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r20)
org.jfree.chart.title.LegendTitle.equals : $z7 = virtualinvoke $r19.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.jfree.chart.title.LegendTitle.equals : if $z7 != 0
org.jfree.chart.title.LegendTitle.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.title.LegendTitle.equals : return 1
org.jfree.chart.title.LegendTitle.equals : return 1 >>>>>>>> org.jfree.chart.title.LegendTitle.getSources : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.getSources : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.getSources : return $r1
org.jfree.chart.title.LegendTitle.getSources : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if r1 != r0
org.jfree.chart.plot.XYPlot.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.XYPlot >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z0 != 0
org.jfree.chart.plot.XYPlot.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : r2 = (org.jfree.chart.plot.XYPlot) r1
org.jfree.chart.plot.XYPlot.equals : r2 = (org.jfree.chart.plot.XYPlot) r1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $i1 = r0.<org.jfree.chart.plot.XYPlot: int weight>
org.jfree.chart.plot.XYPlot.equals : $i1 = r0.<org.jfree.chart.plot.XYPlot: int weight> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $i2 = r2.<org.jfree.chart.plot.XYPlot: int weight>
org.jfree.chart.plot.XYPlot.equals : $i2 = r2.<org.jfree.chart.plot.XYPlot: int weight> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $i1 == $i2
org.jfree.chart.plot.XYPlot.equals : if $i1 == $i2 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.equals : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r4 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.equals : $r4 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $r3 == $r4
org.jfree.chart.plot.XYPlot.equals : if $r3 == $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.equals : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r6 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.equals : $r6 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z1 = virtualinvoke $r5.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.plot.XYPlot.equals : $z1 = virtualinvoke $r5.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z1 != 0
org.jfree.chart.plot.XYPlot.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r7 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.equals : $r7 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r8 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.equals : $r8 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z2 = virtualinvoke $r7.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.plot.XYPlot.equals : $z2 = virtualinvoke $r7.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z2 != 0
org.jfree.chart.plot.XYPlot.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z3 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.equals : $z3 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z4 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.equals : $z4 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z3 == $z4
org.jfree.chart.plot.XYPlot.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z5 = r0.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z5 = r0.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z6 = r2.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z6 = r2.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z5 == $z6
org.jfree.chart.plot.XYPlot.equals : if $z5 == $z6 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z7 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z7 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z8 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z8 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z7 == $z8
org.jfree.chart.plot.XYPlot.equals : if $z7 == $z8 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z9 = r0.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z9 = r0.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z10 = r2.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z10 = r2.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z9 == $z10
org.jfree.chart.plot.XYPlot.equals : if $z9 == $z10 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z11 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z11 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z12 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.plot.XYPlot.equals : $z12 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z11 == $z12
org.jfree.chart.plot.XYPlot.equals : if $z11 == $z12 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z13 = r0.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.equals : $z13 = r0.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z14 = r2.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.equals : $z14 = r2.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z13 == $z14
org.jfree.chart.plot.XYPlot.equals : if $z13 == $z14 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z15 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.equals : $z15 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z16 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.equals : $z16 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z15 == $z16
org.jfree.chart.plot.XYPlot.equals : if $z15 == $z16 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z17 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible>
org.jfree.chart.plot.XYPlot.equals : $z17 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z18 = r2.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible>
org.jfree.chart.plot.XYPlot.equals : $z18 = r2.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z17 == $z18
org.jfree.chart.plot.XYPlot.equals : if $z17 == $z18 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $d0 = r0.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue>
org.jfree.chart.plot.XYPlot.equals : $d0 = r0.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $d1 = r2.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue>
org.jfree.chart.plot.XYPlot.equals : $d1 = r2.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $b3 = $d0 cmpl $d1
org.jfree.chart.plot.XYPlot.equals : $b3 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $b3 == 0
org.jfree.chart.plot.XYPlot.equals : if $b3 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z19 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.equals : $z19 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z20 = r2.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.equals : $z20 = r2.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z19 == $z20
org.jfree.chart.plot.XYPlot.equals : if $z19 == $z20 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z21 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible>
org.jfree.chart.plot.XYPlot.equals : $z21 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z22 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible>
org.jfree.chart.plot.XYPlot.equals : $z22 = r2.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z21 == $z22
org.jfree.chart.plot.XYPlot.equals : if $z21 == $z22 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $d2 = r0.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue>
org.jfree.chart.plot.XYPlot.equals : $d2 = r0.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $d3 = r2.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue>
org.jfree.chart.plot.XYPlot.equals : $d3 = r2.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $b4 = $d2 cmpl $d3
org.jfree.chart.plot.XYPlot.equals : $b4 = $d2 cmpl $d3 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $b4 == 0
org.jfree.chart.plot.XYPlot.equals : if $b4 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.XYPlot.equals : $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r10 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.XYPlot.equals : $r10 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z23 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.plot.XYPlot.equals : $z23 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z23 != 0
org.jfree.chart.plot.XYPlot.equals : if $z23 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r11 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.equals : $r11 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r12 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.equals : $r12 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z24 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12)
org.jfree.chart.plot.XYPlot.equals : $z24 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z24 != 0
org.jfree.chart.plot.XYPlot.equals : if $z24 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r13 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.equals : $r13 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r14 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.equals : $r14 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z25 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)
org.jfree.chart.plot.XYPlot.equals : $z25 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z25 != 0
org.jfree.chart.plot.XYPlot.equals : if $z25 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r15 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.equals : $r15 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r16 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.equals : $r16 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z26 = virtualinvoke $r15.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r16)
org.jfree.chart.plot.XYPlot.equals : $z26 = virtualinvoke $r15.<org.jfree.util.ObjectList: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z26 != 0
org.jfree.chart.plot.XYPlot.equals : if $z26 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.equals : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r18 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.equals : $r18 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z27 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)
org.jfree.chart.plot.XYPlot.equals : $z27 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z27 != 0
org.jfree.chart.plot.XYPlot.equals : if $z27 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r19 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.equals : $r19 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r20 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.equals : $r20 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z28 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)
org.jfree.chart.plot.XYPlot.equals : $z28 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z28 != 0
org.jfree.chart.plot.XYPlot.equals : if $z28 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r22 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r22 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z29 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r21, $r22)
org.jfree.chart.plot.XYPlot.equals : $z29 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r21, $r22) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z29 != 0
org.jfree.chart.plot.XYPlot.equals : if $z29 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r23 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r23 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r24 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r24 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z30 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r23, $r24)
org.jfree.chart.plot.XYPlot.equals : $z30 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r23, $r24) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z30 != 0
org.jfree.chart.plot.XYPlot.equals : if $z30 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r25 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r25 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r26 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r26 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z31 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r25, $r26)
org.jfree.chart.plot.XYPlot.equals : $z31 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r25, $r26) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z31 != 0
org.jfree.chart.plot.XYPlot.equals : if $z31 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r27 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r27 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r28 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r28 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z32 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r27, $r28)
org.jfree.chart.plot.XYPlot.equals : $z32 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r27, $r28) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z32 != 0
org.jfree.chart.plot.XYPlot.equals : if $z32 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r29 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r29 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r30 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r30 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z33 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r30)
org.jfree.chart.plot.XYPlot.equals : $z33 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z33 != 0
org.jfree.chart.plot.XYPlot.equals : if $z33 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r31 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r31 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r32 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r32 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z34 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r31, $r32)
org.jfree.chart.plot.XYPlot.equals : $z34 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r31, $r32) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z34 != 0
org.jfree.chart.plot.XYPlot.equals : if $z34 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r33 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r33 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r34 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.XYPlot.equals : $r34 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z35 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r34)
org.jfree.chart.plot.XYPlot.equals : $z35 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r34) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z35 != 0
org.jfree.chart.plot.XYPlot.equals : if $z35 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r35 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r35 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r36 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint>
org.jfree.chart.plot.XYPlot.equals : $r36 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeMinorGridlinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z36 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r35, $r36)
org.jfree.chart.plot.XYPlot.equals : $z36 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r35, $r36) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z36 != 0
org.jfree.chart.plot.XYPlot.equals : if $z36 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r37 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.equals : $r37 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r38 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.equals : $r38 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z37 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r37, $r38)
org.jfree.chart.plot.XYPlot.equals : $z37 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r37, $r38) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z37 != 0
org.jfree.chart.plot.XYPlot.equals : if $z37 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r39 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.equals : $r39 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r40 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.equals : $r40 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z38 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r39, $r40)
org.jfree.chart.plot.XYPlot.equals : $z38 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r39, $r40) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z38 != 0
org.jfree.chart.plot.XYPlot.equals : if $z38 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r41 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.equals : $r41 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r42 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint>
org.jfree.chart.plot.XYPlot.equals : $r42 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeZeroBaselinePaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z39 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r41, $r42)
org.jfree.chart.plot.XYPlot.equals : $z39 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r41, $r42) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z39 != 0
org.jfree.chart.plot.XYPlot.equals : if $z39 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r43 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.equals : $r43 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r44 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.equals : $r44 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z40 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r43, $r44)
org.jfree.chart.plot.XYPlot.equals : $z40 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r43, $r44) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z40 != 0
org.jfree.chart.plot.XYPlot.equals : if $z40 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r45 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke>
org.jfree.chart.plot.XYPlot.equals : $r45 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r46 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke>
org.jfree.chart.plot.XYPlot.equals : $r46 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z41 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r45, $r46)
org.jfree.chart.plot.XYPlot.equals : $z41 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r45, $r46) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z41 != 0
org.jfree.chart.plot.XYPlot.equals : if $z41 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r47 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint>
org.jfree.chart.plot.XYPlot.equals : $r47 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r48 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint>
org.jfree.chart.plot.XYPlot.equals : $r48 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z42 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r47, $r48)
org.jfree.chart.plot.XYPlot.equals : $z42 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r47, $r48) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z42 != 0
org.jfree.chart.plot.XYPlot.equals : if $z42 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r49 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke>
org.jfree.chart.plot.XYPlot.equals : $r49 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r50 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke>
org.jfree.chart.plot.XYPlot.equals : $r50 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeCrosshairStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z43 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r49, $r50)
org.jfree.chart.plot.XYPlot.equals : $z43 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r49, $r50) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z43 != 0
org.jfree.chart.plot.XYPlot.equals : if $z43 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r51 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint>
org.jfree.chart.plot.XYPlot.equals : $r51 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r52 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint>
org.jfree.chart.plot.XYPlot.equals : $r52 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeCrosshairPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z44 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r51, $r52)
org.jfree.chart.plot.XYPlot.equals : $z44 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r51, $r52) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z44 != 0
org.jfree.chart.plot.XYPlot.equals : if $z44 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r53 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r53 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r54 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r54 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z45 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r53, $r54)
org.jfree.chart.plot.XYPlot.equals : $z45 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r53, $r54) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z45 != 0
org.jfree.chart.plot.XYPlot.equals : if $z45 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r55 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r55 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r56 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r56 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z46 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r55, $r56)
org.jfree.chart.plot.XYPlot.equals : $z46 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r55, $r56) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z46 != 0
org.jfree.chart.plot.XYPlot.equals : if $z46 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r57 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r57 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r58 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r58 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z47 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r57, $r58)
org.jfree.chart.plot.XYPlot.equals : $z47 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r57, $r58) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z47 != 0
org.jfree.chart.plot.XYPlot.equals : if $z47 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r59 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r59 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r60 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r60 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z48 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r59, $r60)
org.jfree.chart.plot.XYPlot.equals : $z48 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r59, $r60) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z48 != 0
org.jfree.chart.plot.XYPlot.equals : if $z48 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r61 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r61 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r62 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r62 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z49 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r61, $r62)
org.jfree.chart.plot.XYPlot.equals : $z49 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r61, $r62) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z49 != 0
org.jfree.chart.plot.XYPlot.equals : if $z49 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r63 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r63 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r64 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.equals : $r64 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z50 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r63, $r64)
org.jfree.chart.plot.XYPlot.equals : $z50 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r63, $r64) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z50 != 0
org.jfree.chart.plot.XYPlot.equals : if $z50 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r65 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r65 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r66 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r66 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z51 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r65, $r66)
org.jfree.chart.plot.XYPlot.equals : $z51 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r65, $r66) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z51 != 0
org.jfree.chart.plot.XYPlot.equals : if $z51 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r67 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r67 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r68 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.equals : $r68 = r2.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z52 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r67, $r68)
org.jfree.chart.plot.XYPlot.equals : $z52 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r67, $r68) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z52 != 0
org.jfree.chart.plot.XYPlot.equals : if $z52 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r69 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.equals : $r69 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r70 = r2.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.equals : $r70 = r2.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z53 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r69, $r70)
org.jfree.chart.plot.XYPlot.equals : $z53 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r69, $r70) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z53 != 0
org.jfree.chart.plot.XYPlot.equals : if $z53 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r71 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.XYPlot.equals : $r71 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r72 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.XYPlot.equals : $r72 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z54 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r71, $r72)
org.jfree.chart.plot.XYPlot.equals : $z54 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r71, $r72) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z54 != 0
org.jfree.chart.plot.XYPlot.equals : if $z54 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r73 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint>
org.jfree.chart.plot.XYPlot.equals : $r73 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r74 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint>
org.jfree.chart.plot.XYPlot.equals : $r74 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z55 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r73, $r74)
org.jfree.chart.plot.XYPlot.equals : $z55 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r73, $r74) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z55 != 0
org.jfree.chart.plot.XYPlot.equals : if $z55 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r75 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint>
org.jfree.chart.plot.XYPlot.equals : $r75 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r76 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint>
org.jfree.chart.plot.XYPlot.equals : $r76 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z56 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r75, $r76)
org.jfree.chart.plot.XYPlot.equals : $z56 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r75, $r76) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z56 != 0
org.jfree.chart.plot.XYPlot.equals : if $z56 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r77 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin>
org.jfree.chart.plot.XYPlot.equals : $r77 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r78 = r2.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin>
org.jfree.chart.plot.XYPlot.equals : $r78 = r2.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z57 = virtualinvoke $r77.<java.awt.geom.Point2D: boolean equals(java.lang.Object)>($r78)
org.jfree.chart.plot.XYPlot.equals : $z57 = virtualinvoke $r77.<java.awt.geom.Point2D: boolean equals(java.lang.Object)>($r78) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z57 != 0
org.jfree.chart.plot.XYPlot.equals : if $z57 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : i0 = 0
org.jfree.chart.plot.XYPlot.equals : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if i0 >= 4
org.jfree.chart.plot.XYPlot.equals : if i0 >= 4 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r79 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.equals : $r79 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r80 = $r79[i0]
org.jfree.chart.plot.XYPlot.equals : $r80 = $r79[i0] >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r81 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.equals : $r81 = r2.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r82 = $r81[i0]
org.jfree.chart.plot.XYPlot.equals : $r82 = $r81[i0] >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z58 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r80, $r82)
org.jfree.chart.plot.XYPlot.equals : $z58 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r80, $r82) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z58 != 0
org.jfree.chart.plot.XYPlot.equals : if $z58 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.equals : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.equals : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r83 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.XYPlot.equals : $r83 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $r84 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.XYPlot.equals : $r84 = r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z59 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r83, $r84)
org.jfree.chart.plot.XYPlot.equals : $z59 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r83, $r84) >>>>>>>> org.jfree.chart.plot.XYPlot.equals : if $z59 != 0
org.jfree.chart.plot.XYPlot.equals : if $z59 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : $z60 = specialinvoke r0.<org.jfree.chart.plot.Plot: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.equals : $z60 = specialinvoke r0.<org.jfree.chart.plot.Plot: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.equals : if r1 != r0
org.jfree.chart.plot.Plot.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z0 = r1 instanceof org.jfree.chart.plot.Plot
org.jfree.chart.plot.Plot.equals : $z0 = r1 instanceof org.jfree.chart.plot.Plot >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z0 != 0
org.jfree.chart.plot.Plot.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : r2 = (org.jfree.chart.plot.Plot) r1
org.jfree.chart.plot.Plot.equals : r2 = (org.jfree.chart.plot.Plot) r1 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r3 = r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage>
org.jfree.chart.plot.Plot.equals : $r3 = r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r4 = r2.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage>
org.jfree.chart.plot.Plot.equals : $r4 = r2.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.chart.plot.Plot.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z1 != 0
org.jfree.chart.plot.Plot.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont>
org.jfree.chart.plot.Plot.equals : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r6 = r2.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont>
org.jfree.chart.plot.Plot.equals : $r6 = r2.<org.jfree.chart.plot.Plot: java.awt.Font noDataMessageFont> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.chart.plot.Plot.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z2 != 0
org.jfree.chart.plot.Plot.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r7 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint>
org.jfree.chart.plot.Plot.equals : $r7 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r8 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint>
org.jfree.chart.plot.Plot.equals : $r8 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint noDataMessagePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8)
org.jfree.chart.plot.Plot.equals : $z3 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r7, $r8) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z3 != 0
org.jfree.chart.plot.Plot.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r9 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.equals : $r9 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r10 = r2.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.equals : $r10 = r2.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.chart.plot.Plot.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z4 != 0
org.jfree.chart.plot.Plot.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z5 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.equals : $z5 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z6 = r2.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.equals : $z6 = r2.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z5 == $z6
org.jfree.chart.plot.Plot.equals : if $z5 == $z6 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r11 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.equals : $r11 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r12 = r2.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.equals : $r12 = r2.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z7 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12)
org.jfree.chart.plot.Plot.equals : $z7 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z7 != 0
org.jfree.chart.plot.Plot.equals : if $z7 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r13 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.equals : $r13 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r14 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.equals : $r14 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z8 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14)
org.jfree.chart.plot.Plot.equals : $z8 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r13, $r14) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z8 != 0
org.jfree.chart.plot.Plot.equals : if $z8 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r15 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.equals : $r15 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r16 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.equals : $r16 = r2.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z9 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16)
org.jfree.chart.plot.Plot.equals : $z9 = staticinvoke <org.jfree.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>($r15, $r16) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z9 != 0
org.jfree.chart.plot.Plot.equals : if $z9 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r17 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.plot.Plot.equals : $r17 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r18 = r2.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.plot.Plot.equals : $r18 = r2.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)
org.jfree.chart.plot.Plot.equals : $z10 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z10 != 0
org.jfree.chart.plot.Plot.equals : if $z10 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $i0 = r0.<org.jfree.chart.plot.Plot: int backgroundImageAlignment>
org.jfree.chart.plot.Plot.equals : $i0 = r0.<org.jfree.chart.plot.Plot: int backgroundImageAlignment> >>>>>>>> org.jfree.chart.plot.Plot.equals : $i1 = r2.<org.jfree.chart.plot.Plot: int backgroundImageAlignment>
org.jfree.chart.plot.Plot.equals : $i1 = r2.<org.jfree.chart.plot.Plot: int backgroundImageAlignment> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $i0 == $i1
org.jfree.chart.plot.Plot.equals : if $i0 == $i1 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f0 = r0.<org.jfree.chart.plot.Plot: float backgroundImageAlpha>
org.jfree.chart.plot.Plot.equals : $f0 = r0.<org.jfree.chart.plot.Plot: float backgroundImageAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f1 = r2.<org.jfree.chart.plot.Plot: float backgroundImageAlpha>
org.jfree.chart.plot.Plot.equals : $f1 = r2.<org.jfree.chart.plot.Plot: float backgroundImageAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b2 = $f0 cmpl $f1
org.jfree.chart.plot.Plot.equals : $b2 = $f0 cmpl $f1 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b2 == 0
org.jfree.chart.plot.Plot.equals : if $b2 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f2 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.equals : $f2 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f3 = r2.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.equals : $f3 = r2.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b3 = $f2 cmpl $f3
org.jfree.chart.plot.Plot.equals : $b3 = $f2 cmpl $f3 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b3 == 0
org.jfree.chart.plot.Plot.equals : if $b3 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $f4 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.equals : $f4 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $f5 = r2.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.equals : $f5 = r2.<org.jfree.chart.plot.Plot: float backgroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.equals : $b4 = $f4 cmpl $f5
org.jfree.chart.plot.Plot.equals : $b4 = $f4 cmpl $f5 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $b4 == 0
org.jfree.chart.plot.Plot.equals : if $b4 == 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $r19 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.equals : $r19 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.equals : $r20 = r2.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.equals : $r20 = r2.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z11 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20)
org.jfree.chart.plot.Plot.equals : $z11 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if r1 != r0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z0 = r1 instanceof org.jfree.chart.plot.DefaultDrawingSupplier
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z0 = r1 instanceof org.jfree.chart.plot.DefaultDrawingSupplier >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z0 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : r2 = (org.jfree.chart.plot.DefaultDrawingSupplier) r1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : r2 = (org.jfree.chart.plot.DefaultDrawingSupplier) r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r4 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r4 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z1 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i1 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i1 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i0 == $i1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i0 == $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r5 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r6 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r6 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] outlinePaintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z2 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i3 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i3 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlinePaintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i2 == $i3
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i2 == $i3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r7 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r7 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r8 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r8 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z3 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z3 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i4 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i4 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i5 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i5 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i4 == $i5
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i4 == $i5 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r9 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r10 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r10 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] outlineStrokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r9, $r10)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r9, $r10) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z4 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z4 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i6 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i7 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i7 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int outlineStrokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i6 == $i7
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i6 == $i7 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r11 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r12 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $r12 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z5 = specialinvoke r0.<org.jfree.chart.plot.DefaultDrawingSupplier: boolean equalShapes(java.awt.Shape[],java.awt.Shape[])>($r11, $r12)
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $z5 = specialinvoke r0.<org.jfree.chart.plot.DefaultDrawingSupplier: boolean equalShapes(java.awt.Shape[],java.awt.Shape[])>($r11, $r12) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r1 != null
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r1 != null >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r2 != null
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if r2 != null >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i1 = lengthof r1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i1 = lengthof r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i2 = lengthof r2
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i2 = lengthof r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $i1 == $i2
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $i1 == $i2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = 0
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i3 = lengthof r1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $i3 = lengthof r1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if i0 >= $i3
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if i0 >= $i3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r3 = r1[i0]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r3 = r1[i0] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r4 = r2[i0]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $r4 = r2[i0] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $z1 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r3, $r4)
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : $z1 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r3, $r4) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $z1 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = i0 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : goto [?= $i3 = lengthof r1]
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : goto [?= $i3 = lengthof r1] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : return 1
org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes : return 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z5 != 0
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $z5 != 0 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i8 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i9 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.equals : $i9 = r2.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i8 == $i9
org.jfree.chart.plot.DefaultDrawingSupplier.equals : if $i8 == $i9 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.equals : return 1
org.jfree.chart.plot.DefaultDrawingSupplier.equals : return 1 >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z11 != 0
org.jfree.chart.plot.Plot.equals : if $z11 != 0 >>>>>>>> org.jfree.chart.plot.Plot.equals : $z12 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.equals : $z12 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.equals : $z13 = r2.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.equals : $z13 = r2.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.equals : if $z12 == $z13
org.jfree.chart.plot.Plot.equals : if $z12 == $z13 >>>>>>>> org.jfree.chart.plot.Plot.equals : return 1
org.jfree.chart.plot.Plot.equals : return 1 >>>>>>>> org.jfree.chart.plot.XYPlot.equals : return $z60
