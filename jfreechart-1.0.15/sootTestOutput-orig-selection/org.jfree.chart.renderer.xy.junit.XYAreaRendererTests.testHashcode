org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if r1 != r0
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if r1 != r0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.xy.XYAreaRenderer
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.xy.XYAreaRenderer >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z0 != 0
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : r2 = (org.jfree.chart.renderer.xy.XYAreaRenderer) r1
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : r2 = (org.jfree.chart.renderer.xy.XYAreaRenderer) r1 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z1 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z1 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z2 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z2 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z1 == $z2
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z1 == $z2 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z3 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z3 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z4 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z4 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z3 == $z4
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z3 == $z4 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z5 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z5 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z6 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z6 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z5 == $z6
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z5 == $z6 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z7 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z7 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z8 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z8 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z7 == $z8
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z7 == $z8 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z9 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z9 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z10 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z10 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z9 == $z10
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z9 == $z10 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $r3 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.ui.GradientPaintTransformer gradientTransformer>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $r3 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.ui.GradientPaintTransformer gradientTransformer> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $r4 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.ui.GradientPaintTransformer gradientTransformer>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $r4 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.ui.GradientPaintTransformer gradientTransformer> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z11 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z11 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z11 != 0
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z11 != 0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $r5 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $r5 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $r6 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea>
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $r6 = r2.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z12 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r5, $r6)
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : $z12 = staticinvoke <org.jfree.util.ShapeUtilities: boolean equal(java.awt.Shape,java.awt.Shape)>($r5, $r6) >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z12 != 0
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : if $z12 != 0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.equals : return 1
org.jfree.chart.renderer.xy.XYAreaRenderer.equals : return 1 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i0 = specialinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: int hashCode()>()
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i0 = specialinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: int hashCode()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : s0 = 193
org.jfree.chart.renderer.AbstractRenderer.hashCode : s0 = 193 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i1 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.BooleanList)>(s0, $r1)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i1 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.BooleanList)>(s0, $r1) >>>>>>>> org.jfree.chart.HashUtilities.hashCode : if r0 != null
org.jfree.chart.HashUtilities.hashCode : if r0 != null >>>>>>>> org.jfree.chart.HashUtilities.hashCode : b1 = 127
org.jfree.chart.HashUtilities.hashCode : b1 = 127 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : i2 = virtualinvoke r0.<org.jfree.util.BooleanList: int size()>()
org.jfree.chart.HashUtilities.hashCode : i2 = virtualinvoke r0.<org.jfree.util.BooleanList: int size()>() >>>>>>>> org.jfree.chart.HashUtilities.hashCode : i3 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,int)>(b1, i2)
org.jfree.chart.HashUtilities.hashCode : i3 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,int)>(b1, i2) >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i2 = 37 * i0
org.jfree.chart.HashUtilities.hashCode : $i2 = 37 * i0 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i3 = $i2 + i1
org.jfree.chart.HashUtilities.hashCode : $i3 = $i2 + i1 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : return $i3
org.jfree.chart.HashUtilities.hashCode : return $i3 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : if i2 <= 0
org.jfree.chart.HashUtilities.hashCode : if i2 <= 0 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i6 = 37 * i0
org.jfree.chart.HashUtilities.hashCode : $i6 = 37 * i0 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i7 = $i6 + i3
org.jfree.chart.HashUtilities.hashCode : $i7 = $i6 + i3 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : return $i7
org.jfree.chart.HashUtilities.hashCode : return $i7 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i2 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i1, $z0)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i2 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i1, $z0) >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i1 = 37 * i0
org.jfree.chart.HashUtilities.hashCode : $i1 = 37 * i0 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : if z0 == 0
org.jfree.chart.HashUtilities.hashCode : if z0 == 0 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $b2 = 0
org.jfree.chart.HashUtilities.hashCode : $b2 = 0 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : goto [?= $i3 = $i1 + $b2]
org.jfree.chart.HashUtilities.hashCode : goto [?= $i3 = $i1 + $b2] >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i3 = $i1 + $b2
org.jfree.chart.HashUtilities.hashCode : $i3 = $i1 + $b2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i3 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.BooleanList)>(i2, $r2)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i3 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.BooleanList)>(i2, $r2) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $z1 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $z1 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i4 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i3, $z1)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i4 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i3, $z1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i5 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.PaintList)>(i4, $r3)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i5 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.PaintList)>(i4, $r3) >>>>>>>> org.jfree.chart.HashUtilities.hashCode : i2 = virtualinvoke r0.<org.jfree.util.PaintList: int size()>()
org.jfree.chart.HashUtilities.hashCode : i2 = virtualinvoke r0.<org.jfree.util.PaintList: int size()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i6 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Paint)>(i5, $r4)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i6 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Paint)>(i5, $r4) >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i2 = staticinvoke <org.jfree.chart.HashUtilities: int hashCodeForPaint(java.awt.Paint)>(r0)
org.jfree.chart.HashUtilities.hashCode : $i2 = staticinvoke <org.jfree.chart.HashUtilities: int hashCodeForPaint(java.awt.Paint)>(r0) >>>>>>>> org.jfree.chart.HashUtilities.hashCodeForPaint : if r0 != null
org.jfree.chart.HashUtilities.hashCodeForPaint : if r0 != null >>>>>>>> org.jfree.chart.HashUtilities.hashCodeForPaint : $z0 = r0 instanceof java.awt.GradientPaint
org.jfree.chart.HashUtilities.hashCodeForPaint : $z0 = r0 instanceof java.awt.GradientPaint >>>>>>>> org.jfree.chart.HashUtilities.hashCodeForPaint : if $z0 == 0
org.jfree.chart.HashUtilities.hashCodeForPaint : if $z0 == 0 >>>>>>>> org.jfree.chart.HashUtilities.hashCodeForPaint : i12 = virtualinvoke r0.<java.lang.Object: int hashCode()>()
org.jfree.chart.HashUtilities.hashCodeForPaint : i12 = virtualinvoke r0.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.chart.HashUtilities.hashCodeForPaint : return i12
org.jfree.chart.HashUtilities.hashCodeForPaint : return i12 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i3 = $i1 + $i2
org.jfree.chart.HashUtilities.hashCode : $i3 = $i1 + $i2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r5 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r5 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i7 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.PaintList)>(i6, $r5)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i7 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.PaintList)>(i6, $r5) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r6 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r6 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseFillPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i8 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Paint)>(i7, $r6)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i8 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Paint)>(i7, $r6) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r7 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r7 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i9 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.PaintList)>(i8, $r7)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i9 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.PaintList)>(i8, $r7) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r8 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r8 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i10 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Paint)>(i9, $r8)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i10 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Paint)>(i9, $r8) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r9 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r9 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i11 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.StrokeList)>(i10, $r9)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i11 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.StrokeList)>(i10, $r9) >>>>>>>> org.jfree.chart.HashUtilities.hashCode : i2 = virtualinvoke r0.<org.jfree.util.StrokeList: int size()>()
org.jfree.chart.HashUtilities.hashCode : i2 = virtualinvoke r0.<org.jfree.util.StrokeList: int size()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r10 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r10 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i12 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Stroke)>(i11, $r10)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i12 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Stroke)>(i11, $r10) >>>>>>>> org.jfree.chart.HashUtilities.hashCode : if r0 == null
org.jfree.chart.HashUtilities.hashCode : if r0 == null >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i2 = virtualinvoke r0.<java.lang.Object: int hashCode()>()
org.jfree.chart.HashUtilities.hashCode : $i2 = virtualinvoke r0.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.chart.HashUtilities.hashCode : goto [?= i1 = $i2]
org.jfree.chart.HashUtilities.hashCode : goto [?= i1 = $i2] >>>>>>>> org.jfree.chart.HashUtilities.hashCode : i1 = $i2
org.jfree.chart.HashUtilities.hashCode : i1 = $i2 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i3 = 37 * i0
org.jfree.chart.HashUtilities.hashCode : $i3 = 37 * i0 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $i4 = $i3 + i1
org.jfree.chart.HashUtilities.hashCode : $i4 = $i3 + i1 >>>>>>>> org.jfree.chart.HashUtilities.hashCode : return $i4
org.jfree.chart.HashUtilities.hashCode : return $i4 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r11 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r11 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i13 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.StrokeList)>(i12, $r11)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i13 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.StrokeList)>(i12, $r11) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r12 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r12 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i14 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Stroke)>(i13, $r12)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i14 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.awt.Stroke)>(i13, $r12) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r13 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r13 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i15 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.BooleanList)>(i14, $r13)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i15 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,org.jfree.util.BooleanList)>(i14, $r13) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : $r14 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.hashCode : $r14 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : i16 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.lang.Comparable)>(i15, $r14)
org.jfree.chart.renderer.AbstractRenderer.hashCode : i16 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,java.lang.Comparable)>(i15, $r14) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.hashCode : return i16
org.jfree.chart.renderer.AbstractRenderer.hashCode : return i16 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : $z0 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea>
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : $z0 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i1 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i0, $z0)
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i1 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i0, $z0) >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : $z1 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines>
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : $z1 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i2 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i1, $z1)
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i2 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i1, $z1) >>>>>>>> org.jfree.chart.HashUtilities.hashCode : $b2 = 1
org.jfree.chart.HashUtilities.hashCode : $b2 = 1 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : $z2 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes>
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : $z2 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i3 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i2, $z2)
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i3 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i2, $z2) >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : $z3 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint>
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : $z3 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i4 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i3, $z3)
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : i4 = staticinvoke <org.jfree.chart.HashUtilities: int hashCode(int,boolean)>(i3, $z3) >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : return i4
org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode : return i4 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> = z0
org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> = z0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>()
