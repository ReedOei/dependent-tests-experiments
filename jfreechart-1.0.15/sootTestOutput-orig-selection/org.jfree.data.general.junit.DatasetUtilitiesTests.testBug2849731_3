org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.xy.XYIntervalSeries.add : $r1 = new org.jfree.data.xy.XYIntervalDataItem
org.jfree.data.xy.XYIntervalSeries.add : $r1 = new org.jfree.data.xy.XYIntervalDataItem >>>>>>>> org.jfree.data.xy.XYIntervalSeries.add : specialinvoke $r1.<org.jfree.data.xy.XYIntervalDataItem: void <init>(double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5)
org.jfree.data.xy.XYIntervalSeries.add : specialinvoke $r1.<org.jfree.data.xy.XYIntervalDataItem: void <init>(double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5) >>>>>>>> org.jfree.data.xy.XYIntervalSeries.add : specialinvoke r0.<org.jfree.data.ComparableObjectSeries: void add(org.jfree.data.ComparableObjectItem,boolean)>($r1, 1)
org.jfree.data.xy.XYIntervalSeries.add : specialinvoke r0.<org.jfree.data.ComparableObjectSeries: void add(org.jfree.data.ComparableObjectItem,boolean)>($r1, 1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.ComparableObjectSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $z1 = r0.<org.jfree.data.ComparableObjectSeries: boolean autoSort>
org.jfree.data.ComparableObjectSeries.add : $z1 = r0.<org.jfree.data.ComparableObjectSeries: boolean autoSort> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $z1 == 0
org.jfree.data.ComparableObjectSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r2 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r2 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.data.ComparableObjectSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i0 >= 0
org.jfree.data.ComparableObjectSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r3 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r3 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i2 = neg i0
org.jfree.data.ComparableObjectSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i3 = $i2 - 1
org.jfree.data.ComparableObjectSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>($i3, r1)
org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>($i3, r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)]
org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()]
org.jfree.data.ComparableObjectSeries.add : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()
org.jfree.data.ComparableObjectSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.getItemCount : $r1 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.getItemCount : $r1 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.ComparableObjectSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.getItemCount : return $i0
org.jfree.data.ComparableObjectSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i8 = r0.<org.jfree.data.ComparableObjectSeries: int maximumItemCount>
org.jfree.data.ComparableObjectSeries.add : $i8 = r0.<org.jfree.data.ComparableObjectSeries: int maximumItemCount> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $i7 <= $i8
org.jfree.data.ComparableObjectSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if z0 == 0
org.jfree.data.ComparableObjectSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: void fireSeriesChanged()>()
org.jfree.data.ComparableObjectSeries.add : virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYIntervalSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYIntervalSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.xy.XYIntervalSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, 1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, 1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : return $i0
org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r1 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r1 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i1 >= i0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i1) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: org.jfree.data.xy.XYIntervalSeries getSeries(int)>(i0)
org.jfree.data.xy.XYIntervalSeriesCollection.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: org.jfree.data.xy.XYIntervalSeries getSeries(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : if i0 < 0
org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : if i0 < $i1
org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : if i0 < $i1 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : $r4 = (org.jfree.data.xy.XYIntervalSeries) $r3
org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : $r4 = (org.jfree.data.xy.XYIntervalSeries) $r3 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : return $r4
org.jfree.data.xy.XYIntervalSeriesCollection.getSeries : return $r4 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getItemCount : $i1 = virtualinvoke $r1.<org.jfree.data.xy.XYIntervalSeries: int getItemCount()>()
org.jfree.data.xy.XYIntervalSeriesCollection.getItemCount : $i1 = virtualinvoke $r1.<org.jfree.data.xy.XYIntervalSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getItemCount : return $i1
org.jfree.data.xy.XYIntervalSeriesCollection.getItemCount : return $i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i3 = 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i3 >= i2
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d2 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getYValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d2 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getYValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : r1 = (org.jfree.data.xy.XYIntervalSeries) $r3
org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : r1 = (org.jfree.data.xy.XYIntervalSeries) $r3 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalSeries: double getYValue(int)>(i1)
org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalSeries: double getYValue(int)>(i1) >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0)
org.jfree.data.xy.XYIntervalSeries.getYValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getDataItem : $r1 = specialinvoke r0.<org.jfree.data.ComparableObjectSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0)
org.jfree.data.xy.XYIntervalSeries.getDataItem : $r1 = specialinvoke r0.<org.jfree.data.ComparableObjectSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0) >>>>>>>> org.jfree.data.ComparableObjectSeries.getDataItem : $r1 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.getDataItem : $r1 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.getDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.ComparableObjectSeries.getDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.ComparableObjectSeries.getDataItem : $r3 = (org.jfree.data.ComparableObjectItem) $r2
org.jfree.data.ComparableObjectSeries.getDataItem : $r3 = (org.jfree.data.ComparableObjectItem) $r2 >>>>>>>> org.jfree.data.ComparableObjectSeries.getDataItem : return $r3
org.jfree.data.ComparableObjectSeries.getDataItem : return $r3 >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getDataItem : return $r1
org.jfree.data.xy.XYIntervalSeries.getDataItem : return $r1 >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYValue : r1 = (org.jfree.data.xy.XYIntervalDataItem) $r2
org.jfree.data.xy.XYIntervalSeries.getYValue : r1 = (org.jfree.data.xy.XYIntervalDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalDataItem: double getYValue()>()
org.jfree.data.xy.XYIntervalSeries.getYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalDataItem: double getYValue()>() >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalDataItem: java.lang.Object getObject()>()
org.jfree.data.xy.XYIntervalDataItem.getYValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalDataItem: java.lang.Object getObject()>() >>>>>>>> org.jfree.data.ComparableObjectItem.getObject : $r1 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj>
org.jfree.data.ComparableObjectItem.getObject : $r1 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj> >>>>>>>> org.jfree.data.ComparableObjectItem.getObject : return $r1
org.jfree.data.ComparableObjectItem.getObject : return $r1 >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYValue : r1 = (org.jfree.data.xy.XYInterval) $r2
org.jfree.data.xy.XYIntervalDataItem.getYValue : r1 = (org.jfree.data.xy.XYInterval) $r2 >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYValue : if r1 == null
org.jfree.data.xy.XYIntervalDataItem.getYValue : if r1 == null >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYInterval: double getY()>()
org.jfree.data.xy.XYIntervalDataItem.getYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYInterval: double getY()>() >>>>>>>> org.jfree.data.xy.XYInterval.getY : $d0 = r0.<org.jfree.data.xy.XYInterval: double y>
org.jfree.data.xy.XYInterval.getY : $d0 = r0.<org.jfree.data.xy.XYInterval: double y> >>>>>>>> org.jfree.data.xy.XYInterval.getY : return $d0
org.jfree.data.xy.XYInterval.getY : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYValue : return $d0
org.jfree.data.xy.XYIntervalDataItem.getYValue : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYValue : return $d0
org.jfree.data.xy.XYIntervalSeries.getYValue : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : return $d0
org.jfree.data.xy.XYIntervalSeriesCollection.getYValue : return $d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d3 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d3 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : r1 = (org.jfree.data.xy.XYIntervalSeries) $r3
org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : r1 = (org.jfree.data.xy.XYIntervalSeries) $r3 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalSeries: double getYLowValue(int)>(i1)
org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalSeries: double getYLowValue(int)>(i1) >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYLowValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0)
org.jfree.data.xy.XYIntervalSeries.getYLowValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYLowValue : r1 = (org.jfree.data.xy.XYIntervalDataItem) $r2
org.jfree.data.xy.XYIntervalSeries.getYLowValue : r1 = (org.jfree.data.xy.XYIntervalDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYLowValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalDataItem: double getYLowValue()>()
org.jfree.data.xy.XYIntervalSeries.getYLowValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalDataItem: double getYLowValue()>() >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYLowValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalDataItem: java.lang.Object getObject()>()
org.jfree.data.xy.XYIntervalDataItem.getYLowValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalDataItem: java.lang.Object getObject()>() >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYLowValue : r1 = (org.jfree.data.xy.XYInterval) $r2
org.jfree.data.xy.XYIntervalDataItem.getYLowValue : r1 = (org.jfree.data.xy.XYInterval) $r2 >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYLowValue : if r1 == null
org.jfree.data.xy.XYIntervalDataItem.getYLowValue : if r1 == null >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYLowValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYInterval: double getYLow()>()
org.jfree.data.xy.XYIntervalDataItem.getYLowValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYInterval: double getYLow()>() >>>>>>>> org.jfree.data.xy.XYInterval.getYLow : $d0 = r0.<org.jfree.data.xy.XYInterval: double yLow>
org.jfree.data.xy.XYInterval.getYLow : $d0 = r0.<org.jfree.data.xy.XYInterval: double yLow> >>>>>>>> org.jfree.data.xy.XYInterval.getYLow : return $d0
org.jfree.data.xy.XYInterval.getYLow : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYLowValue : return $d0
org.jfree.data.xy.XYIntervalDataItem.getYLowValue : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYLowValue : return $d0
org.jfree.data.xy.XYIntervalSeries.getYLowValue : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : return $d0
org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue : return $d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d4 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getEndYValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d4 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getEndYValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : r1 = (org.jfree.data.xy.XYIntervalSeries) $r3
org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : r1 = (org.jfree.data.xy.XYIntervalSeries) $r3 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalSeries: double getYHighValue(int)>(i1)
org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalSeries: double getYHighValue(int)>(i1) >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYHighValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0)
org.jfree.data.xy.XYIntervalSeries.getYHighValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYHighValue : r1 = (org.jfree.data.xy.XYIntervalDataItem) $r2
org.jfree.data.xy.XYIntervalSeries.getYHighValue : r1 = (org.jfree.data.xy.XYIntervalDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYHighValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalDataItem: double getYHighValue()>()
org.jfree.data.xy.XYIntervalSeries.getYHighValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYIntervalDataItem: double getYHighValue()>() >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYHighValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalDataItem: java.lang.Object getObject()>()
org.jfree.data.xy.XYIntervalDataItem.getYHighValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalDataItem: java.lang.Object getObject()>() >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYHighValue : r1 = (org.jfree.data.xy.XYInterval) $r2
org.jfree.data.xy.XYIntervalDataItem.getYHighValue : r1 = (org.jfree.data.xy.XYInterval) $r2 >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYHighValue : if r1 == null
org.jfree.data.xy.XYIntervalDataItem.getYHighValue : if r1 == null >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYHighValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYInterval: double getYHigh()>()
org.jfree.data.xy.XYIntervalDataItem.getYHighValue : $d0 = virtualinvoke r1.<org.jfree.data.xy.XYInterval: double getYHigh()>() >>>>>>>> org.jfree.data.xy.XYInterval.getYHigh : $d0 = r0.<org.jfree.data.xy.XYInterval: double yHigh>
org.jfree.data.xy.XYInterval.getYHigh : $d0 = r0.<org.jfree.data.xy.XYInterval: double yHigh> >>>>>>>> org.jfree.data.xy.XYInterval.getYHigh : return $d0
org.jfree.data.xy.XYInterval.getYHigh : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalDataItem.getYHighValue : return $d0
org.jfree.data.xy.XYIntervalDataItem.getYHighValue : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalSeries.getYHighValue : return $d0
org.jfree.data.xy.XYIntervalSeries.getYHighValue : return $d0 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : return $d0
org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : return $d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z2 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z2 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z3 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z4 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i3 = i3 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = i1 + 1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= $b10 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= $b10 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b10 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b10 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b10 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b10 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r3 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r3 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : specialinvoke $r3.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : specialinvoke $r3.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r3
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r3 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r1 >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.data.ComparableObjectItem.compareTo : $z0 = r1 instanceof org.jfree.data.ComparableObjectItem
org.jfree.data.ComparableObjectItem.compareTo : $z0 = r1 instanceof org.jfree.data.ComparableObjectItem >>>>>>>> org.jfree.data.ComparableObjectItem.compareTo : if $z0 == 0
org.jfree.data.ComparableObjectItem.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.ComparableObjectItem.compareTo : r2 = (org.jfree.data.ComparableObjectItem) r1
org.jfree.data.ComparableObjectItem.compareTo : r2 = (org.jfree.data.ComparableObjectItem) r1 >>>>>>>> org.jfree.data.ComparableObjectItem.compareTo : $r3 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x>
org.jfree.data.ComparableObjectItem.compareTo : $r3 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x> >>>>>>>> org.jfree.data.ComparableObjectItem.compareTo : $r4 = r2.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x>
org.jfree.data.ComparableObjectItem.compareTo : $r4 = r2.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x> >>>>>>>> org.jfree.data.ComparableObjectItem.compareTo : $i1 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4)
org.jfree.data.ComparableObjectItem.compareTo : $i1 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.ComparableObjectItem.compareTo : return $i1
org.jfree.data.ComparableObjectItem.compareTo : return $i1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $z2 = r0.<org.jfree.data.ComparableObjectSeries: boolean allowDuplicateXValues>
org.jfree.data.ComparableObjectSeries.add : $z2 = r0.<org.jfree.data.ComparableObjectSeries: boolean allowDuplicateXValues> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $z2 == 0
org.jfree.data.ComparableObjectSeries.add : if $z2 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r4 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r4 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : i1 = interfaceinvoke $r4.<java.util.List: int size()>()
org.jfree.data.ComparableObjectSeries.add : i1 = interfaceinvoke $r4.<java.util.List: int size()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i0 >= i1
org.jfree.data.ComparableObjectSeries.add : if i0 >= i1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r5 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r5 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.ComparableObjectSeries.add : $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i4 = virtualinvoke r1.<org.jfree.data.ComparableObjectItem: int compareTo(java.lang.Object)>($r6)
org.jfree.data.ComparableObjectSeries.add : $i4 = virtualinvoke r1.<org.jfree.data.ComparableObjectItem: int compareTo(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $i4 != 0
org.jfree.data.ComparableObjectSeries.add : if $i4 != 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : i0 = i0 + 1
org.jfree.data.ComparableObjectSeries.add : i0 = i0 + 1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r7 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r7 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i5 = interfaceinvoke $r7.<java.util.List: int size()>()
org.jfree.data.ComparableObjectSeries.add : $i5 = interfaceinvoke $r7.<java.util.List: int size()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i0 >= $i5
org.jfree.data.ComparableObjectSeries.add : if i0 >= $i5 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r9 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r9 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.Series.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.data.general.Series.notifyListeners : if $r4 != class "org/jfree/data/general/SeriesChangeListener"
org.jfree.data.general.Series.notifyListeners : if $r4 != class "org/jfree/data/general/SeriesChangeListener" >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.Series.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r5 = r2[$i2]
org.jfree.data.general.Series.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r6 = (org.jfree.data.general.SeriesChangeListener) $r5
org.jfree.data.general.Series.notifyListeners : $r6 = (org.jfree.data.general.SeriesChangeListener) $r5 >>>>>>>> org.jfree.data.general.Series.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.SeriesChangeListener: void seriesChanged(org.jfree.data.general.SeriesChangeEvent)>(r1)
org.jfree.data.general.Series.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.SeriesChangeListener: void seriesChanged(org.jfree.data.general.SeriesChangeEvent)>(r1) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.seriesChanged : virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: void fireDatasetChanged()>()
org.jfree.data.general.AbstractSeriesDataset.seriesChanged : virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = i0 + -2
org.jfree.data.general.Series.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : goto [?= (branch)]
org.jfree.data.general.Series.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3)
