org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : return $l4
org.jfree.data.time.Day.getFirstMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : return $l4
org.jfree.data.time.Day.getLastMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : l0 = virtualinvoke r0.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond()>()
org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : l0 = virtualinvoke r0.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Day: long firstMillisecond>
org.jfree.data.time.Day.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Day: long firstMillisecond> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : return $l0
org.jfree.data.time.Day.getFirstMillisecond : return $l0 >>>>>>>> org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : l1 = virtualinvoke r0.<org.jfree.data.time.RegularTimePeriod: long getLastMillisecond()>()
org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : l1 = virtualinvoke r0.<org.jfree.data.time.RegularTimePeriod: long getLastMillisecond()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $l0 = r0.<org.jfree.data.time.Day: long lastMillisecond>
org.jfree.data.time.Day.getLastMillisecond : $l0 = r0.<org.jfree.data.time.Day: long lastMillisecond> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : return $l0
org.jfree.data.time.Day.getLastMillisecond : return $l0 >>>>>>>> org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : $l2 = l1 - l0
org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : $l2 = l1 - l0 >>>>>>>> org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : $l3 = $l2 / 2L
org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : $l3 = $l2 / 2L >>>>>>>> org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : $l4 = l0 + $l3
org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : $l4 = l0 + $l3 >>>>>>>> org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : return $l4
org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.next : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.next : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.next : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int toSerial()>()
org.jfree.data.time.Day.next : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int toSerial()>() >>>>>>>> org.jfree.data.time.Day.next : if i0 >= 2958465
org.jfree.data.time.Day.next : if i0 >= 2958465 >>>>>>>> org.jfree.data.time.Day.next : $i1 = i0 + 1
org.jfree.data.time.Day.next : $i1 = i0 + 1 >>>>>>>> org.jfree.data.time.Day.next : r1 = staticinvoke <org.jfree.date.SerialDate: org.jfree.date.SerialDate createInstance(int)>($i1)
org.jfree.data.time.Day.next : r1 = staticinvoke <org.jfree.date.SerialDate: org.jfree.date.SerialDate createInstance(int)>($i1) >>>>>>>> org.jfree.data.time.Day.next : $r3 = new org.jfree.data.time.Day
org.jfree.data.time.Day.next : $r3 = new org.jfree.data.time.Day >>>>>>>> org.jfree.data.time.Day.next : specialinvoke $r3.<org.jfree.data.time.Day: void <init>(org.jfree.date.SerialDate)>(r1)
org.jfree.data.time.Day.next : specialinvoke $r3.<org.jfree.data.time.Day: void <init>(org.jfree.date.SerialDate)>(r1) >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Day.next : return $r3
org.jfree.data.time.Day.next : return $r3 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : i0 = lengthof r0
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : i0 = lengthof r0 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r2 = new java.util.ArrayList
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r2 = new java.util.ArrayList >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0)
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : r1 = $r2
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : r1 = $r2 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : i1 = 0
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : i1 = 0 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : if i1 >= i0
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : if i1 >= i0 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r3 = new java.lang.StringBuilder
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r3 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Series ")
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Series ") >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $i2 = i1 + 1
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $i2 = i1 + 1 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : i1 = i1 + 1
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : goto [?= (branch)]
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : return r1
org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray : return r1 >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.WindDataItem
org.jfree.data.xy.WindDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.WindDataItem >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : if $z0 == 0
org.jfree.data.xy.WindDataItem.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : r2 = (org.jfree.data.xy.WindDataItem) r1
org.jfree.data.xy.WindDataItem.compareTo : r2 = (org.jfree.data.xy.WindDataItem) r1 >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.WindDataItem: java.lang.Number x>
org.jfree.data.xy.WindDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.WindDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.WindDataItem.compareTo : $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $r4 = r2.<org.jfree.data.xy.WindDataItem: java.lang.Number x>
org.jfree.data.xy.WindDataItem.compareTo : $r4 = r2.<org.jfree.data.xy.WindDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.WindDataItem.compareTo : $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $b0 = $d0 cmpl $d1
org.jfree.data.xy.WindDataItem.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : if $b0 <= 0
org.jfree.data.xy.WindDataItem.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : return 1
org.jfree.data.xy.WindDataItem.compareTo : return 1 >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $r5 = r0.<org.jfree.data.xy.WindDataItem: java.lang.Number x>
org.jfree.data.xy.WindDataItem.compareTo : $r5 = r0.<org.jfree.data.xy.WindDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $r6 = r2.<org.jfree.data.xy.WindDataItem: java.lang.Number x>
org.jfree.data.xy.WindDataItem.compareTo : $r6 = r2.<org.jfree.data.xy.WindDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.data.xy.WindDataItem.compareTo : $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : if $z1 == 0
org.jfree.data.xy.WindDataItem.compareTo : if $z1 == 0 >>>>>>>> org.jfree.data.xy.WindDataItem.compareTo : return 0
org.jfree.data.xy.WindDataItem.compareTo : return 0 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : if i0 < 0
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : if i0 < 0 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultWindDataset: int getSeriesCount()>()
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultWindDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultWindDataset: java.util.List allSeriesData>
org.jfree.data.xy.DefaultWindDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultWindDataset: java.util.List allSeriesData> >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.DefaultWindDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesCount : return $i0
org.jfree.data.xy.DefaultWindDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : if i0 < $i1
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : if i0 < $i1 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r6 = r0.<org.jfree.data.xy.DefaultWindDataset: java.util.List seriesKeys>
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r6 = r0.<org.jfree.data.xy.DefaultWindDataset: java.util.List seriesKeys> >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r8 = (java.lang.Comparable) $r7
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r8 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : return $r8
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : return $r8 >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r2 = new java.lang.IllegalArgumentException
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r1 = new java.lang.StringBuilder
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r1 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid series index: ")
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid series index: ") >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)
org.jfree.data.xy.DefaultWindDataset.getSeriesKey : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5) >>>>>>>> org.jfree.data.xy.DefaultWindDataset.getSeriesKey : throw $r2
