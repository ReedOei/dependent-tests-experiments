org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.time.TimeSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.time.TimeSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : if i0 < 0
org.jfree.data.time.TimeSeriesCollection.getSeries : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: int getSeriesCount()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : return $i0
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : if i0 < $i1
org.jfree.data.time.TimeSeriesCollection.getSeries : if i0 < $i1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r2 = new java.lang.IllegalArgumentException
org.jfree.data.time.TimeSeriesCollection.getSeries : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r1 = new java.lang.StringBuilder
org.jfree.data.time.TimeSeriesCollection.getSeries : $r1 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The \'series\' argument is out of bounds (")
org.jfree.data.time.TimeSeriesCollection.getSeries : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The \'series\' argument is out of bounds (") >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.jfree.data.time.TimeSeriesCollection.getSeries : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").")
org.jfree.data.time.TimeSeriesCollection.getSeries : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").") >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6)
org.jfree.data.time.TimeSeriesCollection.getSeries : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : throw $r2
