org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r3 = new java.lang.Double >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r4 = new java.lang.Double
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r4 = new java.lang.Double >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : specialinvoke $r4.<java.lang.Double: void <init>(double)>(d1)
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : specialinvoke $r4.<java.lang.Double: void <init>(double)>(d1) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r5 = new java.lang.Double
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r5 = new java.lang.Double >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : specialinvoke $r5.<java.lang.Double: void <init>(double)>(d2)
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : specialinvoke $r5.<java.lang.Double: void <init>(double)>(d2) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : virtualinvoke r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: void addItem(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r3, $r4, $r5, r1, r2)
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : virtualinvoke r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: void addItem(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r3, $r4, $r5, r1, r2) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r6 = new org.jfree.data.general.junit.IntervalDataItem
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r6 = new org.jfree.data.general.junit.IntervalDataItem >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : specialinvoke $r6.<org.jfree.data.general.junit.IntervalDataItem: void <init>(java.lang.Number,java.lang.Number,java.lang.Number)>(r1, r2, r3)
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : specialinvoke $r6.<org.jfree.data.general.junit.IntervalDataItem: void <init>(java.lang.Number,java.lang.Number,java.lang.Number)>(r1, r2, r3) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : r7 = $r6
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : r7 = $r6 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r8 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : $r8 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : virtualinvoke $r8.<org.jfree.data.KeyedObjects2D: void addObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)>(r7, r4, r5)
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : virtualinvoke $r8.<org.jfree.data.KeyedObjects2D: void addObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)>(r7, r4, r5) >>>>>>>> org.jfree.data.KeyedObjects2D.addObject : virtualinvoke r0.<org.jfree.data.KeyedObjects2D: void setObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.KeyedObjects2D.addObject : virtualinvoke r0.<org.jfree.data.KeyedObjects2D: void setObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "rowKey")
org.jfree.data.KeyedObjects2D.setObject : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "rowKey") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "columnKey")
org.jfree.data.KeyedObjects2D.setObject : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "columnKey") >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r5 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.setObject : $r5 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : i0 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>(r2)
org.jfree.data.KeyedObjects2D.setObject : i0 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : if i0 < 0
org.jfree.data.KeyedObjects2D.setObject : if i0 < 0 >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r8 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.setObject : $r8 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r9 = new org.jfree.data.KeyedObjects
org.jfree.data.KeyedObjects2D.setObject : $r9 = new org.jfree.data.KeyedObjects >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : specialinvoke $r9.<org.jfree.data.KeyedObjects: void <init>()>()
org.jfree.data.KeyedObjects2D.setObject : specialinvoke $r9.<org.jfree.data.KeyedObjects: void <init>()>() >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : r4 = $r9
org.jfree.data.KeyedObjects2D.setObject : r4 = $r9 >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r10 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows>
org.jfree.data.KeyedObjects2D.setObject : $r10 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : virtualinvoke r4.<org.jfree.data.KeyedObjects: void setObject(java.lang.Comparable,java.lang.Object)>(r3, r1)
org.jfree.data.KeyedObjects2D.setObject : virtualinvoke r4.<org.jfree.data.KeyedObjects: void setObject(java.lang.Comparable,java.lang.Object)>(r3, r1) >>>>>>>> org.jfree.data.KeyedObjects.setObject : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.KeyedObjects.setObject : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.KeyedObjects.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.KeyedObjects.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.KeyedObjects.getIndex : i0 = 0
org.jfree.data.KeyedObjects.getIndex : i0 = 0 >>>>>>>> org.jfree.data.KeyedObjects.getIndex : $r4 = r0.<org.jfree.data.KeyedObjects: java.util.List data>
org.jfree.data.KeyedObjects.getIndex : $r4 = r0.<org.jfree.data.KeyedObjects: java.util.List data> >>>>>>>> org.jfree.data.KeyedObjects.getIndex : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.KeyedObjects.getIndex : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.KeyedObjects.getIndex : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.KeyedObjects.getIndex : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.KeyedObjects.getIndex : if $z0 == 0
org.jfree.data.KeyedObjects.getIndex : if $z0 == 0 >>>>>>>> org.jfree.data.KeyedObjects.getIndex : return -1
org.jfree.data.KeyedObjects.getIndex : return -1 >>>>>>>> org.jfree.data.KeyedObjects.setObject : if i0 < 0
org.jfree.data.KeyedObjects.setObject : if i0 < 0 >>>>>>>> org.jfree.data.KeyedObjects.setObject : $r6 = new org.jfree.data.KeyedObject
org.jfree.data.KeyedObjects.setObject : $r6 = new org.jfree.data.KeyedObject >>>>>>>> org.jfree.data.KeyedObjects.setObject : specialinvoke $r6.<org.jfree.data.KeyedObject: void <init>(java.lang.Comparable,java.lang.Object)>(r1, r2)
org.jfree.data.KeyedObjects.setObject : specialinvoke $r6.<org.jfree.data.KeyedObject: void <init>(java.lang.Comparable,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.data.KeyedObjects.setObject : r7 = $r6
org.jfree.data.KeyedObjects.setObject : r7 = $r6 >>>>>>>> org.jfree.data.KeyedObjects.setObject : $r8 = r0.<org.jfree.data.KeyedObjects: java.util.List data>
org.jfree.data.KeyedObjects.setObject : $r8 = r0.<org.jfree.data.KeyedObjects: java.util.List data> >>>>>>>> org.jfree.data.KeyedObjects.setObject : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7)
org.jfree.data.KeyedObjects.setObject : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r11 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.setObject : $r11 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : i1 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.KeyedObjects2D.setObject : i1 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : if i1 >= 0
org.jfree.data.KeyedObjects2D.setObject : if i1 >= 0 >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r12 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.setObject : $r12 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : virtualinvoke r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.general.junit.TestIntervalCategoryDataset.addItem : virtualinvoke r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r0, 1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r0, 1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.general.junit.TestIntervalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: int getRowCount()>()
org.jfree.data.general.junit.TestIntervalCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: int getRowCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.getRowCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.KeyedObjects2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : return $i0
org.jfree.data.KeyedObjects2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getRowCount : return $i0
org.jfree.data.general.junit.TestIntervalCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.general.junit.TestIntervalCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: int getColumnCount()>()
org.jfree.data.general.junit.TestIntervalCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: int getColumnCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.getColumnCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.KeyedObjects2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : return $i0
org.jfree.data.KeyedObjects2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getColumnCount : return $i0
org.jfree.data.general.junit.TestIntervalCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z1 = r0 instanceof org.jfree.data.category.IntervalCategoryDataset
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z1 = r0 instanceof org.jfree.data.category.IntervalCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r1 = (org.jfree.data.category.IntervalCategoryDataset) r0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r1 = (org.jfree.data.category.IntervalCategoryDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i2 = 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i2 >= i0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i2 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i3 = 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i3 >= i1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i3 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r2 = interfaceinvoke r1.<org.jfree.data.category.IntervalCategoryDataset: java.lang.Number getValue(int,int)>(i2, i3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r2 = interfaceinvoke r1.<org.jfree.data.category.IntervalCategoryDataset: java.lang.Number getValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : $r2 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : $r2 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : $r3 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: java.lang.Object getObject(int,int)>(i0, i1)
org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : $r3 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: java.lang.Object getObject(int,int)>(i0, i1) >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : r1 = null
org.jfree.data.KeyedObjects2D.getObject : r1 = null >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : $r4 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows>
org.jfree.data.KeyedObjects2D.getObject : $r4 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows> >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.KeyedObjects2D.getObject : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : r2 = (org.jfree.data.KeyedObjects) $r5
org.jfree.data.KeyedObjects2D.getObject : r2 = (org.jfree.data.KeyedObjects) $r5 >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : if r2 == null
org.jfree.data.KeyedObjects2D.getObject : if r2 == null >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : $r6 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.getObject : $r6 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.KeyedObjects2D.getObject : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : r3 = (java.lang.Comparable) $r7
org.jfree.data.KeyedObjects2D.getObject : r3 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : if r3 == null
org.jfree.data.KeyedObjects2D.getObject : if r3 == null >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : i2 = virtualinvoke r2.<org.jfree.data.KeyedObjects: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.KeyedObjects2D.getObject : i2 = virtualinvoke r2.<org.jfree.data.KeyedObjects: int getIndex(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.KeyedObjects.getIndex : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.KeyedObjects.getIndex : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.KeyedObjects.getIndex : r3 = (org.jfree.data.KeyedObject) $r5
org.jfree.data.KeyedObjects.getIndex : r3 = (org.jfree.data.KeyedObject) $r5 >>>>>>>> org.jfree.data.KeyedObjects.getIndex : $r6 = virtualinvoke r3.<org.jfree.data.KeyedObject: java.lang.Comparable getKey()>()
org.jfree.data.KeyedObjects.getIndex : $r6 = virtualinvoke r3.<org.jfree.data.KeyedObject: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.KeyedObject.getKey : $r1 = r0.<org.jfree.data.KeyedObject: java.lang.Comparable key>
org.jfree.data.KeyedObject.getKey : $r1 = r0.<org.jfree.data.KeyedObject: java.lang.Comparable key> >>>>>>>> org.jfree.data.KeyedObject.getKey : return $r1
org.jfree.data.KeyedObject.getKey : return $r1 >>>>>>>> org.jfree.data.KeyedObjects.getIndex : $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.data.KeyedObjects.getIndex : $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyedObjects.getIndex : if $z1 == 0
org.jfree.data.KeyedObjects.getIndex : if $z1 == 0 >>>>>>>> org.jfree.data.KeyedObjects.getIndex : return i0
org.jfree.data.KeyedObjects.getIndex : return i0 >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : if i2 < 0
org.jfree.data.KeyedObjects2D.getObject : if i2 < 0 >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : r1 = virtualinvoke r2.<org.jfree.data.KeyedObjects: java.lang.Object getObject(java.lang.Comparable)>(r3)
org.jfree.data.KeyedObjects2D.getObject : r1 = virtualinvoke r2.<org.jfree.data.KeyedObjects: java.lang.Object getObject(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.KeyedObjects.getObject : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.KeyedObjects.getObject : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.KeyedObjects.getObject : if i0 >= 0
org.jfree.data.KeyedObjects.getObject : if i0 >= 0 >>>>>>>> org.jfree.data.KeyedObjects.getObject : $r8 = virtualinvoke r0.<org.jfree.data.KeyedObjects: java.lang.Object getObject(int)>(i0)
org.jfree.data.KeyedObjects.getObject : $r8 = virtualinvoke r0.<org.jfree.data.KeyedObjects: java.lang.Object getObject(int)>(i0) >>>>>>>> org.jfree.data.KeyedObjects.getObject : r1 = null
org.jfree.data.KeyedObjects.getObject : r1 = null >>>>>>>> org.jfree.data.KeyedObjects.getObject : $r3 = r0.<org.jfree.data.KeyedObjects: java.util.List data>
org.jfree.data.KeyedObjects.getObject : $r3 = r0.<org.jfree.data.KeyedObjects: java.util.List data> >>>>>>>> org.jfree.data.KeyedObjects.getObject : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.KeyedObjects.getObject : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.KeyedObjects.getObject : r2 = (org.jfree.data.KeyedObject) $r4
org.jfree.data.KeyedObjects.getObject : r2 = (org.jfree.data.KeyedObject) $r4 >>>>>>>> org.jfree.data.KeyedObjects.getObject : if r2 == null
org.jfree.data.KeyedObjects.getObject : if r2 == null >>>>>>>> org.jfree.data.KeyedObjects.getObject : r1 = virtualinvoke r2.<org.jfree.data.KeyedObject: java.lang.Object getObject()>()
org.jfree.data.KeyedObjects.getObject : r1 = virtualinvoke r2.<org.jfree.data.KeyedObject: java.lang.Object getObject()>() >>>>>>>> org.jfree.data.KeyedObject.getObject : $r1 = r0.<org.jfree.data.KeyedObject: java.lang.Object object>
org.jfree.data.KeyedObject.getObject : $r1 = r0.<org.jfree.data.KeyedObject: java.lang.Object object> >>>>>>>> org.jfree.data.KeyedObject.getObject : return $r1
org.jfree.data.KeyedObject.getObject : return $r1 >>>>>>>> org.jfree.data.KeyedObjects.getObject : return r1
org.jfree.data.KeyedObjects.getObject : return r1 >>>>>>>> org.jfree.data.KeyedObjects.getObject : return $r8
org.jfree.data.KeyedObjects.getObject : return $r8 >>>>>>>> org.jfree.data.KeyedObjects2D.getObject : return r1
org.jfree.data.KeyedObjects2D.getObject : return r1 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : r1 = (org.jfree.data.general.junit.IntervalDataItem) $r3
org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : r1 = (org.jfree.data.general.junit.IntervalDataItem) $r3 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : if r1 != null
org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : if r1 != null >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : $r4 = virtualinvoke r1.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number getValue()>()
org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : $r4 = virtualinvoke r1.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.general.junit.IntervalDataItem.getValue : $r1 = r0.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number value>
org.jfree.data.general.junit.IntervalDataItem.getValue : $r1 = r0.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.general.junit.IntervalDataItem.getValue : return $r1
org.jfree.data.general.junit.IntervalDataItem.getValue : return $r1 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : return $r4
org.jfree.data.general.junit.TestIntervalCategoryDataset.getValue : return $r4 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if r2 == null
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if r2 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $d3 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $d3 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d2 = $d3
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d2 = $d3 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z2 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z2 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d2, d0)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d2, d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d2, d1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d2, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r3 = interfaceinvoke r1.<org.jfree.data.category.IntervalCategoryDataset: java.lang.Number getStartValue(int,int)>(i2, i3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r3 = interfaceinvoke r1.<org.jfree.data.category.IntervalCategoryDataset: java.lang.Number getStartValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : $r2 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : $r2 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : $r3 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: java.lang.Object getObject(int,int)>(i0, i1)
org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : $r3 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: java.lang.Object getObject(int,int)>(i0, i1) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : r1 = (org.jfree.data.general.junit.IntervalDataItem) $r3
org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : r1 = (org.jfree.data.general.junit.IntervalDataItem) $r3 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : if r1 != null
org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : if r1 != null >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : $r4 = virtualinvoke r1.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number getLowerBound()>()
org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : $r4 = virtualinvoke r1.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number getLowerBound()>() >>>>>>>> org.jfree.data.general.junit.IntervalDataItem.getLowerBound : $r1 = r0.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number lowerBound>
org.jfree.data.general.junit.IntervalDataItem.getLowerBound : $r1 = r0.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number lowerBound> >>>>>>>> org.jfree.data.general.junit.IntervalDataItem.getLowerBound : return $r1
org.jfree.data.general.junit.IntervalDataItem.getLowerBound : return $r1 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : return $r4
org.jfree.data.general.junit.TestIntervalCategoryDataset.getStartValue : return $r4 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if r3 == null
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if r3 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $d4 = virtualinvoke r3.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $d4 = virtualinvoke r3.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d5 = $d4
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d5 = $d4 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z3 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d5, d0)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d5, d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d5, d1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d5, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r4 = interfaceinvoke r1.<org.jfree.data.category.IntervalCategoryDataset: java.lang.Number getEndValue(int,int)>(i2, i3)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r4 = interfaceinvoke r1.<org.jfree.data.category.IntervalCategoryDataset: java.lang.Number getEndValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : $r2 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : $r2 = r0.<org.jfree.data.general.junit.TestIntervalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : $r3 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: java.lang.Object getObject(int,int)>(i0, i1)
org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : $r3 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: java.lang.Object getObject(int,int)>(i0, i1) >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : r1 = (org.jfree.data.general.junit.IntervalDataItem) $r3
org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : r1 = (org.jfree.data.general.junit.IntervalDataItem) $r3 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : if r1 != null
org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : if r1 != null >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : $r4 = virtualinvoke r1.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number getUpperBound()>()
org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : $r4 = virtualinvoke r1.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number getUpperBound()>() >>>>>>>> org.jfree.data.general.junit.IntervalDataItem.getUpperBound : $r1 = r0.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number upperBound>
org.jfree.data.general.junit.IntervalDataItem.getUpperBound : $r1 = r0.<org.jfree.data.general.junit.IntervalDataItem: java.lang.Number upperBound> >>>>>>>> org.jfree.data.general.junit.IntervalDataItem.getUpperBound : return $r1
org.jfree.data.general.junit.IntervalDataItem.getUpperBound : return $r1 >>>>>>>> org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : return $r4
org.jfree.data.general.junit.TestIntervalCategoryDataset.getEndValue : return $r4 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if r4 == null
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if r4 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $d6 = virtualinvoke r4.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $d6 = virtualinvoke r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d7 = $d6
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d7 = $d6 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d6)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d6) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z4 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d7, d0)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d7, d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d7, d1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d7, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i3 = i3 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i2 = i2 + 1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i2 = i2 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= $b6 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= $b6 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b6 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b6 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r6 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r6 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : specialinvoke $r6.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : specialinvoke $r6.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r6
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r6 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r1 >>>>>>>> org.jfree.data.Range.equals : $z0 = r1 instanceof org.jfree.data.Range
org.jfree.data.Range.equals : $z0 = r1 instanceof org.jfree.data.Range >>>>>>>> org.jfree.data.Range.equals : if $z0 != 0
org.jfree.data.Range.equals : if $z0 != 0 >>>>>>>> org.jfree.data.Range.equals : r2 = (org.jfree.data.Range) r1
org.jfree.data.Range.equals : r2 = (org.jfree.data.Range) r1 >>>>>>>> org.jfree.data.Range.equals : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.equals : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.equals : $d1 = r2.<org.jfree.data.Range: double lower>
org.jfree.data.Range.equals : $d1 = r2.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.equals : $b0 = $d0 cmpl $d1
org.jfree.data.Range.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.data.Range.equals : if $b0 == 0
org.jfree.data.Range.equals : if $b0 == 0 >>>>>>>> org.jfree.data.Range.equals : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.equals : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.equals : $d3 = r2.<org.jfree.data.Range: double upper>
org.jfree.data.Range.equals : $d3 = r2.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.equals : $b1 = $d2 cmpl $d3
org.jfree.data.Range.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.data.Range.equals : if $b1 == 0
org.jfree.data.Range.equals : if $b1 == 0 >>>>>>>> org.jfree.data.Range.equals : return 1
org.jfree.data.Range.equals : return 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return null
