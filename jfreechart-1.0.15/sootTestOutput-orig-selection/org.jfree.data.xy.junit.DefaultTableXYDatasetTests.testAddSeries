org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.setAutoWidth : $r1 = r0.<org.jfree.data.xy.DefaultTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate>
org.jfree.data.xy.DefaultTableXYDataset.setAutoWidth : $r1 = r0.<org.jfree.data.xy.DefaultTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.setAutoWidth : virtualinvoke $r1.<org.jfree.data.xy.IntervalXYDelegate: void setAutoWidth(boolean)>(z0)
org.jfree.data.xy.DefaultTableXYDataset.setAutoWidth : virtualinvoke $r1.<org.jfree.data.xy.IntervalXYDelegate: void setAutoWidth(boolean)>(z0) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.setAutoWidth : r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> = z0
org.jfree.data.xy.IntervalXYDelegate.setAutoWidth : r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> = z0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.setAutoWidth : if z0 == 0
org.jfree.data.xy.IntervalXYDelegate.setAutoWidth : if z0 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.setAutoWidth : $d0 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double recalculateInterval()>()
org.jfree.data.xy.IntervalXYDelegate.setAutoWidth : $d0 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double recalculateInterval()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : d0 = #Infinity
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : d0 = #Infinity >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i0 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i0 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data>
org.jfree.data.xy.DefaultTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.DefaultTableXYDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeriesCount : return $i0
org.jfree.data.xy.DefaultTableXYDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i1 = 0
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i1 = 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : if i1 >= i0
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : if i1 >= i0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : return d0
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : return d0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.setAutoWidth : r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> = $d0
org.jfree.data.xy.IntervalXYDelegate.setAutoWidth : r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> = $d0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.setAutoWidth : virtualinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: void fireDatasetChanged()>()
org.jfree.data.xy.DefaultTableXYDataset.setAutoWidth : virtualinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener"
org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener" >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2]
org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5
org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1)
org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $d0 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double recalculateInterval()>()
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $d0 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double recalculateInterval()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> = $d0
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> = $d0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)]
org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.xy.XYSeries.add : specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d1)
org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($r1, $r2, 1)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($r1, $r2, 1) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2)
org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.xy.XYSeries.add : r4 = $r3
org.jfree.data.xy.XYSeries.add : r4 = $r3 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0) >>>>>>>> org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>()
org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = null
org.jfree.data.xy.XYDataItem.clone : r1 = null >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : goto [?= return r1]
org.jfree.data.xy.XYDataItem.clone : goto [?= return r1] >>>>>>>> org.jfree.data.xy.XYDataItem.clone : return r1
org.jfree.data.xy.XYDataItem.clone : return r1 >>>>>>>> org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $z1 == 0
org.jfree.data.xy.XYSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3)
org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= 0
org.jfree.data.xy.XYSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $i2 = neg i0
org.jfree.data.xy.XYSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1
org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)]
org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)] >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)
org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : return $d0
org.jfree.data.xy.XYDataItem.getXValue : return $d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getY : return $r1
org.jfree.data.xy.XYDataItem.getY : return $r1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN
org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : if $r1 == null
org.jfree.data.xy.XYDataItem.getYValue : if $r1 == null >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getYValue : d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : return d0
org.jfree.data.xy.XYDataItem.getYValue : return d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d7 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d6, d1)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d7 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d6, d1) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minY> = $d7
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minY> = $d7 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d9 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d8, d1)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d9 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d8, d1) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxY> = $d9
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxY> = $d9 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : return $i0
org.jfree.data.xy.XYSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount>
org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $i7 <= $i8
org.jfree.data.xy.XYSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.xy.XYSeries.add : if z0 == 0
org.jfree.data.xy.XYSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>()
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $z0 == 0
org.jfree.data.xy.XYDataItem.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : r2 = (org.jfree.data.xy.XYDataItem) r1
org.jfree.data.xy.XYDataItem.compareTo : r2 = (org.jfree.data.xy.XYDataItem) r1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.compareTo : $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $r4 = virtualinvoke r2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYDataItem.compareTo : $r4 = virtualinvoke r2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getX : return $r1
org.jfree.data.xy.XYDataItem.getX : return $r1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $d2 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.compareTo : $d2 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : d0 = $d1 - $d2
org.jfree.data.xy.XYDataItem.compareTo : d0 = $d1 - $d2 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $b1 = d0 cmpl 0.0
org.jfree.data.xy.XYDataItem.compareTo : $b1 = d0 cmpl 0.0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $b1 <= 0
org.jfree.data.xy.XYDataItem.compareTo : if $b1 <= 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $b2 = d0 cmpg 0.0
org.jfree.data.xy.XYDataItem.compareTo : $b2 = d0 cmpg 0.0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $b2 >= 0
org.jfree.data.xy.XYDataItem.compareTo : if $b2 >= 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : b0 = -1
org.jfree.data.xy.XYDataItem.compareTo : b0 = -1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : goto [?= (branch)]
org.jfree.data.xy.XYDataItem.compareTo : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : goto [?= return b0]
org.jfree.data.xy.XYDataItem.compareTo : goto [?= return b0] >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : return b0
org.jfree.data.xy.XYDataItem.compareTo : return b0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z1 == 0
org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : return $d2
org.jfree.data.xy.XYSeries.minIgnoreNaN : return $d2 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z1 == 0
org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : return $d2
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return $d2 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.xy.DefaultTableXYDataset.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.addSeries : $z0 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: boolean getAllowDuplicateXValues()>()
org.jfree.data.xy.DefaultTableXYDataset.addSeries : $z0 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: boolean getAllowDuplicateXValues()>() >>>>>>>> org.jfree.data.xy.XYSeries.getAllowDuplicateXValues : $z0 = r0.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>
org.jfree.data.xy.XYSeries.getAllowDuplicateXValues : $z0 = r0.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues> >>>>>>>> org.jfree.data.xy.XYSeries.getAllowDuplicateXValues : return $z0
org.jfree.data.xy.XYSeries.getAllowDuplicateXValues : return $z0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.addSeries : if $z0 == 0
org.jfree.data.xy.DefaultTableXYDataset.addSeries : if $z0 == 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.addSeries : specialinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: void updateXPoints(org.jfree.data.xy.XYSeries)>(r1)
org.jfree.data.xy.DefaultTableXYDataset.addSeries : specialinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: void updateXPoints(org.jfree.data.xy.XYSeries)>(r1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r5 = new java.util.HashSet
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r5 = new java.util.HashSet >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r2 = $r5
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r2 = $r5 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : z0 = r0.<org.jfree.data.xy.DefaultTableXYDataset: boolean propagateEvents>
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : z0 = r0.<org.jfree.data.xy.DefaultTableXYDataset: boolean propagateEvents> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r0.<org.jfree.data.xy.DefaultTableXYDataset: boolean propagateEvents> = 0
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r0.<org.jfree.data.xy.DefaultTableXYDataset: boolean propagateEvents> = 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i0 = 0
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i0 = 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $i3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $i3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if i0 >= $i3
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if i0 >= $i3 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i0)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.getRawDataItem : $r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : return $r3
org.jfree.data.xy.XYSeries.getRawDataItem : return $r3 >>>>>>>> org.jfree.data.xy.XYSeries.getX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYSeries.getX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>() >>>>>>>> org.jfree.data.xy.XYSeries.getX : return $r2
org.jfree.data.xy.XYSeries.getX : return $r2 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r6 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.HashSet xPoints>
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r6 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.HashSet xPoints> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $z2 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $z2 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if $z2 != 0
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if $z2 != 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r7 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.HashSet xPoints>
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r7 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.HashSet xPoints> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r8 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data>
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r8 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i1 = interfaceinvoke $r8.<java.util.List: int size()>()
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i1 = interfaceinvoke $r8.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i2 = 0
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i2 = 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if i2 >= i1
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if i2 >= i1 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i0 = i0 + 1
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i0 = i0 + 1 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : goto [?= $i3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: int getItemCount()>()]
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : goto [?= $i3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: int getItemCount()>()] >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r11 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.HashSet xPoints>
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r11 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.HashSet xPoints> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r12 = virtualinvoke $r11.<java.util.HashSet: java.util.Iterator iterator()>()
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r12 = virtualinvoke $r11.<java.util.HashSet: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if $z5 == 0
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if $z5 == 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r14 = (java.lang.Number) $r13
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r14 = (java.lang.Number) $r13 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $z6 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r14)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $z6 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r14) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if $z6 != 0
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if $z6 != 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r0.<org.jfree.data.xy.DefaultTableXYDataset: boolean propagateEvents> = z0
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r0.<org.jfree.data.xy.DefaultTableXYDataset: boolean propagateEvents> = z0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.addSeries : $r3 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data>
org.jfree.data.xy.DefaultTableXYDataset.addSeries : $r3 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.addSeries : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.xy.DefaultTableXYDataset.addSeries : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.xy.DefaultTableXYDataset.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.addSeries : virtualinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: void fireDatasetChanged()>()
org.jfree.data.xy.DefaultTableXYDataset.addSeries : virtualinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : $d1 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double calculateIntervalForSeries(int)>(i1)
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : $d1 = specialinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double calculateIntervalForSeries(int)>(i1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = #Infinity
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = #Infinity >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i1 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i1 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: org.jfree.data.xy.XYSeries getSeries(int)>(i0)
org.jfree.data.xy.DefaultTableXYDataset.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: org.jfree.data.xy.XYSeries getSeries(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeries : if i0 < 0
org.jfree.data.xy.DefaultTableXYDataset.getSeries : if i0 < 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: int getSeriesCount()>()
org.jfree.data.xy.DefaultTableXYDataset.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultTableXYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeries : if i0 < $i1
org.jfree.data.xy.DefaultTableXYDataset.getSeries : if i0 < $i1 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeries : $r2 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data>
org.jfree.data.xy.DefaultTableXYDataset.getSeries : $r2 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultTableXYDataset.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeries : $r4 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.DefaultTableXYDataset.getSeries : $r4 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getSeries : return $r4
org.jfree.data.xy.DefaultTableXYDataset.getSeries : return $r4 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getItemCount : $i1 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.DefaultTableXYDataset.getItemCount : $i1 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getItemCount : return $i1
org.jfree.data.xy.DefaultTableXYDataset.getItemCount : return $i1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i1 <= 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i1 <= 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r2 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r2 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = interfaceinvoke $r2.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, 0)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = interfaceinvoke $r2.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, 0) >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getX : $r2 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data>
org.jfree.data.xy.DefaultTableXYDataset.getX : $r2 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getX : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultTableXYDataset.getX : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getX : r1 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.DefaultTableXYDataset.getX : r1 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getX : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1)
org.jfree.data.xy.DefaultTableXYDataset.getX : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getX : return $r4
org.jfree.data.xy.DefaultTableXYDataset.getX : return $r4 >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null
org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : return d0
org.jfree.data.xy.AbstractXYDataset.getXValue : return d0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i2 >= i1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i2 >= i1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $d3 = d2 - d1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $d3 = d2 - d1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d3)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d3) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = d2
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = d2 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = i2 + 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = i2 + 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : goto [?= (branch)]
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : return d0
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : return d0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d1)
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i1 = i1 + 1
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : goto [?= (branch)]
org.jfree.data.xy.IntervalXYDelegate.recalculateInterval : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : d0 = #NaN
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getStartX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getStartX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getStartX : $r1 = r0.<org.jfree.data.xy.DefaultTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate>
org.jfree.data.xy.DefaultTableXYDataset.getStartX : $r1 = r0.<org.jfree.data.xy.DefaultTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getStartX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.IntervalXYDelegate: java.lang.Number getStartX(int,int)>(i0, i1)
org.jfree.data.xy.DefaultTableXYDataset.getStartX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.IntervalXYDelegate: java.lang.Number getStartX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : r1 = null
org.jfree.data.xy.IntervalXYDelegate.getStartX : r1 = null >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.getStartX : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : r2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: java.lang.Number getX(int,int)>(i0, i1)
org.jfree.data.xy.IntervalXYDelegate.getStartX : r2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: java.lang.Number getX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : if r2 == null
org.jfree.data.xy.IntervalXYDelegate.getStartX : if r2 == null >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : $r4 = new java.lang.Double
org.jfree.data.xy.IntervalXYDelegate.getStartX : $r4 = new java.lang.Double >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : $d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.IntervalXYDelegate.getStartX : $d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : $d1 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double getIntervalPositionFactor()>()
org.jfree.data.xy.IntervalXYDelegate.getStartX : $d1 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double getIntervalPositionFactor()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalPositionFactor : $d0 = r0.<org.jfree.data.xy.IntervalXYDelegate: double intervalPositionFactor>
org.jfree.data.xy.IntervalXYDelegate.getIntervalPositionFactor : $d0 = r0.<org.jfree.data.xy.IntervalXYDelegate: double intervalPositionFactor> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalPositionFactor : return $d0
org.jfree.data.xy.IntervalXYDelegate.getIntervalPositionFactor : return $d0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : $d2 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double getIntervalWidth()>()
org.jfree.data.xy.IntervalXYDelegate.getStartX : $d2 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double getIntervalWidth()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $z0 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: boolean isAutoWidth()>()
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $z0 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: boolean isAutoWidth()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.isAutoWidth : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.xy.IntervalXYDelegate.isAutoWidth : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.isAutoWidth : return $z0
org.jfree.data.xy.IntervalXYDelegate.isAutoWidth : return $z0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z0 == 0
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z0 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d0 = r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth>
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d0 = r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0)
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z1 != 0
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z1 != 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d1 = r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth>
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d1 = r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : return $d1
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : return $d1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : $d3 = $d1 * $d2
org.jfree.data.xy.IntervalXYDelegate.getStartX : $d3 = $d1 * $d2 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : $d4 = $d0 - $d3
org.jfree.data.xy.IntervalXYDelegate.getStartX : $d4 = $d0 - $d3 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d4)
org.jfree.data.xy.IntervalXYDelegate.getStartX : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d4) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : r1 = $r4
org.jfree.data.xy.IntervalXYDelegate.getStartX : r1 = $r4 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getStartX : return r1
org.jfree.data.xy.IntervalXYDelegate.getStartX : return r1 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getStartX : return $r2
org.jfree.data.xy.DefaultTableXYDataset.getStartX : return $r2 >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : if r1 == null
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : return d0
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : return d0 >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : d0 = #NaN
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getEndX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getEndX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getEndX : $r1 = r0.<org.jfree.data.xy.DefaultTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate>
org.jfree.data.xy.DefaultTableXYDataset.getEndX : $r1 = r0.<org.jfree.data.xy.DefaultTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getEndX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.IntervalXYDelegate: java.lang.Number getEndX(int,int)>(i0, i1)
org.jfree.data.xy.DefaultTableXYDataset.getEndX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.IntervalXYDelegate: java.lang.Number getEndX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : r1 = null
org.jfree.data.xy.IntervalXYDelegate.getEndX : r1 = null >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.getEndX : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : r2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: java.lang.Number getX(int,int)>(i0, i1)
org.jfree.data.xy.IntervalXYDelegate.getEndX : r2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: java.lang.Number getX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : if r2 == null
org.jfree.data.xy.IntervalXYDelegate.getEndX : if r2 == null >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : $r4 = new java.lang.Double
org.jfree.data.xy.IntervalXYDelegate.getEndX : $r4 = new java.lang.Double >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : $d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.IntervalXYDelegate.getEndX : $d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : $d1 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double getIntervalPositionFactor()>()
org.jfree.data.xy.IntervalXYDelegate.getEndX : $d1 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double getIntervalPositionFactor()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : $d2 = 1.0 - $d1
org.jfree.data.xy.IntervalXYDelegate.getEndX : $d2 = 1.0 - $d1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : $d3 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double getIntervalWidth()>()
org.jfree.data.xy.IntervalXYDelegate.getEndX : $d3 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: double getIntervalWidth()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : $d4 = $d2 * $d3
org.jfree.data.xy.IntervalXYDelegate.getEndX : $d4 = $d2 * $d3 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : $d5 = $d0 + $d4
org.jfree.data.xy.IntervalXYDelegate.getEndX : $d5 = $d0 + $d4 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d5)
org.jfree.data.xy.IntervalXYDelegate.getEndX : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d5) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : r1 = $r4
org.jfree.data.xy.IntervalXYDelegate.getEndX : r1 = $r4 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getEndX : return r1
org.jfree.data.xy.IntervalXYDelegate.getEndX : return r1 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.getEndX : return $r2
org.jfree.data.xy.DefaultTableXYDataset.getEndX : return $r2 >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : if r1 == null
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : return d0
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : return d0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r9 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data>
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r9 = r0.<org.jfree.data.xy.DefaultTableXYDataset: java.util.List data> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i2)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r4 = (org.jfree.data.xy.XYSeries) $r10
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : r4 = (org.jfree.data.xy.XYSeries) $r10 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $z4 = virtualinvoke r4.<org.jfree.data.xy.XYSeries: boolean equals(java.lang.Object)>(r1)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : $z4 = virtualinvoke r4.<org.jfree.data.xy.XYSeries: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.XYSeries.equals : if r1 != r0
org.jfree.data.xy.XYSeries.equals : if r1 != r0 >>>>>>>> org.jfree.data.xy.XYSeries.equals : $z0 = r1 instanceof org.jfree.data.xy.XYSeries
org.jfree.data.xy.XYSeries.equals : $z0 = r1 instanceof org.jfree.data.xy.XYSeries >>>>>>>> org.jfree.data.xy.XYSeries.equals : if $z0 != 0
org.jfree.data.xy.XYSeries.equals : if $z0 != 0 >>>>>>>> org.jfree.data.xy.XYSeries.equals : $z1 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1)
org.jfree.data.xy.XYSeries.equals : $z1 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.equals : if r1 != r0
org.jfree.data.general.Series.equals : if r1 != r0 >>>>>>>> org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series
org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series >>>>>>>> org.jfree.data.general.Series.equals : if $z0 != 0
org.jfree.data.general.Series.equals : if $z0 != 0 >>>>>>>> org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1
org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1 >>>>>>>> org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.getKey : return $r1
org.jfree.data.general.Series.getKey : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.general.Series.equals : if $z1 != 0
org.jfree.data.general.Series.equals : if $z1 != 0 >>>>>>>> org.jfree.data.general.Series.equals : return 0
org.jfree.data.general.Series.equals : return 0 >>>>>>>> org.jfree.data.xy.XYSeries.equals : if $z1 != 0
org.jfree.data.xy.XYSeries.equals : if $z1 != 0 >>>>>>>> org.jfree.data.xy.XYSeries.equals : return 0
org.jfree.data.xy.XYSeries.equals : return 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if $z4 != 0
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : if $z4 != 0 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : virtualinvoke r4.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number)>(r3, null)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : virtualinvoke r4.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number)>(r3, null) >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>(r1, r2, 1)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>(r1, r2, 1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.Series.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.data.general.Series.notifyListeners : if $r4 != class "org/jfree/data/general/SeriesChangeListener"
org.jfree.data.general.Series.notifyListeners : if $r4 != class "org/jfree/data/general/SeriesChangeListener" >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.Series.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r5 = r2[$i2]
org.jfree.data.general.Series.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r6 = (org.jfree.data.general.SeriesChangeListener) $r5
org.jfree.data.general.Series.notifyListeners : $r6 = (org.jfree.data.general.SeriesChangeListener) $r5 >>>>>>>> org.jfree.data.general.Series.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.SeriesChangeListener: void seriesChanged(org.jfree.data.general.SeriesChangeEvent)>(r1)
org.jfree.data.general.Series.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.SeriesChangeListener: void seriesChanged(org.jfree.data.general.SeriesChangeEvent)>(r1) >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.seriesChanged : $z0 = r0.<org.jfree.data.xy.DefaultTableXYDataset: boolean propagateEvents>
org.jfree.data.xy.DefaultTableXYDataset.seriesChanged : $z0 = r0.<org.jfree.data.xy.DefaultTableXYDataset: boolean propagateEvents> >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.seriesChanged : if $z0 == 0
org.jfree.data.xy.DefaultTableXYDataset.seriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = i0 + -2
org.jfree.data.general.Series.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : goto [?= (branch)]
org.jfree.data.general.Series.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i2 = i2 + 1
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : i2 = i2 + 1 >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : goto [?= (branch)]
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number)>(r14, null)
org.jfree.data.xy.DefaultTableXYDataset.updateXPoints : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number)>(r14, null) >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : b0 = 1
