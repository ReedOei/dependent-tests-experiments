org.jfree.data.general.DefaultPieDataset.setValue : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.general.DefaultPieDataset.setValue : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.general.DefaultPieDataset.setValue : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>(r1, $r2)
org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>(r1, $r2) >>>>>>>> org.jfree.data.general.DefaultPieDataset.setValue : $r3 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.data.general.DefaultPieDataset.setValue : $r3 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data> >>>>>>>> org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r1, r2)
org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: void fireDatasetChanged()>()
org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r2 = new org.jfree.chart.plot.PiePlot
org.jfree.chart.ChartFactory.createPieChart : $r2 = new org.jfree.chart.plot.PiePlot >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r2.<org.jfree.chart.plot.PiePlot: void <init>(org.jfree.data.general.PieDataset)>(r1)
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r2.<org.jfree.chart.plot.PiePlot: void <init>(org.jfree.data.general.PieDataset)>(r1) >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : r3 = $r2
org.jfree.chart.ChartFactory.createPieChart : r3 = $r2 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r5 = new org.jfree.chart.labels.StandardPieSectionLabelGenerator
org.jfree.chart.ChartFactory.createPieChart : $r5 = new org.jfree.chart.labels.StandardPieSectionLabelGenerator >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r5.<org.jfree.chart.labels.StandardPieSectionLabelGenerator: void <init>()>()
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r5.<org.jfree.chart.labels.StandardPieSectionLabelGenerator: void <init>()>() >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)>($r5)
org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)>($r5) >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator> = r1
org.jfree.chart.plot.PiePlot.setLabelGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r6 = new org.jfree.ui.RectangleInsets
org.jfree.chart.ChartFactory.createPieChart : $r6 = new org.jfree.ui.RectangleInsets >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r6.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(0.0, 5.0, 5.0, 5.0)
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r6.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(0.0, 5.0, 5.0, 5.0) >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setInsets(org.jfree.ui.RectangleInsets)>($r6)
org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setInsets(org.jfree.ui.RectangleInsets)>($r6) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>(r1, 1)
org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets")
org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets") >>>>>>>> org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.setInsets : $z1 = virtualinvoke $r2.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.Plot.setInsets : $z1 = virtualinvoke $r2.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : if $z1 != 0
org.jfree.chart.plot.Plot.setInsets : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1
org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : if z0 == 0
org.jfree.chart.plot.Plot.setInsets : if z0 == 0 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : if z1 == 0
org.jfree.chart.ChartFactory.createPieChart : if z1 == 0 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : if z2 == 0
org.jfree.chart.ChartFactory.createPieChart : if z2 == 0 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r9 = new org.jfree.chart.JFreeChart
org.jfree.chart.ChartFactory.createPieChart : $r9 = new org.jfree.chart.JFreeChart >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r10 = <org.jfree.chart.JFreeChart: java.awt.Font DEFAULT_TITLE_FONT>
org.jfree.chart.ChartFactory.createPieChart : $r10 = <org.jfree.chart.JFreeChart: java.awt.Font DEFAULT_TITLE_FONT> >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r9.<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>(r0, $r10, r3, z0)
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r9.<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>(r0, $r10, r3, z0) >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1)
org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding") >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin") >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame") >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if $z0 == 0
org.jfree.chart.title.Title.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2
org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if i0 < 0
org.jfree.chart.title.Title.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.setPosition : if $r2 == r1
org.jfree.chart.title.Title.setPosition : if $r2 == r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3)
org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3) >>>>>>>> org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1)
org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1) >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : r4 = $r9
org.jfree.chart.ChartFactory.createPieChart : r4 = $r9 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r11 = <org.jfree.chart.ChartFactory: org.jfree.chart.ChartTheme currentTheme>
org.jfree.chart.ChartFactory.createPieChart : $r11 = <org.jfree.chart.ChartFactory: org.jfree.chart.ChartTheme currentTheme> >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : interfaceinvoke $r11.<org.jfree.chart.ChartTheme: void apply(org.jfree.chart.JFreeChart)>(r4)
org.jfree.chart.ChartFactory.createPieChart : interfaceinvoke $r11.<org.jfree.chart.ChartTheme: void apply(org.jfree.chart.JFreeChart)>(r4) >>>>>>>> org.jfree.chart.StandardChartTheme.apply : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "chart")
org.jfree.chart.StandardChartTheme.apply : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "chart") >>>>>>>> org.jfree.chart.StandardChartTheme.apply : r2 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle getTitle()>()
org.jfree.chart.StandardChartTheme.apply : r2 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle getTitle()>() >>>>>>>> org.jfree.chart.JFreeChart.getTitle : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.getTitle : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title> >>>>>>>> org.jfree.chart.JFreeChart.getTitle : return $r1
org.jfree.chart.JFreeChart.getTitle : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : if r2 == null
org.jfree.chart.StandardChartTheme.apply : if r2 == null >>>>>>>> org.jfree.chart.StandardChartTheme.apply : $r3 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>
org.jfree.chart.StandardChartTheme.apply : $r3 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont> >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r2.<org.jfree.chart.title.TextTitle: void setFont(java.awt.Font)>($r3)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r2.<org.jfree.chart.title.TextTitle: void setFont(java.awt.Font)>($r3) >>>>>>>> org.jfree.chart.title.TextTitle.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.title.TextTitle.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.title.TextTitle.setFont : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.setFont : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> >>>>>>>> org.jfree.chart.title.TextTitle.setFont : $z0 = virtualinvoke $r2.<java.awt.Font: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.TextTitle.setFont : $z0 = virtualinvoke $r2.<java.awt.Font: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.title.TextTitle.setFont : if $z0 != 0
org.jfree.chart.title.TextTitle.setFont : if $z0 != 0 >>>>>>>> org.jfree.chart.title.TextTitle.setFont : r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> = r1
org.jfree.chart.title.TextTitle.setFont : r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> = r1 >>>>>>>> org.jfree.chart.title.TextTitle.setFont : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.TextTitle.setFont : $r3 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.TextTitle.setFont : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.TextTitle.setFont : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.TextTitle.setFont : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3)
org.jfree.chart.title.TextTitle.setFont : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3) >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r4 = r2[i0]
org.jfree.chart.title.Title.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if $r4 != class "org/jfree/chart/event/TitleChangeListener"
org.jfree.chart.title.Title.notifyListeners : if $r4 != class "org/jfree/chart/event/TitleChangeListener" >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $i2 = i0 + 1
org.jfree.chart.title.Title.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.title.Title.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r6 = (org.jfree.chart.event.TitleChangeListener) $r5
org.jfree.chart.title.Title.notifyListeners : $r6 = (org.jfree.chart.event.TitleChangeListener) $r5 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.TitleChangeListener: void titleChanged(org.jfree.chart.event.TitleChangeEvent)>(r1)
org.jfree.chart.title.Title.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.TitleChangeListener: void titleChanged(org.jfree.chart.event.TitleChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r1.<org.jfree.chart.event.TitleChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r1.<org.jfree.chart.event.TitleChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1
org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1 >>>>>>>> org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify>
org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify> >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if $z0 == 0
org.jfree.chart.JFreeChart.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners> >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2
org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0
org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : i0 = i0 + -2
org.jfree.chart.title.Title.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : goto [?= (branch)]
org.jfree.chart.title.Title.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.StandardChartTheme.apply : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>
org.jfree.chart.StandardChartTheme.apply : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint> >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r2.<org.jfree.chart.title.TextTitle: void setPaint(java.awt.Paint)>($r4)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r2.<org.jfree.chart.title.TextTitle: void setPaint(java.awt.Paint)>($r4) >>>>>>>> org.jfree.chart.title.TextTitle.setPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.title.TextTitle.setPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.title.TextTitle.setPaint : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>
org.jfree.chart.title.TextTitle.setPaint : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint> >>>>>>>> org.jfree.chart.title.TextTitle.setPaint : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.TextTitle.setPaint : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.title.TextTitle.setPaint : if $z0 != 0
org.jfree.chart.title.TextTitle.setPaint : if $z0 != 0 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : i0 = virtualinvoke r1.<org.jfree.chart.JFreeChart: int getSubtitleCount()>()
org.jfree.chart.StandardChartTheme.apply : i0 = virtualinvoke r1.<org.jfree.chart.JFreeChart: int getSubtitleCount()>() >>>>>>>> org.jfree.chart.JFreeChart.getSubtitleCount : $r1 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.getSubtitleCount : $r1 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles> >>>>>>>> org.jfree.chart.JFreeChart.getSubtitleCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.chart.JFreeChart.getSubtitleCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.JFreeChart.getSubtitleCount : return $i0
org.jfree.chart.JFreeChart.getSubtitleCount : return $i0 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : i1 = 0
org.jfree.chart.StandardChartTheme.apply : i1 = 0 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : if i1 >= i0
org.jfree.chart.StandardChartTheme.apply : if i1 >= i0 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : $r5 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.Title getSubtitle(int)>(i1)
org.jfree.chart.StandardChartTheme.apply : $r5 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.Title getSubtitle(int)>(i1) >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : if i0 < 0
org.jfree.chart.JFreeChart.getSubtitle : if i0 < 0 >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : $i1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: int getSubtitleCount()>()
org.jfree.chart.JFreeChart.getSubtitle : $i1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: int getSubtitleCount()>() >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : if i0 < $i1
org.jfree.chart.JFreeChart.getSubtitle : if i0 < $i1 >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : $r2 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.getSubtitle : $r2 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles> >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.JFreeChart.getSubtitle : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : $r4 = (org.jfree.chart.title.Title) $r3
org.jfree.chart.JFreeChart.getSubtitle : $r4 = (org.jfree.chart.title.Title) $r3 >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : return $r4
org.jfree.chart.JFreeChart.getSubtitle : return $r4 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToTitle(org.jfree.chart.title.Title)>($r5)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToTitle(org.jfree.chart.title.Title)>($r5) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $z0 = r1 instanceof org.jfree.chart.title.TextTitle
org.jfree.chart.StandardChartTheme.applyToTitle : $z0 = r1 instanceof org.jfree.chart.title.TextTitle >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : if $z0 == 0
org.jfree.chart.StandardChartTheme.applyToTitle : if $z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $z1 = r1 instanceof org.jfree.chart.title.LegendTitle
org.jfree.chart.StandardChartTheme.applyToTitle : $z1 = r1 instanceof org.jfree.chart.title.LegendTitle >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : if $z1 == 0
org.jfree.chart.StandardChartTheme.applyToTitle : if $z1 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : r9 = (org.jfree.chart.title.LegendTitle) r1
org.jfree.chart.StandardChartTheme.applyToTitle : r9 = (org.jfree.chart.title.LegendTitle) r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r10 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.StandardChartTheme.applyToTitle : $r10 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: java.awt.Paint getBackgroundPaint()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getBackgroundPaint : $r1 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.getBackgroundPaint : $r1 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.getBackgroundPaint : return $r1
org.jfree.chart.title.LegendTitle.getBackgroundPaint : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : if $r10 == null
org.jfree.chart.StandardChartTheme.applyToTitle : if $r10 == null >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r11 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>
org.jfree.chart.StandardChartTheme.applyToTitle : $r11 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setBackgroundPaint(java.awt.Paint)>($r11)
org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setBackgroundPaint(java.awt.Paint)>($r11) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r12 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToTitle : $r12 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setItemFont(java.awt.Font)>($r12)
org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setItemFont(java.awt.Font)>($r12) >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.title.LegendTitle.setItemFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> = r1
org.jfree.chart.title.LegendTitle.setItemFont : r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setItemFont : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setItemFont : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setItemFont : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r13 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>
org.jfree.chart.StandardChartTheme.applyToTitle : $r13 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setItemPaint(java.awt.Paint)>($r13)
org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setItemPaint(java.awt.Paint)>($r13) >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.title.LegendTitle.setItemPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = r1
org.jfree.chart.title.LegendTitle.setItemPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setItemPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setItemPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setItemPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r14 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer getWrapper()>()
org.jfree.chart.StandardChartTheme.applyToTitle : $r14 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer getWrapper()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getWrapper : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.getWrapper : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.getWrapper : return $r1
org.jfree.chart.title.LegendTitle.getWrapper : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : if $r14 == null
org.jfree.chart.StandardChartTheme.applyToTitle : if $r14 == null >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : goto [?= return]
org.jfree.chart.StandardChartTheme.applyToTitle : goto [?= return] >>>>>>>> org.jfree.chart.StandardChartTheme.apply : i1 = i1 + 1
org.jfree.chart.StandardChartTheme.apply : i1 = i1 + 1 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : goto [?= (branch)]
org.jfree.chart.StandardChartTheme.apply : goto [?= (branch)] >>>>>>>> org.jfree.chart.StandardChartTheme.apply : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>
org.jfree.chart.StandardChartTheme.apply : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r1.<org.jfree.chart.JFreeChart: void setBackgroundPaint(java.awt.Paint)>($r6)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r1.<org.jfree.chart.JFreeChart: void setBackgroundPaint(java.awt.Paint)>($r6) >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : $r2 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.setBackgroundPaint : $r2 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : if $r2 == null
org.jfree.chart.JFreeChart.setBackgroundPaint : if $r2 == null >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : $r3 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.setBackgroundPaint : $r3 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.JFreeChart.setBackgroundPaint : $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : if $z0 != 0
org.jfree.chart.JFreeChart.setBackgroundPaint : if $z0 != 0 >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.JFreeChart.setBackgroundPaint : r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.JFreeChart: void fireChartChanged()>()
org.jfree.chart.JFreeChart.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.JFreeChart: void fireChartChanged()>() >>>>>>>> org.jfree.chart.JFreeChart.fireChartChanged : $r1 = new org.jfree.chart.event.ChartChangeEvent
org.jfree.chart.JFreeChart.fireChartChanged : $r1 = new org.jfree.chart.event.ChartChangeEvent >>>>>>>> org.jfree.chart.JFreeChart.fireChartChanged : specialinvoke $r1.<org.jfree.chart.event.ChartChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.JFreeChart.fireChartChanged : specialinvoke $r1.<org.jfree.chart.event.ChartChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.JFreeChart.fireChartChanged : r2 = $r1
org.jfree.chart.JFreeChart.fireChartChanged : r2 = $r1 >>>>>>>> org.jfree.chart.JFreeChart.fireChartChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r2)
org.jfree.chart.JFreeChart.fireChartChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : goto [?= return]
org.jfree.chart.JFreeChart.setBackgroundPaint : goto [?= return] >>>>>>>> org.jfree.chart.StandardChartTheme.apply : r7 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.StandardChartTheme.apply : r7 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.JFreeChart.getPlot : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.getPlot : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.JFreeChart.getPlot : return $r1
org.jfree.chart.JFreeChart.getPlot : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : if r7 == null
org.jfree.chart.StandardChartTheme.apply : if r7 == null >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(r7)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(r7) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot")
org.jfree.chart.StandardChartTheme.applyToPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot") >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : if $r2 == null
org.jfree.chart.StandardChartTheme.applyToPlot : if $r2 == null >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r3 = virtualinvoke r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r3 = virtualinvoke r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = null
org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = null >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r4 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r4 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : $z0 = $r4 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $z0 = $r4 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : if $z0 == 0
org.jfree.chart.StandardChartTheme.getDrawingSupplier : if $z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : r2 = (org.jfree.util.PublicCloneable) $r5
org.jfree.chart.StandardChartTheme.getDrawingSupplier : r2 = (org.jfree.util.PublicCloneable) $r5 >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r6 = interfaceinvoke r2.<org.jfree.util.PublicCloneable: java.lang.Object clone()>()
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r6 = interfaceinvoke r2.<org.jfree.util.PublicCloneable: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2
org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1 >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = (org.jfree.chart.plot.DrawingSupplier) $r6
org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = (org.jfree.chart.plot.DrawingSupplier) $r6 >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : goto [?= return r1]
org.jfree.chart.StandardChartTheme.getDrawingSupplier : goto [?= return r1] >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : return r1
org.jfree.chart.StandardChartTheme.getDrawingSupplier : return r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)>($r3)
org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)>($r3) >>>>>>>> org.jfree.chart.plot.Plot.setDrawingSupplier : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = r1
org.jfree.chart.plot.Plot.setDrawingSupplier : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setDrawingSupplier : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setDrawingSupplier : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0]
org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $r4 != class "org/jfree/chart/event/PlotChangeListener"
org.jfree.chart.plot.Plot.notifyListeners : if $r4 != class "org/jfree/chart/event/PlotChangeListener" >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1
org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.plot.Plot.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r6 = (org.jfree.chart.event.PlotChangeListener) $r5
org.jfree.chart.plot.Plot.notifyListeners : $r6 = (org.jfree.chart.event.PlotChangeListener) $r5 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.PlotChangeListener: void plotChanged(org.jfree.chart.event.PlotChangeEvent)>(r1)
org.jfree.chart.plot.Plot.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.PlotChangeListener: void plotChanged(org.jfree.chart.event.PlotChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0) >>>>>>>> org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = i0 + -2
org.jfree.chart.plot.Plot.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : goto [?= (branch)]
org.jfree.chart.plot.Plot.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r4 = virtualinvoke r1.<org.jfree.chart.plot.Plot: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r4 = virtualinvoke r1.<org.jfree.chart.plot.Plot: java.awt.Paint getBackgroundPaint()>() >>>>>>>> org.jfree.chart.plot.Plot.getBackgroundPaint : $r1 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.getBackgroundPaint : $r1 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.getBackgroundPaint : return $r1
org.jfree.chart.plot.Plot.getBackgroundPaint : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : if $r4 == null
org.jfree.chart.StandardChartTheme.applyToPlot : if $r4 == null >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>
org.jfree.chart.StandardChartTheme.applyToPlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setBackgroundPaint(java.awt.Paint)>($r5)
org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setBackgroundPaint(java.awt.Paint)>($r5) >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : if r1 != null
org.jfree.chart.plot.Plot.setBackgroundPaint : if r1 != null >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.setBackgroundPaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : if $r3 == null
org.jfree.chart.plot.Plot.setBackgroundPaint : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.setBackgroundPaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.Plot.setBackgroundPaint : $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : if $z0 == 0
org.jfree.chart.plot.Plot.setBackgroundPaint : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.plot.Plot.setBackgroundPaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>
org.jfree.chart.StandardChartTheme.applyToPlot : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setOutlinePaint(java.awt.Paint)>($r6)
org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setOutlinePaint(java.awt.Paint)>($r6) >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : if r1 != null
org.jfree.chart.plot.Plot.setOutlinePaint : if r1 != null >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.setOutlinePaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : if $r3 == null
org.jfree.chart.plot.Plot.setOutlinePaint : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.setOutlinePaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.Plot.setOutlinePaint : $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : if $z0 == 0
org.jfree.chart.plot.Plot.setOutlinePaint : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = r1
org.jfree.chart.plot.Plot.setOutlinePaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $z0 = r1 instanceof org.jfree.chart.plot.PiePlot
org.jfree.chart.StandardChartTheme.applyToPlot : $z0 = r1 instanceof org.jfree.chart.plot.PiePlot >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : if $z0 == 0
org.jfree.chart.StandardChartTheme.applyToPlot : if $z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r7 = (org.jfree.chart.plot.PiePlot) r1
org.jfree.chart.StandardChartTheme.applyToPlot : $r7 = (org.jfree.chart.plot.PiePlot) r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPiePlot(org.jfree.chart.plot.PiePlot)>($r7)
org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPiePlot(org.jfree.chart.plot.PiePlot)>($r7) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $r2 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r2 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelLinkPaint(java.awt.Paint)>($r2)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelLinkPaint(java.awt.Paint)>($r2) >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkPaint : r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint> = r1
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkPaint : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $r3 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r3 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)>($r3)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)>($r3) >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkStyle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "style")
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "style") >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkStyle : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> = r1
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkStyle : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelFont(java.awt.Font)>($r4)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelFont(java.awt.Font)>($r4) >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.plot.PiePlot.setLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelFont : r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont> = r1
org.jfree.chart.plot.PiePlot.setLabelFont : r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelFont : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelFont : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setShadowGenerator(org.jfree.chart.util.ShadowGenerator)>($r5)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setShadowGenerator(org.jfree.chart.util.ShadowGenerator)>($r5) >>>>>>>> org.jfree.chart.plot.PiePlot.setShadowGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> = r1
org.jfree.chart.plot.PiePlot.setShadowGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setShadowGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setShadowGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $z0 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z0 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionPaint>
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : return $z0
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : return $z0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z0 == 0
org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void clearSectionPaints(boolean)>(0)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void clearSectionPaints(boolean)>(0) >>>>>>>> org.jfree.chart.plot.PiePlot.clearSectionPaints : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap>
org.jfree.chart.plot.PiePlot.clearSectionPaints : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap> >>>>>>>> org.jfree.chart.plot.PiePlot.clearSectionPaints : virtualinvoke $r1.<org.jfree.chart.PaintMap: void clear()>()
org.jfree.chart.plot.PiePlot.clearSectionPaints : virtualinvoke $r1.<org.jfree.chart.PaintMap: void clear()>() >>>>>>>> org.jfree.chart.PaintMap.clear : $r1 = r0.<org.jfree.chart.PaintMap: java.util.Map store>
org.jfree.chart.PaintMap.clear : $r1 = r0.<org.jfree.chart.PaintMap: java.util.Map store> >>>>>>>> org.jfree.chart.PaintMap.clear : interfaceinvoke $r1.<java.util.Map: void clear()>()
org.jfree.chart.PaintMap.clear : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> org.jfree.chart.plot.PiePlot.clearSectionPaints : if z0 == 0
org.jfree.chart.plot.PiePlot.clearSectionPaints : if z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $z1 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z1 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlinePaint>
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlinePaint> >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : return $z0
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : return $z0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z1 == 0
org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z1 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $z2 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z2 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlineStroke>
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlineStroke> >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : return $z0
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : return $z0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z2 == 0
org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z2 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : goto [?= return]
org.jfree.chart.StandardChartTheme.applyToPlot : goto [?= return] >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : return r4
org.jfree.chart.ChartFactory.createPieChart : return r4 >>>>>>>> org.jfree.chart.plot.PiePlot.setLegendLabelGenerator : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "generator")
org.jfree.chart.plot.PiePlot.setLegendLabelGenerator : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "generator") >>>>>>>> org.jfree.chart.plot.PiePlot.setLegendLabelGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator legendLabelGenerator> = r1
org.jfree.chart.plot.PiePlot.setLegendLabelGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator legendLabelGenerator> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLegendLabelGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLegendLabelGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r5.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 1, 0)
org.jfree.chart.JFreeChart.draw : specialinvoke $r5.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 1, 0) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r5)
org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r5) >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners> >>>>>>>> org.jfree.chart.JFreeChart.draw : r6 = null
org.jfree.chart.JFreeChart.draw : r6 = null >>>>>>>> org.jfree.chart.JFreeChart.draw : if r4 == null
org.jfree.chart.JFreeChart.draw : if r4 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : if r6 == null
org.jfree.chart.JFreeChart.draw : if r6 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints>
org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>($r15)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>($r15) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r16 == null
org.jfree.chart.JFreeChart.draw : if $r16 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage>
org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r18 == null
org.jfree.chart.JFreeChart.draw : if $r18 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>()
org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>() >>>>>>>> org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible>
org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible> >>>>>>>> org.jfree.chart.JFreeChart.isBorderVisible : return $z0
org.jfree.chart.JFreeChart.isBorderVisible : return $z0 >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z1 == 0
org.jfree.chart.JFreeChart.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.JFreeChart.draw : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : r28 = $r27
org.jfree.chart.JFreeChart.draw : r28 = $r27 >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke $r29.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r28)
org.jfree.chart.JFreeChart.draw : virtualinvoke $r29.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r28) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r30 == null
org.jfree.chart.JFreeChart.draw : if $r30 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r31 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : $r31 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title> >>>>>>>> org.jfree.chart.JFreeChart.draw : $z2 = virtualinvoke $r31.<org.jfree.chart.title.TextTitle: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $z2 = virtualinvoke $r31.<org.jfree.chart.title.TextTitle: boolean isVisible()>() >>>>>>>> org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.isVisible : return $z0
org.jfree.chart.title.Title.isVisible : return $z0 >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z2 == 0
org.jfree.chart.JFreeChart.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r33 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : $r33 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title> >>>>>>>> org.jfree.chart.JFreeChart.draw : $z3 = 0
org.jfree.chart.JFreeChart.draw : $z3 = 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : r36 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>($r33, r1, r28, $z3)
org.jfree.chart.JFreeChart.draw : r36 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>($r33, r1, r28, $z3) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t")
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t") >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area")
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area") >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.getPosition : return $r1
org.jfree.chart.title.Title.getPosition : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $b0 > 0
org.jfree.chart.JFreeChart.drawTitle : if $b0 > 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $b1 > 0
org.jfree.chart.JFreeChart.drawTitle : if $b1 > 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r5 = new org.jfree.data.Range
org.jfree.chart.JFreeChart.drawTitle : $r5 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r5.<org.jfree.data.Range: void <init>(double,double)>(0.0, d0)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r5.<org.jfree.data.Range: void <init>(double,double)>(0.0, d0) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.JFreeChart.drawTitle : $r12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r13 = new org.jfree.data.Range
org.jfree.chart.JFreeChart.drawTitle : $r13 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r13.<org.jfree.data.Range: void <init>(double,double)>(0.0, d1)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r13.<org.jfree.data.Range: void <init>(double,double)>(0.0, d1) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.JFreeChart.drawTitle : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r11.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r5, $r12, d1, $r13, $r14)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r11.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r5, $r12, d1, $r13, $r14) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r6 = $r11
org.jfree.chart.JFreeChart.drawTitle : r6 = $r11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : n0 = null
org.jfree.chart.JFreeChart.drawTitle : n0 = null >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams
org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r15.<org.jfree.chart.block.BlockParams: void <init>()>()
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r15.<org.jfree.chart.block.BlockParams: void <init>()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r7 = $r15
org.jfree.chart.JFreeChart.drawTitle : r7 = $r15 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0) >>>>>>>> org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0
org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if r4 != $r16
org.jfree.chart.JFreeChart.drawTitle : if r4 != $r16 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r8 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : r8 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6) >>>>>>>> org.jfree.chart.title.TextTitle.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.TextTitle.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c") >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0
org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : return $d0
org.jfree.chart.block.RectangleConstraint.getWidth : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : return $d0
org.jfree.chart.block.RectangleConstraint.getHeight : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : return $r1
org.jfree.chart.block.BlockBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9)
org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7
org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7 >>>>>>>> org.jfree.chart.title.TextTitle.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.TextTitle.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.title.TextTitle.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.TextTitle.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.title.TextTitle.arrange : r6 = null
org.jfree.chart.title.TextTitle.arrange : r6 = null >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.TextTitle.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.title.TextTitle.arrange : if r4 != $r7
org.jfree.chart.title.TextTitle.arrange : if r4 != $r7 >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.title.TextTitle.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.title.TextTitle.arrange : if r4 != $r13
org.jfree.chart.title.TextTitle.arrange : if r4 != $r13 >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.TextTitle.arrange : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.title.TextTitle.arrange : if r5 != $r14
org.jfree.chart.title.TextTitle.arrange : if r5 != $r14 >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $r16 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.title.TextTitle.arrange : $r16 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.title.TextTitle.arrange : if r5 != $r16
org.jfree.chart.title.TextTitle.arrange : if r5 != $r16 >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $r17 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.title.TextTitle.arrange : $r17 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $r18 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.title.TextTitle.arrange : $r18 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.title.TextTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.Size2D arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)>(r1, $r17, $r18)
org.jfree.chart.title.TextTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.Size2D arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)>(r1, $r17, $r18) >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.arrangeRR : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : if r4 == $r5
org.jfree.chart.title.TextTitle.arrangeRR : if r4 == $r5 >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $d0 = virtualinvoke r2.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.title.TextTitle.arrangeRR : $d0 = virtualinvoke r2.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : f0 = (float) $d0
org.jfree.chart.title.TextTitle.arrangeRR : f0 = (float) $d0 >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r9 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.arrangeRR : $r9 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r9)
org.jfree.chart.title.TextTitle.arrangeRR : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r9) >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r10 = r0.<org.jfree.chart.title.TextTitle: java.lang.String text>
org.jfree.chart.title.TextTitle.arrangeRR : $r10 = r0.<org.jfree.chart.title.TextTitle: java.lang.String text> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r11 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.arrangeRR : $r11 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r12 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>
org.jfree.chart.title.TextTitle.arrangeRR : $r12 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $i0 = r0.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay>
org.jfree.chart.title.TextTitle.arrangeRR : $i0 = r0.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r6 = new org.jfree.text.G2TextMeasurer
org.jfree.chart.title.TextTitle.arrangeRR : $r6 = new org.jfree.text.G2TextMeasurer >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : specialinvoke $r6.<org.jfree.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(r1)
org.jfree.chart.title.TextTitle.arrangeRR : specialinvoke $r6.<org.jfree.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r13 = staticinvoke <org.jfree.text.TextUtilities: org.jfree.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.text.TextMeasurer)>($r10, $r11, $r12, f0, $i0, $r6)
org.jfree.chart.title.TextTitle.arrangeRR : $r13 = staticinvoke <org.jfree.text.TextUtilities: org.jfree.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.text.TextMeasurer)>($r10, $r11, $r12, f0, $i0, $r6) >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content> = $r13
org.jfree.chart.title.TextTitle.arrangeRR : r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content> = $r13 >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r14 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.arrangeRR : $r14 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r15 = r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.HorizontalAlignment textAlignment>
org.jfree.chart.title.TextTitle.arrangeRR : $r15 = r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.HorizontalAlignment textAlignment> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : virtualinvoke $r14.<org.jfree.text.TextBlock: void setLineAlignment(org.jfree.ui.HorizontalAlignment)>($r15)
org.jfree.chart.title.TextTitle.arrangeRR : virtualinvoke $r14.<org.jfree.text.TextBlock: void setLineAlignment(org.jfree.ui.HorizontalAlignment)>($r15) >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $r16 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.arrangeRR : $r16 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : r7 = virtualinvoke $r16.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r1)
org.jfree.chart.title.TextTitle.arrangeRR : r7 = virtualinvoke $r16.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : $z0 = r0.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>
org.jfree.chart.title.TextTitle.arrangeRR : $z0 = r0.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace> >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : if $z0 == 0
org.jfree.chart.title.TextTitle.arrangeRR : if $z0 == 0 >>>>>>>> org.jfree.chart.title.TextTitle.arrangeRR : return r7
org.jfree.chart.title.TextTitle.arrangeRR : return r7 >>>>>>>> org.jfree.chart.title.TextTitle.arrange : goto [?= $r27 = new org.jfree.ui.Size2D]
org.jfree.chart.title.TextTitle.arrange : goto [?= $r27 = new org.jfree.ui.Size2D] >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.TextTitle.arrange : $r27 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $d1 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.title.TextTitle.arrange : $d1 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $d2 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: double calculateTotalWidth(double)>($d1)
org.jfree.chart.title.TextTitle.arrange : $d2 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: double calculateTotalWidth(double)>($d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4 >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $d3 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.TextTitle.arrange : $d3 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.title.TextTitle.arrange : $d4 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: double calculateTotalHeight(double)>($d3)
org.jfree.chart.title.TextTitle.arrange : $d4 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: double calculateTotalHeight(double)>($d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4 >>>>>>>> org.jfree.chart.title.TextTitle.arrange : specialinvoke $r27.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4)
org.jfree.chart.title.TextTitle.arrange : specialinvoke $r27.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.chart.title.TextTitle.arrange : return $r27
org.jfree.chart.title.TextTitle.arrange : return $r27 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r17 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $r17 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>() >>>>>>>> org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.title.Title.getHorizontalAlignment : return $r1
org.jfree.chart.title.Title.getHorizontalAlignment : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r18 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.drawTitle : $r18 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r9 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r8, r3, $r17, $r18)
org.jfree.chart.JFreeChart.drawTitle : r9 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r8, r3, $r17, $r18) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r5
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r5 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r6
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r6 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d3 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d3 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d4 = $d3 / 2.0
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d4 = $d3 / 2.0 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = $d2 - $d4
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = $d2 - $d4 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>]
org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>] >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r8
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r8 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r11 = new java.awt.geom.Rectangle2D$Double]
org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r11 = new java.awt.geom.Rectangle2D$Double] >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d12 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d12 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d13 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d13 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d12, $d13)
org.jfree.chart.JFreeChart.createAlignedRectangle2D : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d12, $d13) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : return $r11
org.jfree.chart.JFreeChart.createAlignedRectangle2D : return $r11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r9, r7)
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r9, r7) >>>>>>>> org.jfree.chart.title.TextTitle.draw : $r8 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.draw : $r8 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content> >>>>>>>> org.jfree.chart.title.TextTitle.draw : if $r8 != null
org.jfree.chart.title.TextTitle.draw : if $r8 != null >>>>>>>> org.jfree.chart.title.TextTitle.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.TextTitle.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimMargin : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : return r1
org.jfree.chart.block.AbstractBlock.trimMargin : return r1 >>>>>>>> org.jfree.chart.title.TextTitle.draw : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r9)
org.jfree.chart.title.TextTitle.draw : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.drawBorder : interfaceinvoke $r3.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.block.AbstractBlock.drawBorder : interfaceinvoke $r3.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d0 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>($d8)
org.jfree.chart.block.BlockBorder.draw : d0 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>($d8) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d1 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>($d9)
org.jfree.chart.block.BlockBorder.draw : d1 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>($d9) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d2 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>($d10)
org.jfree.chart.block.BlockBorder.draw : d2 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>($d10) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d3 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>($d11)
org.jfree.chart.block.BlockBorder.draw : d3 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>($d11) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8)
org.jfree.chart.block.BlockBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BlockBorder.draw : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.block.BlockBorder.draw : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : r3 = $r9
org.jfree.chart.block.BlockBorder.draw : r3 = $r9 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b0 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b1 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b1 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b2 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b3 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.title.TextTitle.draw : $r10 = r0.<org.jfree.chart.title.TextTitle: java.lang.String text>
org.jfree.chart.title.TextTitle.draw : $r10 = r0.<org.jfree.chart.title.TextTitle: java.lang.String text> >>>>>>>> org.jfree.chart.title.TextTitle.draw : $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("")
org.jfree.chart.title.TextTitle.draw : $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.jfree.chart.title.TextTitle.draw : if $z0 == 0
org.jfree.chart.title.TextTitle.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.TextTitle.draw : r4 = null
org.jfree.chart.title.TextTitle.draw : r4 = null >>>>>>>> org.jfree.chart.title.TextTitle.draw : $z1 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.TextTitle.draw : $z1 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.title.TextTitle.draw : if $z1 == 0
org.jfree.chart.title.TextTitle.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.TextTitle.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.TextTitle.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.title.TextTitle.draw : $z2 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.TextTitle.draw : $z2 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities>
org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> >>>>>>>> org.jfree.chart.block.BlockParams.getGenerateEntities : return $z0
org.jfree.chart.block.BlockParams.getGenerateEntities : return $z0 >>>>>>>> org.jfree.chart.title.TextTitle.draw : if $z2 == 0
org.jfree.chart.title.TextTitle.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.title.TextTitle.draw : r14 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r9)
org.jfree.chart.title.TextTitle.draw : r14 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimBorder : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : virtualinvoke $r3.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimBorder : virtualinvoke $r3.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : return r1
org.jfree.chart.block.AbstractBlock.trimBorder : return r1 >>>>>>>> org.jfree.chart.title.TextTitle.draw : $r15 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.TextTitle.draw : $r15 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.TextTitle.draw : if $r15 == null
org.jfree.chart.title.TextTitle.draw : if $r15 == null >>>>>>>> org.jfree.chart.title.TextTitle.draw : r17 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r14)
org.jfree.chart.title.TextTitle.draw : r17 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r14) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimPadding : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : return r1
org.jfree.chart.block.AbstractBlock.trimPadding : return r1 >>>>>>>> org.jfree.chart.title.TextTitle.draw : r18 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.draw : r18 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.TextTitle.draw : $r19 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.draw : $r19 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.title.TextTitle.draw : if r18 == $r19
org.jfree.chart.title.TextTitle.draw : if r18 == $r19 >>>>>>>> org.jfree.chart.title.TextTitle.draw : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r17)
org.jfree.chart.title.TextTitle.draw : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r17) >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $r7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.TextTitle.drawHorizontal : $r7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : r3 = (java.awt.geom.Rectangle2D) $r7
org.jfree.chart.title.TextTitle.drawHorizontal : r3 = (java.awt.geom.Rectangle2D) $r7 >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $r8 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.drawHorizontal : $r8 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r8)
org.jfree.chart.title.TextTitle.drawHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r8) >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $r9 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>
org.jfree.chart.title.TextTitle.drawHorizontal : $r9 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint> >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r9)
org.jfree.chart.title.TextTitle.drawHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r9) >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : r4 = null
org.jfree.chart.title.TextTitle.drawHorizontal : r4 = null >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : f0 = 0.0F
org.jfree.chart.title.TextTitle.drawHorizontal : f0 = 0.0F >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : r5 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.title.TextTitle.drawHorizontal : r5 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>() >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $r10 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.chart.title.TextTitle.drawHorizontal : $r10 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT> >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : if r5 != $r10
org.jfree.chart.title.TextTitle.drawHorizontal : if r5 != $r10 >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $r11 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment RIGHT>
org.jfree.chart.title.TextTitle.drawHorizontal : $r11 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment RIGHT> >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : if r5 != $r11
org.jfree.chart.title.TextTitle.drawHorizontal : if r5 != $r11 >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $r12 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.title.TextTitle.drawHorizontal : $r12 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER> >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : if r5 != $r12
org.jfree.chart.title.TextTitle.drawHorizontal : if r5 != $r12 >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.title.TextTitle.drawHorizontal : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : f0 = (float) $d2
org.jfree.chart.title.TextTitle.drawHorizontal : f0 = (float) $d2 >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : r4 = <org.jfree.text.TextBlockAnchor: org.jfree.text.TextBlockAnchor TOP_CENTER>
org.jfree.chart.title.TextTitle.drawHorizontal : r4 = <org.jfree.text.TextBlockAnchor: org.jfree.text.TextBlockAnchor TOP_CENTER> >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : f1 = 0.0F
org.jfree.chart.title.TextTitle.drawHorizontal : f1 = 0.0F >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.drawHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.drawHorizontal : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : if r6 != $r13
org.jfree.chart.title.TextTitle.drawHorizontal : if r6 != $r13 >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $d3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.title.TextTitle.drawHorizontal : $d3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : f1 = (float) $d3
org.jfree.chart.title.TextTitle.drawHorizontal : f1 = (float) $d3 >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : goto [?= $r18 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>]
org.jfree.chart.title.TextTitle.drawHorizontal : goto [?= $r18 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>] >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : $r18 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.drawHorizontal : $r18 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content> >>>>>>>> org.jfree.chart.title.TextTitle.drawHorizontal : virtualinvoke $r18.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor)>(r1, f0, f1, r4)
org.jfree.chart.title.TextTitle.drawHorizontal : virtualinvoke $r18.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor)>(r1, f0, f1, r4) >>>>>>>> org.jfree.chart.title.TextTitle.draw : goto [?= $r23 = new org.jfree.chart.block.BlockResult]
org.jfree.chart.title.TextTitle.draw : goto [?= $r23 = new org.jfree.chart.block.BlockResult] >>>>>>>> org.jfree.chart.title.TextTitle.draw : $r23 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.TextTitle.draw : $r23 = new org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.title.TextTitle.draw : specialinvoke $r23.<org.jfree.chart.block.BlockResult: void <init>()>()
org.jfree.chart.title.TextTitle.draw : specialinvoke $r23.<org.jfree.chart.block.BlockResult: void <init>()>() >>>>>>>> org.jfree.chart.title.TextTitle.draw : r6 = $r23
org.jfree.chart.title.TextTitle.draw : r6 = $r23 >>>>>>>> org.jfree.chart.title.TextTitle.draw : if r4 == null
org.jfree.chart.title.TextTitle.draw : if r4 == null >>>>>>>> org.jfree.chart.title.TextTitle.draw : return r6
org.jfree.chart.title.TextTitle.draw : return r6 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.JFreeChart.drawTitle : $d3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d4 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.drawTitle : $d4 = r8.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d5 = $d3 + $d4
org.jfree.chart.JFreeChart.drawTitle : $d5 = $d3 + $d4 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d6 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.drawTitle : $d6 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d7 = staticinvoke <java.lang.Math: double min(double,double)>($d5, $d6)
org.jfree.chart.JFreeChart.drawTitle : $d7 = staticinvoke <java.lang.Math: double min(double,double)>($d5, $d6) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d8 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : $d8 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d9 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : $d9 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d10 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.drawTitle : $d10 = r8.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d11 = $d9 - $d10
org.jfree.chart.JFreeChart.drawTitle : $d11 = $d9 - $d10 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d12 = staticinvoke <java.lang.Math: double max(double,double)>($d11, 0.0)
org.jfree.chart.JFreeChart.drawTitle : $d12 = staticinvoke <java.lang.Math: double max(double,double)>($d11, 0.0) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d2, $d7, $d8, $d12)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d2, $d7, $d8, $d12) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null]
org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null] >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r36 = null
org.jfree.chart.JFreeChart.drawTitle : r36 = null >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $z1 == 0
org.jfree.chart.JFreeChart.drawTitle : if $z1 == 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r10 = (org.jfree.chart.block.EntityBlockResult) r19
org.jfree.chart.JFreeChart.drawTitle : r10 = (org.jfree.chart.block.EntityBlockResult) r19 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r36 = interfaceinvoke r10.<org.jfree.chart.block.EntityBlockResult: org.jfree.chart.entity.EntityCollection getEntityCollection()>()
org.jfree.chart.JFreeChart.drawTitle : r36 = interfaceinvoke r10.<org.jfree.chart.block.EntityBlockResult: org.jfree.chart.entity.EntityCollection getEntityCollection()>() >>>>>>>> org.jfree.chart.block.BlockResult.getEntityCollection : $r1 = r0.<org.jfree.chart.block.BlockResult: org.jfree.chart.entity.EntityCollection entities>
org.jfree.chart.block.BlockResult.getEntityCollection : $r1 = r0.<org.jfree.chart.block.BlockResult: org.jfree.chart.entity.EntityCollection entities> >>>>>>>> org.jfree.chart.block.BlockResult.getEntityCollection : return $r1
org.jfree.chart.block.BlockResult.getEntityCollection : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : return r36
org.jfree.chart.JFreeChart.drawTitle : return r36 >>>>>>>> org.jfree.chart.JFreeChart.draw : if r36 == null
org.jfree.chart.JFreeChart.draw : if r36 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles> >>>>>>>> org.jfree.chart.JFreeChart.draw : r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.JFreeChart.draw : r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z4 == 0
org.jfree.chart.JFreeChart.draw : if $z4 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : r40 = (org.jfree.chart.title.Title) $r39
org.jfree.chart.JFreeChart.draw : r40 = (org.jfree.chart.title.Title) $r39 >>>>>>>> org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z5 == 0
org.jfree.chart.JFreeChart.draw : if $z5 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $z6 = 0
org.jfree.chart.JFreeChart.draw : $z6 = 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : r11 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r40, r1, r28, $z6)
org.jfree.chart.JFreeChart.draw : r11 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r40, r1, r28, $z6) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if r4 != $r20
org.jfree.chart.JFreeChart.drawTitle : if r4 != $r20 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>()>()
org.jfree.chart.title.LegendTitle.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4 = $r3
org.jfree.chart.title.LegendTitle.arrange : r4 = $r3 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>()
org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void clear()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z0 == 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r4.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($r5)
org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r4.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($r5) >>>>>>>> org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement")
org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement") >>>>>>>> org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1
org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r9 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r9 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $z1 = virtualinvoke $r8.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r9)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z1 = virtualinvoke $r8.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z1 == 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $i2 = lengthof $r10
org.jfree.chart.title.LegendTitle.fetchLegendItems : $i2 = lengthof $r10 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if i0 >= $i2
org.jfree.chart.title.LegendTitle.fetchLegendItems : if i0 >= $i2 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r12 = $r11[i0]
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r12 = $r11[i0] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.PiePlot.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.plot.PiePlot.getLegendItems : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : r2 = $r1
org.jfree.chart.plot.PiePlot.getLegendItems : r2 = $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $r16 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getLegendItems : $r16 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : if $r16 != null
org.jfree.chart.plot.PiePlot.getLegendItems : if $r16 != null >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getLegendItems : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : r3 = interfaceinvoke $r17.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.chart.plot.PiePlot.getLegendItems : r3 = interfaceinvoke $r17.<org.jfree.data.general.PieDataset: java.util.List getKeys()>() >>>>>>>> org.jfree.data.general.DefaultPieDataset.getKeys : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.data.general.DefaultPieDataset.getKeys : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data> >>>>>>>> org.jfree.data.general.DefaultPieDataset.getKeys : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues: java.util.List getKeys()>()
org.jfree.data.general.DefaultPieDataset.getKeys : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues: java.util.List getKeys()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.getKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.getKeys : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object clone()>()
org.jfree.data.DefaultKeyedValues.getKeys : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object clone()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getKeys : $r3 = (java.util.List) $r2
org.jfree.data.DefaultKeyedValues.getKeys : $r3 = (java.util.List) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getKeys : return $r3
org.jfree.data.DefaultKeyedValues.getKeys : return $r3 >>>>>>>> org.jfree.data.general.DefaultPieDataset.getKeys : $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2)
org.jfree.data.general.DefaultPieDataset.getKeys : $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2) >>>>>>>> org.jfree.data.general.DefaultPieDataset.getKeys : return $r3
org.jfree.data.general.DefaultPieDataset.getKeys : return $r3 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : i0 = 0
org.jfree.chart.plot.PiePlot.getLegendItems : i0 = 0 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Shape getLegendItemShape()>()
org.jfree.chart.plot.PiePlot.getLegendItems : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Shape getLegendItemShape()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItemShape : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Shape legendItemShape>
org.jfree.chart.plot.PiePlot.getLegendItemShape : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Shape legendItemShape> >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItemShape : return $r1
org.jfree.chart.plot.PiePlot.getLegendItemShape : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.PiePlot.getLegendItems : r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot.getLegendItems : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : if $z1 == 0
org.jfree.chart.plot.PiePlot.getLegendItems : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot.getLegendItems : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : r6 = (java.lang.Comparable) $r18
org.jfree.chart.plot.PiePlot.getLegendItems : r6 = (java.lang.Comparable) $r18 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $r19 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getLegendItems : $r19 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : r7 = interfaceinvoke $r19.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r6)
org.jfree.chart.plot.PiePlot.getLegendItems : r7 = interfaceinvoke $r19.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r6) >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.general.DefaultPieDataset.getValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : $r2 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.data.general.DefaultPieDataset.getValue : $r2 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data> >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : $r3 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(java.lang.Comparable)>(r1)
org.jfree.data.general.DefaultPieDataset.getValue : $r3 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.getValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : if i0 >= 0
org.jfree.data.DefaultKeyedValues.getValue : if i0 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r7
org.jfree.data.DefaultKeyedValues.getValue : return $r7 >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : return $r3
org.jfree.data.general.DefaultPieDataset.getValue : return $r3 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : z0 = 1
org.jfree.chart.plot.PiePlot.getLegendItems : z0 = 1 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : if r7 != null
org.jfree.chart.plot.PiePlot.getLegendItems : if r7 != null >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : d0 = virtualinvoke r7.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.getLegendItems : d0 = virtualinvoke r7.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $b1 = d0 cmpl 0.0
org.jfree.chart.plot.PiePlot.getLegendItems : $b1 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : if $b1 != 0
org.jfree.chart.plot.PiePlot.getLegendItems : if $b1 != 0 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $b2 = d0 cmpl 0.0
org.jfree.chart.plot.PiePlot.getLegendItems : $b2 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : if $b2 <= 0
org.jfree.chart.plot.PiePlot.getLegendItems : if $b2 <= 0 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $z7 = 1
org.jfree.chart.plot.PiePlot.getLegendItems : $z7 = 1 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : goto [?= z4 = $z7]
org.jfree.chart.plot.PiePlot.getLegendItems : goto [?= z4 = $z7] >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : z4 = $z7
org.jfree.chart.plot.PiePlot.getLegendItems : z4 = $z7 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : if z4 == 0
org.jfree.chart.plot.PiePlot.getLegendItems : if z4 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $r20 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator legendLabelGenerator>
org.jfree.chart.plot.PiePlot.getLegendItems : $r20 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator legendLabelGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getLegendItems : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : r22 = interfaceinvoke $r20.<org.jfree.chart.labels.PieSectionLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>($r21, r6)
org.jfree.chart.plot.PiePlot.getLegendItems : r22 = interfaceinvoke $r20.<org.jfree.chart.labels.PieSectionLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>($r21, r6) >>>>>>>> org.jfree.chart.plot.junit.PiePlotTests$NullLegendLabelGenerator.generateSectionLabel : return null
org.jfree.chart.plot.junit.PiePlotTests$NullLegendLabelGenerator.generateSectionLabel : return null >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : if r22 == null
org.jfree.chart.plot.PiePlot.getLegendItems : if r22 == null >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : i0 = i0 + 1
org.jfree.chart.plot.PiePlot.getLegendItems : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : goto [?= (branch)]
org.jfree.chart.plot.PiePlot.getLegendItems : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.PiePlot.getLegendItems : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.PiePlot.getLegendItems : return r2
org.jfree.chart.plot.PiePlot.getLegendItems : return r2 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null
org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : return $i0
org.jfree.chart.LegendItemCollection.getItemCount : return $i0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if i1 >= $i3
org.jfree.chart.title.LegendTitle.fetchLegendItems : if i1 >= $i3 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = i0 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = i0 + 1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= return]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= return] >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $z0 = virtualinvoke $r8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>()
org.jfree.chart.title.LegendTitle.arrange : $z0 = virtualinvoke $r8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()
org.jfree.chart.block.BlockContainer.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : return $z0
org.jfree.chart.block.BlockContainer.isEmpty : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : if $z0 == 0
org.jfree.chart.title.LegendTitle.arrange : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : return r4
org.jfree.chart.title.LegendTitle.arrange : return r4 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r23 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $r23 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23)
org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r9
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r9 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r10
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r10 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d11 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d11 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = $d10 - $d11
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = $d10 - $d11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7)
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r4 = (java.awt.geom.Rectangle2D) $r11
org.jfree.chart.title.LegendTitle.draw : r4 = (java.awt.geom.Rectangle2D) $r11 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r5 = (java.awt.geom.Rectangle2D) $r12
org.jfree.chart.title.LegendTitle.draw : r5 = (java.awt.geom.Rectangle2D) $r12 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r6 = null
org.jfree.chart.title.LegendTitle.draw : r6 = null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z0 == 0
org.jfree.chart.title.LegendTitle.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r13 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendTitle.draw : $r13 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z1 == 0
org.jfree.chart.title.LegendTitle.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4)
org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $r17 == null
org.jfree.chart.title.LegendTitle.draw : if $r17 == null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r18)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r18) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>()
org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.getFrame : return $r1
org.jfree.chart.block.AbstractBlock.getFrame : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b0 <= 0
org.jfree.chart.block.LineBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.getInsets : return $r1
org.jfree.chart.block.LineBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke $r19.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke $r19.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if r8 != null
org.jfree.chart.title.LegendTitle.draw : if r8 != null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3)
org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r4 = null
org.jfree.chart.block.BlockContainer.draw : r4 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z0 == 0
org.jfree.chart.block.BlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z1 == 0
org.jfree.chart.block.BlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15
org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z2 == 0
org.jfree.chart.block.BlockContainer.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r22 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if r4 == null
org.jfree.chart.block.BlockContainer.draw : if r4 == null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : return r22 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z2 == 0
org.jfree.chart.title.LegendTitle.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : return r9
org.jfree.chart.title.LegendTitle.draw : return r9 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d14 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.JFreeChart.drawTitle : $d14 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d17 = r21.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.drawTitle : $d17 = r21.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d18 = $d16 - $d17
org.jfree.chart.JFreeChart.drawTitle : $d18 = $d16 - $d17 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d13, $d14, $d15, $d18)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d13, $d14, $d15, $d18) >>>>>>>> org.jfree.chart.JFreeChart.draw : if r11 == null
org.jfree.chart.JFreeChart.draw : if r11 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : goto [?= $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.JFreeChart.draw : goto [?= $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.JFreeChart.draw : r45 = r28
org.jfree.chart.JFreeChart.draw : r45 = r28 >>>>>>>> org.jfree.chart.JFreeChart.draw : r46 = null
org.jfree.chart.JFreeChart.draw : r46 = null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke $r47.<org.jfree.chart.plot.Plot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r45, r3, null, r46)
org.jfree.chart.JFreeChart.draw : virtualinvoke $r47.<org.jfree.chart.plot.Plot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r45, r3, null, r46) >>>>>>>> org.jfree.chart.plot.PiePlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.PiePlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.getInsets : return $r1
org.jfree.chart.plot.Plot.getInsets : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.PiePlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.PiePlot.draw : if r5 == null
org.jfree.chart.plot.PiePlot.draw : if r5 == null >>>>>>>> org.jfree.chart.plot.PiePlot.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.PiePlot.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.Plot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.Plot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $r3 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.fillBackground : $r3 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)>(r1, r2, $r3)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)>(r1, r2, $r3) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "orientation")
org.jfree.chart.plot.Plot.fillBackground : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "orientation") >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : if $r6 != null
org.jfree.chart.plot.Plot.fillBackground : if $r6 != null >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $z0 = r4 instanceof java.awt.GradientPaint
org.jfree.chart.plot.Plot.fillBackground : $z0 = r4 instanceof java.awt.GradientPaint >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : if $z0 == 0
org.jfree.chart.plot.Plot.fillBackground : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : r15 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.Plot.fillBackground : r15 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>() >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $f8 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.fillBackground : $f8 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : $r16 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f8)
org.jfree.chart.plot.Plot.fillBackground : $r16 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f8) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r16)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r16) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r15)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r15) >>>>>>>> org.jfree.chart.plot.Plot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.Plot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.Plot.drawBackgroundImage : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.plot.Plot.drawBackgroundImage : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.plot.Plot.drawBackgroundImage : if $r6 != null
org.jfree.chart.plot.Plot.drawBackgroundImage : if $r6 != null >>>>>>>> org.jfree.chart.plot.PiePlot.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.PiePlot.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.drawOutline : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : if $z0 != 0
org.jfree.chart.plot.Plot.drawOutline : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : if $r3 == null
org.jfree.chart.plot.Plot.drawOutline : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.drawOutline : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : if $r4 == null
org.jfree.chart.plot.Plot.drawOutline : if $r4 == null >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5)
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5) >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.drawOutline : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r6)
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r6) >>>>>>>> org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.plot.PiePlot.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.PiePlot.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.plot.PiePlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.plot.PiePlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.plot.PiePlot.draw : r8 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.PiePlot.draw : r8 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>() >>>>>>>> org.jfree.chart.plot.PiePlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: float getForegroundAlpha()>()
org.jfree.chart.plot.PiePlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: float getForegroundAlpha()>() >>>>>>>> org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha> >>>>>>>> org.jfree.chart.plot.Plot.getForegroundAlpha : return $f0
org.jfree.chart.plot.Plot.getForegroundAlpha : return $f0 >>>>>>>> org.jfree.chart.plot.PiePlot.draw : $r12 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.PiePlot.draw : $r12 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0) >>>>>>>> org.jfree.chart.plot.PiePlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r12)
org.jfree.chart.plot.PiePlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r12) >>>>>>>> org.jfree.chart.plot.PiePlot.draw : $r13 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.draw : $r13 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.draw : $z0 = staticinvoke <org.jfree.data.general.DatasetUtilities: boolean isEmptyOrNull(org.jfree.data.general.PieDataset)>($r13)
org.jfree.chart.plot.PiePlot.draw : $z0 = staticinvoke <org.jfree.data.general.DatasetUtilities: boolean isEmptyOrNull(org.jfree.data.general.PieDataset)>($r13) >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: int getItemCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: int getItemCount()>() >>>>>>>> org.jfree.data.general.DefaultPieDataset.getItemCount : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.data.general.DefaultPieDataset.getItemCount : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data> >>>>>>>> org.jfree.data.general.DefaultPieDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues: int getItemCount()>()
org.jfree.data.general.DefaultPieDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues: int getItemCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>()
org.jfree.data.DefaultKeyedValues.getItemCount : $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : return $i0
org.jfree.data.DefaultKeyedValues.getItemCount : return $i0 >>>>>>>> org.jfree.data.general.DefaultPieDataset.getItemCount : return $i0
org.jfree.data.general.DefaultPieDataset.getItemCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 != 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 >= i0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : r1 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.lang.Number getValue(int)>(i1)
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : r1 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.lang.Number getValue(int)>(i1) >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : r1 = null
org.jfree.data.general.DefaultPieDataset.getValue : r1 = null >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : $i1 = virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: int getItemCount()>()
org.jfree.data.general.DefaultPieDataset.getValue : $i1 = virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: int getItemCount()>() >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : if $i1 <= i0
org.jfree.data.general.DefaultPieDataset.getValue : if $i1 <= i0 >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : r1 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.data.general.DefaultPieDataset.getValue : r1 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i0) >>>>>>>> org.jfree.data.general.DefaultPieDataset.getValue : return r1
org.jfree.data.general.DefaultPieDataset.getValue : return r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r1 == null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r1 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $b2 = d0 cmpl 0.0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $b2 = d0 cmpl 0.0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $b2 <= 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $b2 <= 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0 >>>>>>>> org.jfree.chart.plot.PiePlot.draw : if $z0 != 0
org.jfree.chart.plot.PiePlot.draw : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.PiePlot.draw : r9 = r1
org.jfree.chart.plot.PiePlot.draw : r9 = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.draw : r10 = null
org.jfree.chart.plot.PiePlot.draw : r10 = null >>>>>>>> org.jfree.chart.plot.PiePlot.draw : $r14 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PiePlot.draw : $r14 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.draw : if $r14 == null
org.jfree.chart.plot.PiePlot.draw : if $r14 == null >>>>>>>> org.jfree.chart.plot.PiePlot.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r5)
org.jfree.chart.plot.PiePlot.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r5) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PiePlotState initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r0, null, r3)
org.jfree.chart.plot.PiePlot.drawPie : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PiePlotState initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r0, null, r3) >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : $r6 = new org.jfree.chart.plot.PiePlotState
org.jfree.chart.plot.PiePlot.initialise : $r6 = new org.jfree.chart.plot.PiePlotState >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : specialinvoke $r6.<org.jfree.chart.plot.PiePlotState: void <init>(org.jfree.chart.plot.PlotRenderingInfo)>(r5)
org.jfree.chart.plot.PiePlot.initialise : specialinvoke $r6.<org.jfree.chart.plot.PiePlotState: void <init>(org.jfree.chart.plot.PlotRenderingInfo)>(r5) >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : r7 = $r6
org.jfree.chart.plot.PiePlot.initialise : r7 = $r6 >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : virtualinvoke r7.<org.jfree.chart.plot.PiePlotState: void setPassesRequired(int)>(2)
org.jfree.chart.plot.PiePlot.initialise : virtualinvoke r7.<org.jfree.chart.plot.PiePlotState: void setPassesRequired(int)>(2) >>>>>>>> org.jfree.chart.plot.PiePlotState.setPassesRequired : r0.<org.jfree.chart.plot.PiePlotState: int passesRequired> = i0
org.jfree.chart.plot.PiePlotState.setPassesRequired : r0.<org.jfree.chart.plot.PiePlotState: int passesRequired> = i0 >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : $r8 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.initialise : $r8 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : if $r8 == null
org.jfree.chart.plot.PiePlot.initialise : if $r8 == null >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : $r9 = virtualinvoke r3.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset getDataset()>()
org.jfree.chart.plot.PiePlot.initialise : $r9 = virtualinvoke r3.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset getDataset()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getDataset : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getDataset : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getDataset : return $r1
org.jfree.chart.plot.PiePlot.getDataset : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : $d0 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>($r9)
org.jfree.chart.plot.PiePlot.initialise : $d0 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>($r9) >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r1 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r1 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.util.List getKeys()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d0 = 0.0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d0 = 0.0 >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if $z0 == 0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if $z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r3 = (java.lang.Comparable) $r5
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r3 = (java.lang.Comparable) $r5 >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if r3 == null
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if r3 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r4 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r3)
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r4 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d1 = 0.0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d1 = 0.0 >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if r4 == null
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if r4 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $b0 = d1 cmpl 0.0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $b0 = d1 cmpl 0.0 >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if $b0 <= 0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if $b0 <= 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d0 = d0 + d1
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d0 = d0 + d1 >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : return d0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : return d0 >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : virtualinvoke r7.<org.jfree.chart.plot.PiePlotState: void setTotal(double)>($d0)
org.jfree.chart.plot.PiePlot.initialise : virtualinvoke r7.<org.jfree.chart.plot.PiePlotState: void setTotal(double)>($d0) >>>>>>>> org.jfree.chart.plot.PiePlotState.setTotal : r0.<org.jfree.chart.plot.PiePlotState: double total> = d0
org.jfree.chart.plot.PiePlotState.setTotal : r0.<org.jfree.chart.plot.PiePlotState: double total> = d0 >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : $d1 = virtualinvoke r3.<org.jfree.chart.plot.PiePlot: double getStartAngle()>()
org.jfree.chart.plot.PiePlot.initialise : $d1 = virtualinvoke r3.<org.jfree.chart.plot.PiePlot: double getStartAngle()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getStartAngle : $d0 = r0.<org.jfree.chart.plot.PiePlot: double startAngle>
org.jfree.chart.plot.PiePlot.getStartAngle : $d0 = r0.<org.jfree.chart.plot.PiePlot: double startAngle> >>>>>>>> org.jfree.chart.plot.PiePlot.getStartAngle : return $d0
org.jfree.chart.plot.PiePlot.getStartAngle : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : virtualinvoke r7.<org.jfree.chart.plot.PiePlotState: void setLatestAngle(double)>($d1)
org.jfree.chart.plot.PiePlot.initialise : virtualinvoke r7.<org.jfree.chart.plot.PiePlotState: void setLatestAngle(double)>($d1) >>>>>>>> org.jfree.chart.plot.PiePlotState.setLatestAngle : r0.<org.jfree.chart.plot.PiePlotState: double latestAngle> = d0
org.jfree.chart.plot.PiePlotState.setLatestAngle : r0.<org.jfree.chart.plot.PiePlotState: double latestAngle> = d0 >>>>>>>> org.jfree.chart.plot.PiePlot.initialise : return r7
org.jfree.chart.plot.PiePlot.initialise : return r7 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d0 = 0.0
org.jfree.chart.plot.PiePlot.drawPie : d0 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r9 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator>
org.jfree.chart.plot.PiePlot.drawPie : $r9 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if $r9 == null
org.jfree.chart.plot.PiePlot.drawPie : if $r9 == null >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean simpleLabels>
org.jfree.chart.plot.PiePlot.drawPie : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean simpleLabels> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if $z0 != 0
org.jfree.chart.plot.PiePlot.drawPie : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d18 = r0.<org.jfree.chart.plot.PiePlot: double labelGap>
org.jfree.chart.plot.PiePlot.drawPie : $d18 = r0.<org.jfree.chart.plot.PiePlot: double labelGap> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d19 = r0.<org.jfree.chart.plot.PiePlot: double maximumLabelWidth>
org.jfree.chart.plot.PiePlot.drawPie : $d19 = r0.<org.jfree.chart.plot.PiePlot: double maximumLabelWidth> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d0 = $d18 + $d19
org.jfree.chart.plot.PiePlot.drawPie : d0 = $d18 + $d19 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d20 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawPie : $d20 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d21 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap>
org.jfree.chart.plot.PiePlot.drawPie : $d21 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d22 = $d21 + d0
org.jfree.chart.plot.PiePlot.drawPie : $d22 = $d21 + d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d23 = $d20 * $d22
org.jfree.chart.plot.PiePlot.drawPie : $d23 = $d20 * $d22 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d1 = $d23 * 2.0
org.jfree.chart.plot.PiePlot.drawPie : d1 = $d23 * 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d24 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawPie : $d24 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d25 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap>
org.jfree.chart.plot.PiePlot.drawPie : $d25 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d26 = $d24 * $d25
org.jfree.chart.plot.PiePlot.drawPie : $d26 = $d24 * $d25 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d2 = $d26 * 2.0
org.jfree.chart.plot.PiePlot.drawPie : d2 = $d26 * 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d27 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot.drawPie : $d27 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d28 = d1 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d28 = d1 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d3 = $d27 + $d28
org.jfree.chart.plot.PiePlot.drawPie : d3 = $d27 + $d28 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d29 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.PiePlot.drawPie : $d29 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d30 = d2 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d30 = d2 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d4 = $d29 + $d30
org.jfree.chart.plot.PiePlot.drawPie : d4 = $d29 + $d30 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d31 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawPie : $d31 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d5 = $d31 - d1
org.jfree.chart.plot.PiePlot.drawPie : d5 = $d31 - d1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d32 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawPie : $d32 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d6 = $d32 - d2
org.jfree.chart.plot.PiePlot.drawPie : d6 = $d32 - d2 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $z1 = r0.<org.jfree.chart.plot.PiePlot: boolean circular>
org.jfree.chart.plot.PiePlot.drawPie : $z1 = r0.<org.jfree.chart.plot.PiePlot: boolean circular> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if $z1 == 0
org.jfree.chart.plot.PiePlot.drawPie : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d33 = staticinvoke <java.lang.Math: double min(double,double)>(d5, d6)
org.jfree.chart.plot.PiePlot.drawPie : $d33 = staticinvoke <java.lang.Math: double min(double,double)>(d5, d6) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d7 = $d33 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : d7 = $d33 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d34 = d3 + d3
org.jfree.chart.plot.PiePlot.drawPie : $d34 = d3 + d3 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d35 = $d34 + d5
org.jfree.chart.plot.PiePlot.drawPie : $d35 = $d34 + d5 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d36 = $d35 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d36 = $d35 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d3 = $d36 - d7
org.jfree.chart.plot.PiePlot.drawPie : d3 = $d36 - d7 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d37 = d4 + d4
org.jfree.chart.plot.PiePlot.drawPie : $d37 = d4 + d4 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d38 = $d37 + d6
org.jfree.chart.plot.PiePlot.drawPie : $d38 = $d37 + d6 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d39 = $d38 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d39 = $d38 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d4 = $d39 - d7
org.jfree.chart.plot.PiePlot.drawPie : d4 = $d39 - d7 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d5 = 2.0 * d7
org.jfree.chart.plot.PiePlot.drawPie : d5 = 2.0 * d7 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d6 = 2.0 * d7
org.jfree.chart.plot.PiePlot.drawPie : d6 = 2.0 * d7 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r10 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot.drawPie : $r10 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : specialinvoke $r10.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d3, d4, d5, d6)
org.jfree.chart.plot.PiePlot.drawPie : specialinvoke $r10.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d3, d4, d5, d6) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : r11 = $r10
org.jfree.chart.plot.PiePlot.drawPie : r11 = $r10 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setLinkArea(java.awt.geom.Rectangle2D)>(r11)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setLinkArea(java.awt.geom.Rectangle2D)>(r11) >>>>>>>> org.jfree.chart.plot.PiePlotState.setLinkArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D linkArea> = r1
org.jfree.chart.plot.PiePlotState.setLinkArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D linkArea> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d8 = 0.0
org.jfree.chart.plot.PiePlot.drawPie : d8 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $z2 = r0.<org.jfree.chart.plot.PiePlot: boolean simpleLabels>
org.jfree.chart.plot.PiePlot.drawPie : $z2 = r0.<org.jfree.chart.plot.PiePlot: boolean simpleLabels> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if $z2 != 0
org.jfree.chart.plot.PiePlot.drawPie : if $z2 != 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d8 = r0.<org.jfree.chart.plot.PiePlot: double labelLinkMargin>
org.jfree.chart.plot.PiePlot.drawPie : d8 = r0.<org.jfree.chart.plot.PiePlot: double labelLinkMargin> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d40 = virtualinvoke r11.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawPie : $d40 = virtualinvoke r11.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d41 = $d40 * d8
org.jfree.chart.plot.PiePlot.drawPie : $d41 = $d40 * d8 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d9 = $d41 * 2.0
org.jfree.chart.plot.PiePlot.drawPie : d9 = $d41 * 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d42 = virtualinvoke r11.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawPie : $d42 = virtualinvoke r11.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d43 = $d42 * d8
org.jfree.chart.plot.PiePlot.drawPie : $d43 = $d42 * d8 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d10 = $d43 * 2.0
org.jfree.chart.plot.PiePlot.drawPie : d10 = $d43 * 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r12 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot.drawPie : $r12 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d44 = d9 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d44 = d9 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d45 = d3 + $d44
org.jfree.chart.plot.PiePlot.drawPie : $d45 = d3 + $d44 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d46 = d10 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d46 = d10 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d47 = d4 + $d46
org.jfree.chart.plot.PiePlot.drawPie : $d47 = d4 + $d46 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d48 = d5 - d9
org.jfree.chart.plot.PiePlot.drawPie : $d48 = d5 - d9 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d49 = d6 - d10
org.jfree.chart.plot.PiePlot.drawPie : $d49 = d6 - d10 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : specialinvoke $r12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d45, $d47, $d48, $d49)
org.jfree.chart.plot.PiePlot.drawPie : specialinvoke $r12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d45, $d47, $d48, $d49) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : r5 = $r12
org.jfree.chart.plot.PiePlot.drawPie : r5 = $r12 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setExplodedPieArea(java.awt.geom.Rectangle2D)>(r5)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setExplodedPieArea(java.awt.geom.Rectangle2D)>(r5) >>>>>>>> org.jfree.chart.plot.PiePlotState.setExplodedPieArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D explodedPieArea> = r1
org.jfree.chart.plot.PiePlotState.setExplodedPieArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D explodedPieArea> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d11 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getMaximumExplodePercent()>()
org.jfree.chart.plot.PiePlot.drawPie : d11 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getMaximumExplodePercent()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : if $r4 != null
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : if $r4 != null >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : d0 = 0.0
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : d0 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r5 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r5 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r6 = interfaceinvoke $r5.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r6 = interfaceinvoke $r5.<org.jfree.data.general.PieDataset: java.util.List getKeys()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : r1 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : r1 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : if $z0 == 0
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : r2 = (java.lang.Comparable) $r7
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : r2 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r8 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages>
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r8 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages> >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : r3 = (java.lang.Number) $r9
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : r3 = (java.lang.Number) $r9 >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : if r3 == null
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : if r3 == null >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : return d0
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : return d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d50 = 1.0 + d11
org.jfree.chart.plot.PiePlot.drawPie : $d50 = 1.0 + d11 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d12 = d11 / $d50
org.jfree.chart.plot.PiePlot.drawPie : d12 = d11 / $d50 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d51 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawPie : $d51 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d13 = $d51 * d12
org.jfree.chart.plot.PiePlot.drawPie : d13 = $d51 * d12 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d52 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawPie : $d52 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d14 = $d52 * d12
org.jfree.chart.plot.PiePlot.drawPie : d14 = $d52 * d12 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r13 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot.drawPie : $r13 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d53 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot.drawPie : $d53 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d54 = d13 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d54 = d13 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d55 = $d53 + $d54
org.jfree.chart.plot.PiePlot.drawPie : $d55 = $d53 + $d54 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d56 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.PiePlot.drawPie : $d56 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d57 = d14 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d57 = d14 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d58 = $d56 + $d57
org.jfree.chart.plot.PiePlot.drawPie : $d58 = $d56 + $d57 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d59 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawPie : $d59 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d60 = $d59 - d13
org.jfree.chart.plot.PiePlot.drawPie : $d60 = $d59 - d13 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d61 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawPie : $d61 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d62 = $d61 - d14
org.jfree.chart.plot.PiePlot.drawPie : $d62 = $d61 - d14 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : specialinvoke $r13.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d55, $d58, $d60, $d62)
org.jfree.chart.plot.PiePlot.drawPie : specialinvoke $r13.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d55, $d58, $d60, $d62) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : r6 = $r13
org.jfree.chart.plot.PiePlot.drawPie : r6 = $r13 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieArea(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieArea(java.awt.geom.Rectangle2D)>(r6) >>>>>>>> org.jfree.chart.plot.PiePlotState.setPieArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D pieArea> = r1
org.jfree.chart.plot.PiePlotState.setPieArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D pieArea> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d63 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.plot.PiePlot.drawPie : $d63 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieCenterX(double)>($d63)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieCenterX(double)>($d63) >>>>>>>> org.jfree.chart.plot.PiePlotState.setPieCenterX : r0.<org.jfree.chart.plot.PiePlotState: double pieCenterX> = d0
org.jfree.chart.plot.PiePlotState.setPieCenterX : r0.<org.jfree.chart.plot.PiePlotState: double pieCenterX> = d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d64 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.plot.PiePlot.drawPie : $d64 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieCenterY(double)>($d64)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieCenterY(double)>($d64) >>>>>>>> org.jfree.chart.plot.PiePlotState.setPieCenterY : r0.<org.jfree.chart.plot.PiePlotState: double pieCenterY> = d0
org.jfree.chart.plot.PiePlotState.setPieCenterY : r0.<org.jfree.chart.plot.PiePlotState: double pieCenterY> = d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d65 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawPie : $d65 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d66 = $d65 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d66 = $d65 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieWRadius(double)>($d66)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieWRadius(double)>($d66) >>>>>>>> org.jfree.chart.plot.PiePlotState.setPieWRadius : r0.<org.jfree.chart.plot.PiePlotState: double pieWRadius> = d0
org.jfree.chart.plot.PiePlotState.setPieWRadius : r0.<org.jfree.chart.plot.PiePlotState: double pieWRadius> = d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d67 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawPie : $d67 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $d68 = $d67 / 2.0
org.jfree.chart.plot.PiePlot.drawPie : $d68 = $d67 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieHRadius(double)>($d68)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: void setPieHRadius(double)>($d68) >>>>>>>> org.jfree.chart.plot.PiePlotState.setPieHRadius : r0.<org.jfree.chart.plot.PiePlotState: double pieHRadius> = d0
org.jfree.chart.plot.PiePlotState.setPieHRadius : r0.<org.jfree.chart.plot.PiePlotState: double pieHRadius> = d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r14 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawPie : $r14 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if $r14 == null
org.jfree.chart.plot.PiePlot.drawPie : if $r14 == null >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r15 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawPie : $r15 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r16 = interfaceinvoke $r15.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.chart.plot.PiePlot.drawPie : $r16 = interfaceinvoke $r15.<org.jfree.data.general.PieDataset: java.util.List getKeys()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $i3 = interfaceinvoke $r16.<java.util.List: int size()>()
org.jfree.chart.plot.PiePlot.drawPie : $i3 = interfaceinvoke $r16.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if $i3 <= 0
org.jfree.chart.plot.PiePlot.drawPie : if $i3 <= 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawPie : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : r7 = interfaceinvoke $r17.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.chart.plot.PiePlot.drawPie : r7 = interfaceinvoke $r17.<org.jfree.data.general.PieDataset: java.util.List getKeys()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r18 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawPie : $r18 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d15 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>($r18)
org.jfree.chart.plot.PiePlot.drawPie : d15 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>($r18) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : i0 = virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: int getPassesRequired()>()
org.jfree.chart.plot.PiePlot.drawPie : i0 = virtualinvoke r4.<org.jfree.chart.plot.PiePlotState: int getPassesRequired()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getPassesRequired : $i0 = r0.<org.jfree.chart.plot.PiePlotState: int passesRequired>
org.jfree.chart.plot.PiePlotState.getPassesRequired : $i0 = r0.<org.jfree.chart.plot.PiePlotState: int passesRequired> >>>>>>>> org.jfree.chart.plot.PiePlotState.getPassesRequired : return $i0
org.jfree.chart.plot.PiePlotState.getPassesRequired : return $i0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : i1 = 0
org.jfree.chart.plot.PiePlot.drawPie : i1 = 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if i1 >= i0
org.jfree.chart.plot.PiePlot.drawPie : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d16 = 0.0
org.jfree.chart.plot.PiePlot.drawPie : d16 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : i2 = 0
org.jfree.chart.plot.PiePlot.drawPie : i2 = 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $i4 = interfaceinvoke r7.<java.util.List: int size()>()
org.jfree.chart.plot.PiePlot.drawPie : $i4 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if i2 >= $i4
org.jfree.chart.plot.PiePlot.drawPie : if i2 >= $i4 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $r19 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawPie : $r19 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : r8 = interfaceinvoke $r19.<org.jfree.data.general.PieDataset: java.lang.Number getValue(int)>(i2)
org.jfree.chart.plot.PiePlot.drawPie : r8 = interfaceinvoke $r19.<org.jfree.data.general.PieDataset: java.lang.Number getValue(int)>(i2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if r8 == null
org.jfree.chart.plot.PiePlot.drawPie : if r8 == null >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d17 = virtualinvoke r8.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.drawPie : d17 = virtualinvoke r8.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $b5 = d17 cmpl 0.0
org.jfree.chart.plot.PiePlot.drawPie : $b5 = d17 cmpl 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if $b5 <= 0
org.jfree.chart.plot.PiePlot.drawPie : if $b5 <= 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : d16 = d16 + d17
org.jfree.chart.plot.PiePlot.drawPie : d16 = d16 + d17 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>(r1, i2, r5, r4, i1)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>(r1, i2, r5, r4, i1) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r15 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawItem : $r15 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : r4 = interfaceinvoke $r15.<org.jfree.data.general.PieDataset: java.lang.Number getValue(int)>(i0)
org.jfree.chart.plot.PiePlot.drawItem : r4 = interfaceinvoke $r15.<org.jfree.data.general.PieDataset: java.lang.Number getValue(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if r4 != null
org.jfree.chart.plot.PiePlot.drawItem : if r4 != null >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.drawItem : d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : d1 = 0.0
org.jfree.chart.plot.PiePlot.drawItem : d1 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : d2 = 0.0
org.jfree.chart.plot.PiePlot.drawItem : d2 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r16 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.util.Rotation direction>
org.jfree.chart.plot.PiePlot.drawItem : $r16 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.util.Rotation direction> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r17 = <org.jfree.util.Rotation: org.jfree.util.Rotation CLOCKWISE>
org.jfree.chart.plot.PiePlot.drawItem : $r17 = <org.jfree.util.Rotation: org.jfree.util.Rotation CLOCKWISE> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if $r16 != $r17
org.jfree.chart.plot.PiePlot.drawItem : if $r16 != $r17 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : d6 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: double getLatestAngle()>()
org.jfree.chart.plot.PiePlot.drawItem : d6 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: double getLatestAngle()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getLatestAngle : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double latestAngle>
org.jfree.chart.plot.PiePlotState.getLatestAngle : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double latestAngle> >>>>>>>> org.jfree.chart.plot.PiePlotState.getLatestAngle : return $d0
org.jfree.chart.plot.PiePlotState.getLatestAngle : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d7 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: double getTotal()>()
org.jfree.chart.plot.PiePlot.drawItem : $d7 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: double getTotal()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getTotal : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double total>
org.jfree.chart.plot.PiePlotState.getTotal : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double total> >>>>>>>> org.jfree.chart.plot.PiePlotState.getTotal : return $d0
org.jfree.chart.plot.PiePlotState.getTotal : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d8 = d0 / $d7
org.jfree.chart.plot.PiePlot.drawItem : $d8 = d0 / $d7 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d9 = $d8 * 360.0
org.jfree.chart.plot.PiePlot.drawItem : $d9 = $d8 * 360.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : d10 = d6 - $d9
org.jfree.chart.plot.PiePlot.drawItem : d10 = d6 - $d9 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : goto [?= d3 = d10 - d6]
org.jfree.chart.plot.PiePlot.drawItem : goto [?= d3 = d10 - d6] >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : d3 = d10 - d6
org.jfree.chart.plot.PiePlot.drawItem : d3 = d10 - d6 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d14 = staticinvoke <java.lang.Math: double abs(double)>(d3)
org.jfree.chart.plot.PiePlot.drawItem : $d14 = staticinvoke <java.lang.Math: double abs(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d15 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getMinimumArcAngleToDraw()>()
org.jfree.chart.plot.PiePlot.drawItem : $d15 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getMinimumArcAngleToDraw()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getMinimumArcAngleToDraw : $d0 = r0.<org.jfree.chart.plot.PiePlot: double minimumArcAngleToDraw>
org.jfree.chart.plot.PiePlot.getMinimumArcAngleToDraw : $d0 = r0.<org.jfree.chart.plot.PiePlot: double minimumArcAngleToDraw> >>>>>>>> org.jfree.chart.plot.PiePlot.getMinimumArcAngleToDraw : return $d0
org.jfree.chart.plot.PiePlot.getMinimumArcAngleToDraw : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $b2 = $d14 cmpl $d15
org.jfree.chart.plot.PiePlot.drawItem : $b2 = $d14 cmpl $d15 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if $b2 <= 0
org.jfree.chart.plot.PiePlot.drawItem : if $b2 <= 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : d4 = 0.0
org.jfree.chart.plot.PiePlot.drawItem : d4 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : d5 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getMaximumExplodePercent()>()
org.jfree.chart.plot.PiePlot.drawItem : d5 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getMaximumExplodePercent()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $b3 = d5 cmpl 0.0
org.jfree.chart.plot.PiePlot.drawItem : $b3 = d5 cmpl 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if $b3 <= 0
org.jfree.chart.plot.PiePlot.drawItem : if $b3 <= 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r21 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getPieArea()>()
org.jfree.chart.plot.PiePlot.drawItem : $r21 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getPieArea()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieArea : $r1 = r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D pieArea>
org.jfree.chart.plot.PiePlotState.getPieArea : $r1 = r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D pieArea> >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieArea : return $r1
org.jfree.chart.plot.PiePlotState.getPieArea : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r22 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getExplodedPieArea()>()
org.jfree.chart.plot.PiePlot.drawItem : $r22 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getExplodedPieArea()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getExplodedPieArea : $r1 = r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D explodedPieArea>
org.jfree.chart.plot.PiePlotState.getExplodedPieArea : $r1 = r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D explodedPieArea> >>>>>>>> org.jfree.chart.plot.PiePlotState.getExplodedPieArea : return $r1
org.jfree.chart.plot.PiePlotState.getExplodedPieArea : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : r5 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.geom.Rectangle2D getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)>($r21, $r22, d6, d3, d4)
org.jfree.chart.plot.PiePlot.drawItem : r5 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.geom.Rectangle2D getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)>($r21, $r22, d6, d3, d4) >>>>>>>> org.jfree.chart.plot.PiePlot.getArcBounds : $b0 = d2 cmpl 0.0
org.jfree.chart.plot.PiePlot.getArcBounds : $b0 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.getArcBounds : if $b0 != 0
org.jfree.chart.plot.PiePlot.getArcBounds : if $b0 != 0 >>>>>>>> org.jfree.chart.plot.PiePlot.getArcBounds : return r1
org.jfree.chart.plot.PiePlot.getArcBounds : return r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r23 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.PiePlot.drawItem : $r23 = new java.awt.geom.Arc2D$Double >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : specialinvoke $r23.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(r5, d6, d3, 2)
org.jfree.chart.plot.PiePlot.drawItem : specialinvoke $r23.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(r5, d6, d3, 2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : r6 = $r23
org.jfree.chart.plot.PiePlot.drawItem : r6 = $r23 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if i1 != 0
org.jfree.chart.plot.PiePlot.drawItem : if i1 != 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r24 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint shadowPaint>
org.jfree.chart.plot.PiePlot.drawItem : $r24 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint shadowPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if $r24 == null
org.jfree.chart.plot.PiePlot.drawItem : if $r24 == null >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r25 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PiePlot.drawItem : $r25 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if $r25 != null
org.jfree.chart.plot.PiePlot.drawItem : if $r25 != null >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d17 = r0.<org.jfree.chart.plot.PiePlot: double shadowXOffset>
org.jfree.chart.plot.PiePlot.drawItem : $d17 = r0.<org.jfree.chart.plot.PiePlot: double shadowXOffset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $f0 = (float) $d17
org.jfree.chart.plot.PiePlot.drawItem : $f0 = (float) $d17 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d18 = (double) $f0
org.jfree.chart.plot.PiePlot.drawItem : $d18 = (double) $f0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d19 = r0.<org.jfree.chart.plot.PiePlot: double shadowYOffset>
org.jfree.chart.plot.PiePlot.drawItem : $d19 = r0.<org.jfree.chart.plot.PiePlot: double shadowYOffset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $f1 = (float) $d19
org.jfree.chart.plot.PiePlot.drawItem : $f1 = (float) $d19 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $d20 = (double) $f1
org.jfree.chart.plot.PiePlot.drawItem : $d20 = (double) $f1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : r7 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape createTranslatedShape(java.awt.Shape,double,double)>(r6, $d18, $d20)
org.jfree.chart.plot.PiePlot.drawItem : r7 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape createTranslatedShape(java.awt.Shape,double,double)>(r6, $d18, $d20) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r26 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint shadowPaint>
org.jfree.chart.plot.PiePlot.drawItem : $r26 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint shadowPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r26)
org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r26) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r7)
org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r7) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : goto [?= virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: void setLatestAngle(double)>(d10)]
org.jfree.chart.plot.PiePlot.drawItem : goto [?= virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: void setLatestAngle(double)>(d10)] >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: void setLatestAngle(double)>(d10)
org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: void setLatestAngle(double)>(d10) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : i2 = i2 + 1
org.jfree.chart.plot.PiePlot.drawPie : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : goto [?= $i4 = interfaceinvoke r7.<java.util.List: int size()>()]
org.jfree.chart.plot.PiePlot.drawPie : goto [?= $i4 = interfaceinvoke r7.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : i1 = i1 + 1
org.jfree.chart.plot.PiePlot.drawPie : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : goto [?= (branch)]
org.jfree.chart.plot.PiePlot.drawPie : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if i1 != 1
org.jfree.chart.plot.PiePlot.drawItem : if i1 != 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : r27 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.lang.Comparable getSectionKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawItem : r27 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.lang.Comparable getSectionKey(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : r1 = null
org.jfree.chart.plot.PiePlot.getSectionKey : r1 = null >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : $r2 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getSectionKey : $r2 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : if $r2 == null
org.jfree.chart.plot.PiePlot.getSectionKey : if $r2 == null >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : if i0 < 0
org.jfree.chart.plot.PiePlot.getSectionKey : if i0 < 0 >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : $r3 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getSectionKey : $r3 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : $i1 = interfaceinvoke $r3.<org.jfree.data.general.PieDataset: int getItemCount()>()
org.jfree.chart.plot.PiePlot.getSectionKey : $i1 = interfaceinvoke $r3.<org.jfree.data.general.PieDataset: int getItemCount()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : if i0 >= $i1
org.jfree.chart.plot.PiePlot.getSectionKey : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getSectionKey : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : r1 = interfaceinvoke $r4.<org.jfree.data.general.PieDataset: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.getSectionKey : r1 = interfaceinvoke $r4.<org.jfree.data.general.PieDataset: java.lang.Comparable getKey(int)>(i0) >>>>>>>> org.jfree.data.general.DefaultPieDataset.getKey : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.data.general.DefaultPieDataset.getKey : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data> >>>>>>>> org.jfree.data.general.DefaultPieDataset.getKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.data.general.DefaultPieDataset.getKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues: java.lang.Comparable getKey(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.getKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.getKey : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getKey : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getKey : $r3 = (java.lang.Comparable) $r2
org.jfree.data.DefaultKeyedValues.getKey : $r3 = (java.lang.Comparable) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getKey : return $r3
org.jfree.data.DefaultKeyedValues.getKey : return $r3 >>>>>>>> org.jfree.data.general.DefaultPieDataset.getKey : return $r2
org.jfree.data.general.DefaultPieDataset.getKey : return $r2 >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : if r1 != null
org.jfree.chart.plot.PiePlot.getSectionKey : if r1 != null >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionKey : return r1
org.jfree.chart.plot.PiePlot.getSectionKey : return r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : r8 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionPaint(java.lang.Comparable,org.jfree.chart.plot.PiePlotState)>(r27, r3)
org.jfree.chart.plot.PiePlot.drawItem : r8 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionPaint(java.lang.Comparable,org.jfree.chart.plot.PiePlotState)>(r27, r3) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>() >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : r3 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionPaint(java.lang.Comparable,boolean)>(r1, $z0)
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r3 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionPaint(java.lang.Comparable,boolean)>(r1, $z0) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint getSectionPaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint getSectionPaint()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionPaint : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint sectionPaint>
org.jfree.chart.plot.PiePlot.getSectionPaint : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint sectionPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionPaint : return $r1
org.jfree.chart.plot.PiePlot.getSectionPaint : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r2 == null
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r2 == null >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap>
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap> >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : r5 = virtualinvoke $r4.<org.jfree.chart.PaintMap: java.awt.Paint getPaint(java.lang.Comparable)>(r1)
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r5 = virtualinvoke $r4.<org.jfree.chart.PaintMap: java.awt.Paint getPaint(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.chart.PaintMap.getPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.PaintMap.getPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.PaintMap.getPaint : $r2 = r0.<org.jfree.chart.PaintMap: java.util.Map store>
org.jfree.chart.PaintMap.getPaint : $r2 = r0.<org.jfree.chart.PaintMap: java.util.Map store> >>>>>>>> org.jfree.chart.PaintMap.getPaint : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.chart.PaintMap.getPaint : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.PaintMap.getPaint : $r4 = (java.awt.Paint) $r3
org.jfree.chart.PaintMap.getPaint : $r4 = (java.awt.Paint) $r3 >>>>>>>> org.jfree.chart.PaintMap.getPaint : return $r4
org.jfree.chart.PaintMap.getPaint : return $r4 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r5 == null
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r5 == null >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : if z0 == 0
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if z0 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : r3 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r3 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r3 == null
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r3 == null >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : r6 = interfaceinvoke r3.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r6 = interfaceinvoke r3.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r7 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap>
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r7 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap> >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : virtualinvoke $r7.<org.jfree.chart.PaintMap: void put(java.lang.Comparable,java.awt.Paint)>(r1, r6)
org.jfree.chart.plot.PiePlot.lookupSectionPaint : virtualinvoke $r7.<org.jfree.chart.PaintMap: void put(java.lang.Comparable,java.awt.Paint)>(r1, r6) >>>>>>>> org.jfree.chart.PaintMap.put : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.PaintMap.put : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.PaintMap.put : $r3 = r0.<org.jfree.chart.PaintMap: java.util.Map store>
org.jfree.chart.PaintMap.put : $r3 = r0.<org.jfree.chart.PaintMap: java.util.Map store> >>>>>>>> org.jfree.chart.PaintMap.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.jfree.chart.PaintMap.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : goto [?= (branch)]
org.jfree.chart.plot.PiePlot.lookupSectionPaint : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : goto [?= return r6]
org.jfree.chart.plot.PiePlot.lookupSectionPaint : goto [?= return r6] >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : return r6
org.jfree.chart.plot.PiePlot.lookupSectionPaint : return r6 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.awt.RadialGradientPaint")
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.awt.RadialGradientPaint") >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11 = newarray (java.lang.Class)[4]
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11 = newarray (java.lang.Class)[4] >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11[0] = class "java/awt/geom/Point2D"
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11[0] = class "java/awt/geom/Point2D" >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r12 = <java.lang.Float: java.lang.Class TYPE>
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r12 = <java.lang.Float: java.lang.Class TYPE> >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11[1] = $r12
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11[1] = $r12 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11[2] = class "[F"
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11[2] = class "[F" >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11[3] = class "[Ljava/awt/Color;"
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r11[3] = class "[Ljava/awt/Color;" >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r11)
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r11) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : $z1 = virtualinvoke r4.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3)
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $z1 = virtualinvoke r4.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : if $z1 == 0
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : goto [?= return r3]
org.jfree.chart.plot.PiePlot.lookupSectionPaint : goto [?= return r3] >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionPaint : return r3
org.jfree.chart.plot.PiePlot.lookupSectionPaint : return r3 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r8)
org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r8) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r6)
org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r6) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : r9 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable)>(r27)
org.jfree.chart.plot.PiePlot.drawItem : r9 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable)>(r27) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>() >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable,boolean)>(r1, $z0)
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable,boolean)>(r1, $z0) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint getSectionOutlinePaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint getSectionOutlinePaint()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionOutlinePaint : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint sectionOutlinePaint>
org.jfree.chart.plot.PiePlot.getSectionOutlinePaint : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint sectionOutlinePaint> >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionOutlinePaint : return $r1
org.jfree.chart.plot.PiePlot.getSectionOutlinePaint : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if r2 == null
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if r2 == null >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionOutlinePaintMap>
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionOutlinePaintMap> >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : r5 = virtualinvoke $r4.<org.jfree.chart.PaintMap: java.awt.Paint getPaint(java.lang.Comparable)>(r1)
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : r5 = virtualinvoke $r4.<org.jfree.chart.PaintMap: java.awt.Paint getPaint(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if r5 == null
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if r5 == null >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if z0 == 0
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if z0 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint baseSectionOutlinePaint>
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint baseSectionOutlinePaint> >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : return r6
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : return r6 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : return $r2
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : return $r2 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : r10 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable)>(r27)
org.jfree.chart.plot.PiePlot.drawItem : r10 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable)>(r27) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>()
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>() >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable,boolean)>(r1, $z0)
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable,boolean)>(r1, $z0) >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke getSectionOutlineStroke()>()
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke getSectionOutlineStroke()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionOutlineStroke : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke sectionOutlineStroke>
org.jfree.chart.plot.PiePlot.getSectionOutlineStroke : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke sectionOutlineStroke> >>>>>>>> org.jfree.chart.plot.PiePlot.getSectionOutlineStroke : return $r1
org.jfree.chart.plot.PiePlot.getSectionOutlineStroke : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if r2 == null
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if r2 == null >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.StrokeMap sectionOutlineStrokeMap>
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.StrokeMap sectionOutlineStrokeMap> >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : r5 = virtualinvoke $r4.<org.jfree.chart.StrokeMap: java.awt.Stroke getStroke(java.lang.Comparable)>(r1)
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : r5 = virtualinvoke $r4.<org.jfree.chart.StrokeMap: java.awt.Stroke getStroke(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.chart.StrokeMap.getStroke : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.StrokeMap.getStroke : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.StrokeMap.getStroke : $r2 = r0.<org.jfree.chart.StrokeMap: java.util.Map store>
org.jfree.chart.StrokeMap.getStroke : $r2 = r0.<org.jfree.chart.StrokeMap: java.util.Map store> >>>>>>>> org.jfree.chart.StrokeMap.getStroke : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.chart.StrokeMap.getStroke : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.StrokeMap.getStroke : $r4 = (java.awt.Stroke) $r3
org.jfree.chart.StrokeMap.getStroke : $r4 = (java.awt.Stroke) $r3 >>>>>>>> org.jfree.chart.StrokeMap.getStroke : return $r4
org.jfree.chart.StrokeMap.getStroke : return $r4 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if r5 == null
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if r5 == null >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if z0 == 0
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if z0 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke baseSectionOutlineStroke>
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke baseSectionOutlineStroke> >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : return r6
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : return r6 >>>>>>>> org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : return $r2
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : return $r2 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean sectionOutlinesVisible>
org.jfree.chart.plot.PiePlot.drawItem : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean sectionOutlinesVisible> >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if $z0 == 0
org.jfree.chart.plot.PiePlot.drawItem : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r9)
org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r9) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r10)
org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r10) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r6)
org.jfree.chart.plot.PiePlot.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r6) >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : $r28 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: org.jfree.chart.plot.PlotRenderingInfo getInfo()>()
org.jfree.chart.plot.PiePlot.drawItem : $r28 = virtualinvoke r3.<org.jfree.chart.plot.PiePlotState: org.jfree.chart.plot.PlotRenderingInfo getInfo()>() >>>>>>>> org.jfree.chart.renderer.RendererState.getInfo : $r1 = r0.<org.jfree.chart.renderer.RendererState: org.jfree.chart.plot.PlotRenderingInfo info>
org.jfree.chart.renderer.RendererState.getInfo : $r1 = r0.<org.jfree.chart.renderer.RendererState: org.jfree.chart.plot.PlotRenderingInfo info> >>>>>>>> org.jfree.chart.renderer.RendererState.getInfo : return $r1
org.jfree.chart.renderer.RendererState.getInfo : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawItem : if $r28 == null
org.jfree.chart.plot.PiePlot.drawItem : if $r28 == null >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : $z3 = r0.<org.jfree.chart.plot.PiePlot: boolean simpleLabels>
org.jfree.chart.plot.PiePlot.drawPie : $z3 = r0.<org.jfree.chart.plot.PiePlot: boolean simpleLabels> >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : if $z3 == 0
org.jfree.chart.plot.PiePlot.drawPie : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>(r1, r7, d15, r2, r11, r4)
org.jfree.chart.plot.PiePlot.drawPie : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>(r1, r7, d15, r2, r11, r4) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : r6 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.PiePlot.drawLabels : r6 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r12 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, 1.0F)
org.jfree.chart.plot.PiePlot.drawLabels : $r12 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, 1.0F) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r12)
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r12) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r13 = new org.jfree.data.DefaultKeyedValues
org.jfree.chart.plot.PiePlot.drawLabels : $r13 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : specialinvoke $r13.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.chart.plot.PiePlot.drawLabels : specialinvoke $r13.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : r7 = $r13
org.jfree.chart.plot.PiePlot.drawLabels : r7 = $r13 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r14 = new org.jfree.data.DefaultKeyedValues
org.jfree.chart.plot.PiePlot.drawLabels : $r14 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : specialinvoke $r14.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.chart.plot.PiePlot.drawLabels : specialinvoke $r14.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : r8 = $r14
org.jfree.chart.plot.PiePlot.drawLabels : r8 = $r14 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : d1 = 0.0
org.jfree.chart.plot.PiePlot.drawLabels : d1 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : r9 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.PiePlot.drawLabels : r9 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot.drawLabels : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : if $z1 == 0
org.jfree.chart.plot.PiePlot.drawLabels : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r15 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot.drawLabels : $r15 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : r10 = (java.lang.Comparable) $r15
org.jfree.chart.plot.PiePlot.drawLabels : r10 = (java.lang.Comparable) $r15 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : d2 = 0.0
org.jfree.chart.plot.PiePlot.drawLabels : d2 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r16 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawLabels : $r16 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : r11 = interfaceinvoke $r16.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r10)
org.jfree.chart.plot.PiePlot.drawLabels : r11 = interfaceinvoke $r16.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r10) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : if r11 != null
org.jfree.chart.plot.PiePlot.drawLabels : if r11 != null >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : d2 = virtualinvoke r11.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.drawLabels : d2 = virtualinvoke r11.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $z4 = r0.<org.jfree.chart.plot.PiePlot: boolean ignoreZeroValues>
org.jfree.chart.plot.PiePlot.drawLabels : $z4 = r0.<org.jfree.chart.plot.PiePlot: boolean ignoreZeroValues> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : if $z4 == 0
org.jfree.chart.plot.PiePlot.drawLabels : if $z4 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $b1 = d2 cmpl 0.0
org.jfree.chart.plot.PiePlot.drawLabels : $b1 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : if $b1 < 0
org.jfree.chart.plot.PiePlot.drawLabels : if $b1 < 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $z5 = 1
org.jfree.chart.plot.PiePlot.drawLabels : $z5 = 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : goto [?= z0 = $z5]
org.jfree.chart.plot.PiePlot.drawLabels : goto [?= z0 = $z5] >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : z0 = $z5
org.jfree.chart.plot.PiePlot.drawLabels : z0 = $z5 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : if z0 == 0
org.jfree.chart.plot.PiePlot.drawLabels : if z0 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : d1 = d1 + d2
org.jfree.chart.plot.PiePlot.drawLabels : d1 = d1 + d2 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d4 = r0.<org.jfree.chart.plot.PiePlot: double startAngle>
org.jfree.chart.plot.PiePlot.drawLabels : $d4 = r0.<org.jfree.chart.plot.PiePlot: double startAngle> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.util.Rotation direction>
org.jfree.chart.plot.PiePlot.drawLabels : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.util.Rotation direction> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d5 = virtualinvoke $r17.<org.jfree.util.Rotation: double getFactor()>()
org.jfree.chart.plot.PiePlot.drawLabels : $d5 = virtualinvoke $r17.<org.jfree.util.Rotation: double getFactor()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d6 = d2 / 2.0
org.jfree.chart.plot.PiePlot.drawLabels : $d6 = d2 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d7 = d1 - $d6
org.jfree.chart.plot.PiePlot.drawLabels : $d7 = d1 - $d6 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d8 = $d7 * 360.0
org.jfree.chart.plot.PiePlot.drawLabels : $d8 = $d7 * 360.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d9 = $d5 * $d8
org.jfree.chart.plot.PiePlot.drawLabels : $d9 = $d5 * $d8 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d10 = $d9 / d0
org.jfree.chart.plot.PiePlot.drawLabels : $d10 = $d9 / d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : d3 = $d4 + $d10
org.jfree.chart.plot.PiePlot.drawLabels : d3 = $d4 + $d10 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d11 = staticinvoke <java.lang.Math: double toRadians(double)>(d3)
org.jfree.chart.plot.PiePlot.drawLabels : $d11 = staticinvoke <java.lang.Math: double toRadians(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d12 = staticinvoke <java.lang.Math: double cos(double)>($d11)
org.jfree.chart.plot.PiePlot.drawLabels : $d12 = staticinvoke <java.lang.Math: double cos(double)>($d11) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $b2 = $d12 cmpg 0.0
org.jfree.chart.plot.PiePlot.drawLabels : $b2 = $d12 cmpg 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : if $b2 >= 0
org.jfree.chart.plot.PiePlot.drawLabels : if $b2 >= 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r19 = new java.lang.Double
org.jfree.chart.plot.PiePlot.drawLabels : $r19 = new java.lang.Double >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : specialinvoke $r19.<java.lang.Double: void <init>(double)>(d3)
org.jfree.chart.plot.PiePlot.drawLabels : specialinvoke $r19.<java.lang.Double: void <init>(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r8.<org.jfree.data.DefaultKeyedValues: void addValue(java.lang.Comparable,java.lang.Number)>(r10, $r19)
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r8.<org.jfree.data.DefaultKeyedValues: void addValue(java.lang.Comparable,java.lang.Number)>(r10, $r19) >>>>>>>> org.jfree.data.DefaultKeyedValues.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r1, r2)
org.jfree.data.DefaultKeyedValues.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.PiePlot.drawLabels : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r18 = new java.lang.Double
org.jfree.chart.plot.PiePlot.drawLabels : $r18 = new java.lang.Double >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : specialinvoke $r18.<java.lang.Double: void <init>(double)>(d3)
org.jfree.chart.plot.PiePlot.drawLabels : specialinvoke $r18.<java.lang.Double: void <init>(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r7.<org.jfree.data.DefaultKeyedValues: void addValue(java.lang.Comparable,java.lang.Number)>(r10, $r18)
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r7.<org.jfree.data.DefaultKeyedValues: void addValue(java.lang.Comparable,java.lang.Number)>(r10, $r18) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : goto [?= (branch)]
org.jfree.chart.plot.PiePlot.drawLabels : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r20 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Font getLabelFont()>()
org.jfree.chart.plot.PiePlot.drawLabels : $r20 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Font getLabelFont()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLabelFont : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont>
org.jfree.chart.plot.PiePlot.getLabelFont : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.plot.PiePlot.getLabelFont : return $r1
org.jfree.chart.plot.PiePlot.getLabelFont : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r20)
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r20) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot.drawLabels : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d14 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap>
org.jfree.chart.plot.PiePlot.drawLabels : $d14 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawLabels : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d16 = $d14 * $d15
org.jfree.chart.plot.PiePlot.drawLabels : $d16 = $d14 * $d15 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : d17 = $d13 + $d16
org.jfree.chart.plot.PiePlot.drawLabels : d17 = $d13 + $d16 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d18 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawLabels : $d18 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d19 = r0.<org.jfree.chart.plot.PiePlot: double labelGap>
org.jfree.chart.plot.PiePlot.drawLabels : $d19 = r0.<org.jfree.chart.plot.PiePlot: double labelGap> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : d20 = $d18 * $d19
org.jfree.chart.plot.PiePlot.drawLabels : d20 = $d18 * $d19 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d21 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot.drawLabels : $d21 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d22 = $d21 - d20
org.jfree.chart.plot.PiePlot.drawLabels : $d22 = $d21 - d20 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : d23 = $d22 - d17
org.jfree.chart.plot.PiePlot.drawLabels : d23 = $d22 - d17 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>
org.jfree.chart.plot.PiePlot.drawLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $d24 = virtualinvoke $r21.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d23)
org.jfree.chart.plot.PiePlot.drawLabels : $d24 = virtualinvoke $r21.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d23) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : f0 = (float) $d24
org.jfree.chart.plot.PiePlot.drawLabels : f0 = (float) $d24 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator>
org.jfree.chart.plot.PiePlot.drawLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : if $r22 == null
org.jfree.chart.plot.PiePlot.drawLabels : if $r22 == null >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>(r7, r1, r3, r4, f0, r5)
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>(r7, r1, r3, r4, f0, r5) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r10 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r10 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke $r10.<org.jfree.chart.plot.AbstractPieLabelDistributor: void clear()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke $r10.<org.jfree.chart.plot.AbstractPieLabelDistributor: void clear()>() >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.clear : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.AbstractPieLabelDistributor.clear : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels> >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.jfree.chart.plot.AbstractPieLabelDistributor.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d6 = r0.<org.jfree.chart.plot.PiePlot: double labelGap>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d6 = r0.<org.jfree.chart.plot.PiePlot: double labelGap> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : d0 = $d5 * $d6
org.jfree.chart.plot.PiePlot.drawLeftLabels : d0 = $d5 * $d6 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r11 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r11 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getLinkArea : $r1 = r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D linkArea>
org.jfree.chart.plot.PiePlotState.getLinkArea : $r1 = r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D linkArea> >>>>>>>> org.jfree.chart.plot.PiePlotState.getLinkArea : return $r1
org.jfree.chart.plot.PiePlotState.getLinkArea : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d7 = virtualinvoke $r11.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d7 = virtualinvoke $r11.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : d1 = $d7 / 2.0
org.jfree.chart.plot.PiePlot.drawLeftLabels : d1 = $d7 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : i0 = 0
org.jfree.chart.plot.PiePlot.drawLeftLabels : i0 = 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $i1 = interfaceinvoke r1.<org.jfree.data.KeyedValues: int getItemCount()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $i1 = interfaceinvoke r1.<org.jfree.data.KeyedValues: int getItemCount()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : if i0 >= $i1
org.jfree.chart.plot.PiePlot.drawLeftLabels : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r12 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r12 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r13 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r13 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r14 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r14 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : r6 = interfaceinvoke $r12.<org.jfree.chart.labels.PieSectionLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>($r13, $r14)
org.jfree.chart.plot.PiePlot.drawLeftLabels : r6 = interfaceinvoke $r12.<org.jfree.chart.labels.PieSectionLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>($r13, $r14) >>>>>>>> org.jfree.chart.labels.StandardPieSectionLabelGenerator.generateSectionLabel : $r3 = specialinvoke r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>(r1, r2)
org.jfree.chart.labels.StandardPieSectionLabelGenerator.generateSectionLabel : $r3 = specialinvoke r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>(r1, r2) >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : r3 = null
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : r3 = null >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : if r1 == null
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : if r1 == null >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : r4 = virtualinvoke r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)>(r1, r2)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : r4 = virtualinvoke r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)>(r1, r2) >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3 = newarray (java.lang.Object)[4]
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3 = newarray (java.lang.Object)[4] >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d0 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>(r1)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d0 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>(r1) >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[0] = $r5
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[0] = $r5 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r4 = interfaceinvoke r1.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r2)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r4 = interfaceinvoke r1.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : if r4 == null
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : if r4 == null >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r6 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat numberFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r6 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat numberFormat> >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r7 = virtualinvoke $r6.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>(r4)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r7 = virtualinvoke $r6.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>(r4) >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[1] = $r7
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[1] = $r7 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : goto [?= d1 = 0.0]
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : goto [?= d1 = 0.0] >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d1 = 0.0
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d1 = 0.0 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d2 = virtualinvoke r4.<java.lang.Number: double doubleValue()>()
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d2 = virtualinvoke r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $b0 = d2 cmpl 0.0
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $b0 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : if $b0 <= 0
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : if $b0 <= 0 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d1 = d2 / d0
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d1 = d2 / d0 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r8 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat percentFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r8 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat percentFormat> >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r9 = virtualinvoke $r8.<java.text.NumberFormat: java.lang.String format(double)>(d1)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r9 = virtualinvoke $r8.<java.text.NumberFormat: java.lang.String format(double)>(d1) >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[2] = $r9
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[2] = $r9 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r10 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat numberFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r10 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat numberFormat> >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r11 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>(d0)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r11 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>(d0) >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[3] = $r11
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[3] = $r11 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : return r3
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : return r3 >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : $r5 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.String labelFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : $r5 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.String labelFormat> >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : r3 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r5, r4)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : r3 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r5, r4) >>>>>>>> org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : return r3
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : return r3 >>>>>>>> org.jfree.chart.labels.StandardPieSectionLabelGenerator.generateSectionLabel : return $r3
org.jfree.chart.labels.StandardPieSectionLabelGenerator.generateSectionLabel : return $r3 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : if r6 == null
org.jfree.chart.plot.PiePlot.drawLeftLabels : if r6 == null >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r15 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r15 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r16 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelPaint>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r16 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r7 = new org.jfree.text.G2TextMeasurer
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r7 = new org.jfree.text.G2TextMeasurer >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : specialinvoke $r7.<org.jfree.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(r2)
org.jfree.chart.plot.PiePlot.drawLeftLabels : specialinvoke $r7.<org.jfree.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(r2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : r8 = staticinvoke <org.jfree.text.TextUtilities: org.jfree.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.text.TextMeasurer)>(r6, $r15, $r16, f0, $r7)
org.jfree.chart.plot.PiePlot.drawLeftLabels : r8 = staticinvoke <org.jfree.text.TextUtilities: org.jfree.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.text.TextMeasurer)>(r6, $r15, $r16, f0, $r7) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r17 = new org.jfree.text.TextBox
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r17 = new org.jfree.text.TextBox >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : specialinvoke $r17.<org.jfree.text.TextBox: void <init>(org.jfree.text.TextBlock)>(r8)
org.jfree.chart.plot.PiePlot.drawLeftLabels : specialinvoke $r17.<org.jfree.text.TextBox: void <init>(org.jfree.text.TextBlock)>(r8) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : r9 = $r17
org.jfree.chart.plot.PiePlot.drawLeftLabels : r9 = $r17 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r18 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelBackgroundPaint>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r18 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelBackgroundPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setBackgroundPaint(java.awt.Paint)>($r18)
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setBackgroundPaint(java.awt.Paint)>($r18) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r19 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelOutlinePaint>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r19 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelOutlinePaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setOutlinePaint(java.awt.Paint)>($r19)
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setOutlinePaint(java.awt.Paint)>($r19) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r20 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelOutlineStroke>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r20 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelOutlineStroke> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setOutlineStroke(java.awt.Stroke)>($r20)
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setOutlineStroke(java.awt.Stroke)>($r20) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : if $r21 != null
org.jfree.chart.plot.PiePlot.drawLeftLabels : if $r21 != null >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelShadowPaint>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelShadowPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setShadowPaint(java.awt.Paint)>($r22)
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setShadowPaint(java.awt.Paint)>($r22) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : goto [?= $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>]
org.jfree.chart.plot.PiePlot.drawLeftLabels : goto [?= $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>] >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setInteriorGap(org.jfree.ui.RectangleInsets)>($r23)
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setInteriorGap(org.jfree.ui.RectangleInsets)>($r23) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r24 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r24 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Number getValue(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d8 = virtualinvoke $r24.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d8 = virtualinvoke $r24.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d8)
org.jfree.chart.plot.PiePlot.drawLeftLabels : d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d8) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d9 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d9 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieCenterY : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieCenterY>
org.jfree.chart.plot.PiePlotState.getPieCenterY : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieCenterY> >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieCenterY : return $d0
org.jfree.chart.plot.PiePlotState.getPieCenterY : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d10 = staticinvoke <java.lang.Math: double sin(double)>(d2)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d10 = staticinvoke <java.lang.Math: double sin(double)>(d2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d11 = $d10 * d1
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d11 = $d10 * d1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : d3 = $d9 - $d11
org.jfree.chart.plot.PiePlot.drawLeftLabels : d3 = $d9 - $d11 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : d4 = virtualinvoke r9.<org.jfree.text.TextBox: double getHeight(java.awt.Graphics2D)>(r2)
org.jfree.chart.plot.PiePlot.drawLeftLabels : d4 = virtualinvoke r9.<org.jfree.text.TextBox: double getHeight(java.awt.Graphics2D)>(r2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r25 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r25 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r26 = new org.jfree.chart.plot.PieLabelRecord
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r26 = new org.jfree.chart.plot.PieLabelRecord >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r27 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r27 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d12 = d0 / 2.0
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d12 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d13 = d0 / 2.0
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d13 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d14 = staticinvoke <java.lang.Math: double cos(double)>(d2)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d14 = staticinvoke <java.lang.Math: double cos(double)>(d2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d15 = neg $d14
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d15 = neg $d14 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d16 = $d13 * $d15
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d16 = $d13 * $d15 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d17 = $d12 + $d16
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d17 = $d12 + $d16 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d18 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getLabelLinkDepth()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d18 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getLabelLinkDepth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLabelLinkDepth : return 0.1
org.jfree.chart.plot.PiePlot.getLabelLinkDepth : return 0.1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d19 = 1.0 - $d18
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d19 = 1.0 - $d18 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r28 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r28 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d20 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getExplodePercent(java.lang.Comparable)>($r28)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d20 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getExplodePercent(java.lang.Comparable)>($r28) >>>>>>>> org.jfree.chart.plot.PiePlot.getExplodePercent : d0 = 0.0
org.jfree.chart.plot.PiePlot.getExplodePercent : d0 = 0.0 >>>>>>>> org.jfree.chart.plot.PiePlot.getExplodePercent : $r3 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages>
org.jfree.chart.plot.PiePlot.getExplodePercent : $r3 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages> >>>>>>>> org.jfree.chart.plot.PiePlot.getExplodePercent : if $r3 == null
org.jfree.chart.plot.PiePlot.getExplodePercent : if $r3 == null >>>>>>>> org.jfree.chart.plot.PiePlot.getExplodePercent : $r4 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages>
org.jfree.chart.plot.PiePlot.getExplodePercent : $r4 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages> >>>>>>>> org.jfree.chart.plot.PiePlot.getExplodePercent : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.chart.plot.PiePlot.getExplodePercent : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.PiePlot.getExplodePercent : r2 = (java.lang.Number) $r5
org.jfree.chart.plot.PiePlot.getExplodePercent : r2 = (java.lang.Number) $r5 >>>>>>>> org.jfree.chart.plot.PiePlot.getExplodePercent : if r2 == null
org.jfree.chart.plot.PiePlot.getExplodePercent : if r2 == null >>>>>>>> org.jfree.chart.plot.PiePlot.getExplodePercent : return d0
org.jfree.chart.plot.PiePlot.getExplodePercent : return d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d21 = $d19 + $d20
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d21 = $d19 + $d20 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : specialinvoke $r26.<org.jfree.chart.plot.PieLabelRecord: void <init>(java.lang.Comparable,double,double,org.jfree.text.TextBox,double,double,double)>($r27, d2, d3, r9, d4, $d17, $d21)
org.jfree.chart.plot.PiePlot.drawLeftLabels : specialinvoke $r26.<org.jfree.chart.plot.PieLabelRecord: void <init>(java.lang.Comparable,double,double,org.jfree.text.TextBox,double,double,double)>($r27, d2, d3, r9, d4, $d17, $d21) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke $r25.<org.jfree.chart.plot.AbstractPieLabelDistributor: void addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)>($r26)
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke $r25.<org.jfree.chart.plot.AbstractPieLabelDistributor: void addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)>($r26) >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "record")
org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "record") >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord : $r2 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord : $r2 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels> >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : i0 = i0 + 1
org.jfree.chart.plot.PiePlot.drawLeftLabels : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : goto [?= $i1 = interfaceinvoke r1.<org.jfree.data.KeyedValues: int getItemCount()>()]
org.jfree.chart.plot.PiePlot.drawLeftLabels : goto [?= $i1 = interfaceinvoke r1.<org.jfree.data.KeyedValues: int getItemCount()>()] >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : d22 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : d22 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d23 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getInteriorGap()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d23 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getInteriorGap()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getInteriorGap : $d0 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap>
org.jfree.chart.plot.PiePlot.getInteriorGap : $d0 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap> >>>>>>>> org.jfree.chart.plot.PiePlot.getInteriorGap : return $d0
org.jfree.chart.plot.PiePlot.getInteriorGap : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : d24 = d22 * $d23
org.jfree.chart.plot.PiePlot.drawLeftLabels : d24 = d22 * $d23 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r29 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r29 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d25 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d25 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d26 = $d25 + d24
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d26 = $d25 + d24 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d27 = 2.0 * d24
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d27 = 2.0 * d24 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $d28 = d22 - $d27
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d28 = d22 - $d27 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke $r29.<org.jfree.chart.plot.AbstractPieLabelDistributor: void distributeLabels(double,double)>($d26, $d28)
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke $r29.<org.jfree.chart.plot.AbstractPieLabelDistributor: void distributeLabels(double,double)>($d26, $d28) >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.distributeLabels : virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: void sort()>()
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: void sort()>() >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.sort : $r1 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.PieLabelDistributor.sort : $r1 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels> >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.sort : staticinvoke <java.util.Collections: void sort(java.util.List)>($r1)
org.jfree.chart.plot.PieLabelDistributor.sort : staticinvoke <java.util.Collections: void sort(java.util.List)>($r1) >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z0 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>()
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z0 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>() >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : d0 = 0.0
org.jfree.chart.plot.PieLabelDistributor.isOverlap : d0 = 0.0 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : i0 = 0
org.jfree.chart.plot.PieLabelDistributor.isOverlap : i0 = 0 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : $r2 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.PieLabelDistributor.isOverlap : $r2 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels> >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : $i1 = interfaceinvoke $r2.<java.util.List: int size()>()
org.jfree.chart.plot.PieLabelDistributor.isOverlap : $i1 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : if i0 >= $i1
org.jfree.chart.plot.PieLabelDistributor.isOverlap : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : r1 = virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i0)
org.jfree.chart.plot.PieLabelDistributor.isOverlap : r1 = virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i0) >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels> >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : $r3 = (org.jfree.chart.plot.PieLabelRecord) $r2
org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : $r3 = (org.jfree.chart.plot.PieLabelRecord) $r2 >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : return $r3
org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : return $r3 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : $d1 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getLowerY()>()
org.jfree.chart.plot.PieLabelDistributor.isOverlap : $d1 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getLowerY()>() >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLowerY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY>
org.jfree.chart.plot.PieLabelRecord.getLowerY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLowerY : $d1 = r0.<org.jfree.chart.plot.PieLabelRecord: double labelHeight>
org.jfree.chart.plot.PieLabelRecord.getLowerY : $d1 = r0.<org.jfree.chart.plot.PieLabelRecord: double labelHeight> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLowerY : $d2 = $d1 / 2.0
org.jfree.chart.plot.PieLabelRecord.getLowerY : $d2 = $d1 / 2.0 >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLowerY : $d3 = $d0 - $d2
org.jfree.chart.plot.PieLabelRecord.getLowerY : $d3 = $d0 - $d2 >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLowerY : return $d3
org.jfree.chart.plot.PieLabelRecord.getLowerY : return $d3 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : $b2 = d0 cmpl $d1
org.jfree.chart.plot.PieLabelDistributor.isOverlap : $b2 = d0 cmpl $d1 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : if $b2 <= 0
org.jfree.chart.plot.PieLabelDistributor.isOverlap : if $b2 <= 0 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : d0 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getUpperY()>()
org.jfree.chart.plot.PieLabelDistributor.isOverlap : d0 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getUpperY()>() >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getUpperY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY>
org.jfree.chart.plot.PieLabelRecord.getUpperY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getUpperY : $d1 = r0.<org.jfree.chart.plot.PieLabelRecord: double labelHeight>
org.jfree.chart.plot.PieLabelRecord.getUpperY : $d1 = r0.<org.jfree.chart.plot.PieLabelRecord: double labelHeight> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getUpperY : $d2 = $d1 / 2.0
org.jfree.chart.plot.PieLabelRecord.getUpperY : $d2 = $d1 / 2.0 >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getUpperY : $d3 = $d0 + $d2
org.jfree.chart.plot.PieLabelRecord.getUpperY : $d3 = $d0 + $d2 >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getUpperY : return $d3
org.jfree.chart.plot.PieLabelRecord.getUpperY : return $d3 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : i0 = i0 + 1
org.jfree.chart.plot.PieLabelDistributor.isOverlap : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : goto [?= $r2 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels>]
org.jfree.chart.plot.PieLabelDistributor.isOverlap : goto [?= $r2 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels>] >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.isOverlap : return 0
org.jfree.chart.plot.PieLabelDistributor.isOverlap : return 0 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.distributeLabels : if $z0 == 0
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z1 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>()
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z1 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>() >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.distributeLabels : if $z1 == 0
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z2 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>()
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z2 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>() >>>>>>>> org.jfree.chart.plot.PieLabelDistributor.distributeLabels : if $z2 == 0
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : i2 = 0
org.jfree.chart.plot.PiePlot.drawLeftLabels : i2 = 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r30 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r30 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $i3 = virtualinvoke $r30.<org.jfree.chart.plot.AbstractPieLabelDistributor: int getItemCount()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $i3 = virtualinvoke $r30.<org.jfree.chart.plot.AbstractPieLabelDistributor: int getItemCount()>() >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.getItemCount : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.AbstractPieLabelDistributor.getItemCount : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels> >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.chart.plot.AbstractPieLabelDistributor.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.AbstractPieLabelDistributor.getItemCount : return $i0
org.jfree.chart.plot.AbstractPieLabelDistributor.getItemCount : return $i0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : if i2 >= $i3
org.jfree.chart.plot.PiePlot.drawLeftLabels : if i2 >= $i3 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r31 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r31 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : $r32 = virtualinvoke $r31.<org.jfree.chart.plot.AbstractPieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i2)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r32 = virtualinvoke $r31.<org.jfree.chart.plot.AbstractPieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)>(r2, r5, $r32)
org.jfree.chart.plot.PiePlot.drawLeftLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)>(r2, r5, $r32) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r6 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r6 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d0 = virtualinvoke $r6.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : d0 = virtualinvoke $r6.<java.awt.geom.Rectangle2D: double getMinX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d9 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getGap()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d9 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getGap()>() >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getGap : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double gap>
org.jfree.chart.plot.PieLabelRecord.getGap : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double gap> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getGap : return $d0
org.jfree.chart.plot.PieLabelRecord.getGap : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d1 = d0 - $d9
org.jfree.chart.plot.PiePlot.drawLeftLabel : d1 = d0 - $d9 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d2 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAllocatedY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : d2 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAllocatedY()>() >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getAllocatedY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY>
org.jfree.chart.plot.PieLabelRecord.getAllocatedY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getAllocatedY : return $d0
org.jfree.chart.plot.PieLabelRecord.getAllocatedY : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean labelLinksVisible>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean labelLinksVisible> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : if $z0 == 0
org.jfree.chart.plot.PiePlot.drawLeftLabel : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d3 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAngle()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : d3 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAngle()>() >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getAngle : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double angle>
org.jfree.chart.plot.PieLabelRecord.getAngle : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double angle> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getAngle : return $d0
org.jfree.chart.plot.PieLabelRecord.getAngle : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d10 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d10 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieCenterX : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieCenterX>
org.jfree.chart.plot.PiePlotState.getPieCenterX : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieCenterX> >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieCenterX : return $d0
org.jfree.chart.plot.PiePlotState.getPieCenterX : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d11 = staticinvoke <java.lang.Math: double cos(double)>(d3)
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d11 = staticinvoke <java.lang.Math: double cos(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d12 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieWRadius()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d12 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieWRadius()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieWRadius : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieWRadius>
org.jfree.chart.plot.PiePlotState.getPieWRadius : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieWRadius> >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieWRadius : return $d0
org.jfree.chart.plot.PiePlotState.getPieWRadius : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d13 = $d11 * $d12
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d13 = $d11 * $d12 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d14 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getLinkPercent()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d14 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getLinkPercent()>() >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLinkPercent : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double linkPercent>
org.jfree.chart.plot.PieLabelRecord.getLinkPercent : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double linkPercent> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLinkPercent : return $d0
org.jfree.chart.plot.PieLabelRecord.getLinkPercent : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d15 = $d13 * $d14
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d15 = $d13 * $d14 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d4 = $d10 + $d15
org.jfree.chart.plot.PiePlot.drawLeftLabel : d4 = $d10 + $d15 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d16 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d16 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d17 = staticinvoke <java.lang.Math: double sin(double)>(d3)
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d17 = staticinvoke <java.lang.Math: double sin(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d18 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieHRadius()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d18 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieHRadius()>() >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieHRadius : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieHRadius>
org.jfree.chart.plot.PiePlotState.getPieHRadius : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieHRadius> >>>>>>>> org.jfree.chart.plot.PiePlotState.getPieHRadius : return $d0
org.jfree.chart.plot.PiePlotState.getPieHRadius : return $d0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d19 = $d17 * $d18
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d19 = $d17 * $d18 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d20 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getLinkPercent()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d20 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getLinkPercent()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d21 = $d19 * $d20
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d21 = $d19 * $d20 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d5 = $d16 - $d21
org.jfree.chart.plot.PiePlot.drawLeftLabel : d5 = $d16 - $d21 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d22 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d22 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d23 = staticinvoke <java.lang.Math: double cos(double)>(d3)
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d23 = staticinvoke <java.lang.Math: double cos(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r7 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r7 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d24 = virtualinvoke $r7.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d24 = virtualinvoke $r7.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d25 = $d23 * $d24
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d25 = $d23 * $d24 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d26 = $d25 / 2.0
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d26 = $d25 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d6 = $d22 + $d26
org.jfree.chart.plot.PiePlot.drawLeftLabel : d6 = $d22 + $d26 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d27 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d27 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d28 = staticinvoke <java.lang.Math: double sin(double)>(d3)
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d28 = staticinvoke <java.lang.Math: double sin(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r8 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r8 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d29 = virtualinvoke $r8.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d29 = virtualinvoke $r8.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d30 = $d28 * $d29
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d30 = $d28 * $d29 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $d31 = $d30 / 2.0
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d31 = $d30 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d7 = $d27 - $d31
org.jfree.chart.plot.PiePlot.drawLeftLabel : d7 = $d27 - $d31 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : d8 = d7
org.jfree.chart.plot.PiePlot.drawLeftLabel : d8 = d7 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r9 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r9 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r9)
org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r9) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r10 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelLinkStroke>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r10 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelLinkStroke> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r10)
org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r10) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle getLabelLinkStyle()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle getLabelLinkStyle()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getLabelLinkStyle : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>
org.jfree.chart.plot.PiePlot.getLabelLinkStyle : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> >>>>>>>> org.jfree.chart.plot.PiePlot.getLabelLinkStyle : return $r1
org.jfree.chart.plot.PiePlot.getLabelLinkStyle : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r11 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle STANDARD>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r11 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle STANDARD> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $z1 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r11)
org.jfree.chart.plot.PiePlot.drawLeftLabel : $z1 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r11) >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : if r0 != r1
org.jfree.chart.plot.PieLabelLinkStyle.equals : if r0 != r1 >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : $z0 = r1 instanceof org.jfree.chart.plot.PieLabelLinkStyle
org.jfree.chart.plot.PieLabelLinkStyle.equals : $z0 = r1 instanceof org.jfree.chart.plot.PieLabelLinkStyle >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : if $z0 != 0
org.jfree.chart.plot.PieLabelLinkStyle.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : r2 = (org.jfree.chart.plot.PieLabelLinkStyle) r1
org.jfree.chart.plot.PieLabelLinkStyle.equals : r2 = (org.jfree.chart.plot.PieLabelLinkStyle) r1 >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : $r3 = r0.<org.jfree.chart.plot.PieLabelLinkStyle: java.lang.String name>
org.jfree.chart.plot.PieLabelLinkStyle.equals : $r3 = r0.<org.jfree.chart.plot.PieLabelLinkStyle: java.lang.String name> >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.PieLabelLinkStyle: java.lang.String toString()>()
org.jfree.chart.plot.PieLabelLinkStyle.equals : $r4 = virtualinvoke r2.<org.jfree.chart.plot.PieLabelLinkStyle: java.lang.String toString()>() >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.toString : $r1 = r0.<org.jfree.chart.plot.PieLabelLinkStyle: java.lang.String name>
org.jfree.chart.plot.PieLabelLinkStyle.toString : $r1 = r0.<org.jfree.chart.plot.PieLabelLinkStyle: java.lang.String name> >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.toString : return $r1
org.jfree.chart.plot.PieLabelLinkStyle.toString : return $r1 >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.plot.PieLabelLinkStyle.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : if $z1 != 0
org.jfree.chart.plot.PieLabelLinkStyle.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : return 0
org.jfree.chart.plot.PieLabelLinkStyle.equals : return 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : if $z1 == 0
org.jfree.chart.plot.PiePlot.drawLeftLabel : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r15 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle QUAD_CURVE>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r15 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle QUAD_CURVE> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $z2 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r15)
org.jfree.chart.plot.PiePlot.drawLeftLabel : $z2 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : if $z2 == 0
org.jfree.chart.plot.PiePlot.drawLeftLabel : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r18 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle CUBIC_CURVE>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r18 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle CUBIC_CURVE> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $z3 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r18)
org.jfree.chart.plot.PiePlot.drawLeftLabel : $z3 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.jfree.chart.plot.PieLabelLinkStyle.equals : return 1
org.jfree.chart.plot.PieLabelLinkStyle.equals : return 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : if $z3 == 0
org.jfree.chart.plot.PiePlot.drawLeftLabel : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r19 = new java.awt.geom.CubicCurve2D$Float
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r19 = new java.awt.geom.CubicCurve2D$Float >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : specialinvoke $r19.<java.awt.geom.CubicCurve2D$Float: void <init>()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : specialinvoke $r19.<java.awt.geom.CubicCurve2D$Float: void <init>()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : r20 = $r19
org.jfree.chart.plot.PiePlot.drawLeftLabel : r20 = $r19 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r20.<java.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>(d1, d2, d0, d8, d6, d7, d4, d5)
org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r20.<java.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>(d1, d2, d0, d8, d6, d7, d4, d5) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r20)
org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r20) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : r21 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox getLabel()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : r21 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox getLabel()>() >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLabel : $r1 = r0.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox label>
org.jfree.chart.plot.PieLabelRecord.getLabel : $r1 = r0.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox label> >>>>>>>> org.jfree.chart.plot.PieLabelRecord.getLabel : return $r1
org.jfree.chart.plot.PieLabelRecord.getLabel : return $r1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $f0 = (float) d1
org.jfree.chart.plot.PiePlot.drawLeftLabel : $f0 = (float) d1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $f1 = (float) d2
org.jfree.chart.plot.PiePlot.drawLeftLabel : $f1 = (float) d2 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : $r22 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor RIGHT>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r22 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor RIGHT> >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r21.<org.jfree.text.TextBox: void draw(java.awt.Graphics2D,float,float,org.jfree.ui.RectangleAnchor)>(r1, $f0, $f1, $r22)
org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r21.<org.jfree.text.TextBox: void draw(java.awt.Graphics2D,float,float,org.jfree.ui.RectangleAnchor)>(r1, $f0, $f1, $r22) >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : i2 = i2 + 1
org.jfree.chart.plot.PiePlot.drawLeftLabels : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawLeftLabels : goto [?= $r30 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>]
org.jfree.chart.plot.PiePlot.drawLeftLabels : goto [?= $r30 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>] >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>(r8, r1, r3, r4, f0, r5)
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>(r8, r1, r3, r4, f0, r5) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r10 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r10 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke $r10.<org.jfree.chart.plot.AbstractPieLabelDistributor: void clear()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke $r10.<org.jfree.chart.plot.AbstractPieLabelDistributor: void clear()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d6 = r0.<org.jfree.chart.plot.PiePlot: double labelGap>
org.jfree.chart.plot.PiePlot.drawRightLabels : $d6 = r0.<org.jfree.chart.plot.PiePlot: double labelGap> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : d0 = $d5 * $d6
org.jfree.chart.plot.PiePlot.drawRightLabels : d0 = $d5 * $d6 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r11 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $r11 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d7 = virtualinvoke $r11.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d7 = virtualinvoke $r11.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : d1 = $d7 / 2.0
org.jfree.chart.plot.PiePlot.drawRightLabels : d1 = $d7 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : i0 = 0
org.jfree.chart.plot.PiePlot.drawRightLabels : i0 = 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $i1 = interfaceinvoke r1.<org.jfree.data.KeyedValues: int getItemCount()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $i1 = interfaceinvoke r1.<org.jfree.data.KeyedValues: int getItemCount()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : if i0 >= $i1
org.jfree.chart.plot.PiePlot.drawRightLabels : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r12 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r12 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r13 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r13 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r14 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r14 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : r6 = interfaceinvoke $r12.<org.jfree.chart.labels.PieSectionLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>($r13, $r14)
org.jfree.chart.plot.PiePlot.drawRightLabels : r6 = interfaceinvoke $r12.<org.jfree.chart.labels.PieSectionLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>($r13, $r14) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : if r6 == null
org.jfree.chart.plot.PiePlot.drawRightLabels : if r6 == null >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r15 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r15 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r16 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelPaint>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r16 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r7 = new org.jfree.text.G2TextMeasurer
org.jfree.chart.plot.PiePlot.drawRightLabels : $r7 = new org.jfree.text.G2TextMeasurer >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : specialinvoke $r7.<org.jfree.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(r2)
org.jfree.chart.plot.PiePlot.drawRightLabels : specialinvoke $r7.<org.jfree.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(r2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : r8 = staticinvoke <org.jfree.text.TextUtilities: org.jfree.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.text.TextMeasurer)>(r6, $r15, $r16, f0, $r7)
org.jfree.chart.plot.PiePlot.drawRightLabels : r8 = staticinvoke <org.jfree.text.TextUtilities: org.jfree.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.text.TextMeasurer)>(r6, $r15, $r16, f0, $r7) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r17 = new org.jfree.text.TextBox
org.jfree.chart.plot.PiePlot.drawRightLabels : $r17 = new org.jfree.text.TextBox >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : specialinvoke $r17.<org.jfree.text.TextBox: void <init>(org.jfree.text.TextBlock)>(r8)
org.jfree.chart.plot.PiePlot.drawRightLabels : specialinvoke $r17.<org.jfree.text.TextBox: void <init>(org.jfree.text.TextBlock)>(r8) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : r9 = $r17
org.jfree.chart.plot.PiePlot.drawRightLabels : r9 = $r17 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r18 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelBackgroundPaint>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r18 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelBackgroundPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setBackgroundPaint(java.awt.Paint)>($r18)
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setBackgroundPaint(java.awt.Paint)>($r18) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r19 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelOutlinePaint>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r19 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelOutlinePaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setOutlinePaint(java.awt.Paint)>($r19)
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setOutlinePaint(java.awt.Paint)>($r19) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r20 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelOutlineStroke>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r20 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelOutlineStroke> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setOutlineStroke(java.awt.Stroke)>($r20)
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setOutlineStroke(java.awt.Stroke)>($r20) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : if $r21 != null
org.jfree.chart.plot.PiePlot.drawRightLabels : if $r21 != null >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelShadowPaint>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelShadowPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setShadowPaint(java.awt.Paint)>($r22)
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setShadowPaint(java.awt.Paint)>($r22) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : goto [?= $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>]
org.jfree.chart.plot.PiePlot.drawRightLabels : goto [?= $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>] >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setInteriorGap(org.jfree.ui.RectangleInsets)>($r23)
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r9.<org.jfree.text.TextBox: void setInteriorGap(org.jfree.ui.RectangleInsets)>($r23) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r24 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r24 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Number getValue(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d8 = virtualinvoke $r24.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d8 = virtualinvoke $r24.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d8)
org.jfree.chart.plot.PiePlot.drawRightLabels : d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d8) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d9 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d9 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d10 = staticinvoke <java.lang.Math: double sin(double)>(d2)
org.jfree.chart.plot.PiePlot.drawRightLabels : $d10 = staticinvoke <java.lang.Math: double sin(double)>(d2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d11 = $d10 * d1
org.jfree.chart.plot.PiePlot.drawRightLabels : $d11 = $d10 * d1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : d3 = $d9 - $d11
org.jfree.chart.plot.PiePlot.drawRightLabels : d3 = $d9 - $d11 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : d4 = virtualinvoke r9.<org.jfree.text.TextBox: double getHeight(java.awt.Graphics2D)>(r2)
org.jfree.chart.plot.PiePlot.drawRightLabels : d4 = virtualinvoke r9.<org.jfree.text.TextBox: double getHeight(java.awt.Graphics2D)>(r2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r25 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r25 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r26 = new org.jfree.chart.plot.PieLabelRecord
org.jfree.chart.plot.PiePlot.drawRightLabels : $r26 = new org.jfree.chart.plot.PieLabelRecord >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r27 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r27 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d12 = d0 / 2.0
org.jfree.chart.plot.PiePlot.drawRightLabels : $d12 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d13 = d0 / 2.0
org.jfree.chart.plot.PiePlot.drawRightLabels : $d13 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d14 = staticinvoke <java.lang.Math: double cos(double)>(d2)
org.jfree.chart.plot.PiePlot.drawRightLabels : $d14 = staticinvoke <java.lang.Math: double cos(double)>(d2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d15 = $d13 * $d14
org.jfree.chart.plot.PiePlot.drawRightLabels : $d15 = $d13 * $d14 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d16 = $d12 + $d15
org.jfree.chart.plot.PiePlot.drawRightLabels : $d16 = $d12 + $d15 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d17 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getLabelLinkDepth()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d17 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getLabelLinkDepth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d18 = 1.0 - $d17
org.jfree.chart.plot.PiePlot.drawRightLabels : $d18 = 1.0 - $d17 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r28 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r28 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d19 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getExplodePercent(java.lang.Comparable)>($r28)
org.jfree.chart.plot.PiePlot.drawRightLabels : $d19 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getExplodePercent(java.lang.Comparable)>($r28) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d20 = $d18 + $d19
org.jfree.chart.plot.PiePlot.drawRightLabels : $d20 = $d18 + $d19 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : specialinvoke $r26.<org.jfree.chart.plot.PieLabelRecord: void <init>(java.lang.Comparable,double,double,org.jfree.text.TextBox,double,double,double)>($r27, d2, d3, r9, d4, $d16, $d20)
org.jfree.chart.plot.PiePlot.drawRightLabels : specialinvoke $r26.<org.jfree.chart.plot.PieLabelRecord: void <init>(java.lang.Comparable,double,double,org.jfree.text.TextBox,double,double,double)>($r27, d2, d3, r9, d4, $d16, $d20) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke $r25.<org.jfree.chart.plot.AbstractPieLabelDistributor: void addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)>($r26)
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke $r25.<org.jfree.chart.plot.AbstractPieLabelDistributor: void addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)>($r26) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : i0 = i0 + 1
org.jfree.chart.plot.PiePlot.drawRightLabels : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : goto [?= $i1 = interfaceinvoke r1.<org.jfree.data.KeyedValues: int getItemCount()>()]
org.jfree.chart.plot.PiePlot.drawRightLabels : goto [?= $i1 = interfaceinvoke r1.<org.jfree.data.KeyedValues: int getItemCount()>()] >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : d21 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : d21 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d22 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getInteriorGap()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d22 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getInteriorGap()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : d23 = d21 * $d22
org.jfree.chart.plot.PiePlot.drawRightLabels : d23 = d21 * $d22 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r29 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r29 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d24 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d24 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d25 = $d24 + d23
org.jfree.chart.plot.PiePlot.drawRightLabels : $d25 = $d24 + d23 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d26 = 2.0 * d23
org.jfree.chart.plot.PiePlot.drawRightLabels : $d26 = 2.0 * d23 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $d27 = d21 - $d26
org.jfree.chart.plot.PiePlot.drawRightLabels : $d27 = d21 - $d26 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke $r29.<org.jfree.chart.plot.AbstractPieLabelDistributor: void distributeLabels(double,double)>($d25, $d27)
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke $r29.<org.jfree.chart.plot.AbstractPieLabelDistributor: void distributeLabels(double,double)>($d25, $d27) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : i2 = 0
org.jfree.chart.plot.PiePlot.drawRightLabels : i2 = 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r30 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r30 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $i3 = virtualinvoke $r30.<org.jfree.chart.plot.AbstractPieLabelDistributor: int getItemCount()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $i3 = virtualinvoke $r30.<org.jfree.chart.plot.AbstractPieLabelDistributor: int getItemCount()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : if i2 >= $i3
org.jfree.chart.plot.PiePlot.drawRightLabels : if i2 >= $i3 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r31 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r31 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : $r32 = virtualinvoke $r31.<org.jfree.chart.plot.AbstractPieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i2)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r32 = virtualinvoke $r31.<org.jfree.chart.plot.AbstractPieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i2) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)>(r2, r5, $r32)
org.jfree.chart.plot.PiePlot.drawRightLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)>(r2, r5, $r32) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r6 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $r6 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d0 = virtualinvoke $r6.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : d0 = virtualinvoke $r6.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d9 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getGap()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d9 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getGap()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d1 = d0 + $d9
org.jfree.chart.plot.PiePlot.drawRightLabel : d1 = d0 + $d9 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d2 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAllocatedY()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : d2 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAllocatedY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean labelLinksVisible>
org.jfree.chart.plot.PiePlot.drawRightLabel : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean labelLinksVisible> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : if $z0 == 0
org.jfree.chart.plot.PiePlot.drawRightLabel : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d3 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAngle()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : d3 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAngle()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d10 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d10 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d11 = staticinvoke <java.lang.Math: double cos(double)>(d3)
org.jfree.chart.plot.PiePlot.drawRightLabel : $d11 = staticinvoke <java.lang.Math: double cos(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d12 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieWRadius()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d12 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieWRadius()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d13 = $d11 * $d12
org.jfree.chart.plot.PiePlot.drawRightLabel : $d13 = $d11 * $d12 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d14 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getLinkPercent()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d14 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getLinkPercent()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d15 = $d13 * $d14
org.jfree.chart.plot.PiePlot.drawRightLabel : $d15 = $d13 * $d14 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d4 = $d10 + $d15
org.jfree.chart.plot.PiePlot.drawRightLabel : d4 = $d10 + $d15 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d16 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d16 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d17 = staticinvoke <java.lang.Math: double sin(double)>(d3)
org.jfree.chart.plot.PiePlot.drawRightLabel : $d17 = staticinvoke <java.lang.Math: double sin(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d18 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieHRadius()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d18 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieHRadius()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d19 = $d17 * $d18
org.jfree.chart.plot.PiePlot.drawRightLabel : $d19 = $d17 * $d18 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d20 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getLinkPercent()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d20 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getLinkPercent()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d21 = $d19 * $d20
org.jfree.chart.plot.PiePlot.drawRightLabel : $d21 = $d19 * $d20 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d5 = $d16 - $d21
org.jfree.chart.plot.PiePlot.drawRightLabel : d5 = $d16 - $d21 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d22 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d22 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d23 = staticinvoke <java.lang.Math: double cos(double)>(d3)
org.jfree.chart.plot.PiePlot.drawRightLabel : $d23 = staticinvoke <java.lang.Math: double cos(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r7 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $r7 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d24 = virtualinvoke $r7.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d24 = virtualinvoke $r7.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d25 = $d23 * $d24
org.jfree.chart.plot.PiePlot.drawRightLabel : $d25 = $d23 * $d24 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d26 = $d25 / 2.0
org.jfree.chart.plot.PiePlot.drawRightLabel : $d26 = $d25 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d6 = $d22 + $d26
org.jfree.chart.plot.PiePlot.drawRightLabel : d6 = $d22 + $d26 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d27 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d27 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d28 = staticinvoke <java.lang.Math: double sin(double)>(d3)
org.jfree.chart.plot.PiePlot.drawRightLabel : $d28 = staticinvoke <java.lang.Math: double sin(double)>(d3) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r8 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $r8 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d29 = virtualinvoke $r8.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d29 = virtualinvoke $r8.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d30 = $d28 * $d29
org.jfree.chart.plot.PiePlot.drawRightLabel : $d30 = $d28 * $d29 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $d31 = $d30 / 2.0
org.jfree.chart.plot.PiePlot.drawRightLabel : $d31 = $d30 / 2.0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d7 = $d27 - $d31
org.jfree.chart.plot.PiePlot.drawRightLabel : d7 = $d27 - $d31 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : d8 = d7
org.jfree.chart.plot.PiePlot.drawRightLabel : d8 = d7 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r9 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r9 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r9)
org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r9) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r10 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelLinkStroke>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r10 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelLinkStroke> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r10)
org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r10) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle getLabelLinkStyle()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle getLabelLinkStyle()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r11 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle STANDARD>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r11 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle STANDARD> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $z1 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r11)
org.jfree.chart.plot.PiePlot.drawRightLabel : $z1 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r11) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : if $z1 == 0
org.jfree.chart.plot.PiePlot.drawRightLabel : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r15 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle QUAD_CURVE>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r15 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle QUAD_CURVE> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $z2 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r15)
org.jfree.chart.plot.PiePlot.drawRightLabel : $z2 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : if $z2 == 0
org.jfree.chart.plot.PiePlot.drawRightLabel : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r18 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle CUBIC_CURVE>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r18 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle CUBIC_CURVE> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $z3 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r18)
org.jfree.chart.plot.PiePlot.drawRightLabel : $z3 = virtualinvoke r4.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : if $z3 == 0
org.jfree.chart.plot.PiePlot.drawRightLabel : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r19 = new java.awt.geom.CubicCurve2D$Float
org.jfree.chart.plot.PiePlot.drawRightLabel : $r19 = new java.awt.geom.CubicCurve2D$Float >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : specialinvoke $r19.<java.awt.geom.CubicCurve2D$Float: void <init>()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : specialinvoke $r19.<java.awt.geom.CubicCurve2D$Float: void <init>()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : r20 = $r19
org.jfree.chart.plot.PiePlot.drawRightLabel : r20 = $r19 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r20.<java.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>(d1, d2, d0, d8, d6, d7, d4, d5)
org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r20.<java.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>(d1, d2, d0, d8, d6, d7, d4, d5) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r20)
org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r20) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : r21 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox getLabel()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : r21 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox getLabel()>() >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $f0 = (float) d1
org.jfree.chart.plot.PiePlot.drawRightLabel : $f0 = (float) d1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $f1 = (float) d2
org.jfree.chart.plot.PiePlot.drawRightLabel : $f1 = (float) d2 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : $r22 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor LEFT>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r22 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor LEFT> >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r21.<org.jfree.text.TextBox: void draw(java.awt.Graphics2D,float,float,org.jfree.ui.RectangleAnchor)>(r1, $f0, $f1, $r22)
org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r21.<org.jfree.text.TextBox: void draw(java.awt.Graphics2D,float,float,org.jfree.ui.RectangleAnchor)>(r1, $f0, $f1, $r22) >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : i2 = i2 + 1
org.jfree.chart.plot.PiePlot.drawRightLabels : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.PiePlot.drawRightLabels : goto [?= $r30 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>]
org.jfree.chart.plot.PiePlot.drawRightLabels : goto [?= $r30 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>] >>>>>>>> org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r6)
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r6) >>>>>>>> org.jfree.chart.plot.PiePlot.drawPie : goto [?= return]
org.jfree.chart.plot.PiePlot.drawPie : goto [?= return] >>>>>>>> org.jfree.chart.plot.PiePlot.draw : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PiePlot.draw : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.plot.PiePlot.draw : if $r17 == null
org.jfree.chart.plot.PiePlot.draw : if $r17 == null >>>>>>>> org.jfree.chart.plot.PiePlot.draw : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)]
org.jfree.chart.plot.PiePlot.draw : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)] >>>>>>>> org.jfree.chart.plot.PiePlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.plot.PiePlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7) >>>>>>>> org.jfree.chart.plot.PiePlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r8)
org.jfree.chart.plot.PiePlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r8) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r48.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 2, 100)
org.jfree.chart.JFreeChart.draw : specialinvoke $r48.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 2, 100) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r48)
