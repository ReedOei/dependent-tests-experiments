org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r2 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r2 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r1 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_LEFT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r1 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_LEFT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z0 = virtualinvoke $r2.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z0 = virtualinvoke $r2.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z0 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r3 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r3 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r4 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r4 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z1 = virtualinvoke $r3.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z1 = virtualinvoke $r3.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z1 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r5 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r5 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r6 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_RIGHT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r6 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_RIGHT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z2 = virtualinvoke $r5.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z2 = virtualinvoke $r5.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z2 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r7 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r7 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r8 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor LEFT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r8 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor LEFT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z3 = virtualinvoke $r7.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z3 = virtualinvoke $r7.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z3 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z3 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r9 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r9 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r10 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor CENTER>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r10 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor CENTER> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z4 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z4 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d8 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockWidth>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d8 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockWidth> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d9 = neg $d8
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d9 = neg $d8 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d10 = $d9 / 2.0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d10 = $d9 / 2.0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset> = $d10
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset> = $d10 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d11 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d11 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d12 = neg $d11
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d12 = neg $d11 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d13 = $d12 / 2.0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d13 = $d12 / 2.0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset> = $d13
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset> = $d13 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : goto [?= return]
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : goto [?= return] >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : if r1 == null
org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : if r1 == null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : return null
org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : return null >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number)>($r2, r1)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number)>($r2, r1) >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>(r1, r2, 1)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>(r1, r2, 1) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2)
org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.xy.XYSeries.add : r4 = $r3
org.jfree.data.xy.XYSeries.add : r4 = $r3 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0) >>>>>>>> org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>()
org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = null
org.jfree.data.xy.XYDataItem.clone : r1 = null >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : goto [?= return r1]
org.jfree.data.xy.XYDataItem.clone : goto [?= return r1] >>>>>>>> org.jfree.data.xy.XYDataItem.clone : return r1
org.jfree.data.xy.XYDataItem.clone : return r1 >>>>>>>> org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $z1 == 0
org.jfree.data.xy.XYSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3)
org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= 0
org.jfree.data.xy.XYSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $i2 = neg i0
org.jfree.data.xy.XYSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1
org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)]
org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)] >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)
org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : return $d0
org.jfree.data.xy.XYDataItem.getXValue : return $d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getY : return $r1
org.jfree.data.xy.XYDataItem.getY : return $r1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null >>>>>>>> org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : return $i0
org.jfree.data.xy.XYSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount>
org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $i7 <= $i8
org.jfree.data.xy.XYSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.xy.XYSeries.add : if z0 == 0
org.jfree.data.xy.XYSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>()
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.xy.XYSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.addSeries : $r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.getKey : return $r1
org.jfree.data.general.Series.getKey : return $r1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesIndex(java.lang.Comparable)>($r3)
org.jfree.data.xy.XYSeriesCollection.addSeries : $i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesIndex(java.lang.Comparable)>($r3) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : return $i0
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = 0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if i1 >= i0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if i1 >= i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : return -1
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : return -1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : if $i0 < 0
org.jfree.data.xy.XYSeriesCollection.addSeries : if $i0 < 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $r9 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.addSeries : $r9 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.xy.XYSeriesCollection.addSeries : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r0)
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addVetoableChangeListener : $r2 = r0.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport>
org.jfree.data.general.Series.addVetoableChangeListener : $r2 = r0.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> >>>>>>>> org.jfree.data.general.Series.addVetoableChangeListener : virtualinvoke $r2.<java.beans.VetoableChangeSupport: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r1)
org.jfree.data.general.Series.addVetoableChangeListener : virtualinvoke $r2.<java.beans.VetoableChangeSupport: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener"
org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener" >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2]
org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5
org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1)
org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)]
org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.RangeInfo
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.RangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : r1 = (org.jfree.data.RangeInfo) r0
org.jfree.data.general.DatasetUtilities.findRangeBounds : r1 = (org.jfree.data.RangeInfo) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : r2 = interfaceinvoke r1.<org.jfree.data.RangeInfo: org.jfree.data.Range getRangeBounds(boolean)>(z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : r2 = interfaceinvoke r1.<org.jfree.data.RangeInfo: org.jfree.data.Range getRangeBounds(boolean)>(z0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : d0 = #Infinity
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : d1 = #-Infinity
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : i1 = 0
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : i1 = 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : if i1 >= i0
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : if i1 >= i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < 0
org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < $i1
org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < $i1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r4 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.XYSeriesCollection.getSeries : $r4 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : return $r4
org.jfree.data.xy.XYSeriesCollection.getSeries : return $r4 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : d2 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMinY()>()
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : d2 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMinY()>() >>>>>>>> org.jfree.data.xy.XYSeries.getMinY : $d0 = r0.<org.jfree.data.xy.XYSeries: double minY>
org.jfree.data.xy.XYSeries.getMinY : $d0 = r0.<org.jfree.data.xy.XYSeries: double minY> >>>>>>>> org.jfree.data.xy.XYSeries.getMinY : return $d0
org.jfree.data.xy.XYSeries.getMinY : return $d0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2)
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : if $z1 != 0
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : if $z1 != 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : d3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMaxY()>()
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : d3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMaxY()>() >>>>>>>> org.jfree.data.xy.XYSeries.getMaxY : $d0 = r0.<org.jfree.data.xy.XYSeries: double maxY>
org.jfree.data.xy.XYSeries.getMaxY : $d0 = r0.<org.jfree.data.xy.XYSeries: double maxY> >>>>>>>> org.jfree.data.xy.XYSeries.getMaxY : return $d0
org.jfree.data.xy.XYSeries.getMaxY : return $d0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3)
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : if $z2 != 0
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : if $z2 != 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : i1 = i1 + 1
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : goto [?= (branch)]
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : $b2 = d0 cmpl d1
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : $b2 = d0 cmpl d1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : if $b2 <= 0
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : if $b2 <= 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getRangeBounds : return null
org.jfree.data.xy.XYSeriesCollection.getRangeBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : goto [?= return r2]
org.jfree.data.general.DatasetUtilities.findRangeBounds : goto [?= return r2] >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : return r2
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r2 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : if r2 != null
