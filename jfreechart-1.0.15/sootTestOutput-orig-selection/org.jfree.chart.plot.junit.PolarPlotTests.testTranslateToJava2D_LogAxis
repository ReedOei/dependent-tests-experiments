org.jfree.chart.axis.LogAxis.createLogTickUnits : $r1 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r1.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r1.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : r2 = $r1
org.jfree.chart.axis.LogAxis.createLogTickUnits : r2 = $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r4 = new org.jfree.chart.util.LogFormat
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r4 = new org.jfree.chart.util.LogFormat >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r4.<org.jfree.chart.util.LogFormat: void <init>()>()
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r4.<org.jfree.chart.util.LogFormat: void <init>()>() >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : r3 = $r4
org.jfree.chart.axis.LogAxis.createLogTickUnits : r3 = $r4 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r5 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r5 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r5.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r3, 2)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r5.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r3, 2) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r5)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r5) >>>>>>>> org.jfree.chart.axis.TickUnits.add : if r1 != null
org.jfree.chart.axis.TickUnits.add : if r1 != null >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4)
org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r6 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r6 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r6.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r6.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r6)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r6) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0
org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : return $d0
org.jfree.chart.axis.TickUnit.getSize : return $d0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 1 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r7 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r7 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r7.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.2, r3, 2)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r7.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.2, r3, 2) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r7)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r7) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r8 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r8 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r8.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r3, 5)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r8.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r3, 5) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r8)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r8) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r9 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r9 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r9.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r9.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r9)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r9) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r10 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r10 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r10.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r10.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r11 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r11 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(3.0, r3, 15)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(3.0, r3, 15) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r11)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r11) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r12 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r12 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(4.0, r3, 20)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(4.0, r3, 20) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r12)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r12) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r13 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r13 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r13.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r3, 25)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r13.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r3, 25) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r13)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r13) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r14 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r14 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r14.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(6.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r14.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(6.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r14)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r14) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r15 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r15 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r15.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(7.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r15.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(7.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r15)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r15) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r16 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r16 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(8.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(8.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r16)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r16) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r17 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r17 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r17.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(9.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r17.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(9.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r17)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r17) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r18 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r18 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(10.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(10.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : return r2
org.jfree.chart.axis.LogAxis.createLogTickUnits : return r2 >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> = r1
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : $r2 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2)
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2
org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0
org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : $r1 = new org.jfree.data.Range
org.jfree.chart.axis.ValueAxis.setRange : $r1 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.axis.ValueAxis.setRange : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range)>($r1)
org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range)>($r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, 1, 1)
org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, 1, 1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> = 0
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> = 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setRange : $r2 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.ValueAxis.setRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2)
org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2) >>>>>>>> org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1
org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1 >>>>>>>> org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>()
org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>() >>>>>>>> org.jfree.chart.axis.LogAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isAutoRange()>()
org.jfree.chart.axis.LogAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0
org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0 >>>>>>>> org.jfree.chart.axis.LogAxis.configure : if $z0 == 0
org.jfree.chart.axis.LogAxis.configure : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1)
org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1) >>>>>>>> org.jfree.chart.plot.PolarPlot.setMargin : r0.<org.jfree.chart.plot.PolarPlot: int margin> = i0
org.jfree.chart.plot.PolarPlot.setMargin : r0.<org.jfree.chart.plot.PolarPlot: int margin> = i0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setMargin : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>()
org.jfree.chart.plot.PolarPlot.setMargin : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setAngleOffset : r0.<org.jfree.chart.plot.PolarPlot: double angleOffset> = d0
org.jfree.chart.plot.PolarPlot.setAngleOffset : r0.<org.jfree.chart.plot.PolarPlot: double angleOffset> = d0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setAngleOffset : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>()
org.jfree.chart.plot.PolarPlot.setAngleOffset : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $z0 = r0.<org.jfree.chart.plot.PolarPlot: boolean counterClockwise>
org.jfree.chart.plot.PolarPlot.translateToJava2D : $z0 = r0.<org.jfree.chart.plot.PolarPlot: boolean counterClockwise> >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : if $z0 == 0
org.jfree.chart.plot.PolarPlot.translateToJava2D : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d15 = r0.<org.jfree.chart.plot.PolarPlot: double angleOffset>
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d15 = r0.<org.jfree.chart.plot.PolarPlot: double angleOffset> >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d16 = d0 + $d15
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d16 = d0 + $d15 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d16)
org.jfree.chart.plot.PolarPlot.translateToJava2D : d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d16) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d17 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d17 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinX()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $i2 = r0.<org.jfree.chart.plot.PolarPlot: int margin>
org.jfree.chart.plot.PolarPlot.translateToJava2D : $i2 = r0.<org.jfree.chart.plot.PolarPlot: int margin> >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d18 = (double) $i2
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d18 = (double) $i2 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d3 = $d17 + $d18
org.jfree.chart.plot.PolarPlot.translateToJava2D : d3 = $d17 + $d18 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d19 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d19 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $i3 = r0.<org.jfree.chart.plot.PolarPlot: int margin>
org.jfree.chart.plot.PolarPlot.translateToJava2D : $i3 = r0.<org.jfree.chart.plot.PolarPlot: int margin> >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d20 = (double) $i3
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d20 = (double) $i3 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d4 = $d19 - $d20
org.jfree.chart.plot.PolarPlot.translateToJava2D : d4 = $d19 - $d20 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d21 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d21 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $i4 = r0.<org.jfree.chart.plot.PolarPlot: int margin>
org.jfree.chart.plot.PolarPlot.translateToJava2D : $i4 = r0.<org.jfree.chart.plot.PolarPlot: int margin> >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d22 = (double) $i4
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d22 = (double) $i4 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d5 = $d21 + $d22
org.jfree.chart.plot.PolarPlot.translateToJava2D : d5 = $d21 + $d22 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d23 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d23 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $i5 = r0.<org.jfree.chart.plot.PolarPlot: int margin>
org.jfree.chart.plot.PolarPlot.translateToJava2D : $i5 = r0.<org.jfree.chart.plot.PolarPlot: int margin> >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d24 = (double) $i5
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d24 = (double) $i5 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d6 = $d23 - $d24
org.jfree.chart.plot.PolarPlot.translateToJava2D : d6 = $d23 - $d24 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d25 = d4 - d3
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d25 = d4 - d3 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d7 = $d25 / 2.0
org.jfree.chart.plot.PolarPlot.translateToJava2D : d7 = $d25 / 2.0 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d26 = d6 - d5
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d26 = d6 - d5 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d8 = $d26 / 2.0
org.jfree.chart.plot.PolarPlot.translateToJava2D : d8 = $d26 / 2.0 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d9 = d3 + d7
org.jfree.chart.plot.PolarPlot.translateToJava2D : d9 = d3 + d7 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d10 = d5 + d8
org.jfree.chart.plot.PolarPlot.translateToJava2D : d10 = d5 + d8 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d11 = staticinvoke <java.lang.Math: double min(double,double)>(d7, d8)
org.jfree.chart.plot.PolarPlot.translateToJava2D : d11 = staticinvoke <java.lang.Math: double min(double,double)>(d7, d8) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $r5 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PolarPlot.translateToJava2D : $r5 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : specialinvoke $r5.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d9, d10, d11, d11)
org.jfree.chart.plot.PolarPlot.translateToJava2D : specialinvoke $r5.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d9, d10, d11, d11) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : r3 = $r5
org.jfree.chart.plot.PolarPlot.translateToJava2D : r3 = $r5 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d12 = virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>()
org.jfree.chart.plot.PolarPlot.translateToJava2D : d12 = virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getLowerBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.ValueAxis.getLowerBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : return $d0
org.jfree.chart.axis.ValueAxis.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d13 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d12)
org.jfree.chart.plot.PolarPlot.translateToJava2D : d13 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d12) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.plot.PolarPlot.translateToJava2D : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d27 = virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d13, r3, $r6)
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d27 = virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d13, r3, $r6) >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : return $r1
org.jfree.chart.axis.ValueAxis.getRange : return $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d5 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : $d5 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d5)
org.jfree.chart.axis.LogAxis.valueToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d5) >>>>>>>> org.jfree.chart.axis.LogAxis.calculateLog : $d1 = staticinvoke <java.lang.Math: double log(double)>(d0)
org.jfree.chart.axis.LogAxis.calculateLog : $d1 = staticinvoke <java.lang.Math: double log(double)>(d0) >>>>>>>> org.jfree.chart.axis.LogAxis.calculateLog : $d2 = r0.<org.jfree.chart.axis.LogAxis: double baseLog>
org.jfree.chart.axis.LogAxis.calculateLog : $d2 = r0.<org.jfree.chart.axis.LogAxis: double baseLog> >>>>>>>> org.jfree.chart.axis.LogAxis.calculateLog : $d3 = $d1 / $d2
org.jfree.chart.axis.LogAxis.calculateLog : $d3 = $d1 / $d2 >>>>>>>> org.jfree.chart.axis.LogAxis.calculateLog : return $d3
org.jfree.chart.axis.LogAxis.calculateLog : return $d3 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d6 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : $d6 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d6)
org.jfree.chart.axis.LogAxis.valueToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>($d6) >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d7 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>(d0)
org.jfree.chart.axis.LogAxis.valueToJava2D : d7 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: double calculateLog(double)>(d0) >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d3 = 0.0
org.jfree.chart.axis.LogAxis.valueToJava2D : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d4 = 0.0
org.jfree.chart.axis.LogAxis.valueToJava2D : d4 = 0.0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.LogAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : if $z0 == 0
org.jfree.chart.axis.LogAxis.valueToJava2D : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : goto [?= $z2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isInverted()>()]
org.jfree.chart.axis.LogAxis.valueToJava2D : goto [?= $z2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isInverted()>()] >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isInverted()>()
org.jfree.chart.axis.LogAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.LogAxis: boolean isInverted()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted> >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : return $z0
org.jfree.chart.axis.ValueAxis.isInverted : return $z0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : if $z2 == 0
org.jfree.chart.axis.LogAxis.valueToJava2D : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d14 = d7 - d1
org.jfree.chart.axis.LogAxis.valueToJava2D : $d14 = d7 - d1 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d15 = d2 - d1
org.jfree.chart.axis.LogAxis.valueToJava2D : $d15 = d2 - d1 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d16 = $d14 / $d15
org.jfree.chart.axis.LogAxis.valueToJava2D : $d16 = $d14 / $d15 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d17 = d4 - d3
org.jfree.chart.axis.LogAxis.valueToJava2D : $d17 = d4 - d3 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d18 = $d16 * $d17
org.jfree.chart.axis.LogAxis.valueToJava2D : $d18 = $d16 * $d17 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : $d19 = d3 + $d18
org.jfree.chart.axis.LogAxis.valueToJava2D : $d19 = d3 + $d18 >>>>>>>> org.jfree.chart.axis.LogAxis.valueToJava2D : return $d19
org.jfree.chart.axis.LogAxis.valueToJava2D : return $d19 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : d14 = $d27 - d9
org.jfree.chart.plot.PolarPlot.translateToJava2D : d14 = $d27 - d9 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d28 = staticinvoke <java.lang.Math: double cos(double)>(d2)
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d28 = staticinvoke <java.lang.Math: double cos(double)>(d2) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d29 = $d28 * d14
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d29 = $d28 * d14 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d30 = d9 + $d29
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d30 = d9 + $d29 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : f0 = (float) $d30
org.jfree.chart.plot.PolarPlot.translateToJava2D : f0 = (float) $d30 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d31 = staticinvoke <java.lang.Math: double sin(double)>(d2)
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d31 = staticinvoke <java.lang.Math: double sin(double)>(d2) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d32 = $d31 * d14
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d32 = $d31 * d14 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $d33 = d10 + $d32
org.jfree.chart.plot.PolarPlot.translateToJava2D : $d33 = d10 + $d32 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : f1 = (float) $d33
org.jfree.chart.plot.PolarPlot.translateToJava2D : f1 = (float) $d33 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : i0 = staticinvoke <java.lang.Math: int round(float)>(f0)
org.jfree.chart.plot.PolarPlot.translateToJava2D : i0 = staticinvoke <java.lang.Math: int round(float)>(f0) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : i1 = staticinvoke <java.lang.Math: int round(float)>(f1)
org.jfree.chart.plot.PolarPlot.translateToJava2D : i1 = staticinvoke <java.lang.Math: int round(float)>(f1) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : $r7 = new java.awt.Point
org.jfree.chart.plot.PolarPlot.translateToJava2D : $r7 = new java.awt.Point >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : specialinvoke $r7.<java.awt.Point: void <init>(int,int)>(i0, i1)
org.jfree.chart.plot.PolarPlot.translateToJava2D : specialinvoke $r7.<java.awt.Point: void <init>(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : r4 = $r7
org.jfree.chart.plot.PolarPlot.translateToJava2D : r4 = $r7 >>>>>>>> org.jfree.chart.plot.PolarPlot.translateToJava2D : return r4
