org.jfree.data.category.DefaultCategoryDataset.addValue : $r3 = new java.lang.Double >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.category.DefaultCategoryDataset.addValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r3, r1, r2)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r3, r1, r2) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter>
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0 >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests$MyRenderer.createStackedValueList : $r4 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>(r1, r2, r3, d0, z0)
org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests$MyRenderer.createStackedValueList : $r4 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>(r1, r2, r3, d0, z0) >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r4 = new java.util.ArrayList
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : r5 = $r4
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : r5 = $r4 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d1 = d0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d1 = d0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d2 = d0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d2 = d0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d3 = 0.0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d3 = 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if z0 == 0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i0 = -1
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i0 = -1 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i1 = lengthof r3
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i1 = lengthof r3 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i2 = 0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i2 = 0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if i2 >= i1
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if i2 >= i1 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i3 = r3[i2]
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i3 = r3[i2] >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r7 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i3)
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r7 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i0)
org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3
org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : return $r2
org.jfree.data.category.DefaultCategoryDataset.getRowKey : return $r2 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : r6 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(java.lang.Comparable,java.lang.Comparable)>($r7, r2)
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : r6 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(java.lang.Comparable,java.lang.Comparable)>($r7, r2) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r3 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getValue : $r3 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r4 = virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(java.lang.Comparable,java.lang.Comparable)>(r1, r2)
org.jfree.data.category.DefaultCategoryDataset.getValue : $r4 = virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(java.lang.Comparable,java.lang.Comparable)>(r1, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "rowKey")
org.jfree.data.DefaultKeyedValues2D.getValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "rowKey") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "columnKey")
org.jfree.data.DefaultKeyedValues2D.getValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "columnKey") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.getValue : $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if $z0 != 0
org.jfree.data.DefaultKeyedValues2D.getValue : if $z0 != 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues2D.getValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.getValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getValue : $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r4 = (org.jfree.data.DefaultKeyedValues) $r11
org.jfree.data.DefaultKeyedValues2D.getValue : r4 = (org.jfree.data.DefaultKeyedValues) $r11 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : i1 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.getValue : i1 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if i1 < 0
org.jfree.data.DefaultKeyedValues2D.getValue : if i1 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r12 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.getValue : $r12 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : goto [?= return $r12]
org.jfree.data.DefaultKeyedValues2D.getValue : goto [?= return $r12] >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : return $r12
org.jfree.data.DefaultKeyedValues2D.getValue : return $r12 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : return $r4
org.jfree.data.category.DefaultCategoryDataset.getValue : return $r4 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if r6 != null
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if r6 != null >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d4 = virtualinvoke r6.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d4 = virtualinvoke r6.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $b5 = d4 cmpl 0.0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $b5 = d4 cmpl 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if $b5 > 0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if $b5 > 0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $z1 = r0.<org.jfree.chart.renderer.category.StackedBarRenderer3D: boolean ignoreZeroValues>
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $z1 = r0.<org.jfree.chart.renderer.category.StackedBarRenderer3D: boolean ignoreZeroValues> >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if $z1 != 0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if $z1 != 0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $b6 = d4 cmpl 0.0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $b6 = d4 cmpl 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if $b6 < 0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if $b6 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if i0 >= 0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : if i0 >= 0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r8 = newarray (java.lang.Object)[2]
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r8[0] = null
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r8[0] = null >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r9 = new java.lang.Double
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r9 = new java.lang.Double >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : specialinvoke $r9.<java.lang.Double: void <init>(double)>(d0)
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : specialinvoke $r9.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r8[1] = $r9
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r8[1] = $r9 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8)
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i0 = 0
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i0 = 0 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d1 = d1 + d4
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : d1 = d1 + d4 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r10 = newarray (java.lang.Object)[2]
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r11 = new java.lang.Integer
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r11 = new java.lang.Integer >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : specialinvoke $r11.<java.lang.Integer: void <init>(int)>(i3)
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : specialinvoke $r11.<java.lang.Integer: void <init>(int)>(i3) >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r10[0] = $r11
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r10[0] = $r11 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r12 = new java.lang.Double
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r12 = new java.lang.Double >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : specialinvoke $r12.<java.lang.Double: void <init>(double)>(d1)
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : specialinvoke $r12.<java.lang.Double: void <init>(double)>(d1) >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r10[1] = $r12
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : $r10[1] = $r12 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10)
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : goto [?= i2 = i2 + 1]
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : goto [?= i2 = i2 + 1] >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i2 = i2 + 1
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : i2 = i2 + 1 >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : goto [?= (branch)]
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : return r5
org.jfree.chart.renderer.category.StackedBarRenderer3D.createStackedValueList : return r5 >>>>>>>> org.jfree.chart.renderer.category.junit.StackedBarRenderer3DTests$MyRenderer.createStackedValueList : return $r4
