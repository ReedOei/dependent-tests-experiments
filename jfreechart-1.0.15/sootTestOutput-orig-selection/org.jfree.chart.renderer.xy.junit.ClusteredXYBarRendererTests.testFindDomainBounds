org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter>
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter> >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : return $r0
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : return $r0 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible> >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : return $z0
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : return $z0 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if r1 != null
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if r1 != null >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if r2 != null
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if r2 != null >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i2 = lengthof r2
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i2 = lengthof r2 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if $i2 == 6
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if $i2 == 6 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r6 = r2[0]
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r6 = r2[0] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : i0 = lengthof $r6
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : i0 = lengthof $r6 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r7 = r2[1]
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r7 = r2[1] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i3 = lengthof $r7
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i3 = lengthof $r7 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 != $i3
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 != $i3 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r8 = r2[2]
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r8 = r2[2] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i4 = lengthof $r8
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i4 = lengthof $r8 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 != $i4
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 != $i4 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r9 = r2[3]
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r9 = r2[3] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i5 = lengthof $r9
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i5 = lengthof $r9 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 != $i5
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 != $i5 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r10 = r2[4]
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r10 = r2[4] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i6 = lengthof $r10
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i6 = lengthof $r10 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 != $i6
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 != $i6 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r11 = r2[5]
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r11 = r2[5] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i7 = lengthof $r11
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $i7 = lengthof $r11 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 == $i7
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i0 == $i7 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultIntervalXYDataset: int indexOf(java.lang.Comparable)>(r1)
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultIntervalXYDataset: int indexOf(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>()
org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : return $i0
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : return -1
org.jfree.data.general.AbstractSeriesDataset.indexOf : return -1 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i1 != -1
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : if i1 != -1 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r13 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r13 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r14 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r14 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : goto [?= $r18 = new org.jfree.data.general.DatasetChangeEvent]
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : goto [?= $r18 = new org.jfree.data.general.DatasetChangeEvent] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r18 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : $r18 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : specialinvoke $r18.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : specialinvoke $r18.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : virtualinvoke r0.<org.jfree.data.xy.DefaultIntervalXYDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r18)
org.jfree.data.xy.DefaultIntervalXYDataset.addSeries : virtualinvoke r0.<org.jfree.data.xy.DefaultIntervalXYDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r18) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : if i0 < 0
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : if i0 < 0 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultIntervalXYDataset: int getSeriesCount()>()
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultIntervalXYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : if i0 < $i1
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : if i0 < $i1 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : $r2 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : $r2 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : $r4 = (java.lang.Comparable) $r3
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : $r4 = (java.lang.Comparable) $r3 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : return $r4
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey : return $r4 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if $z0 == 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if $z0 == 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = i1 + 1
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : goto [?= (branch)]
org.jfree.data.general.AbstractSeriesDataset.indexOf : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : if r1 != null
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $z0 = r0.<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: boolean centerBarAtStartValue>
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $z0 = r0.<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: boolean centerBarAtStartValue> >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : if $z0 == 0
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $r4 = specialinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r1)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $r4 = specialinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r1) >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 1)
org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : goto [?= (branch)]
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r2 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r2 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z2 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r4 = (java.lang.Comparable) $r5
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r4 = (java.lang.Comparable) $r5 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r4) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : return i1
org.jfree.data.general.AbstractSeriesDataset.indexOf : return i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : if i0 < 0
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : if i0 < 0 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultIntervalXYDataset: int getSeriesCount()>()
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultIntervalXYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : if i0 < $i1
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : if i0 < $i1 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $r3 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $r3 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $r5 = (double[][]) $r4
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $r5 = (double[][]) $r4 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : r1 = (double[][]) $r5
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : r1 = (double[][]) $r5 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $r6 = r1[0]
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $r6 = r1[0] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $i2 = lengthof $r6
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : $i2 = lengthof $r6 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : return $i2
org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount : return $i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i2 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i2 >= i1
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d2 = interfaceinvoke r2.<org.jfree.data.xy.IntervalXYDataset: double getStartXValue(int,int)>(i0, i2)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d2 = interfaceinvoke r2.<org.jfree.data.xy.IntervalXYDataset: double getStartXValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $r2 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $r2 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $r4 = (double[][]) $r3
org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $r4 = (double[][]) $r3 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : r1 = (double[][]) $r4
org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : r1 = (double[][]) $r4 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $r5 = r1[1]
org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $r5 = r1[1] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $d0 = $r5[i1]
org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : $d0 = $r5[i1] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : return $d0
org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue : return $d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d3 = interfaceinvoke r2.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(i0, i2)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d3 = interfaceinvoke r2.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $r2 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $r2 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $r4 = (double[][]) $r3
org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $r4 = (double[][]) $r3 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : r1 = (double[][]) $r4
org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : r1 = (double[][]) $r4 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $r5 = r1[2]
org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $r5 = r1[2] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $d0 = $r5[i1]
org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : $d0 = $r5[i1] >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : return $d0
org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue : return $d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z3 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z4 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i2 = i2 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i2 = i2 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $b6 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $b6 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r9 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r9 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return $r9
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return $r9 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds : return $r2
org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds : return $r2 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : return $r4
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : return $r4 >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $r2 = (org.jfree.data.xy.IntervalXYDataset) r1
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $r2 = (org.jfree.data.xy.IntervalXYDataset) r1 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>($r2)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>($r2) >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset")
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset") >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d0 = #Infinity
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d0 = #Infinity >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d1 = #-Infinity
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d1 = #-Infinity >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i0 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i0 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i1 = 0
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : if i1 >= i0
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i2 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: int getItemCount(int)>(i1)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i2 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: int getItemCount(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i3 = 0
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i3 = 0 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : if i3 >= i2
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : if i3 >= i2 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d2 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getStartXValue(int,int)>(i1, i3)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d2 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getStartXValue(int,int)>(i1, i3) >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d3 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(i1, i3)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d3 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(i1, i3) >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : $d5 = d3 - d2
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : $d5 = d3 - d2 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d4 = $d5 / 2.0
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d4 = $d5 / 2.0 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d6 = d2 - d4
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d6 = d2 - d4 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d7 = d3 - d4
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d7 = d3 - d4 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d6)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d6) >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d7)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d7) >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i3 = i3 + 1
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i3 = i3 + 1 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : goto [?= (branch)]
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i1 = i1 + 1
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : $b4 = d0 cmpl d1
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : $b4 = d0 cmpl d1 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : if $b4 <= 0
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : if $b4 <= 0 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : $r2 = new org.jfree.data.Range
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : return $r2
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset : return $r2 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : return $r3
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : return $r3 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : return null
