org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : return $l3
org.jfree.data.time.Week.getFirstMillisecond : return $l3 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1
org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L
org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : return $l5
org.jfree.data.time.Week.getLastMillisecond : return $l5 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.remove : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.remove : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.time.TimeTableXYDataset.remove : virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: void removeValue(java.lang.Comparable,java.lang.Comparable)>(r1, r2)
org.jfree.data.time.TimeTableXYDataset.remove : virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: void removeValue(java.lang.Comparable,java.lang.Comparable)>(r1, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(null, r1, r2)
org.jfree.data.DefaultKeyedValues2D.removeValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(null, r1, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $i2 = neg i0
org.jfree.data.DefaultKeyedValues2D.setValue : $i2 = neg i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i3 = $i2 - 1
org.jfree.data.DefaultKeyedValues2D.setValue : i3 = $i2 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(i3, r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(i3, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(i3, r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(i3, r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : goto [?= virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)]
org.jfree.data.DefaultKeyedValues2D.setValue : goto [?= virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)] >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : z0 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : z0 = 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues2D.removeValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.time.Week.compareTo : $z0 = r1 instanceof org.jfree.data.time.Week
org.jfree.data.time.Week.compareTo : $z0 = r1 instanceof org.jfree.data.time.Week >>>>>>>> org.jfree.data.time.Week.compareTo : if $z0 == 0
org.jfree.data.time.Week.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.time.Week.compareTo : r2 = (org.jfree.data.time.Week) r1
org.jfree.data.time.Week.compareTo : r2 = (org.jfree.data.time.Week) r1 >>>>>>>> org.jfree.data.time.Week.compareTo : $s1 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.compareTo : $s1 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.compareTo : $r3 = virtualinvoke r2.<org.jfree.data.time.Week: org.jfree.data.time.Year getYear()>()
org.jfree.data.time.Week.compareTo : $r3 = virtualinvoke r2.<org.jfree.data.time.Week: org.jfree.data.time.Year getYear()>() >>>>>>>> org.jfree.data.time.Week.getYear : $r1 = new org.jfree.data.time.Year
org.jfree.data.time.Week.getYear : $r1 = new org.jfree.data.time.Year >>>>>>>> org.jfree.data.time.Week.getYear : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getYear : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getYear : specialinvoke $r1.<org.jfree.data.time.Year: void <init>(int)>($s0)
org.jfree.data.time.Week.getYear : specialinvoke $r1.<org.jfree.data.time.Year: void <init>(int)>($s0) >>>>>>>> org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : return $l1
org.jfree.data.time.Year.getFirstMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : return $l1
org.jfree.data.time.Year.getLastMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Week.getYear : return $r1
org.jfree.data.time.Week.getYear : return $r1 >>>>>>>> org.jfree.data.time.Week.compareTo : $i2 = virtualinvoke $r3.<org.jfree.data.time.Year: int getYear()>()
org.jfree.data.time.Week.compareTo : $i2 = virtualinvoke $r3.<org.jfree.data.time.Year: int getYear()>() >>>>>>>> org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getYear : return $s0
org.jfree.data.time.Year.getYear : return $s0 >>>>>>>> org.jfree.data.time.Week.compareTo : i0 = $s1 - $i2
org.jfree.data.time.Week.compareTo : i0 = $s1 - $i2 >>>>>>>> org.jfree.data.time.Week.compareTo : if i0 != 0
org.jfree.data.time.Week.compareTo : if i0 != 0 >>>>>>>> org.jfree.data.time.Week.compareTo : $b3 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.compareTo : $b3 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.compareTo : $i4 = virtualinvoke r2.<org.jfree.data.time.Week: int getWeek()>()
org.jfree.data.time.Week.compareTo : $i4 = virtualinvoke r2.<org.jfree.data.time.Week: int getWeek()>() >>>>>>>> org.jfree.data.time.Week.getWeek : $b0 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getWeek : $b0 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getWeek : return $b0
org.jfree.data.time.Week.getWeek : return $b0 >>>>>>>> org.jfree.data.time.Week.compareTo : i0 = $b3 - $i4
org.jfree.data.time.Week.compareTo : i0 = $b3 - $i4 >>>>>>>> org.jfree.data.time.Week.compareTo : goto [?= return i0]
org.jfree.data.time.Week.compareTo : goto [?= return i0] >>>>>>>> org.jfree.data.time.Week.compareTo : return i0
org.jfree.data.time.Week.compareTo : return i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.removeValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : r3 = (org.jfree.data.DefaultKeyedValues) $r5
org.jfree.data.DefaultKeyedValues2D.removeValue : r3 = (org.jfree.data.DefaultKeyedValues) $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i2 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: int getItemCount()>()
org.jfree.data.DefaultKeyedValues2D.removeValue : i2 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: int getItemCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>()
org.jfree.data.DefaultKeyedValues.getItemCount : $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : return $i0
org.jfree.data.DefaultKeyedValues.getItemCount : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if i1 >= i2
org.jfree.data.DefaultKeyedValues2D.removeValue : if i1 >= i2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r6 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.removeValue : $r6 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if $r6 == null
org.jfree.data.DefaultKeyedValues2D.removeValue : if $r6 == null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = i1 + 1
org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = i1 + 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : goto [?= (branch)]
org.jfree.data.DefaultKeyedValues2D.removeValue : goto [?= (branch)] >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if z0 == 0
org.jfree.data.DefaultKeyedValues2D.removeValue : if z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : z1 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : z1 = 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i4 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : i4 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i5 = interfaceinvoke $r11.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.removeValue : i5 = interfaceinvoke $r11.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if i4 >= i5
org.jfree.data.DefaultKeyedValues2D.removeValue : if i4 >= i5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if z1 == 0
org.jfree.data.DefaultKeyedValues2D.removeValue : if z1 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i6 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : i6 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r16 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r16 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i7 = interfaceinvoke $r16.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.removeValue : i7 = interfaceinvoke $r16.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if i6 >= i7
org.jfree.data.DefaultKeyedValues2D.removeValue : if i6 >= i7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r20 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r20 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r20.<java.util.List: boolean remove(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r20.<java.util.List: boolean remove(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.time.TimeTableXYDataset.remove : if z0 == 0
org.jfree.data.time.TimeTableXYDataset.remove : if z0 == 0 >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : $r3 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>()
org.jfree.data.xy.XYBarDataset.clone : $r3 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3
org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : return r1
org.jfree.data.general.AbstractDataset.clone : return r1 >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : r1 = (org.jfree.data.xy.XYBarDataset) $r3
org.jfree.data.xy.XYBarDataset.clone : r1 = (org.jfree.data.xy.XYBarDataset) $r3 >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : $r4 = r0.<org.jfree.data.xy.XYBarDataset: org.jfree.data.xy.XYDataset underlying>
org.jfree.data.xy.XYBarDataset.clone : $r4 = r0.<org.jfree.data.xy.XYBarDataset: org.jfree.data.xy.XYDataset underlying> >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : $z0 = $r4 instanceof org.jfree.util.PublicCloneable
org.jfree.data.xy.XYBarDataset.clone : $z0 = $r4 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : if $z0 == 0
org.jfree.data.xy.XYBarDataset.clone : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : $r5 = r0.<org.jfree.data.xy.XYBarDataset: org.jfree.data.xy.XYDataset underlying>
org.jfree.data.xy.XYBarDataset.clone : $r5 = r0.<org.jfree.data.xy.XYBarDataset: org.jfree.data.xy.XYDataset underlying> >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : r2 = (org.jfree.util.PublicCloneable) $r5
org.jfree.data.xy.XYBarDataset.clone : r2 = (org.jfree.util.PublicCloneable) $r5 >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : $r6 = interfaceinvoke r2.<org.jfree.util.PublicCloneable: java.lang.Object clone()>()
org.jfree.data.xy.XYBarDataset.clone : $r6 = interfaceinvoke r2.<org.jfree.util.PublicCloneable: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : $r2 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>()
org.jfree.data.time.TimeTableXYDataset.clone : $r2 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : r1 = (org.jfree.data.time.TimeTableXYDataset) $r2
org.jfree.data.time.TimeTableXYDataset.clone : r1 = (org.jfree.data.time.TimeTableXYDataset) $r2 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.clone : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : $r4 = virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: java.lang.Object clone()>()
org.jfree.data.time.TimeTableXYDataset.clone : $r4 = virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: java.lang.Object clone()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.DefaultKeyedValues2D.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : r1 = (org.jfree.data.DefaultKeyedValues2D) $r3
org.jfree.data.DefaultKeyedValues2D.clone : r1 = (org.jfree.data.DefaultKeyedValues2D) $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : $r2 = new java.util.ArrayList
org.jfree.data.DefaultKeyedValues2D.clone : $r2 = new java.util.ArrayList >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.clone : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4)
org.jfree.data.DefaultKeyedValues2D.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> = $r2
org.jfree.data.DefaultKeyedValues2D.clone : r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> = $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : $r5 = new java.util.ArrayList
org.jfree.data.DefaultKeyedValues2D.clone : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.clone : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6)
org.jfree.data.DefaultKeyedValues2D.clone : specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> = $r5
org.jfree.data.DefaultKeyedValues2D.clone : r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> = $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : $r7 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.clone : $r7 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : $r8 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r7)
org.jfree.data.DefaultKeyedValues2D.clone : $r8 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r7) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : $r9 = (java.util.List) $r8
org.jfree.data.DefaultKeyedValues2D.clone : $r9 = (java.util.List) $r8 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> = $r9
org.jfree.data.DefaultKeyedValues2D.clone : r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> = $r9 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.clone : return r1
org.jfree.data.DefaultKeyedValues2D.clone : return r1 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : $r5 = (org.jfree.data.DefaultKeyedValues2D) $r4
org.jfree.data.time.TimeTableXYDataset.clone : $r5 = (org.jfree.data.DefaultKeyedValues2D) $r4 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : r1.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> = $r5
org.jfree.data.time.TimeTableXYDataset.clone : r1.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> = $r5 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : $r6 = r0.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>
org.jfree.data.time.TimeTableXYDataset.clone : $r6 = r0.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : $r7 = virtualinvoke $r6.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.TimeTableXYDataset.clone : $r7 = virtualinvoke $r6.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : $r8 = (java.util.Calendar) $r7
org.jfree.data.time.TimeTableXYDataset.clone : $r8 = (java.util.Calendar) $r7 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : r1.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar> = $r8
org.jfree.data.time.TimeTableXYDataset.clone : r1.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar> = $r8 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.clone : return r1
org.jfree.data.time.TimeTableXYDataset.clone : return r1 >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : $r7 = (org.jfree.data.xy.XYDataset) $r6
org.jfree.data.xy.XYBarDataset.clone : $r7 = (org.jfree.data.xy.XYDataset) $r6 >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : r1.<org.jfree.data.xy.XYBarDataset: org.jfree.data.xy.XYDataset underlying> = $r7
org.jfree.data.xy.XYBarDataset.clone : r1.<org.jfree.data.xy.XYBarDataset: org.jfree.data.xy.XYDataset underlying> = $r7 >>>>>>>> org.jfree.data.xy.XYBarDataset.clone : return r1
org.jfree.data.xy.XYBarDataset.clone : return r1 >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : r2 = null
org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : r2 = null >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : $z0 = r1 instanceof org.jfree.data.xy.OHLCDataset
org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : $z0 = r1 instanceof org.jfree.data.xy.OHLCDataset >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : if $z0 == 0
org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : if $z0 == 0 >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : return r2
org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : return r2 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 != 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i2 >= i0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i2 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i3 >= i1
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i3 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3)
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1)
org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5
org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null
org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7
org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0
org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2)
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : return r1
org.jfree.data.DefaultKeyedValues2D.getValue : return r1 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2
org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $r1 == null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $r1 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List getColumnKeys()>()
org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List getColumnKeys()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : return $r2
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : return $r2 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : return $r2
org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r2 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r2 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z2 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r4 = (java.lang.Comparable) $r5
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r4 = (java.lang.Comparable) $r5 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r4) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>()
org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : return $i0
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : return -1
org.jfree.data.general.AbstractSeriesDataset.indexOf : return -1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: int getItemCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: int getItemCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i0
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i1
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i2 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i2 >= i1
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $b6 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $b6 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3 >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.generateLabel : return null
org.jfree.chart.labels.HighLowItemLabelGenerator.generateLabel : return null >>>>>>>> org.jfree.chart.labels.StandardXYToolTipGenerator.clone : $r1 = specialinvoke r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.lang.Object clone()>()
org.jfree.chart.labels.StandardXYToolTipGenerator.clone : $r1 = specialinvoke r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1 = (org.jfree.chart.labels.AbstractXYItemLabelGenerator) $r2
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1 = (org.jfree.chart.labels.AbstractXYItemLabelGenerator) $r2 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r3 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r3 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r3 == null
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r3 == null >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r4 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r4 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r5 = virtualinvoke $r4.<java.text.NumberFormat: java.lang.Object clone()>()
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r5 = virtualinvoke $r4.<java.text.NumberFormat: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r6 = (java.text.NumberFormat) $r5
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r6 = (java.text.NumberFormat) $r5 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat> = $r6
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat> = $r6 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r7 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r7 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r7 == null
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r7 == null >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r8 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r8 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r9 = virtualinvoke $r8.<java.text.NumberFormat: java.lang.Object clone()>()
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r9 = virtualinvoke $r8.<java.text.NumberFormat: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r10 = (java.text.NumberFormat) $r9
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r10 = (java.text.NumberFormat) $r9 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> = $r10
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> = $r10 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r11 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.DateFormat xDateFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r11 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.DateFormat xDateFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r11 == null
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r11 == null >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r15 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.DateFormat yDateFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r15 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.DateFormat yDateFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r15 == null
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r15 == null >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : return r1
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : return r1 >>>>>>>> org.jfree.chart.labels.StandardXYToolTipGenerator.clone : return $r1
org.jfree.chart.labels.StandardXYToolTipGenerator.clone : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.data.gantt.TaskSeries.getItemCount : $r1 = r0.<org.jfree.data.gantt.TaskSeries: java.util.List tasks>
org.jfree.data.gantt.TaskSeries.getItemCount : $r1 = r0.<org.jfree.data.gantt.TaskSeries: java.util.List tasks> >>>>>>>> org.jfree.data.gantt.TaskSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.gantt.TaskSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.gantt.TaskSeries.getItemCount : return $i0
org.jfree.data.gantt.TaskSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.gantt.TaskSeries.get : r2 = null
org.jfree.data.gantt.TaskSeries.get : r2 = null >>>>>>>> org.jfree.data.gantt.TaskSeries.get : $r4 = r0.<org.jfree.data.gantt.TaskSeries: java.util.List tasks>
org.jfree.data.gantt.TaskSeries.get : $r4 = r0.<org.jfree.data.gantt.TaskSeries: java.util.List tasks> >>>>>>>> org.jfree.data.gantt.TaskSeries.get : i0 = interfaceinvoke $r4.<java.util.List: int size()>()
org.jfree.data.gantt.TaskSeries.get : i0 = interfaceinvoke $r4.<java.util.List: int size()>() >>>>>>>> org.jfree.data.gantt.TaskSeries.get : i1 = 0
org.jfree.data.gantt.TaskSeries.get : i1 = 0 >>>>>>>> org.jfree.data.gantt.TaskSeries.get : if i1 >= i0
org.jfree.data.gantt.TaskSeries.get : if i1 >= i0 >>>>>>>> org.jfree.data.gantt.TaskSeries.get : return r2
org.jfree.data.gantt.TaskSeries.get : return r2 >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.equals : if r1 != r0
org.jfree.chart.labels.HighLowItemLabelGenerator.equals : if r1 != r0 >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.equals : $z0 = r1 instanceof org.jfree.chart.labels.HighLowItemLabelGenerator
org.jfree.chart.labels.HighLowItemLabelGenerator.equals : $z0 = r1 instanceof org.jfree.chart.labels.HighLowItemLabelGenerator >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.equals : if $z0 != 0
org.jfree.chart.labels.HighLowItemLabelGenerator.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.labels.HighLowItemLabelGenerator.equals : return 0
