org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : return r1
org.jfree.chart.plot.CategoryPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6
org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.CategoryPlot
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.CategoryPlot >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : return $l3
org.jfree.data.time.Week.getFirstMillisecond : return $l3 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1
org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L
org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : return $l5
org.jfree.data.time.Week.getLastMillisecond : return $l5 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainCrosshairColumnKey(java.lang.Comparable,boolean)>(r1, 1)
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainCrosshairColumnKey(java.lang.Comparable,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey> = r1
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMinorGridlineStroke : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeMinorGridlineStroke>
org.jfree.chart.plot.CategoryPlot.getRangeMinorGridlineStroke : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeMinorGridlineStroke> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeMinorGridlineStroke : return $r1
org.jfree.chart.plot.CategoryPlot.getRangeMinorGridlineStroke : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeMinorGridlinesVisible> >>>>>>>> org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible : return $z0
org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible : return $z0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r3 = new org.jfree.data.category.DefaultCategoryDataset
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r3 = new org.jfree.data.category.DefaultCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : specialinvoke $r3.<org.jfree.data.category.DefaultCategoryDataset: void <init>()>()
org.jfree.data.general.DatasetUtilities.createCategoryDataset : specialinvoke $r3.<org.jfree.data.category.DefaultCategoryDataset: void <init>()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : r4 = $r3
org.jfree.data.general.DatasetUtilities.createCategoryDataset : r4 = $r3 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : i0 = 0
org.jfree.data.general.DatasetUtilities.createCategoryDataset : i0 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $i2 = lengthof r2
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $i2 = lengthof r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : if i0 >= $i2
org.jfree.data.general.DatasetUtilities.createCategoryDataset : if i0 >= $i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r7 = new java.lang.StringBuilder
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r7 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.general.DatasetUtilities.createCategoryDataset : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $i3 = i0 + 1
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $i3 = i0 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.general.DatasetUtilities.createCategoryDataset : r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : i1 = 0
org.jfree.data.general.DatasetUtilities.createCategoryDataset : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r10 = r2[i0]
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r10 = r2[i0] >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $i4 = lengthof $r10
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $i4 = lengthof $r10 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : if i1 >= $i4
org.jfree.data.general.DatasetUtilities.createCategoryDataset : if i1 >= $i4 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r11 = new java.lang.StringBuilder
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r11 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.general.DatasetUtilities.createCategoryDataset : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $i5 = i1 + 1
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $i5 = i1 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5) >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.general.DatasetUtilities.createCategoryDataset : r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r14 = new java.lang.Double
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r14 = new java.lang.Double >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r15 = r2[i0]
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $r15 = r2[i0] >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : $d0 = $r15[i1]
org.jfree.data.general.DatasetUtilities.createCategoryDataset : $d0 = $r15[i1] >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : specialinvoke $r14.<java.lang.Double: void <init>(double)>($d0)
org.jfree.data.general.DatasetUtilities.createCategoryDataset : specialinvoke $r14.<java.lang.Double: void <init>(double)>($d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : virtualinvoke r4.<org.jfree.data.category.DefaultCategoryDataset: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r14, r5, r6)
org.jfree.data.general.DatasetUtilities.createCategoryDataset : virtualinvoke r4.<org.jfree.data.category.DefaultCategoryDataset: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r14, r5, r6) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : i1 = i1 + 1
org.jfree.data.general.DatasetUtilities.createCategoryDataset : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : goto [?= $r10 = r2[i0]]
org.jfree.data.general.DatasetUtilities.createCategoryDataset : goto [?= $r10 = r2[i0]] >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r5 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r5 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.setValue : $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = (org.jfree.data.DefaultKeyedValues) $r6
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = (org.jfree.data.DefaultKeyedValues) $r6 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : goto [?= virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)]
org.jfree.data.DefaultKeyedValues2D.setValue : goto [?= virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)] >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : i0 = i0 + 1
org.jfree.data.general.DatasetUtilities.createCategoryDataset : i0 = i0 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : goto [?= $i2 = lengthof r2]
org.jfree.data.general.DatasetUtilities.createCategoryDataset : goto [?= $i2 = lengthof r2] >>>>>>>> org.jfree.data.general.DatasetUtilities.createCategoryDataset : return r4
org.jfree.data.general.DatasetUtilities.createCategoryDataset : return r4 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "data")
org.jfree.data.DataUtilities.createNumberArray2D : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "data") >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i0 = lengthof r0
org.jfree.data.DataUtilities.createNumberArray2D : i0 = lengthof r0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : r1 = newarray (java.lang.Number[])[i0]
org.jfree.data.DataUtilities.createNumberArray2D : r1 = newarray (java.lang.Number[])[i0] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i1 = 0
org.jfree.data.DataUtilities.createNumberArray2D : i1 = 0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : if i1 >= i0
org.jfree.data.DataUtilities.createNumberArray2D : if i1 >= i0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : $r2 = r0[i1]
org.jfree.data.DataUtilities.createNumberArray2D : $r2 = r0[i1] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : $r3 = staticinvoke <org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>($r2)
org.jfree.data.DataUtilities.createNumberArray2D : $r3 = staticinvoke <org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>($r2) >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "data")
org.jfree.data.DataUtilities.createNumberArray : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "data") >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : $i1 = lengthof r0
org.jfree.data.DataUtilities.createNumberArray : $i1 = lengthof r0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : r1 = newarray (java.lang.Number)[$i1]
org.jfree.data.DataUtilities.createNumberArray : r1 = newarray (java.lang.Number)[$i1] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : i0 = 0
org.jfree.data.DataUtilities.createNumberArray : i0 = 0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : $i2 = lengthof r0
org.jfree.data.DataUtilities.createNumberArray : $i2 = lengthof r0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : if i0 >= $i2
org.jfree.data.DataUtilities.createNumberArray : if i0 >= $i2 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : $r2 = new java.lang.Double
org.jfree.data.DataUtilities.createNumberArray : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : $d0 = r0[i0]
org.jfree.data.DataUtilities.createNumberArray : $d0 = r0[i0] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0)
org.jfree.data.DataUtilities.createNumberArray : specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0) >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : r1[i0] = $r2
org.jfree.data.DataUtilities.createNumberArray : r1[i0] = $r2 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : i0 = i0 + 1
org.jfree.data.DataUtilities.createNumberArray : i0 = i0 + 1 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : goto [?= $i2 = lengthof r0]
org.jfree.data.DataUtilities.createNumberArray : goto [?= $i2 = lengthof r0] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : return r1
org.jfree.data.DataUtilities.createNumberArray : return r1 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : r1[i1] = $r3
org.jfree.data.DataUtilities.createNumberArray2D : r1[i1] = $r3 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i1 = i1 + 1
org.jfree.data.DataUtilities.createNumberArray2D : i1 = i1 + 1 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : goto [?= (branch)]
org.jfree.data.DataUtilities.createNumberArray2D : goto [?= (branch)] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : return r1
org.jfree.data.DataUtilities.createNumberArray2D : return r1 >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader>
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader> >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null
org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0)
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0) >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5
org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : r2 = newarray (java.lang.Comparable)[i0]
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : r2 = newarray (java.lang.Comparable)[i0] >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : i1 = 0
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : i1 = 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : if i1 >= i0
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : if i1 >= i0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : $r4 = new java.lang.StringBuilder
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : $r4 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : $i2 = i1 + 1
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : $i2 = i1 + 1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : r2[i1] = r3
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : r2[i1] = r3 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : i1 = i1 + 1
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : i1 = i1 + 1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : goto [?= (branch)]
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : goto [?= (branch)] >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : return r2
org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys : return r2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : if $r1 != null
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : if $r1 != null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4)
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : return $r5
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : return $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDataset(int,org.jfree.data.category.CategoryDataset)>(0, r1)
org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDataset(int,org.jfree.data.category.CategoryDataset)>(0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.setDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.setDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : r2 = (org.jfree.data.category.CategoryDataset) $r5
org.jfree.chart.plot.CategoryPlot.setDataset : r2 = (org.jfree.data.category.CategoryDataset) $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : if r2 == null
org.jfree.chart.plot.CategoryPlot.setDataset : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.setDataset : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke $r6.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke $r6.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : if r1 == null
org.jfree.chart.plot.CategoryPlot.setDataset : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0)
org.jfree.chart.plot.CategoryPlot.setDataset : interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0) >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : $r7 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.setDataset : $r7 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : specialinvoke $r7.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r1)
org.jfree.chart.plot.CategoryPlot.setDataset : specialinvoke $r7.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : r3 = $r7
org.jfree.chart.plot.CategoryPlot.setDataset : r3 = $r7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r3)
org.jfree.chart.plot.CategoryPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r3) >>>>>>>> org.jfree.data.general.DatasetGroup.getID : $r1 = r0.<org.jfree.data.general.DatasetGroup: java.lang.String id>
org.jfree.data.general.DatasetGroup.getID : $r1 = r0.<org.jfree.data.general.DatasetGroup: java.lang.String id> >>>>>>>> org.jfree.data.general.DatasetGroup.getID : return $r1
org.jfree.data.general.DatasetGroup.getID : return $r1 >>>>>>>> org.jfree.data.general.AbstractDataset.setGroup : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "group")
org.jfree.data.general.AbstractDataset.setGroup : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "group") >>>>>>>> org.jfree.data.general.AbstractDataset.setGroup : r0.<org.jfree.data.general.AbstractDataset: org.jfree.data.general.DatasetGroup group> = r1
org.jfree.data.general.AbstractDataset.setGroup : r0.<org.jfree.data.general.AbstractDataset: org.jfree.data.general.DatasetGroup group> = r1 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>()
org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = 0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : if $r1 == null
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : if $r1 == null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = lengthof $r2
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = lengthof $r2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : return i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : return i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : $i1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: int getSeriesCount()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : $i1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : if i0 >= $i1
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : if i0 >= $i1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : if i0 >= 0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : if i0 >= 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : $r6 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : $r6 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : $r7 = $r6[i0]
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : $r7 = $r6[i0] >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : return $r7
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey : return $r7 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if $z0 == 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if $z0 == 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = i1 + 1
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : goto [?= (branch)]
org.jfree.data.general.AbstractSeriesDataset.indexOf : goto [?= (branch)] >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : return -1
org.jfree.data.general.AbstractSeriesDataset.indexOf : return -1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : $r1 = new org.jfree.data.general.DefaultPieDataset
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : $r1 = new org.jfree.data.general.DefaultPieDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : specialinvoke $r1.<org.jfree.data.general.DefaultPieDataset: void <init>()>()
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : specialinvoke $r1.<org.jfree.data.general.DefaultPieDataset: void <init>()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : r2 = $r1
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : r2 = $r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : $i0 = lengthof $r1
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : $i0 = lengthof $r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : return $i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : i2 = 0
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : if i2 >= i1
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : r3 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getColumnKey(int)>(i2)
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : r3 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getColumnKey(int)>(i2) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKey : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKey : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKey : $r2 = $r1[i0]
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKey : $r2 = $r1[i0] >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKey : return $r2
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKey : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : $r4 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, i2)
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : $r4 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getValue : $r1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number getEndValue(int,int)>(i0, i1)
org.jfree.data.category.DefaultIntervalCategoryDataset.getValue : $r1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number getEndValue(int,int)>(i0, i1) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue : if i0 < 0
org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue : if i0 < 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue : $r1 = new java.lang.IllegalArgumentException
org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue : $r1 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DefaultIntervalCategoryDataset.getValue(): series index out of range.")
org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DefaultIntervalCategoryDataset.getValue(): series index out of range.") >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue : throw $r1
