org.jfree.chart.axis.TickUnits.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.axis.TickUnits.clone : r1 = (org.jfree.chart.axis.TickUnits) $r3
org.jfree.chart.axis.TickUnits.clone : r1 = (org.jfree.chart.axis.TickUnits) $r3 >>>>>>>> org.jfree.chart.axis.TickUnits.clone : $r2 = new java.util.ArrayList
org.jfree.chart.axis.TickUnits.clone : $r2 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.TickUnits.clone : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.clone : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4)
org.jfree.chart.axis.TickUnits.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4) >>>>>>>> org.jfree.chart.axis.TickUnits.clone : r1.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> = $r2
org.jfree.chart.axis.TickUnits.clone : r1.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> = $r2 >>>>>>>> org.jfree.chart.axis.TickUnits.clone : return r1
org.jfree.chart.axis.TickUnits.clone : return r1 >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter>
org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter> >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>(d0)
org.jfree.chart.axis.NumberTickUnit.valueToString : $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>(d0) >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : $l0 = (long) d0
org.jfree.chart.util.HexNumberFormat.format : $l0 = (long) d0 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : $r3 = virtualinvoke r0.<org.jfree.chart.util.HexNumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>($l0, r1, r2)
org.jfree.chart.util.HexNumberFormat.format : $r3 = virtualinvoke r0.<org.jfree.chart.util.HexNumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>($l0, r1, r2) >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : $r5 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0)
org.jfree.chart.util.HexNumberFormat.format : $r5 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0) >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : r3 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>()
org.jfree.chart.util.HexNumberFormat.format : r3 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : $i3 = r0.<org.jfree.chart.util.HexNumberFormat: int m_numDigits>
org.jfree.chart.util.HexNumberFormat.format : $i3 = r0.<org.jfree.chart.util.HexNumberFormat: int m_numDigits> >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : $i4 = virtualinvoke r3.<java.lang.String: int length()>()
org.jfree.chart.util.HexNumberFormat.format : $i4 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : i1 = $i3 - $i4
org.jfree.chart.util.HexNumberFormat.format : i1 = $i3 - $i4 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : if 0 >= i1
org.jfree.chart.util.HexNumberFormat.format : if 0 >= i1 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : $i5 = i1
org.jfree.chart.util.HexNumberFormat.format : $i5 = i1 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : goto [?= i6 = $i5]
org.jfree.chart.util.HexNumberFormat.format : goto [?= i6 = $i5] >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : i6 = $i5
org.jfree.chart.util.HexNumberFormat.format : i6 = $i5 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : $r6 = new java.lang.StringBuffer
org.jfree.chart.util.HexNumberFormat.format : $r6 = new java.lang.StringBuffer >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>("0x")
org.jfree.chart.util.HexNumberFormat.format : specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>("0x") >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : r4 = $r6
org.jfree.chart.util.HexNumberFormat.format : r4 = $r6 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : i2 = 0
org.jfree.chart.util.HexNumberFormat.format : i2 = 0 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : if i2 >= i6
org.jfree.chart.util.HexNumberFormat.format : if i2 >= i6 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(0)
org.jfree.chart.util.HexNumberFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(0) >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : i2 = i2 + 1
org.jfree.chart.util.HexNumberFormat.format : i2 = i2 + 1 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : goto [?= (branch)]
org.jfree.chart.util.HexNumberFormat.format : goto [?= (branch)] >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3)
org.jfree.chart.util.HexNumberFormat.format : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3) >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : return r4
org.jfree.chart.util.HexNumberFormat.format : return r4 >>>>>>>> org.jfree.chart.util.HexNumberFormat.format : return $r3
org.jfree.chart.util.HexNumberFormat.format : return $r3 >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : return $r2
org.jfree.chart.axis.NumberTickUnit.valueToString : return $r2 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i2 = neg $i1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i2 = neg $i1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r7 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r7 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i4 = $i3 - 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i4 = $i3 - 1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i5)
