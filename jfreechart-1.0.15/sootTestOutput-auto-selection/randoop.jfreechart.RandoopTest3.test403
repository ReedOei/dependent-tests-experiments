org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(86400000L, 5, 2)
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(86400000L, 5, 2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : r1 = $r0
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : r1 = $r0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>()
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r1 = new java.lang.StringBuilder
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r1 = new java.lang.StringBuilder >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTC-")
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTC-") >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, $r7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, $r7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r2 = $r4
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r2 = $r4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r8.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r2)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r8.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r3 = $r8
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r3 = $r8 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : if $i1 == 2
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : if $i1 == 2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $l2 = virtualinvoke $r9.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $l2 = virtualinvoke $r9.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : return $l2
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : return $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l0)
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0
org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getBaseTimeline : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline>
org.jfree.chart.axis.SegmentedTimeline.getBaseTimeline : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getBaseTimeline : return $r1
org.jfree.chart.axis.SegmentedTimeline.getBaseTimeline : return $r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment
org.jfree.chart.axis.SegmentedTimeline.getSegment : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : specialinvoke $r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void <init>(org.jfree.chart.axis.SegmentedTimeline,long)>(r0, l0)
org.jfree.chart.axis.SegmentedTimeline.getSegment : specialinvoke $r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void <init>(org.jfree.chart.axis.SegmentedTimeline,long)>(r0, l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$000 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.access$000 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$000 : return $l0
org.jfree.chart.axis.SegmentedTimeline.access$000 : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $b2 = l0 cmp $l1
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $b2 = l0 cmp $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : if $b2 < 0
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : if $b2 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l3 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r2)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l3 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l4 = l0 - $l3
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l4 = l0 - $l3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l5 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r3)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l5 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r3) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$100 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.access$100 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$100 : return $l0
org.jfree.chart.axis.SegmentedTimeline.access$100 : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l6 = $l4 / $l5
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l6 = $l4 / $l5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : return $l6
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : return $l6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : return $r1
org.jfree.chart.axis.SegmentedTimeline.getSegment : return $r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $i2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$300(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $i2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$300(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$300 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount>
org.jfree.chart.axis.SegmentedTimeline.access$300 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$300 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$300 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l3 = (long) $i2
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l3 = (long) $i2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : l0 = $l1 % $l3
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : l0 = $l1 % $l3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $b4 = l0 cmp 0L
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $b4 = l0 cmp 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : if $b4 >= 0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : if $b4 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : return l0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : return l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$200 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded>
org.jfree.chart.axis.SegmentedTimeline.access$200 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$200 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$200 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l2 = (long) $i1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l2 = (long) $i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $b3 = $l0 cmp $l2
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $b3 = $l0 cmp $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $b3 >= 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $b3 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $i0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$400(org.jfree.chart.axis.SegmentedTimeline,org.jfree.chart.axis.SegmentedTimeline$Segment)>($r1, r0)
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $i0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$400(org.jfree.chart.axis.SegmentedTimeline,org.jfree.chart.axis.SegmentedTimeline$Segment)>($r1, r0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$400 : $i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.access$400 : $i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i3 = interfaceinvoke $r3.<java.util.List: int size()>()
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i3 = interfaceinvoke $r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = $i3 - 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = $i3 - 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i6 = neg $i5
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i6 = neg $i5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return $i6
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return $i6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$400 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$400 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : if $i0 < 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : if $i0 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $z0 = 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $z0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : return $z0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : return $z0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $z0 != 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z1 = 1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z1 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : goto [?= return $z1]
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : goto [?= return $z1] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return $z1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return $z1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : return $z0
org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : return $z0 >>>>>>>> org.jfree.data.time.SimpleTimePeriod.getStartMillis : $l0 = r0.<org.jfree.data.time.SimpleTimePeriod: long start>
org.jfree.data.time.SimpleTimePeriod.getStartMillis : $l0 = r0.<org.jfree.data.time.SimpleTimePeriod: long start> >>>>>>>> org.jfree.data.time.SimpleTimePeriod.getStartMillis : return $l0
org.jfree.data.time.SimpleTimePeriod.getStartMillis : return $l0 >>>>>>>> org.jfree.data.time.SimpleTimePeriod.getStart : $r1 = new java.util.Date
org.jfree.data.time.SimpleTimePeriod.getStart : $r1 = new java.util.Date >>>>>>>> org.jfree.data.time.SimpleTimePeriod.getStart : $l0 = r0.<org.jfree.data.time.SimpleTimePeriod: long start>
org.jfree.data.time.SimpleTimePeriod.getStart : $l0 = r0.<org.jfree.data.time.SimpleTimePeriod: long start> >>>>>>>> org.jfree.data.time.SimpleTimePeriod.getStart : specialinvoke $r1.<java.util.Date: void <init>(long)>($l0)
org.jfree.data.time.SimpleTimePeriod.getStart : specialinvoke $r1.<java.util.Date: void <init>(long)>($l0) >>>>>>>> org.jfree.data.time.SimpleTimePeriod.getStart : return $r1
org.jfree.data.time.SimpleTimePeriod.getStart : return $r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r1.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving>
org.jfree.chart.axis.SegmentedTimeline.getTime : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.getTime : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : return l0
