org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : return $l4
org.jfree.data.time.Day.getFirstMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : return $l4
org.jfree.data.time.Day.getLastMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Second.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Second: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Second.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Second: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day>
org.jfree.data.time.Second.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>()
org.jfree.data.time.Second.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>() >>>>>>>> org.jfree.data.time.Day.getYear : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getYear : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getYear : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getYear : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getYear : return $i0
org.jfree.data.time.Day.getYear : return $i0 >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day>
org.jfree.data.time.Second.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>()
org.jfree.data.time.Second.getFirstMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getMonth : return $i0
org.jfree.data.time.Day.getMonth : return $i0 >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : i1 = $i3 - 1
org.jfree.data.time.Second.getFirstMillisecond : i1 = $i3 - 1 >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day>
org.jfree.data.time.Second.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>()
org.jfree.data.time.Second.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getDayOfMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getDayOfMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : return $i0
org.jfree.data.time.Day.getDayOfMonth : return $i0 >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $b4 = r0.<org.jfree.data.time.Second: byte hour>
org.jfree.data.time.Second.getFirstMillisecond : $b4 = r0.<org.jfree.data.time.Second: byte hour> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $b5 = r0.<org.jfree.data.time.Second: byte minute>
org.jfree.data.time.Second.getFirstMillisecond : $b5 = r0.<org.jfree.data.time.Second: byte minute> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $b6 = r0.<org.jfree.data.time.Second: byte second>
org.jfree.data.time.Second.getFirstMillisecond : $b6 = r0.<org.jfree.data.time.Second: byte second> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, $b5, $b6)
org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, $b5, $b6) >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $l7 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Second.getFirstMillisecond : $l7 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : return $l7
org.jfree.data.time.Second.getFirstMillisecond : return $l7 >>>>>>>> org.jfree.data.time.Second.peg : r0.<org.jfree.data.time.Second: long firstMillisecond> = $l0
org.jfree.data.time.Second.peg : r0.<org.jfree.data.time.Second: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.TimeSeries.setMaximumItemCount : if i0 >= 0
org.jfree.data.time.TimeSeries.setMaximumItemCount : if i0 >= 0 >>>>>>>> org.jfree.data.time.TimeSeries.setMaximumItemCount : r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> = i0
org.jfree.data.time.TimeSeries.setMaximumItemCount : r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> = i0 >>>>>>>> org.jfree.data.time.TimeSeries.setMaximumItemCount : $r2 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.setMaximumItemCount : $r2 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.setMaximumItemCount : i1 = interfaceinvoke $r2.<java.util.List: int size()>()
org.jfree.data.time.TimeSeries.setMaximumItemCount : i1 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeries.setMaximumItemCount : if i1 <= i0
org.jfree.data.time.TimeSeries.setMaximumItemCount : if i1 <= i0 >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : if i0 >= 0
org.jfree.data.time.TimeSeries.createCopy : if i0 >= 0 >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : if i1 >= i0
org.jfree.data.time.TimeSeries.createCopy : if i1 >= i0 >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : $r7 = specialinvoke r0.<org.jfree.data.general.Series: java.lang.Object clone()>()
org.jfree.data.time.TimeSeries.createCopy : $r7 = specialinvoke r0.<org.jfree.data.general.Series: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.Series.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.Series.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.Series.clone : r1 = (org.jfree.data.general.Series) $r3
org.jfree.data.general.Series.clone : r1 = (org.jfree.data.general.Series) $r3 >>>>>>>> org.jfree.data.general.Series.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.Series.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.Series.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> = $r2
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> = $r2 >>>>>>>> org.jfree.data.general.Series.clone : $r4 = new java.beans.PropertyChangeSupport
org.jfree.data.general.Series.clone : $r4 = new java.beans.PropertyChangeSupport >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r4.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r1)
org.jfree.data.general.Series.clone : specialinvoke $r4.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.PropertyChangeSupport propertyChangeSupport> = $r4
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.PropertyChangeSupport propertyChangeSupport> = $r4 >>>>>>>> org.jfree.data.general.Series.clone : $r5 = new java.beans.VetoableChangeSupport
org.jfree.data.general.Series.clone : $r5 = new java.beans.VetoableChangeSupport >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r5.<java.beans.VetoableChangeSupport: void <init>(java.lang.Object)>(r1)
org.jfree.data.general.Series.clone : specialinvoke $r5.<java.beans.VetoableChangeSupport: void <init>(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> = $r5
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> = $r5 >>>>>>>> org.jfree.data.general.Series.clone : return r1
org.jfree.data.general.Series.clone : return r1 >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : r1 = (org.jfree.data.time.TimeSeries) $r7
org.jfree.data.time.TimeSeries.createCopy : r1 = (org.jfree.data.time.TimeSeries) $r7 >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : r1.<org.jfree.data.time.TimeSeries: double minY> = #NaN
org.jfree.data.time.TimeSeries.createCopy : r1.<org.jfree.data.time.TimeSeries: double minY> = #NaN >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : r1.<org.jfree.data.time.TimeSeries: double maxY> = #NaN
org.jfree.data.time.TimeSeries.createCopy : r1.<org.jfree.data.time.TimeSeries: double maxY> = #NaN >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : $r8 = new java.util.ArrayList
org.jfree.data.time.TimeSeries.createCopy : $r8 = new java.util.ArrayList >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.jfree.data.time.TimeSeries.createCopy : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : r1.<org.jfree.data.time.TimeSeries: java.util.List data> = $r8
org.jfree.data.time.TimeSeries.createCopy : r1.<org.jfree.data.time.TimeSeries: java.util.List data> = $r8 >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : $r9 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.createCopy : $r9 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : $i3 = interfaceinvoke $r9.<java.util.List: int size()>()
org.jfree.data.time.TimeSeries.createCopy : $i3 = interfaceinvoke $r9.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : if $i3 <= 0
org.jfree.data.time.TimeSeries.createCopy : if $i3 <= 0 >>>>>>>> org.jfree.data.time.TimeSeries.createCopy : return r1
