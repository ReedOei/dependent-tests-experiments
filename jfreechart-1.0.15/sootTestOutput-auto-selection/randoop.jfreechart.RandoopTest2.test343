org.jfree.data.general.WaferMapDataset.getChipValue : $r1 = new java.lang.Integer >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.data.general.WaferMapDataset.getChipValue : specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : $r2 = new java.lang.Integer
org.jfree.data.general.WaferMapDataset.getChipValue : $r2 = new java.lang.Integer >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.data.general.WaferMapDataset.getChipValue : specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : $r3 = virtualinvoke r0.<org.jfree.data.general.WaferMapDataset: java.lang.Number getChipValue(java.lang.Comparable,java.lang.Comparable)>($r1, $r2)
org.jfree.data.general.WaferMapDataset.getChipValue : $r3 = virtualinvoke r0.<org.jfree.data.general.WaferMapDataset: java.lang.Number getChipValue(java.lang.Comparable,java.lang.Comparable)>($r1, $r2) >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : $r3 = r0.<org.jfree.data.general.WaferMapDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.general.WaferMapDataset.getChipValue : $r3 = r0.<org.jfree.data.general.WaferMapDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : i0 = virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.general.WaferMapDataset.getChipValue : i0 = virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : if i0 >= 0
org.jfree.data.general.WaferMapDataset.getChipValue : if i0 >= 0 >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : return null
org.jfree.data.general.WaferMapDataset.getChipValue : return null >>>>>>>> org.jfree.data.general.WaferMapDataset.getChipValue : return $r3
org.jfree.data.general.WaferMapDataset.getChipValue : return $r3 >>>>>>>> org.jfree.data.general.WaferMapDataset.isMaxValue : $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.WaferMapDataset.isMaxValue : $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.WaferMapDataset.isMaxValue : $r2 = r0.<org.jfree.data.general.WaferMapDataset: java.lang.Double maxValue>
org.jfree.data.general.WaferMapDataset.isMaxValue : $r2 = r0.<org.jfree.data.general.WaferMapDataset: java.lang.Double maxValue> >>>>>>>> org.jfree.data.general.WaferMapDataset.isMaxValue : $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>()
org.jfree.data.general.WaferMapDataset.isMaxValue : $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>() >>>>>>>> org.jfree.data.general.WaferMapDataset.isMaxValue : $b0 = $d0 cmpl $d1
org.jfree.data.general.WaferMapDataset.isMaxValue : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.data.general.WaferMapDataset.isMaxValue : if $b0 <= 0
org.jfree.data.general.WaferMapDataset.isMaxValue : if $b0 <= 0 >>>>>>>> org.jfree.data.general.WaferMapDataset.isMaxValue : return 1
