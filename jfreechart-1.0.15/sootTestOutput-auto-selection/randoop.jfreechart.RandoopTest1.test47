org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.xy.XYSeries.clone : $r2 = specialinvoke r0.<org.jfree.data.general.Series: java.lang.Object clone()>()
org.jfree.data.xy.XYSeries.clone : $r2 = specialinvoke r0.<org.jfree.data.general.Series: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.Series.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.Series.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.Series.clone : r1 = (org.jfree.data.general.Series) $r3
org.jfree.data.general.Series.clone : r1 = (org.jfree.data.general.Series) $r3 >>>>>>>> org.jfree.data.general.Series.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.Series.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.Series.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> = $r2
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> = $r2 >>>>>>>> org.jfree.data.general.Series.clone : $r4 = new java.beans.PropertyChangeSupport
org.jfree.data.general.Series.clone : $r4 = new java.beans.PropertyChangeSupport >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r4.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r1)
org.jfree.data.general.Series.clone : specialinvoke $r4.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.PropertyChangeSupport propertyChangeSupport> = $r4
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.PropertyChangeSupport propertyChangeSupport> = $r4 >>>>>>>> org.jfree.data.general.Series.clone : $r5 = new java.beans.VetoableChangeSupport
org.jfree.data.general.Series.clone : $r5 = new java.beans.VetoableChangeSupport >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r5.<java.beans.VetoableChangeSupport: void <init>(java.lang.Object)>(r1)
org.jfree.data.general.Series.clone : specialinvoke $r5.<java.beans.VetoableChangeSupport: void <init>(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> = $r5
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> = $r5 >>>>>>>> org.jfree.data.general.Series.clone : return r1
org.jfree.data.general.Series.clone : return r1 >>>>>>>> org.jfree.data.xy.XYSeries.clone : r1 = (org.jfree.data.xy.XYSeries) $r2
org.jfree.data.xy.XYSeries.clone : r1 = (org.jfree.data.xy.XYSeries) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.clone : $r3 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.clone : $r3 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3)
org.jfree.data.xy.XYSeries.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3) >>>>>>>> org.jfree.data.xy.XYSeries.clone : $r5 = (java.util.List) $r4
org.jfree.data.xy.XYSeries.clone : $r5 = (java.util.List) $r4 >>>>>>>> org.jfree.data.xy.XYSeries.clone : r1.<org.jfree.data.xy.XYSeries: java.util.List data> = $r5
org.jfree.data.xy.XYSeries.clone : r1.<org.jfree.data.xy.XYSeries: java.util.List data> = $r5 >>>>>>>> org.jfree.data.xy.XYSeries.clone : return r1
org.jfree.data.xy.XYSeries.clone : return r1 >>>>>>>> org.jfree.data.xy.XYSeries.remove : $i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int indexOf(java.lang.Number)>(r1)
org.jfree.data.xy.XYSeries.remove : $i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int indexOf(java.lang.Number)>(r1) >>>>>>>> org.jfree.data.xy.XYSeries.indexOf : $z0 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.data.xy.XYSeries.indexOf : $z0 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort> >>>>>>>> org.jfree.data.xy.XYSeries.indexOf : if $z0 == 0
org.jfree.data.xy.XYSeries.indexOf : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.indexOf : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.indexOf : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.indexOf : $r2 = new org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYSeries.indexOf : $r2 = new org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYSeries.indexOf : specialinvoke $r2.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, null)
org.jfree.data.xy.XYSeries.indexOf : specialinvoke $r2.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, null) >>>>>>>> org.jfree.data.xy.XYSeries.indexOf : $i1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, $r2)
org.jfree.data.xy.XYSeries.indexOf : $i1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, $r2) >>>>>>>> org.jfree.data.xy.XYSeries.indexOf : return $i1
org.jfree.data.xy.XYSeries.indexOf : return $i1 >>>>>>>> org.jfree.data.xy.XYSeries.remove : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem remove(int)>($i0)
org.jfree.data.xy.XYSeries.remove : $r2 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem remove(int)>($i0) >>>>>>>> org.jfree.data.xy.XYSeries.remove : $r2 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.remove : $r2 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.remove : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0)
