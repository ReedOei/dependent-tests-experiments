org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r0 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r1 = $r0
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r1 = $r0 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r15.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r15.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r2 = $r15
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r2 = $r15 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r3 = $r16
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r3 = $r16 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r17.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r17.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r4 = $r17
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r4 = $r17 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r18.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r18.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r5 = $r18
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r5 = $r18 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r19.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r19.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r6 = $r19
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r6 = $r19 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r20.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r20.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r7 = $r20
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r7 = $r20 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r21.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r21.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r8 = $r21
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r8 = $r21 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r22.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r22.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r9 = $r22
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r9 = $r22 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r23.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r23.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r10 = $r23
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r10 = $r23 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r24.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r24.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r11 = $r24
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r11 = $r24 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r25.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r25.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r12 = $r25
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r12 = $r25 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r13 = $r26
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r13 = $r26 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r27.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,###,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r27.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,###,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r14 = $r27
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r14 = $r27 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-9, r3, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-9, r3, 2) >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28) >>>>>>>> org.jfree.chart.axis.TickUnits.add : if r1 != null
org.jfree.chart.axis.TickUnits.add : if r1 != null >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4)
org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-8, r4, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-8, r4, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0
org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : return $d0
org.jfree.chart.axis.TickUnit.getSize : return $d0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-7, r5, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-7, r5, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-6, r6, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-6, r6, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-5, r7, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-5, r7, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-4, r8, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-4, r8, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.001, r9, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.001, r9, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.01, r10, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.01, r10, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r11, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r11, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r37.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r37.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r37)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r37) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r38.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r38.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r39.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r39.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r39)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r39) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r40.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r40.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r40)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r40) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r41.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r41.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r42.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r42.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r42)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r42) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r43.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r43.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r43)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r43) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r44.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r44.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r45.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r45.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r45)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r45) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r46.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r46.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r46)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r46) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r47.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r47.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r48.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E11, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r48.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E11, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r48)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r48) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r49.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-9, r2, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r49.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-9, r2, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r49)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r49) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3
org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return -1
org.jfree.chart.axis.TickUnit.compareTo : return -1 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r50.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-8, r3, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r50.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-8, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r51.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-7, r4, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r51.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-7, r4, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r51)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r51) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r52.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-6, r5, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r52.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-6, r5, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r52)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r52) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r53.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-5, r6, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r53.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-5, r6, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r54.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-4, r7, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r54.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-4, r7, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r54)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r54) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r55.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.0025, r8, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r55.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.0025, r8, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r55)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r55) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r56.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.025, r9, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r56.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.025, r9, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r57.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.25, r10, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r57.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.25, r10, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r57)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r57) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r58.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5, r11, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r58.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5, r11, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r58)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r58) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r59.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r59.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r60.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r60.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r60)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r60) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r61.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r61.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r61)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r61) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r62.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r62.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r63.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r63.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r63)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r63) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r64.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500000.0, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r64.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500000.0, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r64)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r64) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r65.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E7, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r65.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E7, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r66.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E8, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r66.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E8, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r66)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r66) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r67.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E9, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r67.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E9, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r67)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r67) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r68.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E10, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r68.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E10, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r69.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E11, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r69.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E11, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r69)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r69) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r70.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-9, r3, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r70.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-9, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r70)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r70) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r71.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-8, r4, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r71.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-8, r4, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r72.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-7, r5, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r72.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-7, r5, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r72)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r72) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r73.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-6, r6, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r73.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-6, r6, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r73)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r73) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r74.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-5, r7, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r74.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-5, r7, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r75.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-4, r8, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r75.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-4, r8, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r75)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r75) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r76.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.005, r9, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r76.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.005, r9, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r76)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r76) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r77.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r10, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r77.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r10, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r78.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r11, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r78.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r11, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r78)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r78) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r79.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r79.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r79)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r79) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r80.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r80.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r81.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r81.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r81)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r81) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r82.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r82.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r82)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r82) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r83.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r83.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r84.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r84.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r84)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r84) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r85.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r85.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r85)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r85) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r86.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r86.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r87.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r87.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r87)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r87) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r88.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r88.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r88)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r88) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r89.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E10, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r89.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E10, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r90.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E11, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r90.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E11, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r90)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r90) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4
org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.plot.XYPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null
org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5
org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>()
org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0
org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : if $z0 == 0
org.jfree.chart.axis.NumberAxis.configure : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>()
org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.axis.Axis.getPlot : return $r1
org.jfree.chart.axis.Axis.getPlot : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1
org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1 >>>>>>>> org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>()
org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z0 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0) >>>>>>>> org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : r2 = null
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : r2 = null >>>>>>>> org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : $r5 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : $r5 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : if $r5 == null
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : if $r5 == null >>>>>>>> org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : return r2
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : return r2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getDefaultAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getDefaultAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange>
org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : return $r1
org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r5 = <org.jfree.data.RangeType: org.jfree.data.RangeType POSITIVE>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r5 = <org.jfree.data.RangeType: org.jfree.data.RangeType POSITIVE> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r4 != $r5
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r4 != $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r7 = <org.jfree.data.RangeType: org.jfree.data.RangeType NEGATIVE>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r7 = <org.jfree.data.RangeType: org.jfree.data.RangeType NEGATIVE> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r6 != $r7
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r6 != $r7 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : return $z0
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z1 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange>
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.getFixedAutoRange : return $d0
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b0 <= 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> >>>>>>>> org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : return $d0
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b1 >= 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero>
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : return $z0
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z2 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b5 > 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b5 > 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin>
org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperMargin : return $d0
org.jfree.chart.axis.ValueAxis.getUpperMargin : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d14 = $d13 * d2
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d14 = $d13 * d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = d0 + $d14
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = d0 + $d14 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b6 < 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b6 < 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin>
org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerMargin : return $d0
org.jfree.chart.axis.ValueAxis.getLowerMargin : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d16 = $d15 * d2
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d16 = $d15 * d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d17 = d1 - $d16
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d17 = d1 - $d16 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d17)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d17) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : goto [?= $r12 = new org.jfree.data.Range]
org.jfree.chart.axis.NumberAxis.autoAdjustRange : goto [?= $r12 = new org.jfree.data.Range] >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>(d7, d0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>(d7, d0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, 0, 0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, 0, 0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1)
org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeZeroBaselineStroke : $r1 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke>
org.jfree.chart.plot.XYPlot.getRangeZeroBaselineStroke : $r1 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeZeroBaselineStroke> >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeZeroBaselineStroke : return $r1
org.jfree.chart.plot.XYPlot.getRangeZeroBaselineStroke : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedRangeXYPlot.getPlotType : $r1 = <org.jfree.chart.plot.CombinedRangeXYPlot: java.util.ResourceBundle localizationResources>
org.jfree.chart.plot.CombinedRangeXYPlot.getPlotType : $r1 = <org.jfree.chart.plot.CombinedRangeXYPlot: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.plot.CombinedRangeXYPlot.getPlotType : $r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Combined_Range_XYPlot")
org.jfree.chart.plot.CombinedRangeXYPlot.getPlotType : $r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Combined_Range_XYPlot") >>>>>>>> org.jfree.chart.plot.CombinedRangeXYPlot.getPlotType : return $r2
org.jfree.chart.plot.CombinedRangeXYPlot.getPlotType : return $r2 >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "adj")
org.jfree.chart.plot.Marker.setLabelOffsetType : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "adj") >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : r0.<org.jfree.chart.plot.Marker: org.jfree.ui.LengthAdjustmentType labelOffsetType> = r1
org.jfree.chart.plot.Marker.setLabelOffsetType : r0.<org.jfree.chart.plot.Marker: org.jfree.ui.LengthAdjustmentType labelOffsetType> = r1 >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : $r2 = new org.jfree.chart.event.MarkerChangeEvent
org.jfree.chart.plot.Marker.setLabelOffsetType : $r2 = new org.jfree.chart.event.MarkerChangeEvent >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : specialinvoke $r2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(r0)
org.jfree.chart.plot.Marker.setLabelOffsetType : specialinvoke $r2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(r0) >>>>>>>> org.jfree.chart.plot.Marker.setLabelOffsetType : virtualinvoke r0.<org.jfree.chart.plot.Marker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($r2)
org.jfree.chart.plot.Marker.setLabelOffsetType : virtualinvoke r0.<org.jfree.chart.plot.Marker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($r2) >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Marker.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Marker.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Marker.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Marker.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Marker.notifyListeners : if i0 < 0
org.jfree.chart.plot.Marker.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator : $r3 = (org.jfree.chart.labels.XYItemLabelGenerator) $r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator : $r3 = (org.jfree.chart.labels.XYItemLabelGenerator) $r2 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator : return $r3
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator : return $r3 >>>>>>>> org.jfree.chart.axis.CyclicNumberAxis.setFixedAutoRange : r0.<org.jfree.chart.axis.CyclicNumberAxis: double period> = d0
org.jfree.chart.axis.CyclicNumberAxis.setFixedAutoRange : r0.<org.jfree.chart.axis.CyclicNumberAxis: double period> = d0 >>>>>>>> org.jfree.chart.axis.CyclicNumberAxis.setFixedAutoRange : specialinvoke r0.<org.jfree.chart.axis.NumberAxis: void setFixedAutoRange(double)>(d0)
org.jfree.chart.axis.CyclicNumberAxis.setFixedAutoRange : specialinvoke r0.<org.jfree.chart.axis.NumberAxis: void setFixedAutoRange(double)>(d0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setFixedAutoRange : r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange> = d0
org.jfree.chart.axis.ValueAxis.setFixedAutoRange : r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange> = d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setFixedAutoRange : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isAutoRange()>()
org.jfree.chart.axis.ValueAxis.setFixedAutoRange : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.setFixedAutoRange : if $z0 == 0
org.jfree.chart.axis.ValueAxis.setFixedAutoRange : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setFixedAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void autoAdjustRange()>()
org.jfree.chart.axis.ValueAxis.setFixedAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void autoAdjustRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.setFixedAutoRange : $r1 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setFixedAutoRange : $r1 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.ValueAxis.setFixedAutoRange : specialinvoke $r1.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.ValueAxis.setFixedAutoRange : specialinvoke $r1.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setFixedAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r1)
org.jfree.chart.axis.ValueAxis.setFixedAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r1) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2
org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0
org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelPaint : return $r1
org.jfree.chart.axis.Axis.getTickLabelPaint : return $r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setFillPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint> = r1
org.jfree.chart.renderer.AbstractRenderer.setFillPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint fillPaint> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setFillPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setFillPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setFillPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setFillPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Marker.setLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.Marker.setLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.plot.Marker.setLabelPaint : r0.<org.jfree.chart.plot.Marker: java.awt.Paint labelPaint> = r1
org.jfree.chart.plot.Marker.setLabelPaint : r0.<org.jfree.chart.plot.Marker: java.awt.Paint labelPaint> = r1 >>>>>>>> org.jfree.chart.plot.Marker.setLabelPaint : $r2 = new org.jfree.chart.event.MarkerChangeEvent
org.jfree.chart.plot.Marker.setLabelPaint : $r2 = new org.jfree.chart.event.MarkerChangeEvent >>>>>>>> org.jfree.chart.plot.Marker.setLabelPaint : specialinvoke $r2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(r0)
org.jfree.chart.plot.Marker.setLabelPaint : specialinvoke $r2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(r0) >>>>>>>> org.jfree.chart.plot.Marker.setLabelPaint : virtualinvoke r0.<org.jfree.chart.plot.Marker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($r2)
org.jfree.chart.plot.Marker.setLabelPaint : virtualinvoke r0.<org.jfree.chart.plot.Marker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($r2) >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : $r2 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.removeRangeMarker : $r2 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : $z0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.ui.Layer)>(r1, $r2)
org.jfree.chart.plot.XYPlot.removeRangeMarker : $z0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.ui.Layer)>(r1, $r2) >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : $z0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer)>(0, r1, r2)
org.jfree.chart.plot.XYPlot.removeRangeMarker : $z0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer)>(0, r1, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : $z0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer,boolean)>(i0, r1, r2, 1)
org.jfree.chart.plot.XYPlot.removeRangeMarker : $z0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer,boolean)>(i0, r1, r2, 1) >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "marker")
org.jfree.chart.plot.XYPlot.removeRangeMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "marker") >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "layer")
org.jfree.chart.plot.XYPlot.removeRangeMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "layer") >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : $r4 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.removeRangeMarker : $r4 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : if r2 != $r4
org.jfree.chart.plot.XYPlot.removeRangeMarker : if r2 != $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.removeRangeMarker : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : $r6 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.removeRangeMarker : $r6 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.removeRangeMarker : specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.jfree.chart.plot.XYPlot.removeRangeMarker : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : r3 = (java.util.List) $r7
org.jfree.chart.plot.XYPlot.removeRangeMarker : r3 = (java.util.List) $r7 >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.removeRangeMarker : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : if r3 != null
org.jfree.chart.plot.XYPlot.removeRangeMarker : if r3 != null >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : return 0
org.jfree.chart.plot.XYPlot.removeRangeMarker : return 0 >>>>>>>> org.jfree.chart.plot.XYPlot.removeRangeMarker : return $z0
org.jfree.chart.plot.XYPlot.removeRangeMarker : return $z0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r3 = (org.jfree.chart.axis.AxisLocation) $r2
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r3 = (org.jfree.chart.axis.AxisLocation) $r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisLocation : return $r3
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : return $r3 >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.axis.AxisLocation.getOpposite : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location") >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : n0 = null
org.jfree.chart.axis.AxisLocation.getOpposite : n0 = null >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : $r1 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.axis.AxisLocation.getOpposite : $r1 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : if r0 != $r1
org.jfree.chart.axis.AxisLocation.getOpposite : if r0 != $r1 >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.axis.AxisLocation.getOpposite : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : if r0 != $r3
org.jfree.chart.axis.AxisLocation.getOpposite : if r0 != $r3 >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : $r4 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.axis.AxisLocation.getOpposite : $r4 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT> >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : if r0 != $r4
org.jfree.chart.axis.AxisLocation.getOpposite : if r0 != $r4 >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : r2 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.axis.AxisLocation.getOpposite : r2 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : goto [?= return r2]
org.jfree.chart.axis.AxisLocation.getOpposite : goto [?= return r2] >>>>>>>> org.jfree.chart.axis.AxisLocation.getOpposite : return r2
org.jfree.chart.axis.AxisLocation.getOpposite : return r2 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r2 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r2 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r1 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_LEFT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r1 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_LEFT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z0 = virtualinvoke $r2.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z0 = virtualinvoke $r2.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z0 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r3 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r3 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r4 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r4 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z1 = virtualinvoke $r3.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z1 = virtualinvoke $r3.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z1 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r5 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r5 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r6 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_RIGHT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r6 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_RIGHT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z2 = virtualinvoke $r5.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z2 = virtualinvoke $r5.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z2 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r7 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r7 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r8 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor LEFT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r8 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor LEFT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z3 = virtualinvoke $r7.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z3 = virtualinvoke $r7.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z3 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z3 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r9 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r9 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r10 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor CENTER>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r10 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor CENTER> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z4 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z4 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d8 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockWidth>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d8 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockWidth> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d9 = neg $d8
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d9 = neg $d8 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d10 = $d9 / 2.0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d10 = $d9 / 2.0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset> = $d10
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset> = $d10 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d11 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d11 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d12 = neg $d11
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d12 = neg $d11 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d13 = $d12 / 2.0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d13 = $d12 / 2.0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset> = $d13
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset> = $d13 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : goto [?= return]
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : goto [?= return] >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale : $r1 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.chart.renderer.PaintScale paintScale>
org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale : $r1 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.chart.renderer.PaintScale paintScale> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale : return $r1
org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale : return $r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.getBlockAnchor : $r1 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.getBlockAnchor : $r1 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.getBlockAnchor : return $r1
org.jfree.chart.renderer.xy.XYBlockRenderer.getBlockAnchor : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter>
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter> >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : return $r0
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : return $r0 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible> >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : return $z0
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter>
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0 >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont>
org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : return $r1
org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : return $r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset : $d0 = r0.<org.jfree.chart.renderer.AbstractRenderer: double itemLabelAnchorOffset>
org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset : $d0 = r0.<org.jfree.chart.renderer.AbstractRenderer: double itemLabelAnchorOffset> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset : return $d0
org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset : return $d0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getBaseLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.getBaseLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getBaseLegendShape : return $r1
org.jfree.chart.renderer.AbstractRenderer.getBaseLegendShape : return $r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setShape(java.awt.Shape,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setShape(java.awt.Shape,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> = r1
org.jfree.chart.renderer.AbstractRenderer.setShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bar")
org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bar") >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : r0.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar> = r1
org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : r0.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar> = r1 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.setDrawBarOutline : r0.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean drawBarOutline> = z0
org.jfree.chart.renderer.xy.XYBarRenderer.setDrawBarOutline : r0.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean drawBarOutline> = z0 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.setDrawBarOutline : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.XYBarRenderer.setDrawBarOutline : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : if r1 != null
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $z0 = r0.<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: boolean centerBarAtStartValue>
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $z0 = r0.<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: boolean centerBarAtStartValue> >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : if $z0 == 0
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $r4 = specialinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r1)
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : $r4 = specialinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r1) >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 1)
org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : return $i0
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r2 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r2 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z2 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $b6 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $b6 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds : return $r2
org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds : return $r2 >>>>>>>> org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : return $r4
org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds : return $r4 >>>>>>>> org.jfree.data.xy.XYBarDataset.setBarWidth : r0.<org.jfree.data.xy.XYBarDataset: double barWidth> = d0
org.jfree.data.xy.XYBarDataset.setBarWidth : r0.<org.jfree.data.xy.XYBarDataset: double barWidth> = d0 >>>>>>>> org.jfree.data.xy.XYBarDataset.setBarWidth : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.xy.XYBarDataset.setBarWidth : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.xy.XYBarDataset.setBarWidth : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.xy.XYBarDataset.setBarWidth : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.xy.XYBarDataset.setBarWidth : virtualinvoke r0.<org.jfree.data.xy.XYBarDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.xy.XYBarDataset.setBarWidth : virtualinvoke r0.<org.jfree.data.xy.XYBarDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtLeft : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft>
org.jfree.chart.axis.AxisCollection.getAxesAtLeft : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft> >>>>>>>> org.jfree.chart.axis.AxisCollection.getAxesAtLeft : return $r1
org.jfree.chart.axis.AxisCollection.getAxesAtLeft : return $r1 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 != 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i2 >= i0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i2 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i3 >= i1
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i3 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3)
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1)
org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5
org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null
org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7
org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0
org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2)
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : return r1
org.jfree.data.DefaultKeyedValues2D.getValue : return r1 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2
org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $r1 == null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $r1 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateCategoryRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r0, z0)
org.jfree.data.general.DatasetUtilities.iterateCategoryRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r0, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z1 = r0 instanceof org.jfree.data.category.IntervalCategoryDataset
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z1 = r0 instanceof org.jfree.data.category.IntervalCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i4 = 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i4 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i4 >= i0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i4 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i5 = 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i5 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i5 >= i1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i5 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r5 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i4, i5)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r5 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i4, i5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if r5 == null
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if r5 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d8 = virtualinvoke r5.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d8 = virtualinvoke r5.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d8)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z5 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z5 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d8)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d8)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i5 = i5 + 1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i5 = i5 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i4 = i4 + 1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i4 = i4 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b6 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b6 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r6 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r6 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : specialinvoke $r6.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : specialinvoke $r6.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r6
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r6 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateCategoryRangeBounds : return $r1
org.jfree.data.general.DatasetUtilities.iterateCategoryRangeBounds : return $r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.OHLCDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.OHLCDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z6 = r0 instanceof org.jfree.data.statistics.BoxAndWhiskerXYDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z6 = r0 instanceof org.jfree.data.statistics.BoxAndWhiskerXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z6 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z6 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z9 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z9 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z9 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z9 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r13 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r13 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r14 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r14 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z10 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z10 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $z0 = r0 instanceof org.jfree.data.DomainInfo
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $z0 = r0 instanceof org.jfree.data.DomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if $z0 == 0
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if $z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : r1 = (org.jfree.data.DomainInfo) r0
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : r1 = (org.jfree.data.DomainInfo) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $r4 = new java.lang.Double
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $r4 = new java.lang.Double >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $d1 = interfaceinvoke r1.<org.jfree.data.DomainInfo: double getDomainLowerBound(boolean)>(1)
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $d1 = interfaceinvoke r1.<org.jfree.data.DomainInfo: double getDomainLowerBound(boolean)>(1) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getDomainLowerBound : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate>
org.jfree.data.xy.CategoryTableXYDataset.getDomainLowerBound : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.xy.IntervalXYDelegate intervalDelegate> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getDomainLowerBound : $d0 = virtualinvoke $r1.<org.jfree.data.xy.IntervalXYDelegate: double getDomainLowerBound(boolean)>(z0)
org.jfree.data.xy.CategoryTableXYDataset.getDomainLowerBound : $d0 = virtualinvoke $r1.<org.jfree.data.xy.IntervalXYDelegate: double getDomainLowerBound(boolean)>(z0) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound : d0 = #NaN
org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound : d0 = #NaN >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound : r1 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>(z0)
org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound : r1 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>(z0) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : $r2 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : $r2 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>($r2, 0)
org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>($r2, 0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.DomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.DomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r1 = (org.jfree.data.DomainInfo) r0
org.jfree.data.general.DatasetUtilities.findDomainBounds : r1 = (org.jfree.data.DomainInfo) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r2 = interfaceinvoke r1.<org.jfree.data.DomainInfo: org.jfree.data.Range getDomainBounds(boolean)>(z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r2 = interfaceinvoke r1.<org.jfree.data.DomainInfo: org.jfree.data.Range getDomainBounds(boolean)>(z0) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getDomainBounds : if z0 == 0
org.jfree.data.xy.CategoryTableXYDataset.getDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getDomainBounds : $r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, z0)
org.jfree.data.xy.CategoryTableXYDataset.getDomainBounds : $r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i4 >= i0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i4 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $b7 = d0 cmpl d1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $b7 = d0 cmpl d1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $b7 <= 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $b7 <= 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : return null
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : return null >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getDomainBounds : return $r3
org.jfree.data.xy.CategoryTableXYDataset.getDomainBounds : return $r3 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : goto [?= return r2]
org.jfree.data.general.DatasetUtilities.findDomainBounds : goto [?= return r2] >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : return r2
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r2 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : if z0 == 0
org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : if r1 == null
org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : if r1 == null >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : return r1
org.jfree.data.xy.IntervalXYDelegate.getDomainBounds : return r1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound : if r1 == null
org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound : if r1 == null >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound : return d0
org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound : return d0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getDomainLowerBound : return $d0
org.jfree.data.xy.CategoryTableXYDataset.getDomainLowerBound : return $d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d1)
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : return $r4
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : return $r4 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : if r1 == null
org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : if r1 == null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.RangeInfo
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.RangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i7 = 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i7 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i7 >= i0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i7 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b10 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b10 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b10 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b10 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return null
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : return r2
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r2 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : if r2 != null
org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : if r2 != null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : return null
org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds : return null >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r0 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r0 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : r1 = $r0
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : r1 = $r0 >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r4 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r4 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r4.<java.text.DecimalFormat: void <init>(java.lang.String)>("0")
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r4.<java.text.DecimalFormat: void <init>(java.lang.String)>("0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : r2 = $r4
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : r2 = $r4 >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r5 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r5 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r5.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0")
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r5.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : r3 = $r5
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : r3 = $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r6 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r6 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r6.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r2, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r6.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r2, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r6)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r6) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r7 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r7 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r7.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0, r2, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r7.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0, r2, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r7)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r7) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r8 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r8 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r8.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r2, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r8.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r2, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r8)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r8) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r9 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r9 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r9.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r2, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r9.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r2, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r9)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r9) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r10 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r10 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r10.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(20.0, r2, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r10.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(20.0, r2, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r10)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r10) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r11 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r11 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r2, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r2, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r11)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r11) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r12 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r12 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r2, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r2, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r12)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r12) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r13 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r13 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r13.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(200.0, r2, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r13.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(200.0, r2, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r13)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r13) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r14 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r14 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r14.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r2, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r14.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r2, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r14)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r14) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r15 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r15 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r15.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r15.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r15)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r15) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r16 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r16 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2000.0, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2000.0, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r16)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r16) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r17 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r17 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r17.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r3, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r17.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r17)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r17) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r18 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r18 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r19 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r19 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r19.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(20000.0, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r19.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(20000.0, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r19)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r19) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r20 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r20 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r20.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r3, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r20.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r20)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r20) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r21 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r21 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r21.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r21.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r21)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r21) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r22 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r22 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r22.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(200000.0, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r22.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(200000.0, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r22)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r22) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r23 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r23 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r23.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r3, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r23.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r23)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r23) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r24 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r24 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r24.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r24.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r24)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r24) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r25 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r25 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r25.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2000000.0, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r25.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2000000.0, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r25)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r25) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r26 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r26 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r26.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r3, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r26.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r26)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r26) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r27 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r27 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r27.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r27.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r27)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r27) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0E7, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0E7, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r3, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0E8, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0E8, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r3, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0E9, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0E9, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r3, 5)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r3, 2)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36)
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36) >>>>>>>> org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : return r1
org.jfree.chart.axis.NumberAxis.createIntegerTickUnits : return r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setStandardTickUnits : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits> = r1
org.jfree.chart.axis.ValueAxis.setStandardTickUnits : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setStandardTickUnits : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setStandardTickUnits : $r2 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.ValueAxis.setStandardTickUnits : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.ValueAxis.setStandardTickUnits : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setStandardTickUnits : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2)
org.jfree.chart.axis.ValueAxis.setStandardTickUnits : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2) >>>>>>>> org.jfree.chart.axis.Axis.setAxisLineVisible : r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible> = z0
org.jfree.chart.axis.Axis.setAxisLineVisible : r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible> = z0 >>>>>>>> org.jfree.chart.axis.Axis.setAxisLineVisible : virtualinvoke r0.<org.jfree.chart.axis.Axis: void fireChangeEvent()>()
org.jfree.chart.axis.Axis.setAxisLineVisible : virtualinvoke r0.<org.jfree.chart.axis.Axis: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.axis.Axis.fireChangeEvent : $r1 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.Axis.fireChangeEvent : $r1 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.Axis.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.Axis.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.Axis.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.axis.Axis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r1)
org.jfree.chart.axis.Axis.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.axis.Axis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.ThermometerPlot.getDataRange : $r2 = new org.jfree.data.Range
org.jfree.chart.plot.ThermometerPlot.getDataRange : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.plot.ThermometerPlot.getDataRange : $d0 = r0.<org.jfree.chart.plot.ThermometerPlot: double lowerBound>
org.jfree.chart.plot.ThermometerPlot.getDataRange : $d0 = r0.<org.jfree.chart.plot.ThermometerPlot: double lowerBound> >>>>>>>> org.jfree.chart.plot.ThermometerPlot.getDataRange : $d1 = r0.<org.jfree.chart.plot.ThermometerPlot: double upperBound>
org.jfree.chart.plot.ThermometerPlot.getDataRange : $d1 = r0.<org.jfree.chart.plot.ThermometerPlot: double upperBound> >>>>>>>> org.jfree.chart.plot.ThermometerPlot.getDataRange : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d0, $d1)
org.jfree.chart.plot.ThermometerPlot.getDataRange : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d0, $d1) >>>>>>>> org.jfree.chart.plot.ThermometerPlot.getDataRange : return $r2
org.jfree.chart.plot.ThermometerPlot.getDataRange : return $r2 >>>>>>>> org.jfree.chart.plot.ThermometerPlot.setAxisRange : $i0 = r0.<org.jfree.chart.plot.ThermometerPlot: int subrange>
org.jfree.chart.plot.ThermometerPlot.setAxisRange : $i0 = r0.<org.jfree.chart.plot.ThermometerPlot: int subrange> >>>>>>>> org.jfree.chart.plot.ThermometerPlot.setAxisRange : if $i0 < 0
org.jfree.chart.plot.ThermometerPlot.setAxisRange : if $i0 < 0 >>>>>>>> org.jfree.chart.plot.ThermometerPlot.setAxisRange : $r7 = r0.<org.jfree.chart.plot.ThermometerPlot: org.jfree.chart.axis.ValueAxis rangeAxis>
org.jfree.chart.plot.ThermometerPlot.setAxisRange : $r7 = r0.<org.jfree.chart.plot.ThermometerPlot: org.jfree.chart.axis.ValueAxis rangeAxis> >>>>>>>> org.jfree.chart.plot.ThermometerPlot.setAxisRange : $d2 = r0.<org.jfree.chart.plot.ThermometerPlot: double lowerBound>
org.jfree.chart.plot.ThermometerPlot.setAxisRange : $d2 = r0.<org.jfree.chart.plot.ThermometerPlot: double lowerBound> >>>>>>>> org.jfree.chart.plot.ThermometerPlot.setAxisRange : $d3 = r0.<org.jfree.chart.plot.ThermometerPlot: double upperBound>
org.jfree.chart.plot.ThermometerPlot.setAxisRange : $d3 = r0.<org.jfree.chart.plot.ThermometerPlot: double upperBound> >>>>>>>> org.jfree.chart.plot.ThermometerPlot.setAxisRange : virtualinvoke $r7.<org.jfree.chart.axis.ValueAxis: void setRange(double,double)>($d2, $d3)
org.jfree.chart.plot.ThermometerPlot.setAxisRange : virtualinvoke $r7.<org.jfree.chart.axis.ValueAxis: void setRange(double,double)>($d2, $d3) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : $r1 = new org.jfree.data.Range
org.jfree.chart.axis.ValueAxis.setRange : $r1 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.axis.ValueAxis.setRange : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range)>($r1)
org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range)>($r1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, 1, 1)
org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, 1, 1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> = 0
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> = 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setRange : $r2 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.ValueAxis.setRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2)
org.jfree.chart.axis.ValueAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r4 = r2[i0]
org.jfree.chart.axis.Axis.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if $r4 != class "org/jfree/chart/event/AxisChangeListener"
org.jfree.chart.axis.Axis.notifyListeners : if $r4 != class "org/jfree/chart/event/AxisChangeListener" >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i2 = i0 + 1
org.jfree.chart.axis.Axis.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.axis.Axis.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r6 = (org.jfree.chart.event.AxisChangeListener) $r5
org.jfree.chart.axis.Axis.notifyListeners : $r6 = (org.jfree.chart.event.AxisChangeListener) $r5 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.AxisChangeListener: void axisChanged(org.jfree.chart.event.AxisChangeEvent)>(r1)
org.jfree.chart.axis.Axis.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.AxisChangeListener: void axisChanged(org.jfree.chart.event.AxisChangeEvent)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.axisChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.axisChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = i0 + -2
org.jfree.chart.axis.Axis.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : goto [?= (branch)]
org.jfree.chart.axis.Axis.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.ThermometerPlot.isDomainZoomable : return 0
org.jfree.chart.plot.ThermometerPlot.isDomainZoomable : return 0 >>>>>>>> org.jfree.chart.plot.ThermometerPlot.getOrientation : $r1 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.ThermometerPlot.getOrientation : $r1 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.ThermometerPlot.getOrientation : return $r1
org.jfree.chart.plot.ThermometerPlot.getOrientation : return $r1 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : $z0 = r1 instanceof org.jfree.data.xy.CategoryTableXYDataset
org.jfree.data.xy.CategoryTableXYDataset.equals : $z0 = r1 instanceof org.jfree.data.xy.CategoryTableXYDataset >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : if $z0 != 0
org.jfree.data.xy.CategoryTableXYDataset.equals : if $z0 != 0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.equals : return 0
org.jfree.data.xy.CategoryTableXYDataset.equals : return 0 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location") >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation") >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = null >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r3
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r3 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r4 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r4 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r4
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r4 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r5 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r5 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r5
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r5 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : goto [?= (branch)]
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r2 != null
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r2 != null >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : return r2
