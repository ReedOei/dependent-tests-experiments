org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.labels.StandardXYToolTipGenerator.clone : $r1 = specialinvoke r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.lang.Object clone()>()
org.jfree.chart.labels.StandardXYToolTipGenerator.clone : $r1 = specialinvoke r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1 = (org.jfree.chart.labels.AbstractXYItemLabelGenerator) $r2
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1 = (org.jfree.chart.labels.AbstractXYItemLabelGenerator) $r2 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r3 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r3 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r3 == null
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r3 == null >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r4 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r4 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r5 = virtualinvoke $r4.<java.text.NumberFormat: java.lang.Object clone()>()
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r5 = virtualinvoke $r4.<java.text.NumberFormat: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r6 = (java.text.NumberFormat) $r5
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r6 = (java.text.NumberFormat) $r5 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat> = $r6
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat xFormat> = $r6 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r7 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r7 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r7 == null
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r7 == null >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r8 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r8 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r9 = virtualinvoke $r8.<java.text.NumberFormat: java.lang.Object clone()>()
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r9 = virtualinvoke $r8.<java.text.NumberFormat: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r10 = (java.text.NumberFormat) $r9
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r10 = (java.text.NumberFormat) $r9 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> = $r10
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : r1.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> = $r10 >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r11 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.DateFormat xDateFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r11 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.DateFormat xDateFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r11 == null
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r11 == null >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r15 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.DateFormat yDateFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : $r15 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.DateFormat yDateFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r15 == null
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : if $r15 == null >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : return r1
org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone : return r1 >>>>>>>> org.jfree.chart.labels.StandardXYToolTipGenerator.clone : return $r1
org.jfree.chart.labels.StandardXYToolTipGenerator.clone : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.getYFormat : $r1 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat>
org.jfree.chart.labels.AbstractXYItemLabelGenerator.getYFormat : $r1 = r0.<org.jfree.chart.labels.AbstractXYItemLabelGenerator: java.text.NumberFormat yFormat> >>>>>>>> org.jfree.chart.labels.AbstractXYItemLabelGenerator.getYFormat : return $r1
org.jfree.chart.labels.AbstractXYItemLabelGenerator.getYFormat : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4
org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.plot.XYPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null
org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5
org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r5 = specialinvoke r0.<org.jfree.chart.plot.Plot: java.lang.Object clone()>()
org.jfree.chart.plot.XYPlot.clone : $r5 = specialinvoke r0.<org.jfree.chart.plot.Plot: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.Plot.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : r1 = (org.jfree.chart.plot.Plot) $r2
org.jfree.chart.plot.Plot.clone : r1 = (org.jfree.chart.plot.Plot) $r2 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r3 = r0.<org.jfree.chart.plot.Plot: org.jfree.data.general.DatasetGroup datasetGroup>
org.jfree.chart.plot.Plot.clone : $r3 = r0.<org.jfree.chart.plot.Plot: org.jfree.data.general.DatasetGroup datasetGroup> >>>>>>>> org.jfree.chart.plot.Plot.clone : if $r3 == null
org.jfree.chart.plot.Plot.clone : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.clone : $r7 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.clone : $r7 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.clone : $r8 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r7)
org.jfree.chart.plot.Plot.clone : $r8 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2
org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r9 = (org.jfree.chart.plot.DrawingSupplier) $r8
org.jfree.chart.plot.Plot.clone : $r9 = (org.jfree.chart.plot.DrawingSupplier) $r8 >>>>>>>> org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = $r9
org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = $r9 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r10 = new javax.swing.event.EventListenerList
org.jfree.chart.plot.Plot.clone : $r10 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.plot.Plot.clone : specialinvoke $r10.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.plot.Plot.clone : specialinvoke $r10.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r10
org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r10 >>>>>>>> org.jfree.chart.plot.Plot.clone : return r1
org.jfree.chart.plot.Plot.clone : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1 = (org.jfree.chart.plot.XYPlot) $r5
org.jfree.chart.plot.XYPlot.clone : r1 = (org.jfree.chart.plot.XYPlot) $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r6 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.clone : $r6 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r7 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r6)
org.jfree.chart.plot.XYPlot.clone : $r7 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r8 = (org.jfree.util.ObjectList) $r7
org.jfree.chart.plot.XYPlot.clone : $r8 = (org.jfree.util.ObjectList) $r7 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> = $r8
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> = $r8 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : i0 = 0
org.jfree.chart.plot.XYPlot.clone : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.clone : $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $i1 = virtualinvoke $r9.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.clone : $i1 = virtualinvoke $r9.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if i0 >= $i1
org.jfree.chart.plot.XYPlot.clone : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r10 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.clone : $r10 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r11 = virtualinvoke $r10.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.clone : $r11 = virtualinvoke $r10.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r2 = (org.jfree.chart.axis.ValueAxis) $r11
org.jfree.chart.plot.XYPlot.clone : r2 = (org.jfree.chart.axis.ValueAxis) $r11 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if r2 == null
org.jfree.chart.plot.XYPlot.clone : if r2 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clone : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.clone : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : goto [?= $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.XYPlot.clone : goto [?= $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r14 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.clone : $r14 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r15 = virtualinvoke $r14.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.XYPlot.clone : $r15 = virtualinvoke $r14.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r16 = (org.jfree.util.ObjectList) $r15
org.jfree.chart.plot.XYPlot.clone : $r16 = (org.jfree.util.ObjectList) $r15 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> = $r16
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> = $r16 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r17 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.clone : $r17 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r18 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r17)
org.jfree.chart.plot.XYPlot.clone : $r18 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r17) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r19 = (org.jfree.util.ObjectList) $r18
org.jfree.chart.plot.XYPlot.clone : $r19 = (org.jfree.util.ObjectList) $r18 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> = $r19
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> = $r19 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : i2 = 0
org.jfree.chart.plot.XYPlot.clone : i2 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r20 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.clone : $r20 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $i3 = virtualinvoke $r20.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.clone : $i3 = virtualinvoke $r20.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if i2 >= $i3
org.jfree.chart.plot.XYPlot.clone : if i2 >= $i3 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r21 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.clone : $r21 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i2)
org.jfree.chart.plot.XYPlot.clone : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r23 = (org.jfree.chart.axis.ValueAxis) $r22
org.jfree.chart.plot.XYPlot.clone : r23 = (org.jfree.chart.axis.ValueAxis) $r22 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if r23 == null
org.jfree.chart.plot.XYPlot.clone : if r23 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clone : i2 = i2 + 1
org.jfree.chart.plot.XYPlot.clone : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : goto [?= $r20 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.XYPlot.clone : goto [?= $r20 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r27 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.clone : $r27 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r28 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r27)
org.jfree.chart.plot.XYPlot.clone : $r28 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r27) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r29 = (org.jfree.util.ObjectList) $r28
org.jfree.chart.plot.XYPlot.clone : $r29 = (org.jfree.util.ObjectList) $r28 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> = $r29
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> = $r29 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r30 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.clone : $r30 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r31 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r30)
org.jfree.chart.plot.XYPlot.clone : $r31 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r30) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r32 = (org.jfree.util.ObjectList) $r31
org.jfree.chart.plot.XYPlot.clone : $r32 = (org.jfree.util.ObjectList) $r31 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> = $r32
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> = $r32 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : i4 = 0
org.jfree.chart.plot.XYPlot.clone : i4 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r33 = r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.clone : $r33 = r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $i5 = virtualinvoke $r33.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.clone : $i5 = virtualinvoke $r33.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if i4 >= $i5
org.jfree.chart.plot.XYPlot.clone : if i4 >= $i5 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r34 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i4)
org.jfree.chart.plot.XYPlot.clone : r34 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i4) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if r34 == null
org.jfree.chart.plot.XYPlot.clone : if r34 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clone : i4 = i4 + 1
org.jfree.chart.plot.XYPlot.clone : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : goto [?= $r33 = r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.XYPlot.clone : goto [?= $r33 = r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r35 = new java.util.TreeMap
org.jfree.chart.plot.XYPlot.clone : $r35 = new java.util.TreeMap >>>>>>>> org.jfree.chart.plot.XYPlot.clone : specialinvoke $r35.<java.util.TreeMap: void <init>()>()
org.jfree.chart.plot.XYPlot.clone : specialinvoke $r35.<java.util.TreeMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> = $r35
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> = $r35 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r36 = r1.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.clone : $r36 = r1.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r37 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.clone : $r37 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : interfaceinvoke $r36.<java.util.Map: void putAll(java.util.Map)>($r37)
org.jfree.chart.plot.XYPlot.clone : interfaceinvoke $r36.<java.util.Map: void putAll(java.util.Map)>($r37) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r38 = new java.util.TreeMap
org.jfree.chart.plot.XYPlot.clone : $r38 = new java.util.TreeMap >>>>>>>> org.jfree.chart.plot.XYPlot.clone : specialinvoke $r38.<java.util.TreeMap: void <init>()>()
org.jfree.chart.plot.XYPlot.clone : specialinvoke $r38.<java.util.TreeMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> = $r38
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> = $r38 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r39 = r1.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.clone : $r39 = r1.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r40 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.clone : $r40 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : interfaceinvoke $r39.<java.util.Map: void putAll(java.util.Map)>($r40)
org.jfree.chart.plot.XYPlot.clone : interfaceinvoke $r39.<java.util.Map: void putAll(java.util.Map)>($r40) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r41 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.clone : $r41 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r42 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r41)
org.jfree.chart.plot.XYPlot.clone : $r42 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r41) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r43 = (org.jfree.util.ObjectList) $r42
org.jfree.chart.plot.XYPlot.clone : $r43 = (org.jfree.util.ObjectList) $r42 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> = $r43
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> = $r43 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : i6 = 0
org.jfree.chart.plot.XYPlot.clone : i6 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r44 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.clone : $r44 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $i7 = virtualinvoke $r44.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.clone : $i7 = virtualinvoke $r44.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if i6 >= $i7
org.jfree.chart.plot.XYPlot.clone : if i6 >= $i7 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r45 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.clone : $r45 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r46 = virtualinvoke $r45.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6)
org.jfree.chart.plot.XYPlot.clone : $r46 = virtualinvoke $r45.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r47 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r46
org.jfree.chart.plot.XYPlot.clone : r47 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r46 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $z0 = r47 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.plot.XYPlot.clone : $z0 = r47 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if $z0 == 0
org.jfree.chart.plot.XYPlot.clone : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : i6 = i6 + 1
org.jfree.chart.plot.XYPlot.clone : i6 = i6 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : goto [?= $r44 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>]
org.jfree.chart.plot.XYPlot.clone : goto [?= $r44 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>] >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r51 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clone : $r51 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r52 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r51)
org.jfree.chart.plot.XYPlot.clone : $r52 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r51) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r53 = (java.util.Map) $r52
org.jfree.chart.plot.XYPlot.clone : $r53 = (java.util.Map) $r52 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> = $r53
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers> = $r53 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r54 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clone : $r54 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r55 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r54)
org.jfree.chart.plot.XYPlot.clone : $r55 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r54) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r56 = (java.util.Map) $r55
org.jfree.chart.plot.XYPlot.clone : $r56 = (java.util.Map) $r55 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> = $r56
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers> = $r56 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r57 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clone : $r57 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r58 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r57)
org.jfree.chart.plot.XYPlot.clone : $r58 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r57) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r59 = (java.util.Map) $r58
org.jfree.chart.plot.XYPlot.clone : $r59 = (java.util.Map) $r58 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> = $r59
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> = $r59 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r60 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clone : $r60 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r61 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r60)
org.jfree.chart.plot.XYPlot.clone : $r61 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r60) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r62 = (java.util.Map) $r61
org.jfree.chart.plot.XYPlot.clone : $r62 = (java.util.Map) $r61 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> = $r62
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> = $r62 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r63 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.clone : $r63 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r64 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r63)
org.jfree.chart.plot.XYPlot.clone : $r64 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r63) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r65 = (java.util.List) $r64
org.jfree.chart.plot.XYPlot.clone : $r65 = (java.util.List) $r64 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.List annotations> = $r65
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.util.List annotations> = $r65 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r66 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.XYPlot.clone : $r66 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if $r66 == null
org.jfree.chart.plot.XYPlot.clone : if $r66 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r70 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.XYPlot.clone : $r70 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if $r70 == null
org.jfree.chart.plot.XYPlot.clone : if $r70 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r74 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.XYPlot.clone : $r74 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : if $r74 == null
org.jfree.chart.plot.XYPlot.clone : if $r74 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r78 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin>
org.jfree.chart.plot.XYPlot.clone : $r78 = r0.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r79 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r78)
org.jfree.chart.plot.XYPlot.clone : $r79 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r78) >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r80 = (java.awt.geom.Point2D) $r79
org.jfree.chart.plot.XYPlot.clone : $r80 = (java.awt.geom.Point2D) $r79 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> = $r80
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.awt.geom.Point2D quadrantOrigin> = $r80 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r81 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.clone : $r81 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r82 = virtualinvoke $r81.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.XYPlot.clone : $r82 = virtualinvoke $r81.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r83 = (java.awt.Paint[]) $r82
org.jfree.chart.plot.XYPlot.clone : $r83 = (java.awt.Paint[]) $r82 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : $r84 = (java.awt.Paint[]) $r83
org.jfree.chart.plot.XYPlot.clone : $r84 = (java.awt.Paint[]) $r83 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> = $r84
org.jfree.chart.plot.XYPlot.clone : r1.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint> = $r84 >>>>>>>> org.jfree.chart.plot.XYPlot.clone : return r1
org.jfree.chart.plot.XYPlot.clone : return r1 >>>>>>>> org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals : if r1 != r0
org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals : if r1 != r0 >>>>>>>> org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals : $z0 = r1 instanceof org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator
org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals : $z0 = r1 instanceof org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator >>>>>>>> org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals : if $z0 == 0
org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals : if $z0 == 0 >>>>>>>> org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals : return 0
org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals : return 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter>
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter> >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : return $r0
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : return $r0 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible> >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : return $z0
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter>
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0 >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont>
org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : return $r1
org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : return $r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset : $d0 = r0.<org.jfree.chart.renderer.AbstractRenderer: double itemLabelAnchorOffset>
org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset : $d0 = r0.<org.jfree.chart.renderer.AbstractRenderer: double itemLabelAnchorOffset> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset : return $d0
org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset : return $d0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getBaseLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.getBaseLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getBaseLegendShape : return $r1
org.jfree.chart.renderer.AbstractRenderer.getBaseLegendShape : return $r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setShape(java.awt.Shape,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setShape(java.awt.Shape,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> = r1
org.jfree.chart.renderer.AbstractRenderer.setShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bar")
org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bar") >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : r0.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar> = r1
org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : r0.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar> = r1 >>>>>>>> org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $r2 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $r2 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $i0 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $i0 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnIndex : $r2 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnIndex : $r2 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnIndex : $i0 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues2D: int getColumnIndex(java.lang.Comparable)>(r1)
org.jfree.data.category.DefaultCategoryDataset.getColumnIndex : $i0 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues2D: int getColumnIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getColumnIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getColumnIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnIndex : return $i0
org.jfree.data.DefaultKeyedValues2D.getColumnIndex : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnIndex : return $i0
org.jfree.data.category.DefaultCategoryDataset.getColumnIndex : return $i0 >>>>>>>> org.jfree.chart.entity.CategoryItemEntity.setCategoryIndex : r0.<org.jfree.chart.entity.CategoryItemEntity: int categoryIndex> = i0
org.jfree.chart.entity.CategoryItemEntity.setCategoryIndex : r0.<org.jfree.chart.entity.CategoryItemEntity: int categoryIndex> = i0 >>>>>>>> org.jfree.chart.entity.CategoryItemEntity.setDataset : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset")
org.jfree.chart.entity.CategoryItemEntity.setDataset : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset") >>>>>>>> org.jfree.chart.entity.CategoryItemEntity.setDataset : r0.<org.jfree.chart.entity.CategoryItemEntity: org.jfree.data.category.CategoryDataset dataset> = r1
org.jfree.chart.entity.CategoryItemEntity.setDataset : r0.<org.jfree.chart.entity.CategoryItemEntity: org.jfree.data.category.CategoryDataset dataset> = r1 >>>>>>>> org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.generateColumnLabel : $r2 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getColumnKey(int)>(i0)
org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.generateColumnLabel : $r2 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getColumnKey(int)>(i0) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getColumnKey(int)>(i0)
org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getColumnKey(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
