org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline : $z0 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline>
org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline : $z0 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline : return $z0
org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline : return $z0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> = z0
org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> = z0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.getLegendItemPaint : $r1 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>
org.jfree.chart.StandardChartTheme.getLegendItemPaint : $r1 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.getLegendItemPaint : return $r1
org.jfree.chart.StandardChartTheme.getLegendItemPaint : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint : r0.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint> = r1
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint : r0.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint> = r1 >>>>>>>> org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.annotations.XYPolygonAnnotation.clone : $r1 = specialinvoke r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.Object clone()>()
org.jfree.chart.annotations.XYPolygonAnnotation.clone : $r1 = specialinvoke r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.annotations.AbstractAnnotation.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : r1 = (org.jfree.chart.annotations.AbstractAnnotation) $r3
org.jfree.chart.annotations.AbstractAnnotation.clone : r1 = (org.jfree.chart.annotations.AbstractAnnotation) $r3 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.chart.annotations.AbstractAnnotation.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.annotations.AbstractAnnotation.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : r1.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.chart.annotations.AbstractAnnotation.clone : r1.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : return r1
org.jfree.chart.annotations.AbstractAnnotation.clone : return r1 >>>>>>>> org.jfree.chart.annotations.XYPolygonAnnotation.clone : return $r1
org.jfree.chart.annotations.XYPolygonAnnotation.clone : return $r1 >>>>>>>> org.jfree.chart.annotations.XYPolygonAnnotation.getOutlinePaint : $r1 = r0.<org.jfree.chart.annotations.XYPolygonAnnotation: java.awt.Paint outlinePaint>
org.jfree.chart.annotations.XYPolygonAnnotation.getOutlinePaint : $r1 = r0.<org.jfree.chart.annotations.XYPolygonAnnotation: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.annotations.XYPolygonAnnotation.getOutlinePaint : return $r1
org.jfree.chart.annotations.XYPolygonAnnotation.getOutlinePaint : return $r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePaint(java.awt.Paint,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBasePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePaint(java.awt.Paint,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> = r1
org.jfree.chart.renderer.AbstractRenderer.setBasePaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBasePaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBasePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.getPlotLines : $z0 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines>
org.jfree.chart.renderer.xy.XYAreaRenderer.getPlotLines : $z0 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.getPlotLines : return $z0
