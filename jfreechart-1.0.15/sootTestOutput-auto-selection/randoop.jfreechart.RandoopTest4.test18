org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : return $l3
org.jfree.data.time.Week.getFirstMillisecond : return $l3 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1
org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L
org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : return $l5
org.jfree.data.time.Week.getLastMillisecond : return $l5 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "category")
org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "category") >>>>>>>> org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : $r3 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map categoryLabelToolTips>
org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : $r3 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map categoryLabelToolTips> >>>>>>>> org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.data.time.Week.hashCode : b0 = 17
org.jfree.data.time.Week.hashCode : b0 = 17 >>>>>>>> org.jfree.data.time.Week.hashCode : $i1 = 37 * b0
org.jfree.data.time.Week.hashCode : $i1 = 37 * b0 >>>>>>>> org.jfree.data.time.Week.hashCode : $b2 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.hashCode : $b2 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.hashCode : i3 = $i1 + $b2
org.jfree.data.time.Week.hashCode : i3 = $i1 + $b2 >>>>>>>> org.jfree.data.time.Week.hashCode : $i4 = 37 * i3
org.jfree.data.time.Week.hashCode : $i4 = 37 * i3 >>>>>>>> org.jfree.data.time.Week.hashCode : $s5 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.hashCode : $s5 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.hashCode : i6 = $i4 + $s5
org.jfree.data.time.Week.hashCode : i6 = $i4 + $s5 >>>>>>>> org.jfree.data.time.Week.hashCode : return i6
org.jfree.data.time.Week.hashCode : return i6 >>>>>>>> org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : $r5 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : $r5 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : specialinvoke $r5.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : specialinvoke $r5.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r5)
org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r5) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2
org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0
