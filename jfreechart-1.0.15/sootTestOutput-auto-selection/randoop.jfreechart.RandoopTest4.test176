org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : $r1 = new org.jfree.data.general.DefaultPieDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : specialinvoke $r1.<org.jfree.data.general.DefaultPieDataset: void <init>()>()
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : specialinvoke $r1.<org.jfree.data.general.DefaultPieDataset: void <init>()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : r2 = $r1
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : r2 = $r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: int getColumnCount()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: int getColumnCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.getColumnCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.KeyedObjects2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : return $i0
org.jfree.data.KeyedObjects2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnCount : return $i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : i2 = 0
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : if i2 >= i1
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : return r2
org.jfree.data.general.DatasetUtilities.createPieDatasetForRow : return r2 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnIndex : $r2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnIndex : $r2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnIndex : $i0 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: int getColumnIndex(java.lang.Comparable)>(r1)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnIndex : $i0 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: int getColumnIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.KeyedObjects2D.getColumnIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnIndex : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.getColumnIndex : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.KeyedObjects2D.getColumnIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnIndex : return $i0
org.jfree.data.KeyedObjects2D.getColumnIndex : return $i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnIndex : return $i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnIndex : return $i0 >>>>>>>> org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : return $l3
org.jfree.data.time.Week.getFirstMillisecond : return $l3 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1
org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L
org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : return $l5
org.jfree.data.time.Week.getLastMillisecond : return $l5 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : return $l4
org.jfree.data.time.Day.getFirstMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : return $l4
org.jfree.data.time.Day.getLastMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Second.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Second: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Second.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Second: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day>
org.jfree.data.time.Second.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>()
org.jfree.data.time.Second.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>() >>>>>>>> org.jfree.data.time.Day.getYear : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getYear : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getYear : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getYear : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getYear : return $i0
org.jfree.data.time.Day.getYear : return $i0 >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day>
org.jfree.data.time.Second.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>()
org.jfree.data.time.Second.getFirstMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getMonth : return $i0
org.jfree.data.time.Day.getMonth : return $i0 >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : i1 = $i3 - 1
org.jfree.data.time.Second.getFirstMillisecond : i1 = $i3 - 1 >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day>
org.jfree.data.time.Second.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Second: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>()
org.jfree.data.time.Second.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getDayOfMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getDayOfMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : return $i0
org.jfree.data.time.Day.getDayOfMonth : return $i0 >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $b4 = r0.<org.jfree.data.time.Second: byte hour>
org.jfree.data.time.Second.getFirstMillisecond : $b4 = r0.<org.jfree.data.time.Second: byte hour> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $b5 = r0.<org.jfree.data.time.Second: byte minute>
org.jfree.data.time.Second.getFirstMillisecond : $b5 = r0.<org.jfree.data.time.Second: byte minute> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $b6 = r0.<org.jfree.data.time.Second: byte second>
org.jfree.data.time.Second.getFirstMillisecond : $b6 = r0.<org.jfree.data.time.Second: byte second> >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, $b5, $b6)
org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, $b5, $b6) >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Second.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : $l7 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Second.getFirstMillisecond : $l7 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Second.getFirstMillisecond : return $l7
org.jfree.data.time.Second.getFirstMillisecond : return $l7 >>>>>>>> org.jfree.data.time.Second.peg : r0.<org.jfree.data.time.Second: long firstMillisecond> = $l0
org.jfree.data.time.Second.peg : r0.<org.jfree.data.time.Second: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : return $l1
org.jfree.data.time.Year.getFirstMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : return $l1
org.jfree.data.time.Year.getLastMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getYear : return $s0
org.jfree.data.time.Year.getYear : return $s0 >>>>>>>> org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getFirstMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i2 = $i1 - 1
org.jfree.data.time.Month.getFirstMillisecond : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i0, $i2, 1, 0, 0, 0)
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i0, $i2, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : return $l3
org.jfree.data.time.Month.getFirstMillisecond : return $l3 >>>>>>>> org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long firstMillisecond> = $l0
org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i2 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getLastMillisecond : $i2 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : i0 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>($i1, $i2)
org.jfree.data.time.Month.getLastMillisecond : i0 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>($i1, $i2) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i4 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i4 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i5 = $i4 - 1
org.jfree.data.time.Month.getLastMillisecond : $i5 = $i4 - 1 >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i3, $i5, i0, 23, 59, 59)
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i3, $i5, i0, 23, 59, 59) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : return $l6
org.jfree.data.time.Month.getLastMillisecond : return $l6 >>>>>>>> org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long lastMillisecond> = $l1
org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove : i0 = virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove : i0 = virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowIndex : $r2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowIndex : $r2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowIndex : $i0 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowIndex : $i0 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.KeyedObjects2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.KeyedObjects2D.getRowIndex : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.getRowIndex : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getRowIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.KeyedObjects2D.getRowIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getRowIndex : return $i0
org.jfree.data.KeyedObjects2D.getRowIndex : return $i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowIndex : return $i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowIndex : return $i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove : i1 = virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int getColumnIndex(java.lang.Comparable)>(r2)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove : i1 = virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int getColumnIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove : $r3 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove : $r3 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove : virtualinvoke $r3.<org.jfree.data.KeyedObjects2D: void removeObject(java.lang.Comparable,java.lang.Comparable)>(r1, r2)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove : virtualinvoke $r3.<org.jfree.data.KeyedObjects2D: void removeObject(java.lang.Comparable,java.lang.Comparable)>(r1, r2) >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.KeyedObjects2D.removeObject : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : if i0 >= 0
org.jfree.data.KeyedObjects2D.removeObject : if i0 >= 0 >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : $r5 = new org.jfree.data.UnknownKeyException
org.jfree.data.KeyedObjects2D.removeObject : $r5 = new org.jfree.data.UnknownKeyException >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : $r3 = new java.lang.StringBuilder
org.jfree.data.KeyedObjects2D.removeObject : $r3 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.KeyedObjects2D.removeObject : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Row key (")
org.jfree.data.KeyedObjects2D.removeObject : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Row key (") >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.jfree.data.KeyedObjects2D.removeObject : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not recognised.")
org.jfree.data.KeyedObjects2D.removeObject : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not recognised.") >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.KeyedObjects2D.removeObject : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : specialinvoke $r5.<org.jfree.data.UnknownKeyException: void <init>(java.lang.String)>($r9)
org.jfree.data.KeyedObjects2D.removeObject : specialinvoke $r5.<org.jfree.data.UnknownKeyException: void <init>(java.lang.String)>($r9) >>>>>>>> org.jfree.data.KeyedObjects2D.removeObject : throw $r5
