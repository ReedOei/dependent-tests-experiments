org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r5 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r5 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i0 = $r5.<java.awt.Rectangle: int width>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i0 = $r5.<java.awt.Rectangle: int width> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r6 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r6 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i1 = $r6.<java.awt.Rectangle: int height>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i1 = $r6.<java.awt.Rectangle: int height> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r7 = new java.awt.geom.GeneralPath
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r7 = new java.awt.geom.GeneralPath >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r7.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r7.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : r4 = $r7
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : r4 = $r7 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r8 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r8 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r8.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,java.awt.Paint,java.awt.Paint,int,int)>(r0, r4, r2, r3, i0, i1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r8.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,java.awt.Paint,java.awt.Paint,int,int)>(r0, r4, r2, r3, i0, i1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : return $r8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : return $r8 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r3 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r3 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i0 = $r3.<java.awt.Rectangle: int width>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i0 = $r3.<java.awt.Rectangle: int width> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r4 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>()
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r4 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>() >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i1 = $r4.<java.awt.Rectangle: int height>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : i1 = $r4.<java.awt.Rectangle: int height> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r5 = new java.awt.geom.GeneralPath
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r5 = new java.awt.geom.GeneralPath >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r5.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r5.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : r2 = $r5
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : r2 = $r5 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r6 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : $r6 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r6.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,boolean,boolean,int,int)>(r0, r2, z0, z1, i0, i1)
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : specialinvoke $r6.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,boolean,boolean,int,int)>(r0, r2, z0, z1, i0, i1) >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : return $r6
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon : return $r6 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMaxIcon : $r1 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon maxIcon>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMaxIcon : $r1 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon maxIcon> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMaxIcon : return $r1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMaxIcon : return $r1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMinIcon : $r1 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon minIcon>
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMinIcon : $r1 = r0.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon minIcon> >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMinIcon : return $r1
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMinIcon : return $r1 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.hasListener : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.annotations.AbstractAnnotation.hasListener : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.hasListener : $r4 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.annotations.AbstractAnnotation.hasListener : $r4 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.hasListener : r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
org.jfree.chart.annotations.AbstractAnnotation.hasListener : r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.hasListener : $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.annotations.AbstractAnnotation.hasListener : $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.hasListener : return $z0
org.jfree.chart.annotations.AbstractAnnotation.hasListener : return $z0 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : return $i0
org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r16 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>()
org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r16 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3
org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : return r1
org.jfree.data.general.AbstractDataset.clone : return r1 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : r1 = (org.jfree.data.xy.DefaultIntervalXYDataset) $r16
org.jfree.data.xy.DefaultIntervalXYDataset.clone : r1 = (org.jfree.data.xy.DefaultIntervalXYDataset) $r16 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r2 = new java.util.ArrayList
org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r2 = new java.util.ArrayList >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r17 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>
org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r17 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r17)
org.jfree.data.xy.DefaultIntervalXYDataset.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r17) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : r1.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys> = $r2
org.jfree.data.xy.DefaultIntervalXYDataset.clone : r1.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys> = $r2 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r18 = new java.util.ArrayList
org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r18 = new java.util.ArrayList >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r19 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r19 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : $i1 = interfaceinvoke $r19.<java.util.List: int size()>()
org.jfree.data.xy.DefaultIntervalXYDataset.clone : $i1 = interfaceinvoke $r19.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i1)
org.jfree.data.xy.DefaultIntervalXYDataset.clone : specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i1) >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : r1.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> = $r18
org.jfree.data.xy.DefaultIntervalXYDataset.clone : r1.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> = $r18 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : i0 = 0
org.jfree.data.xy.DefaultIntervalXYDataset.clone : i0 = 0 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r20 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultIntervalXYDataset.clone : $r20 = r0.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : $i2 = interfaceinvoke $r20.<java.util.List: int size()>()
org.jfree.data.xy.DefaultIntervalXYDataset.clone : $i2 = interfaceinvoke $r20.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : if i0 >= $i2
org.jfree.data.xy.DefaultIntervalXYDataset.clone : if i0 >= $i2 >>>>>>>> org.jfree.data.xy.DefaultIntervalXYDataset.clone : return r1
org.jfree.data.xy.DefaultIntervalXYDataset.clone : return r1 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals : if r1 != r0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals : if r1 != r0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.category.MinMaxCategoryRenderer
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.category.MinMaxCategoryRenderer >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals : if $z0 != 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals : return 0
