org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getBaseItemLabelsVisible : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.getBaseItemLabelsVisible : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getBaseItemLabelsVisible : return $r1
org.jfree.chart.renderer.AbstractRenderer.getBaseItemLabelsVisible : return $r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getDrawOutlines : $z0 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean drawOutlines>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getDrawOutlines : $z0 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean drawOutlines> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getDrawOutlines : return $z0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getDrawOutlines : return $z0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesLinesVisible : $r2 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesLinesVisible : $r2 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesLinesVisible : virtualinvoke $r2.<org.jfree.util.BooleanList: void setBoolean(int,java.lang.Boolean)>(i0, r1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesLinesVisible : virtualinvoke $r2.<org.jfree.util.BooleanList: void setBoolean(int,java.lang.Boolean)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesLinesVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesLinesVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : $b0 = d0 cmpg 0.0
org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : if $b0 < 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : if $b0 < 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : $b1 = d0 cmpl 1.0
org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : $b1 = d0 cmpl 1.0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : if $b1 < 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : if $b1 < 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : $r1 = new java.lang.IllegalArgumentException
org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : $r1 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires 0.0 <= margin < 1.0.")
org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires 0.0 <= margin < 1.0.") >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin : throw $r1
