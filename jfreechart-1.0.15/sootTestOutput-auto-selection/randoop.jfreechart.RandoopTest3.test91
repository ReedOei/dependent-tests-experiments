org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader> >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null
org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0)
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0) >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5
org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $i0 = lengthof $r1
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $i0 = lengthof $r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "seriesKeys")
org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "seriesKeys") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : $i0 = lengthof r1
org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : $i0 = lengthof r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : $i1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: int getSeriesCount()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : $i1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = 0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : if $r1 == null
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : if $r1 == null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = lengthof $r2
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = lengthof $r2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : return i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : return i0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : if $i0 == $i1
org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : if $i0 == $i1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> = r1
org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> = r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys : virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r2 = specialinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Object clone()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r2 = specialinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3
org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : return r1
org.jfree.data.general.AbstractDataset.clone : return r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1 = (org.jfree.data.category.DefaultIntervalCategoryDataset) $r2
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1 = (org.jfree.data.category.DefaultIntervalCategoryDataset) $r2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r5 = (java.lang.Comparable[]) $r4
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r5 = (java.lang.Comparable[]) $r4 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r6 = (java.lang.Comparable[]) $r5
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r6 = (java.lang.Comparable[]) $r5 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> = $r6
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> = $r6 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r7 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r7 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r9 = (java.lang.Comparable[]) $r8
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r9 = (java.lang.Comparable[]) $r8 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r10 = (java.lang.Comparable[]) $r9
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r10 = (java.lang.Comparable[]) $r9 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> = $r10
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> = $r10 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r11 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r11 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r12 = staticinvoke <org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] clone(java.lang.Number[][])>($r11)
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r12 = staticinvoke <org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] clone(java.lang.Number[][])>($r11) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "array")
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "array") >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $i1 = lengthof r0
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $i1 = lengthof r0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1 = newarray (java.lang.Number[])[$i1]
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1 = newarray (java.lang.Number[])[$i1] >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : i0 = 0
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : i0 = 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $i2 = lengthof r0
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $i2 = lengthof r0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : if i0 >= $i2
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : if i0 >= $i2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : return r1
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : return r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> = $r12
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> = $r12 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r13 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] endData>
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r13 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] endData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r14 = staticinvoke <org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] clone(java.lang.Number[][])>($r13)
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : $r14 = staticinvoke <org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] clone(java.lang.Number[][])>($r13) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] endData> = $r14
org.jfree.data.category.DefaultIntervalCategoryDataset.clone : r1.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] endData> = $r14 >>>>>>>> org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getFirstMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $b1) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i2) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getFirstMillisecond : return $l3
org.jfree.data.time.Week.getFirstMillisecond : return $l3 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3
org.jfree.data.time.Week.getLastMillisecond : r2 = (java.util.Calendar) $r3 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, $s0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1
org.jfree.data.time.Week.getLastMillisecond : $i2 = $b1 + 1 >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(3, $i2) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(7, $i3) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L
org.jfree.data.time.Week.getLastMillisecond : $l5 = $l4 - 1L >>>>>>>> org.jfree.data.time.Week.getLastMillisecond : return $l5
org.jfree.data.time.Week.getLastMillisecond : return $l5 >>>>>>>> org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1
org.jfree.data.time.Week.peg : r0.<org.jfree.data.time.Week: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.remove : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.remove : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.time.TimeTableXYDataset.remove : virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: void removeValue(java.lang.Comparable,java.lang.Comparable)>(r1, r2)
org.jfree.data.time.TimeTableXYDataset.remove : virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues2D: void removeValue(java.lang.Comparable,java.lang.Comparable)>(r1, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(null, r1, r2)
org.jfree.data.DefaultKeyedValues2D.removeValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(null, r1, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $i2 = neg i0
org.jfree.data.DefaultKeyedValues2D.setValue : $i2 = neg i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i3 = $i2 - 1
org.jfree.data.DefaultKeyedValues2D.setValue : i3 = $i2 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(i3, r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(i3, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(i3, r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(i3, r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : goto [?= virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)]
org.jfree.data.DefaultKeyedValues2D.setValue : goto [?= virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)] >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : z0 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : z0 = 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues2D.removeValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.time.Week.compareTo : $z0 = r1 instanceof org.jfree.data.time.Week
org.jfree.data.time.Week.compareTo : $z0 = r1 instanceof org.jfree.data.time.Week >>>>>>>> org.jfree.data.time.Week.compareTo : if $z0 == 0
org.jfree.data.time.Week.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.time.Week.compareTo : r2 = (org.jfree.data.time.Week) r1
org.jfree.data.time.Week.compareTo : r2 = (org.jfree.data.time.Week) r1 >>>>>>>> org.jfree.data.time.Week.compareTo : $s1 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.compareTo : $s1 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.compareTo : $r3 = virtualinvoke r2.<org.jfree.data.time.Week: org.jfree.data.time.Year getYear()>()
org.jfree.data.time.Week.compareTo : $r3 = virtualinvoke r2.<org.jfree.data.time.Week: org.jfree.data.time.Year getYear()>() >>>>>>>> org.jfree.data.time.Week.getYear : $r1 = new org.jfree.data.time.Year
org.jfree.data.time.Week.getYear : $r1 = new org.jfree.data.time.Year >>>>>>>> org.jfree.data.time.Week.getYear : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getYear : $s0 = r0.<org.jfree.data.time.Week: short year> >>>>>>>> org.jfree.data.time.Week.getYear : specialinvoke $r1.<org.jfree.data.time.Year: void <init>(int)>($s0)
org.jfree.data.time.Week.getYear : specialinvoke $r1.<org.jfree.data.time.Year: void <init>(int)>($s0) >>>>>>>> org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : return $l1
org.jfree.data.time.Year.getFirstMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : return $l1
org.jfree.data.time.Year.getLastMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Week.getYear : return $r1
org.jfree.data.time.Week.getYear : return $r1 >>>>>>>> org.jfree.data.time.Week.compareTo : $i2 = virtualinvoke $r3.<org.jfree.data.time.Year: int getYear()>()
org.jfree.data.time.Week.compareTo : $i2 = virtualinvoke $r3.<org.jfree.data.time.Year: int getYear()>() >>>>>>>> org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getYear : return $s0
org.jfree.data.time.Year.getYear : return $s0 >>>>>>>> org.jfree.data.time.Week.compareTo : i0 = $s1 - $i2
org.jfree.data.time.Week.compareTo : i0 = $s1 - $i2 >>>>>>>> org.jfree.data.time.Week.compareTo : if i0 != 0
org.jfree.data.time.Week.compareTo : if i0 != 0 >>>>>>>> org.jfree.data.time.Week.compareTo : $b3 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.compareTo : $b3 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.compareTo : $i4 = virtualinvoke r2.<org.jfree.data.time.Week: int getWeek()>()
org.jfree.data.time.Week.compareTo : $i4 = virtualinvoke r2.<org.jfree.data.time.Week: int getWeek()>() >>>>>>>> org.jfree.data.time.Week.getWeek : $b0 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getWeek : $b0 = r0.<org.jfree.data.time.Week: byte week> >>>>>>>> org.jfree.data.time.Week.getWeek : return $b0
org.jfree.data.time.Week.getWeek : return $b0 >>>>>>>> org.jfree.data.time.Week.compareTo : i0 = $b3 - $i4
org.jfree.data.time.Week.compareTo : i0 = $b3 - $i4 >>>>>>>> org.jfree.data.time.Week.compareTo : goto [?= return i0]
org.jfree.data.time.Week.compareTo : goto [?= return i0] >>>>>>>> org.jfree.data.time.Week.compareTo : return i0
org.jfree.data.time.Week.compareTo : return i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.removeValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : r3 = (org.jfree.data.DefaultKeyedValues) $r5
org.jfree.data.DefaultKeyedValues2D.removeValue : r3 = (org.jfree.data.DefaultKeyedValues) $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i2 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: int getItemCount()>()
org.jfree.data.DefaultKeyedValues2D.removeValue : i2 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: int getItemCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>()
org.jfree.data.DefaultKeyedValues.getItemCount : $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getItemCount : return $i0
org.jfree.data.DefaultKeyedValues.getItemCount : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if i1 >= i2
org.jfree.data.DefaultKeyedValues2D.removeValue : if i1 >= i2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r6 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.removeValue : $r6 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if $r6 == null
org.jfree.data.DefaultKeyedValues2D.removeValue : if $r6 == null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = i1 + 1
org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = i1 + 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : goto [?= (branch)]
org.jfree.data.DefaultKeyedValues2D.removeValue : goto [?= (branch)] >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if z0 == 0
org.jfree.data.DefaultKeyedValues2D.removeValue : if z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : z1 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : z1 = 1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i4 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : i4 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i5 = interfaceinvoke $r11.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.removeValue : i5 = interfaceinvoke $r11.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if i4 >= i5
org.jfree.data.DefaultKeyedValues2D.removeValue : if i4 >= i5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if z1 == 0
org.jfree.data.DefaultKeyedValues2D.removeValue : if z1 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i6 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : i6 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r16 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r16 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : i7 = interfaceinvoke $r16.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.removeValue : i7 = interfaceinvoke $r16.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : if i6 >= i7
org.jfree.data.DefaultKeyedValues2D.removeValue : if i6 >= i7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : $r20 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r20 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r20.<java.util.List: boolean remove(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.removeValue : interfaceinvoke $r20.<java.util.List: boolean remove(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.time.TimeTableXYDataset.remove : if z0 == 0
org.jfree.data.time.TimeTableXYDataset.remove : if z0 == 0 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : d0 = #NaN
org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : d0 = #NaN >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : r1 = virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>(z0)
org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : r1 = virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>(z0) >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainBounds : $r4 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.getDomainBounds : $r4 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainBounds : r1 = virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: java.util.List getRowKeys()>()
org.jfree.data.time.TimeTableXYDataset.getDomainBounds : r1 = virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: java.util.List getRowKeys()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKeys : return $r2
org.jfree.data.DefaultKeyedValues2D.getRowKeys : return $r2 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainBounds : $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.jfree.data.time.TimeTableXYDataset.getDomainBounds : $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainBounds : if $z1 == 0
org.jfree.data.time.TimeTableXYDataset.getDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainBounds : return null
org.jfree.data.time.TimeTableXYDataset.getDomainBounds : return null >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : if r1 == null
org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : if r1 == null >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : return d0
org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : return d0 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.time.TimeTableXYDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.getItemCount : return $i0
org.jfree.data.time.TimeTableXYDataset.getItemCount : return $i0 >>>>>>>> org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getFirstMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i2 = $i1 - 1
org.jfree.data.time.Month.getFirstMillisecond : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i0, $i2, 1, 0, 0, 0)
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i0, $i2, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : return $l3
org.jfree.data.time.Month.getFirstMillisecond : return $l3 >>>>>>>> org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long firstMillisecond> = $l0
org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i2 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getLastMillisecond : $i2 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : i0 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>($i1, $i2)
org.jfree.data.time.Month.getLastMillisecond : i0 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>($i1, $i2) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i4 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i4 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i5 = $i4 - 1
org.jfree.data.time.Month.getLastMillisecond : $i5 = $i4 - 1 >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i3, $i5, i0, 23, 59, 59)
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i3, $i5, i0, 23, 59, 59) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : return $l6
org.jfree.data.time.Month.getLastMillisecond : return $l6 >>>>>>>> org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long lastMillisecond> = $l1
org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : $r3 = new java.lang.Double
org.jfree.data.time.TimeTableXYDataset.add : $r3 = new java.lang.Double >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.time.TimeTableXYDataset.add : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: void add(org.jfree.data.time.TimePeriod,java.lang.Number,java.lang.Comparable,boolean)>(r1, $r3, r2, 1)
org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: void add(org.jfree.data.time.TimePeriod,java.lang.Number,java.lang.Comparable,boolean)>(r1, $r3, r2, 1) >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : $z1 = r1 instanceof org.jfree.data.time.RegularTimePeriod
org.jfree.data.time.TimeTableXYDataset.add : $z1 = r1 instanceof org.jfree.data.time.RegularTimePeriod >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : if $z1 == 0
org.jfree.data.time.TimeTableXYDataset.add : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : r4 = (org.jfree.data.time.RegularTimePeriod) r1
org.jfree.data.time.TimeTableXYDataset.add : r4 = (org.jfree.data.time.RegularTimePeriod) r1 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : $r5 = r0.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>
org.jfree.data.time.TimeTableXYDataset.add : $r5 = r0.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke r4.<org.jfree.data.time.RegularTimePeriod: void peg(java.util.Calendar)>($r5)
org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke r4.<org.jfree.data.time.RegularTimePeriod: void peg(java.util.Calendar)>($r5) >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : $r6 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.add : $r6 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke $r6.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r2, r1, r3)
org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke $r6.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r2, r1, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : if z0 == 0
org.jfree.data.time.TimeTableXYDataset.add : if z0 == 0 >>>>>>>> org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: void fireDatasetChanged()>()
org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowIndex : $i0 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: int getSeriesIndex(java.lang.Comparable)>(r1)
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowIndex : $i0 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: int getSeriesIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : i0 = -1
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : i0 = -1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : i1 = 0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : i1 = 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : $i2 = lengthof $r2
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : $i2 = lengthof $r2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : if i1 >= $i2
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : if i1 >= $i2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : return i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex : return i0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowIndex : return $i0
