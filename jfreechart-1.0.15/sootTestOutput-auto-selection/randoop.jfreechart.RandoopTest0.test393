org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.xy.XYSeries.add : specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d1)
org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($r1, $r2, z0)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($r1, $r2, z0) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2)
org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.xy.XYSeries.add : r4 = $r3
org.jfree.data.xy.XYSeries.add : r4 = $r3 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0) >>>>>>>> org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>()
org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = null
org.jfree.data.xy.XYDataItem.clone : r1 = null >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : goto [?= return r1]
org.jfree.data.xy.XYDataItem.clone : goto [?= return r1] >>>>>>>> org.jfree.data.xy.XYDataItem.clone : return r1
org.jfree.data.xy.XYDataItem.clone : return r1 >>>>>>>> org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $z1 == 0
org.jfree.data.xy.XYSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3)
org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= 0
org.jfree.data.xy.XYSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $i2 = neg i0
org.jfree.data.xy.XYSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1
org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)]
org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)] >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)
org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : return $d0
org.jfree.data.xy.XYDataItem.getXValue : return $d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getY : return $r1
org.jfree.data.xy.XYDataItem.getY : return $r1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN
org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : if $r1 == null
org.jfree.data.xy.XYDataItem.getYValue : if $r1 == null >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getYValue : d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : return d0
org.jfree.data.xy.XYDataItem.getYValue : return d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d7 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d6, d1)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d7 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d6, d1) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minY> = $d7
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minY> = $d7 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d9 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d8, d1)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d9 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d8, d1) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxY> = $d9
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxY> = $d9 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : return $i0
org.jfree.data.xy.XYSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount>
org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $i7 <= $i8
org.jfree.data.xy.XYSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.xy.XYSeries.add : if z0 == 0
org.jfree.data.xy.XYSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.toArray : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeries.toArray : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeries.toArray : r1 = newmultiarray (double)[2][i0]
org.jfree.data.xy.XYSeries.toArray : r1 = newmultiarray (double)[2][i0] >>>>>>>> org.jfree.data.xy.XYSeries.toArray : i1 = 0
org.jfree.data.xy.XYSeries.toArray : i1 = 0 >>>>>>>> org.jfree.data.xy.XYSeries.toArray : if i1 >= i0
org.jfree.data.xy.XYSeries.toArray : if i1 >= i0 >>>>>>>> org.jfree.data.xy.XYSeries.toArray : $r3 = r1[0]
org.jfree.data.xy.XYSeries.toArray : $r3 = r1[0] >>>>>>>> org.jfree.data.xy.XYSeries.toArray : $r4 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1)
org.jfree.data.xy.XYSeries.toArray : $r4 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.getRawDataItem : $r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : return $r3
org.jfree.data.xy.XYSeries.getRawDataItem : return $r3 >>>>>>>> org.jfree.data.xy.XYSeries.getX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYSeries.getX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getX : return $r1
org.jfree.data.xy.XYDataItem.getX : return $r1 >>>>>>>> org.jfree.data.xy.XYSeries.getX : return $r2
org.jfree.data.xy.XYSeries.getX : return $r2 >>>>>>>> org.jfree.data.xy.XYSeries.toArray : $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYSeries.toArray : $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYSeries.toArray : $r3[i1] = $d0
org.jfree.data.xy.XYSeries.toArray : $r3[i1] = $d0 >>>>>>>> org.jfree.data.xy.XYSeries.toArray : r2 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: java.lang.Number getY(int)>(i1)
org.jfree.data.xy.XYSeries.toArray : r2 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: java.lang.Number getY(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeries.getY : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.data.xy.XYSeries.getY : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getY : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.getY : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>() >>>>>>>> org.jfree.data.xy.XYSeries.getY : return $r2
org.jfree.data.xy.XYSeries.getY : return $r2 >>>>>>>> org.jfree.data.xy.XYSeries.toArray : if r2 == null
org.jfree.data.xy.XYSeries.toArray : if r2 == null >>>>>>>> org.jfree.data.xy.XYSeries.toArray : $r5 = r1[1]
org.jfree.data.xy.XYSeries.toArray : $r5 = r1[1] >>>>>>>> org.jfree.data.xy.XYSeries.toArray : $d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYSeries.toArray : $d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYSeries.toArray : $r5[i1] = $d1
org.jfree.data.xy.XYSeries.toArray : $r5[i1] = $d1 >>>>>>>> org.jfree.data.xy.XYSeries.toArray : goto [?= i1 = i1 + 1]
org.jfree.data.xy.XYSeries.toArray : goto [?= i1 = i1 + 1] >>>>>>>> org.jfree.data.xy.XYSeries.toArray : i1 = i1 + 1
org.jfree.data.xy.XYSeries.toArray : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.XYSeries.toArray : goto [?= (branch)]
org.jfree.data.xy.XYSeries.toArray : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.toArray : return r1
org.jfree.data.xy.XYSeries.toArray : return r1 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "data")
org.jfree.data.DataUtilities.createNumberArray2D : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "data") >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i0 = lengthof r0
org.jfree.data.DataUtilities.createNumberArray2D : i0 = lengthof r0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : r1 = newarray (java.lang.Number[])[i0]
org.jfree.data.DataUtilities.createNumberArray2D : r1 = newarray (java.lang.Number[])[i0] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i1 = 0
org.jfree.data.DataUtilities.createNumberArray2D : i1 = 0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : if i1 >= i0
org.jfree.data.DataUtilities.createNumberArray2D : if i1 >= i0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : $r2 = r0[i1]
org.jfree.data.DataUtilities.createNumberArray2D : $r2 = r0[i1] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : $r3 = staticinvoke <org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>($r2)
org.jfree.data.DataUtilities.createNumberArray2D : $r3 = staticinvoke <org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>($r2) >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "data")
org.jfree.data.DataUtilities.createNumberArray : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "data") >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : $i1 = lengthof r0
org.jfree.data.DataUtilities.createNumberArray : $i1 = lengthof r0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : r1 = newarray (java.lang.Number)[$i1]
org.jfree.data.DataUtilities.createNumberArray : r1 = newarray (java.lang.Number)[$i1] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : i0 = 0
org.jfree.data.DataUtilities.createNumberArray : i0 = 0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : $i2 = lengthof r0
org.jfree.data.DataUtilities.createNumberArray : $i2 = lengthof r0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : if i0 >= $i2
org.jfree.data.DataUtilities.createNumberArray : if i0 >= $i2 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : $r2 = new java.lang.Double
org.jfree.data.DataUtilities.createNumberArray : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : $d0 = r0[i0]
org.jfree.data.DataUtilities.createNumberArray : $d0 = r0[i0] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0)
org.jfree.data.DataUtilities.createNumberArray : specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0) >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : r1[i0] = $r2
org.jfree.data.DataUtilities.createNumberArray : r1[i0] = $r2 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : i0 = i0 + 1
org.jfree.data.DataUtilities.createNumberArray : i0 = i0 + 1 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : goto [?= $i2 = lengthof r0]
org.jfree.data.DataUtilities.createNumberArray : goto [?= $i2 = lengthof r0] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray : return r1
org.jfree.data.DataUtilities.createNumberArray : return r1 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : r1[i1] = $r3
org.jfree.data.DataUtilities.createNumberArray2D : r1[i1] = $r3 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i1 = i1 + 1
org.jfree.data.DataUtilities.createNumberArray2D : i1 = i1 + 1 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : goto [?= (branch)]
org.jfree.data.DataUtilities.createNumberArray2D : goto [?= (branch)] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : return r1
org.jfree.data.DataUtilities.createNumberArray2D : return r1 >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader>
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader> >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null
org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0)
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0) >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5
