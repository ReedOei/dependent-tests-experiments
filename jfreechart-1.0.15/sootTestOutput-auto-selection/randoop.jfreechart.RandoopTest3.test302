org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.CategoryPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = (org.jfree.data.category.CategoryDataset) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getDataset : return r1
org.jfree.chart.plot.CategoryPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : i0 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0
org.jfree.chart.plot.CategoryPlot.datasetChanged : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if $r4 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CategoryPlot.datasetChanged : specialinvoke $r6.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6
org.jfree.chart.plot.CategoryPlot.datasetChanged : r7 = $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r7.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r8) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1
org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1 >>>>>>>> org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>()
org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>() >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1)
org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.CategoryPlot
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.CategoryPlot >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null
org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.datasetChanged : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.CategoryAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void configure()>()
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void configure()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r4 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>()
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r4 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r6 = specialinvoke r0.<org.jfree.chart.plot.Plot: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r6 = specialinvoke r0.<org.jfree.chart.plot.Plot: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.Plot.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : r1 = (org.jfree.chart.plot.Plot) $r2
org.jfree.chart.plot.Plot.clone : r1 = (org.jfree.chart.plot.Plot) $r2 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r3 = r0.<org.jfree.chart.plot.Plot: org.jfree.data.general.DatasetGroup datasetGroup>
org.jfree.chart.plot.Plot.clone : $r3 = r0.<org.jfree.chart.plot.Plot: org.jfree.data.general.DatasetGroup datasetGroup> >>>>>>>> org.jfree.chart.plot.Plot.clone : if $r3 == null
org.jfree.chart.plot.Plot.clone : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.clone : $r7 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.clone : $r7 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.clone : $r8 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r7)
org.jfree.chart.plot.Plot.clone : $r8 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2
org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r9 = (org.jfree.chart.plot.DrawingSupplier) $r8
org.jfree.chart.plot.Plot.clone : $r9 = (org.jfree.chart.plot.DrawingSupplier) $r8 >>>>>>>> org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = $r9
org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = $r9 >>>>>>>> org.jfree.chart.plot.Plot.clone : $r10 = new javax.swing.event.EventListenerList
org.jfree.chart.plot.Plot.clone : $r10 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.plot.Plot.clone : specialinvoke $r10.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.plot.Plot.clone : specialinvoke $r10.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r10
org.jfree.chart.plot.Plot.clone : r1.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> = $r10 >>>>>>>> org.jfree.chart.plot.Plot.clone : return r1
org.jfree.chart.plot.Plot.clone : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1 = (org.jfree.chart.plot.CategoryPlot) $r6
org.jfree.chart.plot.CategoryPlot.clone : r1 = (org.jfree.chart.plot.CategoryPlot) $r6 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r2 = new org.jfree.util.ObjectList
org.jfree.chart.plot.CategoryPlot.clone : $r2 = new org.jfree.util.ObjectList >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r2.<org.jfree.util.ObjectList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r2.<org.jfree.util.ObjectList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> = $r2
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> = $r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i0 = 0
org.jfree.chart.plot.CategoryPlot.clone : i0 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.clone : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $i1 = virtualinvoke $r7.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.clone : $i1 = virtualinvoke $r7.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if i0 >= $i1
org.jfree.chart.plot.CategoryPlot.clone : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.clone : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r9 = virtualinvoke $r8.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.clone : $r9 = virtualinvoke $r8.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r3 = (org.jfree.chart.axis.CategoryAxis) $r9
org.jfree.chart.plot.CategoryPlot.clone : r3 = (org.jfree.chart.axis.CategoryAxis) $r9 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if r3 == null
org.jfree.chart.plot.CategoryPlot.clone : if r3 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r10 = virtualinvoke r3.<org.jfree.chart.axis.CategoryAxis: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r10 = virtualinvoke r3.<org.jfree.chart.axis.CategoryAxis: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : $r3 = specialinvoke r0.<org.jfree.chart.axis.Axis: java.lang.Object clone()>()
org.jfree.chart.axis.CategoryAxis.clone : $r3 = specialinvoke r0.<org.jfree.chart.axis.Axis: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.axis.Axis.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.axis.Axis.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.axis.Axis.clone : r1 = (org.jfree.chart.axis.Axis) $r2
org.jfree.chart.axis.Axis.clone : r1 = (org.jfree.chart.axis.Axis) $r2 >>>>>>>> org.jfree.chart.axis.Axis.clone : r1.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = null
org.jfree.chart.axis.Axis.clone : r1.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = null >>>>>>>> org.jfree.chart.axis.Axis.clone : $r3 = new javax.swing.event.EventListenerList
org.jfree.chart.axis.Axis.clone : $r3 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.axis.Axis.clone : specialinvoke $r3.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.axis.Axis.clone : specialinvoke $r3.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.axis.Axis.clone : r1.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> = $r3
org.jfree.chart.axis.Axis.clone : r1.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> = $r3 >>>>>>>> org.jfree.chart.axis.Axis.clone : return r1
org.jfree.chart.axis.Axis.clone : return r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : r1 = (org.jfree.chart.axis.CategoryAxis) $r3
org.jfree.chart.axis.CategoryAxis.clone : r1 = (org.jfree.chart.axis.CategoryAxis) $r3 >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : $r2 = new java.util.HashMap
org.jfree.chart.axis.CategoryAxis.clone : $r2 = new java.util.HashMap >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : $r4 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelFontMap>
org.jfree.chart.axis.CategoryAxis.clone : $r4 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelFontMap> >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r4)
org.jfree.chart.axis.CategoryAxis.clone : specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r4) >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : r1.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelFontMap> = $r2
org.jfree.chart.axis.CategoryAxis.clone : r1.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelFontMap> = $r2 >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : $r5 = new java.util.HashMap
org.jfree.chart.axis.CategoryAxis.clone : $r5 = new java.util.HashMap >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : $r6 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelPaintMap>
org.jfree.chart.axis.CategoryAxis.clone : $r6 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelPaintMap> >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>($r6)
org.jfree.chart.axis.CategoryAxis.clone : specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>($r6) >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : r1.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelPaintMap> = $r5
org.jfree.chart.axis.CategoryAxis.clone : r1.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelPaintMap> = $r5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : $r7 = new java.util.HashMap
org.jfree.chart.axis.CategoryAxis.clone : $r7 = new java.util.HashMap >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : $r8 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map categoryLabelToolTips>
org.jfree.chart.axis.CategoryAxis.clone : $r8 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map categoryLabelToolTips> >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>($r8)
org.jfree.chart.axis.CategoryAxis.clone : specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>($r8) >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : r1.<org.jfree.chart.axis.CategoryAxis: java.util.Map categoryLabelToolTips> = $r7
org.jfree.chart.axis.CategoryAxis.clone : r1.<org.jfree.chart.axis.CategoryAxis: java.util.Map categoryLabelToolTips> = $r7 >>>>>>>> org.jfree.chart.axis.CategoryAxis.clone : return r1
org.jfree.chart.axis.CategoryAxis.clone : return r1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r4 = (org.jfree.chart.axis.CategoryAxis) $r10
org.jfree.chart.plot.CategoryPlot.clone : r4 = (org.jfree.chart.axis.CategoryAxis) $r10 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: void setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)>(i0, r4)
org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: void setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)>(i0, r4) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)>(i0, r1, 1)
org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.setDomainAxis : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CategoryPlot.setDomainAxis : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : r2 = (org.jfree.chart.axis.CategoryAxis) $r4
org.jfree.chart.plot.CategoryPlot.setDomainAxis : r2 = (org.jfree.chart.axis.CategoryAxis) $r4 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : if r2 == null
org.jfree.chart.plot.CategoryPlot.setDomainAxis : if r2 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : if r1 == null
org.jfree.chart.plot.CategoryPlot.setDomainAxis : if r1 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void setPlot(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void setPlot(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.setDomainAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke $r5.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke $r5.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void configure()>()
org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void configure()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void addChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0)
org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void addChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : if z0 == 0
org.jfree.chart.plot.CategoryPlot.setDomainAxis : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.clone : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.clone : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r12 = virtualinvoke $r11.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r12 = virtualinvoke $r11.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r13 = (org.jfree.util.ObjectList) $r12
org.jfree.chart.plot.CategoryPlot.clone : $r13 = (org.jfree.util.ObjectList) $r12 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> = $r13
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations> = $r13 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r14 = new org.jfree.util.ObjectList
org.jfree.chart.plot.CategoryPlot.clone : $r14 = new org.jfree.util.ObjectList >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r14.<org.jfree.util.ObjectList: void <init>()>()
org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r14.<org.jfree.util.ObjectList: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> = $r14
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> = $r14 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i2 = 0
org.jfree.chart.plot.CategoryPlot.clone : i2 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r15 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.clone : $r15 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $i3 = virtualinvoke $r15.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.clone : $i3 = virtualinvoke $r15.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if i2 >= $i3
org.jfree.chart.plot.CategoryPlot.clone : if i2 >= $i3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r16 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.clone : $r16 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r17 = virtualinvoke $r16.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i2)
org.jfree.chart.plot.CategoryPlot.clone : $r17 = virtualinvoke $r16.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r18 = (org.jfree.chart.axis.ValueAxis) $r17
org.jfree.chart.plot.CategoryPlot.clone : r18 = (org.jfree.chart.axis.ValueAxis) $r17 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if r18 == null
org.jfree.chart.plot.CategoryPlot.clone : if r18 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i2 = i2 + 1
org.jfree.chart.plot.CategoryPlot.clone : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r15 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r15 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.clone : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r23 = (org.jfree.util.ObjectList) $r22
org.jfree.chart.plot.CategoryPlot.clone : $r23 = (org.jfree.util.ObjectList) $r22 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> = $r23
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations> = $r23 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r24 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.clone : $r24 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r25 = virtualinvoke $r24.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r25 = virtualinvoke $r24.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r26 = (org.jfree.util.ObjectList) $r25
org.jfree.chart.plot.CategoryPlot.clone : $r26 = (org.jfree.util.ObjectList) $r25 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> = $r26
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> = $r26 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i4 = 0
org.jfree.chart.plot.CategoryPlot.clone : i4 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r27 = r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.clone : $r27 = r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $i5 = virtualinvoke $r27.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.clone : $i5 = virtualinvoke $r27.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if i4 >= $i5
org.jfree.chart.plot.CategoryPlot.clone : if i4 >= $i5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r28 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i4)
org.jfree.chart.plot.CategoryPlot.clone : r28 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i4) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if r28 == null
org.jfree.chart.plot.CategoryPlot.clone : if r28 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i4 = i4 + 1
org.jfree.chart.plot.CategoryPlot.clone : i4 = i4 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r27 = r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r27 = r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r29 = new java.util.TreeMap
org.jfree.chart.plot.CategoryPlot.clone : $r29 = new java.util.TreeMap >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r29.<java.util.TreeMap: void <init>()>()
org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r29.<java.util.TreeMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> = $r29
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> = $r29 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r30 = r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.clone : $r30 = r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r31 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.clone : $r31 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke $r30.<java.util.TreeMap: void putAll(java.util.Map)>($r31)
org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke $r30.<java.util.TreeMap: void putAll(java.util.Map)>($r31) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r32 = new java.util.TreeMap
org.jfree.chart.plot.CategoryPlot.clone : $r32 = new java.util.TreeMap >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r32.<java.util.TreeMap: void <init>()>()
org.jfree.chart.plot.CategoryPlot.clone : specialinvoke $r32.<java.util.TreeMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> = $r32
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> = $r32 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r33 = r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.clone : $r33 = r1.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r34 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.clone : $r34 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke $r33.<java.util.TreeMap: void putAll(java.util.Map)>($r34)
org.jfree.chart.plot.CategoryPlot.clone : virtualinvoke $r33.<java.util.TreeMap: void putAll(java.util.Map)>($r34) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r35 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.clone : $r35 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r36 = virtualinvoke $r35.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.clone : $r36 = virtualinvoke $r35.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r37 = (org.jfree.util.ObjectList) $r36
org.jfree.chart.plot.CategoryPlot.clone : $r37 = (org.jfree.util.ObjectList) $r36 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> = $r37
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> = $r37 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i6 = 0
org.jfree.chart.plot.CategoryPlot.clone : i6 = 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r38 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.clone : $r38 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $i7 = virtualinvoke $r38.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.CategoryPlot.clone : $i7 = virtualinvoke $r38.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if i6 >= $i7
org.jfree.chart.plot.CategoryPlot.clone : if i6 >= $i7 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r39 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.clone : $r39 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r40 = virtualinvoke $r39.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6)
org.jfree.chart.plot.CategoryPlot.clone : $r40 = virtualinvoke $r39.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i6) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r41 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r40
org.jfree.chart.plot.CategoryPlot.clone : r41 = (org.jfree.chart.renderer.category.CategoryItemRenderer) $r40 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $z0 = r41 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.plot.CategoryPlot.clone : $z0 = r41 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.clone : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : i6 = i6 + 1
org.jfree.chart.plot.CategoryPlot.clone : i6 = i6 + 1 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r38 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>]
org.jfree.chart.plot.CategoryPlot.clone : goto [?= $r38 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>] >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r45 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.CategoryPlot.clone : $r45 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if $r45 == null
org.jfree.chart.plot.CategoryPlot.clone : if $r45 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r49 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.CategoryPlot.clone : $r49 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if $r49 == null
org.jfree.chart.plot.CategoryPlot.clone : if $r49 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r53 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations>
org.jfree.chart.plot.CategoryPlot.clone : $r53 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r54 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r53)
org.jfree.chart.plot.CategoryPlot.clone : $r54 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r53) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r55 = (java.util.List) $r54
org.jfree.chart.plot.CategoryPlot.clone : $r55 = (java.util.List) $r54 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> = $r55
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations> = $r55 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r56 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.clone : $r56 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r57 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r56)
org.jfree.chart.plot.CategoryPlot.clone : $r57 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r56) >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : $r2 = new java.util.HashMap
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : $r2 = new java.util.HashMap >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r3 = $r2
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r3 = $r2 >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : if $z0 == 0
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : return r3
org.jfree.chart.plot.CategoryPlot.cloneMarkerMap : return r3 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> = $r57
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers> = $r57 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r58 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.clone : $r58 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r59 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r58)
org.jfree.chart.plot.CategoryPlot.clone : $r59 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r58) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> = $r59
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers> = $r59 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r60 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.clone : $r60 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r61 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r60)
org.jfree.chart.plot.CategoryPlot.clone : $r61 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r60) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> = $r61
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> = $r61 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r62 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.clone : $r62 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r63 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r62)
org.jfree.chart.plot.CategoryPlot.clone : $r63 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map cloneMarkerMap(java.util.Map)>($r62) >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> = $r63
org.jfree.chart.plot.CategoryPlot.clone : r1.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> = $r63 >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : $r64 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.CategoryPlot.clone : $r64 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : if $r64 == null
org.jfree.chart.plot.CategoryPlot.clone : if $r64 == null >>>>>>>> org.jfree.chart.plot.CategoryPlot.clone : return r1
org.jfree.chart.plot.CategoryPlot.clone : return r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : r1 = (org.jfree.chart.plot.CombinedDomainCategoryPlot) $r4
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : r1 = (org.jfree.chart.plot.CombinedDomainCategoryPlot) $r4 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r5 = r0.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r5 = r0.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r6 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r5)
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r6 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r5) >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r7 = (java.util.List) $r6
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r7 = (java.util.List) $r6 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : r1.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots> = $r7
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : r1.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots> = $r7 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r8 = r1.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $r8 = r1.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : if $z0 == 0
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : return r1
org.jfree.chart.plot.CombinedDomainCategoryPlot.clone : return r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainCategoryPlot: org.jfree.chart.LegendItemCollection getFixedLegendItems()>()
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainCategoryPlot: org.jfree.chart.LegendItemCollection getFixedLegendItems()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.getFixedLegendItems : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.CategoryPlot.getFixedLegendItems : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.CategoryPlot.getFixedLegendItems : return $r1
org.jfree.chart.plot.CategoryPlot.getFixedLegendItems : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : if r1 != null
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : if r1 != null >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : $r5 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : $r5 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : specialinvoke $r5.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : specialinvoke $r5.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : r1 = $r5
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : r1 = $r5 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : $r6 = r0.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : $r6 = r0.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : if $r6 == null
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : if $r6 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : $r7 = r0.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : $r7 = r0.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : if $z0 == 0
org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems : return r1
