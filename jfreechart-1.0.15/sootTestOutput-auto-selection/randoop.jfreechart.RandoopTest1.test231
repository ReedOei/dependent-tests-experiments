org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r2 = virtualinvoke $r1.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r2 = virtualinvoke $r1.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : return $r2
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : return $r2 >>>>>>>> org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.getErrorIndicatorStroke : $r1 = r0.<org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer: java.awt.Stroke errorIndicatorStroke>
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.getErrorIndicatorStroke : $r1 = r0.<org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer: java.awt.Stroke errorIndicatorStroke> >>>>>>>> org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.getErrorIndicatorStroke : return $r1
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.getErrorIndicatorStroke : return $r1 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.setValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.setValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.setValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.setValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.setValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.setValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r1, 1)
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if r1 != null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if $z1 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r3 = new java.util.ArrayList
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r3 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : r2 = $r3
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : r2 = $r3 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i1 = 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if i1 >= i0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if $z2 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r4 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i1)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r4 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(i1) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i0)
org.jfree.data.category.DefaultCategoryDataset.getRowKey : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r3 = (java.lang.Comparable) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3
org.jfree.data.DefaultKeyedValues2D.getRowKey : return $r3 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowKey : return $r2
org.jfree.data.category.DefaultCategoryDataset.getRowKey : return $r2 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i1 = i1 + 1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : goto [?= (branch)]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>(r1, r2, z0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>(r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : n0 = null
org.jfree.data.general.DatasetUtilities.findRangeBounds : n0 = null >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.category.CategoryRangeInfo
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.category.CategoryRangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>(r0, r1, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z1 = r0 instanceof org.jfree.data.statistics.BoxAndWhiskerCategoryDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z1 = r0 instanceof org.jfree.data.statistics.BoxAndWhiskerCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z3 = r0 instanceof org.jfree.data.category.IntervalCategoryDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z3 = r0 instanceof org.jfree.data.category.IntervalCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z3 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z3 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z7 = r0 instanceof org.jfree.data.statistics.MultiValueCategoryDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z7 = r0 instanceof org.jfree.data.statistics.MultiValueCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z7 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z7 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z12 = r0 instanceof org.jfree.data.statistics.StatisticalCategoryDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z12 = r0 instanceof org.jfree.data.statistics.StatisticalCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z12 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z12 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r28 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r28 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r30 = (java.lang.Comparable) $r29
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r30 = (java.lang.Comparable) $r29 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowIndex(java.lang.Comparable)>(r30)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowIndex(java.lang.Comparable)>(r30) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $r2 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $r2 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $i0 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : $i0 = virtualinvoke $r2.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowIndex : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowIndex : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r31 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i10, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r31 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i10, i11) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1)
org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5
org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null
org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7
org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0
org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2)
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : return r1
org.jfree.data.DefaultKeyedValues2D.getValue : return r1 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2
org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r31 == null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r31 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d13 = virtualinvoke r31.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d13 = virtualinvoke r31.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z17 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d13)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z17 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d13) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z17 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z17 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d13)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d13) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d13)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d13) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z16 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z16 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r32 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r32 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r32.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r32.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r32
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r32 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : return r3
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r3 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : return $r5
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds : return $r5 >>>>>>>> org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.findRangeBounds : return $r2
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.findRangeBounds : return $r2 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setShapesFilled : r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean shapesFilled> = r1
org.jfree.chart.renderer.category.LineAndShapeRenderer.setShapesFilled : r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean shapesFilled> = r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setShapesFilled : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.setShapesFilled : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : $r1 = staticinvoke <org.jfree.util.BooleanUtilities: java.lang.Boolean valueOf(boolean)>(z0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : $r1 = staticinvoke <org.jfree.util.BooleanUtilities: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void setSeriesShapesVisible(int,java.lang.Boolean)>(i0, $r1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void setSeriesShapesVisible(int,java.lang.Boolean)>(i0, $r1) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : $r2 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : $r2 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : virtualinvoke $r2.<org.jfree.util.BooleanList: void setBoolean(int,java.lang.Boolean)>(i0, r1)
org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : virtualinvoke $r2.<org.jfree.util.BooleanList: void setBoolean(int,java.lang.Boolean)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setLinesVisible : r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean linesVisible> = r1
org.jfree.chart.renderer.category.LineAndShapeRenderer.setLinesVisible : r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: java.lang.Boolean linesVisible> = r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setLinesVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.setLinesVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r2 = specialinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.lang.Object clone()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r2 = specialinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r3 = specialinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Object clone()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r3 = specialinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1 = (org.jfree.chart.renderer.AbstractRenderer) $r2
org.jfree.chart.renderer.AbstractRenderer.clone : r1 = (org.jfree.chart.renderer.AbstractRenderer) $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r5 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r5 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r6 = (org.jfree.util.BooleanList) $r5
org.jfree.chart.renderer.AbstractRenderer.clone : $r6 = (org.jfree.util.BooleanList) $r5 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> = $r6
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> = $r6 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r7 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r7 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r7 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r7 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r8 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r8 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r9 = virtualinvoke $r8.<org.jfree.util.BooleanList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r9 = virtualinvoke $r8.<org.jfree.util.BooleanList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r10 = (org.jfree.util.BooleanList) $r9
org.jfree.chart.renderer.AbstractRenderer.clone : $r10 = (org.jfree.util.BooleanList) $r9 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> = $r10
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> = $r10 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r11 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r11 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r11 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r11 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r12 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r12 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r13 = virtualinvoke $r12.<org.jfree.util.PaintList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r13 = virtualinvoke $r12.<org.jfree.util.PaintList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r14 = (org.jfree.util.PaintList) $r13
org.jfree.chart.renderer.AbstractRenderer.clone : $r14 = (org.jfree.util.PaintList) $r13 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> = $r14
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> = $r14 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r15 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r15 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r15 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r15 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r16 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r16 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r17 = virtualinvoke $r16.<org.jfree.util.PaintList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r17 = virtualinvoke $r16.<org.jfree.util.PaintList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r18 = (org.jfree.util.PaintList) $r17
org.jfree.chart.renderer.AbstractRenderer.clone : $r18 = (org.jfree.util.PaintList) $r17 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList> = $r18
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList fillPaintList> = $r18 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r19 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r19 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r19 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r19 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r20 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r20 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r21 = virtualinvoke $r20.<org.jfree.util.PaintList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r21 = virtualinvoke $r20.<org.jfree.util.PaintList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r22 = (org.jfree.util.PaintList) $r21
org.jfree.chart.renderer.AbstractRenderer.clone : $r22 = (org.jfree.util.PaintList) $r21 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> = $r22
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> = $r22 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r23 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r23 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r23 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r23 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r24 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r24 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r25 = virtualinvoke $r24.<org.jfree.util.StrokeList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r25 = virtualinvoke $r24.<org.jfree.util.StrokeList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r26 = (org.jfree.util.StrokeList) $r25
org.jfree.chart.renderer.AbstractRenderer.clone : $r26 = (org.jfree.util.StrokeList) $r25 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> = $r26
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> = $r26 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r27 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r27 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r27 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r27 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r28 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r28 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r29 = virtualinvoke $r28.<org.jfree.util.StrokeList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r29 = virtualinvoke $r28.<org.jfree.util.StrokeList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r30 = (org.jfree.util.StrokeList) $r29
org.jfree.chart.renderer.AbstractRenderer.clone : $r30 = (org.jfree.util.StrokeList) $r29 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> = $r30
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> = $r30 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r31 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape>
org.jfree.chart.renderer.AbstractRenderer.clone : $r31 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r31 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r31 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r34 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r34 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r34 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r34 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r35 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r35 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r36 = virtualinvoke $r35.<org.jfree.util.ShapeList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r36 = virtualinvoke $r35.<org.jfree.util.ShapeList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r37 = (org.jfree.util.ShapeList) $r36
org.jfree.chart.renderer.AbstractRenderer.clone : $r37 = (org.jfree.util.ShapeList) $r36 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> = $r37
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> = $r37 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r38 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape>
org.jfree.chart.renderer.AbstractRenderer.clone : $r38 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r38 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r38 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r39 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape>
org.jfree.chart.renderer.AbstractRenderer.clone : $r39 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r40 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape clone(java.awt.Shape)>($r39)
org.jfree.chart.renderer.AbstractRenderer.clone : $r40 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape clone(java.awt.Shape)>($r39) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = $r40
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = $r40 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r41 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r41 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r41 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r41 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r42 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r42 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r43 = virtualinvoke $r42.<org.jfree.util.BooleanList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r43 = virtualinvoke $r42.<org.jfree.util.BooleanList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r44 = (org.jfree.util.BooleanList) $r43
org.jfree.chart.renderer.AbstractRenderer.clone : $r44 = (org.jfree.util.BooleanList) $r43 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> = $r44
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> = $r44 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r45 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r45 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r45 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r45 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r46 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r46 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r47 = virtualinvoke $r46.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r47 = virtualinvoke $r46.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r48 = (org.jfree.util.ObjectList) $r47
org.jfree.chart.renderer.AbstractRenderer.clone : $r48 = (org.jfree.util.ObjectList) $r47 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList> = $r48
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList> = $r48 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r49 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r49 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r49 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r49 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r50 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r50 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r51 = virtualinvoke $r50.<org.jfree.util.PaintList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r51 = virtualinvoke $r50.<org.jfree.util.PaintList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r52 = (org.jfree.util.PaintList) $r51
org.jfree.chart.renderer.AbstractRenderer.clone : $r52 = (org.jfree.util.PaintList) $r51 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList> = $r52
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList> = $r52 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r53 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r53 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r53 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r53 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r54 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r54 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r55 = virtualinvoke $r54.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r55 = virtualinvoke $r54.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r56 = (org.jfree.util.ObjectList) $r55
org.jfree.chart.renderer.AbstractRenderer.clone : $r56 = (org.jfree.util.ObjectList) $r55 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList> = $r56
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList> = $r56 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r57 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r57 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r57 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r57 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r58 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r58 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r59 = virtualinvoke $r58.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r59 = virtualinvoke $r58.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r60 = (org.jfree.util.ObjectList) $r59
org.jfree.chart.renderer.AbstractRenderer.clone : $r60 = (org.jfree.util.ObjectList) $r59 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList> = $r60
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList> = $r60 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r61 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r61 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r61 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r61 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r62 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r62 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r63 = virtualinvoke $r62.<org.jfree.util.BooleanList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r63 = virtualinvoke $r62.<org.jfree.util.BooleanList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r64 = (org.jfree.util.BooleanList) $r63
org.jfree.chart.renderer.AbstractRenderer.clone : $r64 = (org.jfree.util.BooleanList) $r63 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList> = $r64
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList createEntitiesList> = $r64 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r65 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r65 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r65 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r65 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r66 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList>
org.jfree.chart.renderer.AbstractRenderer.clone : $r66 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r67 = virtualinvoke $r66.<org.jfree.util.ShapeList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r67 = virtualinvoke $r66.<org.jfree.util.ShapeList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r68 = (org.jfree.util.ShapeList) $r67
org.jfree.chart.renderer.AbstractRenderer.clone : $r68 = (org.jfree.util.ShapeList) $r67 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> = $r68
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> = $r68 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r69 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont>
org.jfree.chart.renderer.AbstractRenderer.clone : $r69 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r69 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r69 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r70 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont>
org.jfree.chart.renderer.AbstractRenderer.clone : $r70 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r71 = virtualinvoke $r70.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r71 = virtualinvoke $r70.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r72 = (org.jfree.util.ObjectList) $r71
org.jfree.chart.renderer.AbstractRenderer.clone : $r72 = (org.jfree.util.ObjectList) $r71 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> = $r72
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> = $r72 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r73 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.clone : $r73 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : if $r73 == null
org.jfree.chart.renderer.AbstractRenderer.clone : if $r73 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r74 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.clone : $r74 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r75 = virtualinvoke $r74.<org.jfree.util.PaintList: java.lang.Object clone()>()
org.jfree.chart.renderer.AbstractRenderer.clone : $r75 = virtualinvoke $r74.<org.jfree.util.PaintList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r76 = (org.jfree.util.PaintList) $r75
org.jfree.chart.renderer.AbstractRenderer.clone : $r76 = (org.jfree.util.PaintList) $r75 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> = $r76
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> = $r76 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : $r77 = new javax.swing.event.EventListenerList
org.jfree.chart.renderer.AbstractRenderer.clone : $r77 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : specialinvoke $r77.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.renderer.AbstractRenderer.clone : specialinvoke $r77.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> = $r77
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> = $r77 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.event.RendererChangeEvent event> = null
org.jfree.chart.renderer.AbstractRenderer.clone : r1.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.event.RendererChangeEvent event> = null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.clone : return r1
org.jfree.chart.renderer.AbstractRenderer.clone : return r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1 = (org.jfree.chart.renderer.category.AbstractCategoryItemRenderer) $r3
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1 = (org.jfree.chart.renderer.category.AbstractCategoryItemRenderer) $r3 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r4 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryItemLabelGenerator itemLabelGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r4 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryItemLabelGenerator itemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r4 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r4 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r10 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r10 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r10 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r10 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r11 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r11 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r12 = virtualinvoke $r11.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r12 = virtualinvoke $r11.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r13 = (org.jfree.util.ObjectList) $r12
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r13 = (org.jfree.util.ObjectList) $r12 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList> = $r13
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemLabelGeneratorList> = $r13 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r14 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryItemLabelGenerator baseItemLabelGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r14 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryItemLabelGenerator baseItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r14 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r14 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r21 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryToolTipGenerator toolTipGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r21 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryToolTipGenerator toolTipGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r21 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r21 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r28 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r28 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r28 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r28 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r29 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r29 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r30 = virtualinvoke $r29.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r30 = virtualinvoke $r29.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r31 = (org.jfree.util.ObjectList) $r30
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r31 = (org.jfree.util.ObjectList) $r30 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList> = $r31
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList toolTipGeneratorList> = $r31 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r32 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryToolTipGenerator baseToolTipGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r32 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryToolTipGenerator baseToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r32 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r32 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r39 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.urls.CategoryURLGenerator itemURLGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r39 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.urls.CategoryURLGenerator itemURLGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r39 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r39 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r46 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemURLGeneratorList>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r46 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemURLGeneratorList> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r46 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r46 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r47 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemURLGeneratorList>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r47 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemURLGeneratorList> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r48 = virtualinvoke $r47.<org.jfree.util.ObjectList: java.lang.Object clone()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r48 = virtualinvoke $r47.<org.jfree.util.ObjectList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r49 = (org.jfree.util.ObjectList) $r48
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r49 = (org.jfree.util.ObjectList) $r48 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemURLGeneratorList> = $r49
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.util.ObjectList itemURLGeneratorList> = $r49 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r50 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.urls.CategoryURLGenerator baseItemURLGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r50 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.urls.CategoryURLGenerator baseItemURLGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r50 == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $r50 == null >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r57 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r57 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $z6 = $r57 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $z6 = $r57 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $z6 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $z6 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r58 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r58 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r59 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r58)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r59 = staticinvoke <org.jfree.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>($r58) >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.clone : $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.clone : $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.clone : return $r1
org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.clone : return $r1 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r60 = (org.jfree.chart.labels.CategorySeriesLabelGenerator) $r59
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r60 = (org.jfree.chart.labels.CategorySeriesLabelGenerator) $r59 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator> = $r60
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : r1.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemLabelGenerator> = $r60 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r61 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemToolTipGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r61 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $z7 = $r61 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $z7 = $r61 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $z7 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $z7 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r65 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemURLGenerator>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $r65 = r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategorySeriesLabelGenerator legendItemURLGenerator> >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $z8 = $r65 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : $z8 = $r65 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $z8 == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : if $z8 == 0 >>>>>>>> org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : return r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone : return r1 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : r1 = (org.jfree.chart.renderer.category.LineAndShapeRenderer) $r2
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : r1 = (org.jfree.chart.renderer.category.LineAndShapeRenderer) $r2 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r3 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r3 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r4 = virtualinvoke $r3.<org.jfree.util.BooleanList: java.lang.Object clone()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r4 = virtualinvoke $r3.<org.jfree.util.BooleanList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r5 = (org.jfree.util.BooleanList) $r4
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r5 = (org.jfree.util.BooleanList) $r4 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : r1.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible> = $r5
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : r1.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible> = $r5 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r6 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r6 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r7 = virtualinvoke $r6.<org.jfree.util.BooleanList: java.lang.Object clone()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r7 = virtualinvoke $r6.<org.jfree.util.BooleanList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r8 = (org.jfree.util.BooleanList) $r7
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r8 = (org.jfree.util.BooleanList) $r7 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : r1.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesVisible> = $r8
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : r1.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesVisible> = $r8 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r9 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesFilled>
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r9 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesFilled> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r10 = virtualinvoke $r9.<org.jfree.util.BooleanList: java.lang.Object clone()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r10 = virtualinvoke $r9.<org.jfree.util.BooleanList: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r11 = (org.jfree.util.BooleanList) $r10
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : $r11 = (org.jfree.util.BooleanList) $r10 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : r1.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesFilled> = $r11
org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : r1.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesShapesFilled> = $r11 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.clone : return r1
