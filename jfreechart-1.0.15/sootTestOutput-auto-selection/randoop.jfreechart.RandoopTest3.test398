org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r1 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.util.BooleanList seriesLinesVisible> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r2 = virtualinvoke $r1.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : $r2 = virtualinvoke $r1.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : return $r2
org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible : return $r2 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setUseOutlinePaint : r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean useOutlinePaint> = z0
org.jfree.chart.renderer.category.LineAndShapeRenderer.setUseOutlinePaint : r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean useOutlinePaint> = z0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.setUseOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.LineAndShapeRenderer.setUseOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.Crosshair.equals : if r1 != r0
org.jfree.chart.plot.Crosshair.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.Crosshair.equals : $z0 = r1 instanceof org.jfree.chart.plot.Crosshair
org.jfree.chart.plot.Crosshair.equals : $z0 = r1 instanceof org.jfree.chart.plot.Crosshair >>>>>>>> org.jfree.chart.plot.Crosshair.equals : if $z0 != 0
org.jfree.chart.plot.Crosshair.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Crosshair.equals : return 0
org.jfree.chart.plot.Crosshair.equals : return 0 >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "crosshair")
org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "crosshair") >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : $r2 = r0.<org.jfree.chart.panel.CrosshairOverlay: java.util.List yCrosshairs>
org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : $r2 = r0.<org.jfree.chart.panel.CrosshairOverlay: java.util.List yCrosshairs> >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : virtualinvoke r1.<org.jfree.chart.plot.Crosshair: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r0)
org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : virtualinvoke r1.<org.jfree.chart.plot.Crosshair: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.Crosshair.addPropertyChangeListener : $r2 = r0.<org.jfree.chart.plot.Crosshair: java.beans.PropertyChangeSupport pcs>
org.jfree.chart.plot.Crosshair.addPropertyChangeListener : $r2 = r0.<org.jfree.chart.plot.Crosshair: java.beans.PropertyChangeSupport pcs> >>>>>>>> org.jfree.chart.plot.Crosshair.addPropertyChangeListener : virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1)
org.jfree.chart.plot.Crosshair.addPropertyChangeListener : virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1) >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : virtualinvoke r0.<org.jfree.chart.panel.CrosshairOverlay: void fireOverlayChanged()>()
org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair : virtualinvoke r0.<org.jfree.chart.panel.CrosshairOverlay: void fireOverlayChanged()>() >>>>>>>> org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged : $r1 = new org.jfree.chart.event.OverlayChangeEvent
org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged : $r1 = new org.jfree.chart.event.OverlayChangeEvent >>>>>>>> org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged : specialinvoke $r1.<org.jfree.chart.event.OverlayChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged : specialinvoke $r1.<org.jfree.chart.event.OverlayChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged : r2 = $r1
org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged : r2 = $r1 >>>>>>>> org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged : virtualinvoke r0.<org.jfree.chart.panel.AbstractOverlay: void notifyListeners(org.jfree.chart.event.OverlayChangeEvent)>(r2)
org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged : virtualinvoke r0.<org.jfree.chart.panel.AbstractOverlay: void notifyListeners(org.jfree.chart.event.OverlayChangeEvent)>(r2) >>>>>>>> org.jfree.chart.panel.AbstractOverlay.notifyListeners : $r3 = r0.<org.jfree.chart.panel.AbstractOverlay: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.panel.AbstractOverlay.notifyListeners : $r3 = r0.<org.jfree.chart.panel.AbstractOverlay: javax.swing.event.EventListenerList changeListeners> >>>>>>>> org.jfree.chart.panel.AbstractOverlay.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.panel.AbstractOverlay.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.panel.AbstractOverlay.notifyListeners : $i1 = lengthof r2
org.jfree.chart.panel.AbstractOverlay.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.panel.AbstractOverlay.notifyListeners : i0 = $i1 - 2
org.jfree.chart.panel.AbstractOverlay.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.panel.AbstractOverlay.notifyListeners : if i0 < 0
org.jfree.chart.panel.AbstractOverlay.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.panel.CrosshairOverlay.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : r1 = (org.jfree.chart.panel.CrosshairOverlay) $r2
org.jfree.chart.panel.CrosshairOverlay.clone : r1 = (org.jfree.chart.panel.CrosshairOverlay) $r2 >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : $r3 = r0.<org.jfree.chart.panel.CrosshairOverlay: java.util.List xCrosshairs>
org.jfree.chart.panel.CrosshairOverlay.clone : $r3 = r0.<org.jfree.chart.panel.CrosshairOverlay: java.util.List xCrosshairs> >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3)
org.jfree.chart.panel.CrosshairOverlay.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3) >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : $r5 = (java.util.List) $r4
org.jfree.chart.panel.CrosshairOverlay.clone : $r5 = (java.util.List) $r4 >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : r1.<org.jfree.chart.panel.CrosshairOverlay: java.util.List xCrosshairs> = $r5
org.jfree.chart.panel.CrosshairOverlay.clone : r1.<org.jfree.chart.panel.CrosshairOverlay: java.util.List xCrosshairs> = $r5 >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : $r6 = r0.<org.jfree.chart.panel.CrosshairOverlay: java.util.List yCrosshairs>
org.jfree.chart.panel.CrosshairOverlay.clone : $r6 = r0.<org.jfree.chart.panel.CrosshairOverlay: java.util.List yCrosshairs> >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : $r7 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r6)
org.jfree.chart.panel.CrosshairOverlay.clone : $r7 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r6) >>>>>>>> org.jfree.chart.plot.Crosshair.clone : $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.Crosshair.clone : $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.Crosshair.clone : return $r1
org.jfree.chart.plot.Crosshair.clone : return $r1 >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : $r8 = (java.util.List) $r7
org.jfree.chart.panel.CrosshairOverlay.clone : $r8 = (java.util.List) $r7 >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : r1.<org.jfree.chart.panel.CrosshairOverlay: java.util.List yCrosshairs> = $r8
org.jfree.chart.panel.CrosshairOverlay.clone : r1.<org.jfree.chart.panel.CrosshairOverlay: java.util.List yCrosshairs> = $r8 >>>>>>>> org.jfree.chart.panel.CrosshairOverlay.clone : return r1
