org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : return $r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r1 != null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : return null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : return null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r1 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z1 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r5 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r2 = $r5
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r2 = $r5 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : return $i0
org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount : return $i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r3 == null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r3 == null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r7 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r7 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r9 = new org.jfree.data.Range
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r9 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(#-Infinity, #Infinity)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(#-Infinity, #Infinity) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = $r9
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = $r9 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.XYRangeInfo
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.XYRangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : r4 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r0, r1, r2, z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : r4 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r0, r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : return r4
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r4 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r10
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r10 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r2 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $r2 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
