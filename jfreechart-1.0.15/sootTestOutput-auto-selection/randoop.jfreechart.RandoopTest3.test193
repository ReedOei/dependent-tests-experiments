org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.plot.PolarPlot.isCounterClockwise : $z0 = r0.<org.jfree.chart.plot.PolarPlot: boolean counterClockwise>
org.jfree.chart.plot.PolarPlot.isCounterClockwise : $z0 = r0.<org.jfree.chart.plot.PolarPlot: boolean counterClockwise> >>>>>>>> org.jfree.chart.plot.PolarPlot.isCounterClockwise : return $z0
org.jfree.chart.plot.PolarPlot.isCounterClockwise : return $z0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : $z1 = r0.<org.jfree.chart.plot.PolarPlot: boolean radiusGridlinesVisible>
org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : $z1 = r0.<org.jfree.chart.plot.PolarPlot: boolean radiusGridlinesVisible> >>>>>>>> org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : if $z1 == z0
org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : if $z1 == z0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : r0.<org.jfree.chart.plot.PolarPlot: boolean radiusGridlinesVisible> = z0
org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : r0.<org.jfree.chart.plot.PolarPlot: boolean radiusGridlinesVisible> = z0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>()
org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.getDatasetCount : $r1 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.PolarPlot.getDatasetCount : $r1 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.PolarPlot.getDatasetCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.PolarPlot.getDatasetCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.getDatasetCount : return $i0
org.jfree.chart.plot.PolarPlot.getDatasetCount : return $i0 >>>>>>>> org.jfree.chart.plot.PolarPlot.isAngleGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.PolarPlot: boolean angleGridlinesVisible>
org.jfree.chart.plot.PolarPlot.isAngleGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.PolarPlot: boolean angleGridlinesVisible> >>>>>>>> org.jfree.chart.plot.PolarPlot.isAngleGridlinesVisible : return $z0
org.jfree.chart.plot.PolarPlot.isAngleGridlinesVisible : return $z0 >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke $r4.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.getRowIndex : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1
org.jfree.data.DefaultKeyedValues2D.getRowIndex : return $i1 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>()
org.jfree.data.DefaultKeyedValues2D.setValue : specialinvoke $r7.<org.jfree.data.DefaultKeyedValues: void <init>()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7
org.jfree.data.DefaultKeyedValues2D.setValue : r4 = $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0
org.jfree.data.DefaultKeyedValues2D.setValue : if $z0 == 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : i1 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.DefaultKeyedValues2D.setValue : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0
org.jfree.data.DefaultKeyedValues2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 != 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i1 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i2 >= i0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i2 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i3 >= i1
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i3 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3)
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3) >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1)
org.jfree.data.category.DefaultCategoryDataset.getValue : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(i0, i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues2D.getValue : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5
org.jfree.data.DefaultKeyedValues2D.getValue : r2 = (org.jfree.data.DefaultKeyedValues) $r5 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null
org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.getValue : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7
org.jfree.data.DefaultKeyedValues2D.getValue : r3 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0
org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2)
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getValue : return r1
org.jfree.data.DefaultKeyedValues2D.getValue : return r1 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2
org.jfree.data.category.DefaultCategoryDataset.getValue : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $r1 == null
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if $r1 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data> >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List getColumnKeys()>()
org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : $r2 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: java.util.List getColumnKeys()>() >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.data.DefaultKeyedValues2D.getColumnKeys : return $r2
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : return $r2 >>>>>>>> org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : return $r2
org.jfree.data.category.DefaultCategoryDataset.getColumnKeys : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r2 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r2 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z2 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r4 = (java.lang.Comparable) $r5
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r4 = (java.lang.Comparable) $r5 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r4) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>()
org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : return $i0
org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : return -1
org.jfree.data.general.AbstractSeriesDataset.indexOf : return -1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: int getItemCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.CategoryTableXYDataset: int getItemCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.xy.CategoryTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : $i0 = virtualinvoke $r1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>() >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i0
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i0 >>>>>>>> org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i1
org.jfree.data.xy.CategoryTableXYDataset.getItemCount : return $i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i2 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i2 >= i1
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $b6 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $b6 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3 >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : r2 = virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.PolarPlot.setDataset : r2 = virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.PolarPlot.getDataset : r1 = null
org.jfree.chart.plot.PolarPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.PolarPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.PolarPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.PolarPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.PolarPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.getDataset : if i0 >= $i1
org.jfree.chart.plot.PolarPlot.getDataset : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.PolarPlot.getDataset : return r1
org.jfree.chart.plot.PolarPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : if r2 == null
org.jfree.chart.plot.PolarPlot.setDataset : if r2 == null >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : $r4 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.PolarPlot.setDataset : $r4 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : virtualinvoke $r4.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.PolarPlot.setDataset : virtualinvoke $r4.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : if r1 == null
org.jfree.chart.plot.PolarPlot.setDataset : if r1 == null >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : interfaceinvoke r1.<org.jfree.data.xy.XYDataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0)
org.jfree.chart.plot.PolarPlot.setDataset : interfaceinvoke r1.<org.jfree.data.xy.XYDataset: void addChangeListener(org.jfree.data.general.DatasetChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : $r5 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.PolarPlot.setDataset : $r5 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : specialinvoke $r5.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r1)
org.jfree.chart.plot.PolarPlot.setDataset : specialinvoke $r5.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r1) >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : r3 = $r5
org.jfree.chart.plot.PolarPlot.setDataset : r3 = $r5 >>>>>>>> org.jfree.chart.plot.PolarPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r3)
org.jfree.chart.plot.PolarPlot.setDataset : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r3) >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : i0 = 0
org.jfree.chart.plot.PolarPlot.datasetChanged : i0 = 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList axes>
org.jfree.chart.plot.PolarPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList axes> >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : $i1 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.PolarPlot.datasetChanged : $i1 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : if i0 >= $i1
org.jfree.chart.plot.PolarPlot.datasetChanged : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : $r4 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList axes>
org.jfree.chart.plot.PolarPlot.datasetChanged : $r4 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList axes> >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.PolarPlot.datasetChanged : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : r2 = (org.jfree.chart.axis.ValueAxis) $r5
org.jfree.chart.plot.PolarPlot.datasetChanged : r2 = (org.jfree.chart.axis.ValueAxis) $r5 >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : if r2 == null
org.jfree.chart.plot.PolarPlot.datasetChanged : if r2 == null >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : i0 = i0 + 1
org.jfree.chart.plot.PolarPlot.datasetChanged : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : goto [?= $r3 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList axes>]
org.jfree.chart.plot.PolarPlot.datasetChanged : goto [?= $r3 = r0.<org.jfree.chart.plot.PolarPlot: org.jfree.util.ObjectList axes>] >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : $r6 = virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.PolarPlot.datasetChanged : $r6 = virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : if $r6 == null
org.jfree.chart.plot.PolarPlot.datasetChanged : if $r6 == null >>>>>>>> org.jfree.chart.plot.PolarPlot.datasetChanged : specialinvoke r0.<org.jfree.chart.plot.Plot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1)
org.jfree.chart.plot.PolarPlot.datasetChanged : specialinvoke r0.<org.jfree.chart.plot.Plot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : $r2 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.datasetChanged : $r2 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : specialinvoke $r2.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.datasetChanged : specialinvoke $r2.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : r3 = $r2
org.jfree.chart.plot.Plot.datasetChanged : r3 = $r2 >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : $r4 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.Plot.datasetChanged : $r4 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : virtualinvoke r3.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r4)
org.jfree.chart.plot.Plot.datasetChanged : virtualinvoke r3.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r4) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.Plot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r3)
org.jfree.chart.plot.Plot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r3) >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : $r2 = specialinvoke r0.<java.text.DateFormat: java.lang.Object clone()>()
org.jfree.chart.util.RelativeDateFormat.clone : $r2 = specialinvoke r0.<java.text.DateFormat: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : r1 = (org.jfree.chart.util.RelativeDateFormat) $r2
org.jfree.chart.util.RelativeDateFormat.clone : r1 = (org.jfree.chart.util.RelativeDateFormat) $r2 >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : $r3 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat dayFormatter>
org.jfree.chart.util.RelativeDateFormat.clone : $r3 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat dayFormatter> >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : $r4 = virtualinvoke $r3.<java.text.NumberFormat: java.lang.Object clone()>()
org.jfree.chart.util.RelativeDateFormat.clone : $r4 = virtualinvoke $r3.<java.text.NumberFormat: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : $r5 = (java.text.NumberFormat) $r4
org.jfree.chart.util.RelativeDateFormat.clone : $r5 = (java.text.NumberFormat) $r4 >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : r1.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat dayFormatter> = $r5
org.jfree.chart.util.RelativeDateFormat.clone : r1.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat dayFormatter> = $r5 >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : $r6 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat secondFormatter>
org.jfree.chart.util.RelativeDateFormat.clone : $r6 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat secondFormatter> >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : $r7 = virtualinvoke $r6.<java.text.NumberFormat: java.lang.Object clone()>()
org.jfree.chart.util.RelativeDateFormat.clone : $r7 = virtualinvoke $r6.<java.text.NumberFormat: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : $r8 = (java.text.NumberFormat) $r7
org.jfree.chart.util.RelativeDateFormat.clone : $r8 = (java.text.NumberFormat) $r7 >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : r1.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat secondFormatter> = $r8
org.jfree.chart.util.RelativeDateFormat.clone : r1.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat secondFormatter> = $r8 >>>>>>>> org.jfree.chart.util.RelativeDateFormat.clone : return r1
org.jfree.chart.util.RelativeDateFormat.clone : return r1 >>>>>>>> org.jfree.chart.axis.DateTickUnit.intToUnitType : tableswitch(i0) {     case 0:
org.jfree.chart.axis.DateTickUnit.intToUnitType : tableswitch(i0) {     case 0: >>>>>>>> org.jfree.chart.axis.DateTickUnit.intToUnitType : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.intToUnitType : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateTickUnit.intToUnitType : return $r2
org.jfree.chart.axis.DateTickUnit.intToUnitType : return $r2 >>>>>>>> org.jfree.chart.axis.DateTickUnit.notNull : if r0 != null
org.jfree.chart.axis.DateTickUnit.notNull : if r0 != null >>>>>>>> org.jfree.chart.axis.DateTickUnit.notNull : return r0
org.jfree.chart.axis.DateTickUnit.notNull : return r0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : if r0 != r1
org.jfree.chart.axis.DateTickUnitType.equals : if r0 != r1 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType
org.jfree.chart.axis.DateTickUnitType.equals : $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : if $z0 != 0
org.jfree.chart.axis.DateTickUnitType.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : r2 = (org.jfree.chart.axis.DateTickUnitType) r1
org.jfree.chart.axis.DateTickUnitType.equals : r2 = (org.jfree.chart.axis.DateTickUnitType) r1 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : $r3 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.DateTickUnitType.equals : $r3 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name> >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnitType: java.lang.String toString()>()
org.jfree.chart.axis.DateTickUnitType.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnitType: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.DateTickUnitType.toString : $r1 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.DateTickUnitType.toString : $r1 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name> >>>>>>>> org.jfree.chart.axis.DateTickUnitType.toString : return $r1
org.jfree.chart.axis.DateTickUnitType.toString : return $r1 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.DateTickUnitType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : if $z1 != 0
org.jfree.chart.axis.DateTickUnitType.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : return 0
org.jfree.chart.axis.DateTickUnitType.equals : return 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z0 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r2)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : return 1
org.jfree.chart.axis.DateTickUnitType.equals : return 1 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z1 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l3 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l3 = (long) i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l4 = 2678400000L * $l3
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l4 = 2678400000L * $l3 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l4
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l4 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "unitType")
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "unitType") >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z0 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r2)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z1 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 1
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 1 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getCount : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.axis.DateTickUnit.getCount : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getCount : return $i0
org.jfree.chart.axis.DateTickUnit.getCount : return $i0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setAngleTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit")
org.jfree.chart.plot.PolarPlot.setAngleTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit") >>>>>>>> org.jfree.chart.plot.PolarPlot.setAngleTickUnit : r0.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.TickUnit angleTickUnit> = r1
org.jfree.chart.plot.PolarPlot.setAngleTickUnit : r0.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.TickUnit angleTickUnit> = r1 >>>>>>>> org.jfree.chart.plot.PolarPlot.setAngleTickUnit : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>()
org.jfree.chart.plot.PolarPlot.setAngleTickUnit : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.getRollMultiple : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int rollCount>
org.jfree.chart.axis.DateTickUnit.getRollMultiple : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int rollCount> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getRollMultiple : return $i0
