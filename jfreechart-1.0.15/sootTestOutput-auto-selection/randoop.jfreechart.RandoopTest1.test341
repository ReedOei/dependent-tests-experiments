org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r2 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r2 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r1 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_LEFT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r1 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_LEFT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z0 = virtualinvoke $r2.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z0 = virtualinvoke $r2.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z0 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r3 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r3 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r4 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r4 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z1 = virtualinvoke $r3.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z1 = virtualinvoke $r3.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z1 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r5 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r5 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r6 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_RIGHT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r6 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor BOTTOM_RIGHT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z2 = virtualinvoke $r5.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z2 = virtualinvoke $r5.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z2 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r7 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r7 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r8 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor LEFT>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r8 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor LEFT> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z3 = virtualinvoke $r7.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z3 = virtualinvoke $r7.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z3 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z3 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r9 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r9 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.ui.RectangleAnchor blockAnchor> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r10 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor CENTER>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $r10 = <org.jfree.ui.RectangleAnchor: org.jfree.ui.RectangleAnchor CENTER> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r10)
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $z4 = virtualinvoke $r9.<org.jfree.ui.RectangleAnchor: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z4 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : if $z4 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d8 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockWidth>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d8 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockWidth> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d9 = neg $d8
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d9 = neg $d8 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d10 = $d9 / 2.0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d10 = $d9 / 2.0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset> = $d10
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset> = $d10 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d11 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight>
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d11 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d12 = neg $d11
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d12 = neg $d11 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d13 = $d12 / 2.0
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : $d13 = $d12 / 2.0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset> = $d13
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset> = $d13 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : goto [?= return]
org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets : goto [?= return] >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale : $r1 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.chart.renderer.PaintScale paintScale>
org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale : $r1 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.chart.renderer.PaintScale paintScale> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale : return $r1
org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline : $z0 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline>
org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline : $z0 = r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline> >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline : return $z0
org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline : return $z0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> = z0
org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> = z0 >>>>>>>> org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.getLegendItemPaint : $r1 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>
org.jfree.chart.StandardChartTheme.getLegendItemPaint : $r1 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.getLegendItemPaint : return $r1
org.jfree.chart.StandardChartTheme.getLegendItemPaint : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint : r0.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint> = r1
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint : r0.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint> = r1 >>>>>>>> org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint : virtualinvoke r0.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getItemCount : $r1 = r0.<org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset: java.util.List dates>
org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getItemCount : $r1 = r0.<org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset: java.util.List dates> >>>>>>>> org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getItemCount : $i1 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getItemCount : $i1 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getItemCount : return $i1
org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getItemCount : return $i1 >>>>>>>> org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals : if r1 != r0
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals : if r1 != r0 >>>>>>>> org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.xy.StackedXYAreaRenderer
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals : $z0 = r1 instanceof org.jfree.chart.renderer.xy.StackedXYAreaRenderer >>>>>>>> org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals : if $z0 == 0
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals : return 0
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals : return 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds : if r1 != null
org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.DomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.DomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getSeriesCount : return 1
org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getSeriesCount : return 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i4 >= i0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i4 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i4)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i6 = 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i6 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i6 >= i5
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i6 >= i5 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = i4 + 1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = i4 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $b7 = d0 cmpl d1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $b7 = d0 cmpl d1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $b7 <= 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $b7 <= 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : return null
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : return r2
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r2 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds : if r2 != null
org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds : if r2 != null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds : return null
org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds : return null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : $b0 = d0 cmpg 0.0
org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : if $b0 > 0
org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : if $b0 > 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight> = d0
org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight> = d0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : specialinvoke r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: void updateOffsets()>()
org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : specialinvoke r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: void updateOffsets()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: void fireChangeEvent()>()
