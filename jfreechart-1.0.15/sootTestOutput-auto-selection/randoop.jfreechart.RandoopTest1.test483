org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding") >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1 >>>>>>>> org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.isVisible : return $z0
org.jfree.chart.title.Title.isVisible : return $z0 >>>>>>>> org.jfree.chart.title.TextTitle.clone : $r1 = specialinvoke r0.<org.jfree.chart.title.Title: java.lang.Object clone()>()
org.jfree.chart.title.TextTitle.clone : $r1 = specialinvoke r0.<org.jfree.chart.title.Title: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.Title.clone : $r3 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>()
org.jfree.chart.title.Title.clone : $r3 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.block.AbstractBlock.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : r1 = (org.jfree.chart.block.AbstractBlock) $r3
org.jfree.chart.block.AbstractBlock.clone : r1 = (org.jfree.chart.block.AbstractBlock) $r3 >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r4 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.clone : $r4 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r5 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape clone(java.awt.Shape)>($r4)
org.jfree.chart.block.AbstractBlock.clone : $r5 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape clone(java.awt.Shape)>($r4) >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r6 = (java.awt.geom.Rectangle2D) $r5
org.jfree.chart.block.AbstractBlock.clone : $r6 = (java.awt.geom.Rectangle2D) $r5 >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : r1.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = $r6
org.jfree.chart.block.AbstractBlock.clone : r1.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = $r6 >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $r7 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.clone : $r7 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : $z0 = $r7 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.block.AbstractBlock.clone : $z0 = $r7 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : if $z0 == 0
org.jfree.chart.block.AbstractBlock.clone : if $z0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.clone : return r1
org.jfree.chart.block.AbstractBlock.clone : return r1 >>>>>>>> org.jfree.chart.title.Title.clone : r1 = (org.jfree.chart.title.Title) $r3
org.jfree.chart.title.Title.clone : r1 = (org.jfree.chart.title.Title) $r3 >>>>>>>> org.jfree.chart.title.Title.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.chart.title.Title.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.title.Title.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.title.Title.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.title.Title.clone : r1.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.chart.title.Title.clone : r1.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.chart.title.Title.clone : return r1
org.jfree.chart.title.Title.clone : return r1 >>>>>>>> org.jfree.chart.title.TextTitle.clone : return $r1
org.jfree.chart.title.TextTitle.clone : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : $r1 = new org.jfree.ui.RectangleInsets
org.jfree.chart.block.AbstractBlock.setMargin : $r1 = new org.jfree.ui.RectangleInsets >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : specialinvoke $r1.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(d0, d1, d2, d3)
org.jfree.chart.block.AbstractBlock.setMargin : specialinvoke $r1.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(d0, d1, d2, d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: void setMargin(org.jfree.ui.RectangleInsets)>($r1)
org.jfree.chart.block.AbstractBlock.setMargin : virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: void setMargin(org.jfree.ui.RectangleInsets)>($r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin") >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1 >>>>>>>> org.jfree.chart.annotations.XYTitleAnnotation.clone : $r1 = specialinvoke r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.Object clone()>()
org.jfree.chart.annotations.XYTitleAnnotation.clone : $r1 = specialinvoke r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.annotations.AbstractAnnotation.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : r1 = (org.jfree.chart.annotations.AbstractAnnotation) $r3
org.jfree.chart.annotations.AbstractAnnotation.clone : r1 = (org.jfree.chart.annotations.AbstractAnnotation) $r3 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.chart.annotations.AbstractAnnotation.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.chart.annotations.AbstractAnnotation.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : r1.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.chart.annotations.AbstractAnnotation.clone : r1.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.clone : return r1
org.jfree.chart.annotations.AbstractAnnotation.clone : return r1 >>>>>>>> org.jfree.chart.annotations.XYTitleAnnotation.clone : return $r1
org.jfree.chart.annotations.XYTitleAnnotation.clone : return $r1 >>>>>>>> org.jfree.chart.annotations.XYTitleAnnotation.setMaxWidth : r0.<org.jfree.chart.annotations.XYTitleAnnotation: double maxWidth> = d0
org.jfree.chart.annotations.XYTitleAnnotation.setMaxWidth : r0.<org.jfree.chart.annotations.XYTitleAnnotation: double maxWidth> = d0 >>>>>>>> org.jfree.chart.annotations.XYTitleAnnotation.setMaxWidth : virtualinvoke r0.<org.jfree.chart.annotations.XYTitleAnnotation: void fireAnnotationChanged()>()
org.jfree.chart.annotations.XYTitleAnnotation.setMaxWidth : virtualinvoke r0.<org.jfree.chart.annotations.XYTitleAnnotation: void fireAnnotationChanged()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $z0 = r0.<org.jfree.chart.annotations.AbstractAnnotation: boolean notify>
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $z0 = r0.<org.jfree.chart.annotations.AbstractAnnotation: boolean notify> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : if $z0 == 0
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : if $z0 == 0 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $r1 = new org.jfree.chart.event.AnnotationChangeEvent
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $r1 = new org.jfree.chart.event.AnnotationChangeEvent >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : specialinvoke $r1.<org.jfree.chart.event.AnnotationChangeEvent: void <init>(java.lang.Object,org.jfree.chart.annotations.Annotation)>(r0, r0)
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : specialinvoke $r1.<org.jfree.chart.event.AnnotationChangeEvent: void <init>(java.lang.Object,org.jfree.chart.annotations.Annotation)>(r0, r0) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : virtualinvoke r0.<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>($r1)
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : virtualinvoke r0.<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>($r1) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $i1 = lengthof r2
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : i0 = $i1 - 2
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : if i0 < 0
