org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.plot.PolarPlot.isCounterClockwise : $z0 = r0.<org.jfree.chart.plot.PolarPlot: boolean counterClockwise>
org.jfree.chart.plot.PolarPlot.isCounterClockwise : $z0 = r0.<org.jfree.chart.plot.PolarPlot: boolean counterClockwise> >>>>>>>> org.jfree.chart.plot.PolarPlot.isCounterClockwise : return $z0
org.jfree.chart.plot.PolarPlot.isCounterClockwise : return $z0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : $z1 = r0.<org.jfree.chart.plot.PolarPlot: boolean radiusGridlinesVisible>
org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : $z1 = r0.<org.jfree.chart.plot.PolarPlot: boolean radiusGridlinesVisible> >>>>>>>> org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : if $z1 == z0
org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : if $z1 == z0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : r0.<org.jfree.chart.plot.PolarPlot: boolean radiusGridlinesVisible> = z0
org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : r0.<org.jfree.chart.plot.PolarPlot: boolean radiusGridlinesVisible> = z0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>()
org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.Plot.getRootPlot : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getRootPlot : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.Plot.getRootPlot : if r1 != null
org.jfree.chart.plot.Plot.getRootPlot : if r1 != null >>>>>>>> org.jfree.chart.plot.Plot.getRootPlot : return r0
org.jfree.chart.plot.Plot.getRootPlot : return r0 >>>>>>>> org.jfree.chart.plot.PolarPlot.setFixedLegendItems : r0.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> = r1
org.jfree.chart.plot.PolarPlot.setFixedLegendItems : r0.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> = r1 >>>>>>>> org.jfree.chart.plot.PolarPlot.setFixedLegendItems : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>()
org.jfree.chart.plot.PolarPlot.setFixedLegendItems : virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.LegendItemCollection.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.LegendItemCollection.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.LegendItemCollection.clone : r1 = (org.jfree.chart.LegendItemCollection) $r2
org.jfree.chart.LegendItemCollection.clone : r1 = (org.jfree.chart.LegendItemCollection) $r2 >>>>>>>> org.jfree.chart.LegendItemCollection.clone : $r3 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.clone : $r3 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3)
org.jfree.chart.LegendItemCollection.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3) >>>>>>>> org.jfree.chart.LegendItemCollection.clone : $r5 = (java.util.List) $r4
org.jfree.chart.LegendItemCollection.clone : $r5 = (java.util.List) $r4 >>>>>>>> org.jfree.chart.LegendItemCollection.clone : r1.<org.jfree.chart.LegendItemCollection: java.util.List items> = $r5
org.jfree.chart.LegendItemCollection.clone : r1.<org.jfree.chart.LegendItemCollection: java.util.List items> = $r5 >>>>>>>> org.jfree.chart.LegendItemCollection.clone : return r1
