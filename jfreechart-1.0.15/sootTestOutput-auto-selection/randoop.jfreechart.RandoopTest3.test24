org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> = z0
org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> = z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : if z1 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : if z1 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : $r2 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : $r2 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : specialinvoke $r2.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object,boolean)>(r0, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : specialinvoke $r2.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object,boolean)>(r0, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : r1 = $r2
org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : r1 = $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>(r1)
org.jfree.chart.renderer.AbstractRenderer.setBaseSeriesVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>(r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getUseFillPaint : $z0 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean useFillPaint>
org.jfree.chart.renderer.category.LineAndShapeRenderer.getUseFillPaint : $z0 = r0.<org.jfree.chart.renderer.category.LineAndShapeRenderer: boolean useFillPaint> >>>>>>>> org.jfree.chart.renderer.category.LineAndShapeRenderer.getUseFillPaint : return $z0
