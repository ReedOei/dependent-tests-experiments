org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.xy.VectorSeries.add : $r1 = new org.jfree.data.xy.VectorDataItem
org.jfree.data.xy.VectorSeries.add : $r1 = new org.jfree.data.xy.VectorDataItem >>>>>>>> org.jfree.data.xy.VectorSeries.add : specialinvoke $r1.<org.jfree.data.xy.VectorDataItem: void <init>(double,double,double,double)>(d0, d1, d2, d3)
org.jfree.data.xy.VectorSeries.add : specialinvoke $r1.<org.jfree.data.xy.VectorDataItem: void <init>(double,double,double,double)>(d0, d1, d2, d3) >>>>>>>> org.jfree.data.xy.VectorSeries.add : specialinvoke r0.<org.jfree.data.ComparableObjectSeries: void add(org.jfree.data.ComparableObjectItem,boolean)>($r1, 1)
org.jfree.data.xy.VectorSeries.add : specialinvoke r0.<org.jfree.data.ComparableObjectSeries: void add(org.jfree.data.ComparableObjectItem,boolean)>($r1, 1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.ComparableObjectSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $z1 = r0.<org.jfree.data.ComparableObjectSeries: boolean autoSort>
org.jfree.data.ComparableObjectSeries.add : $z1 = r0.<org.jfree.data.ComparableObjectSeries: boolean autoSort> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $z1 == 0
org.jfree.data.ComparableObjectSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r2 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r2 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.data.ComparableObjectSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i0 >= 0
org.jfree.data.ComparableObjectSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r3 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r3 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i2 = neg i0
org.jfree.data.ComparableObjectSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i3 = $i2 - 1
org.jfree.data.ComparableObjectSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>($i3, r1)
org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>($i3, r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)]
org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()]
org.jfree.data.ComparableObjectSeries.add : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()
org.jfree.data.ComparableObjectSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.getItemCount : $r1 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.getItemCount : $r1 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.ComparableObjectSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.getItemCount : return $i0
org.jfree.data.ComparableObjectSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i8 = r0.<org.jfree.data.ComparableObjectSeries: int maximumItemCount>
org.jfree.data.ComparableObjectSeries.add : $i8 = r0.<org.jfree.data.ComparableObjectSeries: int maximumItemCount> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $i7 <= $i8
org.jfree.data.ComparableObjectSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if z0 == 0
org.jfree.data.ComparableObjectSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: void fireSeriesChanged()>()
org.jfree.data.ComparableObjectSeries.add : virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.VectorSeries.getVectorYValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.VectorSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0)
org.jfree.data.xy.VectorSeries.getVectorYValue : $r2 = virtualinvoke r0.<org.jfree.data.xy.VectorSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.VectorSeries.getDataItem : $r1 = specialinvoke r0.<org.jfree.data.ComparableObjectSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0)
org.jfree.data.xy.VectorSeries.getDataItem : $r1 = specialinvoke r0.<org.jfree.data.ComparableObjectSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(i0) >>>>>>>> org.jfree.data.ComparableObjectSeries.getDataItem : $r1 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.getDataItem : $r1 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.getDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
