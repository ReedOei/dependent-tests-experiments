org.jfree.data.xml.RootHandler.characters : r2 = virtualinvoke r0.<org.jfree.data.xml.RootHandler: org.xml.sax.helpers.DefaultHandler getCurrentHandler()>() >>>>>>>> org.jfree.data.xml.RootHandler.getCurrentHandler : r1 = r0
org.jfree.data.xml.RootHandler.getCurrentHandler : r1 = r0 >>>>>>>> org.jfree.data.xml.RootHandler.getCurrentHandler : $r3 = r0.<org.jfree.data.xml.RootHandler: java.util.Stack subHandlers>
org.jfree.data.xml.RootHandler.getCurrentHandler : $r3 = r0.<org.jfree.data.xml.RootHandler: java.util.Stack subHandlers> >>>>>>>> org.jfree.data.xml.RootHandler.getCurrentHandler : if $r3 == null
org.jfree.data.xml.RootHandler.getCurrentHandler : if $r3 == null >>>>>>>> org.jfree.data.xml.RootHandler.getCurrentHandler : $r4 = r0.<org.jfree.data.xml.RootHandler: java.util.Stack subHandlers>
org.jfree.data.xml.RootHandler.getCurrentHandler : $r4 = r0.<org.jfree.data.xml.RootHandler: java.util.Stack subHandlers> >>>>>>>> org.jfree.data.xml.RootHandler.getCurrentHandler : $i0 = virtualinvoke $r4.<java.util.Stack: int size()>()
org.jfree.data.xml.RootHandler.getCurrentHandler : $i0 = virtualinvoke $r4.<java.util.Stack: int size()>() >>>>>>>> org.jfree.data.xml.RootHandler.getCurrentHandler : if $i0 <= 0
org.jfree.data.xml.RootHandler.getCurrentHandler : if $i0 <= 0 >>>>>>>> org.jfree.data.xml.RootHandler.getCurrentHandler : return r1
org.jfree.data.xml.RootHandler.getCurrentHandler : return r1 >>>>>>>> org.jfree.data.xml.RootHandler.characters : if r2 == r0
org.jfree.data.xml.RootHandler.characters : if r2 == r0 >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("Key")
org.jfree.data.xml.KeyHandler.endElement : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("Key") >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : if $z0 == 0
org.jfree.data.xml.KeyHandler.endElement : if $z0 == 0 >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : $r12 = new org.xml.sax.SAXException
org.jfree.data.xml.KeyHandler.endElement : $r12 = new org.xml.sax.SAXException >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : $r13 = new java.lang.StringBuilder
org.jfree.data.xml.KeyHandler.endElement : $r13 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.xml.KeyHandler.endElement : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting </Key> but found ")
org.jfree.data.xml.KeyHandler.endElement : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting </Key> but found ") >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.jfree.data.xml.KeyHandler.endElement : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.xml.KeyHandler.endElement : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r16)
org.jfree.data.xml.KeyHandler.endElement : specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r16) >>>>>>>> org.jfree.data.xml.KeyHandler.endElement : throw $r12
