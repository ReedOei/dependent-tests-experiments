org.jfree.chart.demo.PieChartDemo1.createDemoPanel : $r0 = staticinvoke <org.jfree.chart.demo.PieChartDemo1: org.jfree.data.general.PieDataset createDataset()>() >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : $r0 = new org.jfree.data.general.DefaultPieDataset
org.jfree.chart.demo.PieChartDemo1.createDataset : $r0 = new org.jfree.data.general.DefaultPieDataset >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r0.<org.jfree.data.general.DefaultPieDataset: void <init>()>()
org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r0.<org.jfree.data.general.DefaultPieDataset: void <init>()>() >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : r1 = $r0
org.jfree.chart.demo.PieChartDemo1.createDataset : r1 = $r0 >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : $r2 = new java.lang.Double
org.jfree.chart.demo.PieChartDemo1.createDataset : $r2 = new java.lang.Double >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r2.<java.lang.Double: void <init>(double)>(43.2)
org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r2.<java.lang.Double: void <init>(double)>(43.2) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("One", $r2)
org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("One", $r2) >>>>>>>> org.jfree.data.general.DefaultPieDataset.setValue : $r3 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.data.general.DefaultPieDataset.setValue : $r3 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data> >>>>>>>> org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r1, r2)
org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke $r3.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: void fireDatasetChanged()>()
org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : $r3 = new java.lang.Double
org.jfree.chart.demo.PieChartDemo1.createDataset : $r3 = new java.lang.Double >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r3.<java.lang.Double: void <init>(double)>(10.0)
org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r3.<java.lang.Double: void <init>(double)>(10.0) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Two", $r3)
org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Two", $r3) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : $r4 = new java.lang.Double
org.jfree.chart.demo.PieChartDemo1.createDataset : $r4 = new java.lang.Double >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r4.<java.lang.Double: void <init>(double)>(27.5)
org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r4.<java.lang.Double: void <init>(double)>(27.5) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Three", $r4)
org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Three", $r4) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : $r5 = new java.lang.Double
org.jfree.chart.demo.PieChartDemo1.createDataset : $r5 = new java.lang.Double >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r5.<java.lang.Double: void <init>(double)>(17.5)
org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r5.<java.lang.Double: void <init>(double)>(17.5) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Four", $r5)
org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Four", $r5) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : $r6 = new java.lang.Double
org.jfree.chart.demo.PieChartDemo1.createDataset : $r6 = new java.lang.Double >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r6.<java.lang.Double: void <init>(double)>(11.0)
org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r6.<java.lang.Double: void <init>(double)>(11.0) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Five", $r6)
org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Five", $r6) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : $r7 = new java.lang.Double
org.jfree.chart.demo.PieChartDemo1.createDataset : $r7 = new java.lang.Double >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r7.<java.lang.Double: void <init>(double)>(19.4)
org.jfree.chart.demo.PieChartDemo1.createDataset : specialinvoke $r7.<java.lang.Double: void <init>(double)>(19.4) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Six", $r7)
org.jfree.chart.demo.PieChartDemo1.createDataset : virtualinvoke r1.<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,java.lang.Number)>("Six", $r7) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDataset : return r1
org.jfree.chart.demo.PieChartDemo1.createDataset : return r1 >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDemoPanel : r1 = staticinvoke <org.jfree.chart.demo.PieChartDemo1: org.jfree.chart.JFreeChart createChart(org.jfree.data.general.PieDataset)>($r0)
org.jfree.chart.demo.PieChartDemo1.createDemoPanel : r1 = staticinvoke <org.jfree.chart.demo.PieChartDemo1: org.jfree.chart.JFreeChart createChart(org.jfree.data.general.PieDataset)>($r0) >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createChart : r1 = staticinvoke <org.jfree.chart.ChartFactory: org.jfree.chart.JFreeChart createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)>("Pie Chart Demo 1", r0, 1, 1, 0)
org.jfree.chart.demo.PieChartDemo1.createChart : r1 = staticinvoke <org.jfree.chart.ChartFactory: org.jfree.chart.JFreeChart createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)>("Pie Chart Demo 1", r0, 1, 1, 0) >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r2 = new org.jfree.chart.plot.PiePlot
org.jfree.chart.ChartFactory.createPieChart : $r2 = new org.jfree.chart.plot.PiePlot >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r2.<org.jfree.chart.plot.PiePlot: void <init>(org.jfree.data.general.PieDataset)>(r1)
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r2.<org.jfree.chart.plot.PiePlot: void <init>(org.jfree.data.general.PieDataset)>(r1) >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : r3 = $r2
org.jfree.chart.ChartFactory.createPieChart : r3 = $r2 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r5 = new org.jfree.chart.labels.StandardPieSectionLabelGenerator
org.jfree.chart.ChartFactory.createPieChart : $r5 = new org.jfree.chart.labels.StandardPieSectionLabelGenerator >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r5.<org.jfree.chart.labels.StandardPieSectionLabelGenerator: void <init>()>()
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r5.<org.jfree.chart.labels.StandardPieSectionLabelGenerator: void <init>()>() >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)>($r5)
org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)>($r5) >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator> = r1
org.jfree.chart.plot.PiePlot.setLabelGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r6 = new org.jfree.ui.RectangleInsets
org.jfree.chart.ChartFactory.createPieChart : $r6 = new org.jfree.ui.RectangleInsets >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r6.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(0.0, 5.0, 5.0, 5.0)
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r6.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(0.0, 5.0, 5.0, 5.0) >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setInsets(org.jfree.ui.RectangleInsets)>($r6)
org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setInsets(org.jfree.ui.RectangleInsets)>($r6) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>(r1, 1)
org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets")
org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets") >>>>>>>> org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.setInsets : $z1 = virtualinvoke $r2.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.Plot.setInsets : $z1 = virtualinvoke $r2.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : if $z1 != 0
org.jfree.chart.plot.Plot.setInsets : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1
org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : if z0 == 0
org.jfree.chart.plot.Plot.setInsets : if z0 == 0 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : if z1 == 0
org.jfree.chart.ChartFactory.createPieChart : if z1 == 0 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r7 = new org.jfree.chart.labels.StandardPieToolTipGenerator
org.jfree.chart.ChartFactory.createPieChart : $r7 = new org.jfree.chart.labels.StandardPieToolTipGenerator >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r7.<org.jfree.chart.labels.StandardPieToolTipGenerator: void <init>()>()
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r7.<org.jfree.chart.labels.StandardPieToolTipGenerator: void <init>()>() >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)>($r7)
org.jfree.chart.ChartFactory.createPieChart : virtualinvoke r3.<org.jfree.chart.plot.PiePlot: void setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)>($r7) >>>>>>>> org.jfree.chart.plot.PiePlot.setToolTipGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieToolTipGenerator toolTipGenerator> = r1
org.jfree.chart.plot.PiePlot.setToolTipGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieToolTipGenerator toolTipGenerator> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setToolTipGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setToolTipGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : if z2 == 0
org.jfree.chart.ChartFactory.createPieChart : if z2 == 0 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r9 = new org.jfree.chart.JFreeChart
org.jfree.chart.ChartFactory.createPieChart : $r9 = new org.jfree.chart.JFreeChart >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r10 = <org.jfree.chart.JFreeChart: java.awt.Font DEFAULT_TITLE_FONT>
org.jfree.chart.ChartFactory.createPieChart : $r10 = <org.jfree.chart.JFreeChart: java.awt.Font DEFAULT_TITLE_FONT> >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r9.<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>(r0, $r10, r3, z0)
org.jfree.chart.ChartFactory.createPieChart : specialinvoke $r9.<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>(r0, $r10, r3, z0) >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1)
org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding") >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin") >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame") >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if $z0 == 0
org.jfree.chart.title.Title.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2
org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if i0 < 0
org.jfree.chart.title.Title.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.setPosition : if $r2 == r1
org.jfree.chart.title.Title.setPosition : if $r2 == r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3)
org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3) >>>>>>>> org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1)
org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1) >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : r4 = $r9
org.jfree.chart.ChartFactory.createPieChart : r4 = $r9 >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : $r11 = <org.jfree.chart.ChartFactory: org.jfree.chart.ChartTheme currentTheme>
org.jfree.chart.ChartFactory.createPieChart : $r11 = <org.jfree.chart.ChartFactory: org.jfree.chart.ChartTheme currentTheme> >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : interfaceinvoke $r11.<org.jfree.chart.ChartTheme: void apply(org.jfree.chart.JFreeChart)>(r4)
org.jfree.chart.ChartFactory.createPieChart : interfaceinvoke $r11.<org.jfree.chart.ChartTheme: void apply(org.jfree.chart.JFreeChart)>(r4) >>>>>>>> org.jfree.chart.StandardChartTheme.apply : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "chart")
org.jfree.chart.StandardChartTheme.apply : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "chart") >>>>>>>> org.jfree.chart.StandardChartTheme.apply : r2 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle getTitle()>()
org.jfree.chart.StandardChartTheme.apply : r2 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle getTitle()>() >>>>>>>> org.jfree.chart.JFreeChart.getTitle : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.getTitle : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title> >>>>>>>> org.jfree.chart.JFreeChart.getTitle : return $r1
org.jfree.chart.JFreeChart.getTitle : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : if r2 == null
org.jfree.chart.StandardChartTheme.apply : if r2 == null >>>>>>>> org.jfree.chart.StandardChartTheme.apply : $r3 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>
org.jfree.chart.StandardChartTheme.apply : $r3 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont> >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r2.<org.jfree.chart.title.TextTitle: void setFont(java.awt.Font)>($r3)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r2.<org.jfree.chart.title.TextTitle: void setFont(java.awt.Font)>($r3) >>>>>>>> org.jfree.chart.title.TextTitle.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.title.TextTitle.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.title.TextTitle.setFont : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.setFont : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> >>>>>>>> org.jfree.chart.title.TextTitle.setFont : $z0 = virtualinvoke $r2.<java.awt.Font: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.TextTitle.setFont : $z0 = virtualinvoke $r2.<java.awt.Font: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.title.TextTitle.setFont : if $z0 != 0
org.jfree.chart.title.TextTitle.setFont : if $z0 != 0 >>>>>>>> org.jfree.chart.title.TextTitle.setFont : r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> = r1
org.jfree.chart.title.TextTitle.setFont : r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> = r1 >>>>>>>> org.jfree.chart.title.TextTitle.setFont : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.TextTitle.setFont : $r3 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.TextTitle.setFont : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.TextTitle.setFont : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.TextTitle.setFont : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3)
org.jfree.chart.title.TextTitle.setFont : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3) >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r4 = r2[i0]
org.jfree.chart.title.Title.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if $r4 != class "org/jfree/chart/event/TitleChangeListener"
org.jfree.chart.title.Title.notifyListeners : if $r4 != class "org/jfree/chart/event/TitleChangeListener" >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $i2 = i0 + 1
org.jfree.chart.title.Title.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.title.Title.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r6 = (org.jfree.chart.event.TitleChangeListener) $r5
org.jfree.chart.title.Title.notifyListeners : $r6 = (org.jfree.chart.event.TitleChangeListener) $r5 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.TitleChangeListener: void titleChanged(org.jfree.chart.event.TitleChangeEvent)>(r1)
org.jfree.chart.title.Title.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.TitleChangeListener: void titleChanged(org.jfree.chart.event.TitleChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r1.<org.jfree.chart.event.TitleChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r1.<org.jfree.chart.event.TitleChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1
org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1 >>>>>>>> org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify>
org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify> >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if $z0 == 0
org.jfree.chart.JFreeChart.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners> >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2
org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0
org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : i0 = i0 + -2
org.jfree.chart.title.Title.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : goto [?= (branch)]
org.jfree.chart.title.Title.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.StandardChartTheme.apply : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>
org.jfree.chart.StandardChartTheme.apply : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint> >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r2.<org.jfree.chart.title.TextTitle: void setPaint(java.awt.Paint)>($r4)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r2.<org.jfree.chart.title.TextTitle: void setPaint(java.awt.Paint)>($r4) >>>>>>>> org.jfree.chart.title.TextTitle.setPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.title.TextTitle.setPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.title.TextTitle.setPaint : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>
org.jfree.chart.title.TextTitle.setPaint : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint> >>>>>>>> org.jfree.chart.title.TextTitle.setPaint : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.TextTitle.setPaint : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.title.TextTitle.setPaint : if $z0 != 0
org.jfree.chart.title.TextTitle.setPaint : if $z0 != 0 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : i0 = virtualinvoke r1.<org.jfree.chart.JFreeChart: int getSubtitleCount()>()
org.jfree.chart.StandardChartTheme.apply : i0 = virtualinvoke r1.<org.jfree.chart.JFreeChart: int getSubtitleCount()>() >>>>>>>> org.jfree.chart.JFreeChart.getSubtitleCount : $r1 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.getSubtitleCount : $r1 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles> >>>>>>>> org.jfree.chart.JFreeChart.getSubtitleCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.chart.JFreeChart.getSubtitleCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.JFreeChart.getSubtitleCount : return $i0
org.jfree.chart.JFreeChart.getSubtitleCount : return $i0 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : i1 = 0
org.jfree.chart.StandardChartTheme.apply : i1 = 0 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : if i1 >= i0
org.jfree.chart.StandardChartTheme.apply : if i1 >= i0 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : $r5 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.Title getSubtitle(int)>(i1)
org.jfree.chart.StandardChartTheme.apply : $r5 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.Title getSubtitle(int)>(i1) >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : if i0 < 0
org.jfree.chart.JFreeChart.getSubtitle : if i0 < 0 >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : $i1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: int getSubtitleCount()>()
org.jfree.chart.JFreeChart.getSubtitle : $i1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: int getSubtitleCount()>() >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : if i0 < $i1
org.jfree.chart.JFreeChart.getSubtitle : if i0 < $i1 >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : $r2 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.getSubtitle : $r2 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles> >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.JFreeChart.getSubtitle : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : $r4 = (org.jfree.chart.title.Title) $r3
org.jfree.chart.JFreeChart.getSubtitle : $r4 = (org.jfree.chart.title.Title) $r3 >>>>>>>> org.jfree.chart.JFreeChart.getSubtitle : return $r4
org.jfree.chart.JFreeChart.getSubtitle : return $r4 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToTitle(org.jfree.chart.title.Title)>($r5)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToTitle(org.jfree.chart.title.Title)>($r5) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $z0 = r1 instanceof org.jfree.chart.title.TextTitle
org.jfree.chart.StandardChartTheme.applyToTitle : $z0 = r1 instanceof org.jfree.chart.title.TextTitle >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : if $z0 == 0
org.jfree.chart.StandardChartTheme.applyToTitle : if $z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $z1 = r1 instanceof org.jfree.chart.title.LegendTitle
org.jfree.chart.StandardChartTheme.applyToTitle : $z1 = r1 instanceof org.jfree.chart.title.LegendTitle >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : if $z1 == 0
org.jfree.chart.StandardChartTheme.applyToTitle : if $z1 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : r9 = (org.jfree.chart.title.LegendTitle) r1
org.jfree.chart.StandardChartTheme.applyToTitle : r9 = (org.jfree.chart.title.LegendTitle) r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r10 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.StandardChartTheme.applyToTitle : $r10 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: java.awt.Paint getBackgroundPaint()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getBackgroundPaint : $r1 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.getBackgroundPaint : $r1 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.getBackgroundPaint : return $r1
org.jfree.chart.title.LegendTitle.getBackgroundPaint : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : if $r10 == null
org.jfree.chart.StandardChartTheme.applyToTitle : if $r10 == null >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r11 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>
org.jfree.chart.StandardChartTheme.applyToTitle : $r11 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setBackgroundPaint(java.awt.Paint)>($r11)
org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setBackgroundPaint(java.awt.Paint)>($r11) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r12 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToTitle : $r12 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setItemFont(java.awt.Font)>($r12)
org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setItemFont(java.awt.Font)>($r12) >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.title.LegendTitle.setItemFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> = r1
org.jfree.chart.title.LegendTitle.setItemFont : r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setItemFont : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setItemFont : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setItemFont : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setItemFont : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r13 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>
org.jfree.chart.StandardChartTheme.applyToTitle : $r13 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setItemPaint(java.awt.Paint)>($r13)
org.jfree.chart.StandardChartTheme.applyToTitle : virtualinvoke r9.<org.jfree.chart.title.LegendTitle: void setItemPaint(java.awt.Paint)>($r13) >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.title.LegendTitle.setItemPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = r1
org.jfree.chart.title.LegendTitle.setItemPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setItemPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setItemPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setItemPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setItemPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : $r14 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer getWrapper()>()
org.jfree.chart.StandardChartTheme.applyToTitle : $r14 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer getWrapper()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getWrapper : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.getWrapper : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.getWrapper : return $r1
org.jfree.chart.title.LegendTitle.getWrapper : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : if $r14 == null
org.jfree.chart.StandardChartTheme.applyToTitle : if $r14 == null >>>>>>>> org.jfree.chart.StandardChartTheme.applyToTitle : goto [?= return]
org.jfree.chart.StandardChartTheme.applyToTitle : goto [?= return] >>>>>>>> org.jfree.chart.StandardChartTheme.apply : i1 = i1 + 1
org.jfree.chart.StandardChartTheme.apply : i1 = i1 + 1 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : goto [?= (branch)]
org.jfree.chart.StandardChartTheme.apply : goto [?= (branch)] >>>>>>>> org.jfree.chart.StandardChartTheme.apply : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>
org.jfree.chart.StandardChartTheme.apply : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r1.<org.jfree.chart.JFreeChart: void setBackgroundPaint(java.awt.Paint)>($r6)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r1.<org.jfree.chart.JFreeChart: void setBackgroundPaint(java.awt.Paint)>($r6) >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : $r2 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.setBackgroundPaint : $r2 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : if $r2 == null
org.jfree.chart.JFreeChart.setBackgroundPaint : if $r2 == null >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : $r3 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.setBackgroundPaint : $r3 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.JFreeChart.setBackgroundPaint : $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : if $z0 != 0
org.jfree.chart.JFreeChart.setBackgroundPaint : if $z0 != 0 >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.JFreeChart.setBackgroundPaint : r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.JFreeChart: void fireChartChanged()>()
org.jfree.chart.JFreeChart.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.JFreeChart: void fireChartChanged()>() >>>>>>>> org.jfree.chart.JFreeChart.fireChartChanged : $r1 = new org.jfree.chart.event.ChartChangeEvent
org.jfree.chart.JFreeChart.fireChartChanged : $r1 = new org.jfree.chart.event.ChartChangeEvent >>>>>>>> org.jfree.chart.JFreeChart.fireChartChanged : specialinvoke $r1.<org.jfree.chart.event.ChartChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.JFreeChart.fireChartChanged : specialinvoke $r1.<org.jfree.chart.event.ChartChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.JFreeChart.fireChartChanged : r2 = $r1
org.jfree.chart.JFreeChart.fireChartChanged : r2 = $r1 >>>>>>>> org.jfree.chart.JFreeChart.fireChartChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r2)
org.jfree.chart.JFreeChart.fireChartChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.setBackgroundPaint : goto [?= return]
org.jfree.chart.JFreeChart.setBackgroundPaint : goto [?= return] >>>>>>>> org.jfree.chart.StandardChartTheme.apply : r7 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.StandardChartTheme.apply : r7 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.JFreeChart.getPlot : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.getPlot : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.JFreeChart.getPlot : return $r1
org.jfree.chart.JFreeChart.getPlot : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.apply : if r7 == null
org.jfree.chart.StandardChartTheme.apply : if r7 == null >>>>>>>> org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(r7)
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(r7) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot")
org.jfree.chart.StandardChartTheme.applyToPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot") >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : if $r2 == null
org.jfree.chart.StandardChartTheme.applyToPlot : if $r2 == null >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r3 = virtualinvoke r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r3 = virtualinvoke r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = null
org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = null >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r4 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r4 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : $z0 = $r4 instanceof org.jfree.util.PublicCloneable
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $z0 = $r4 instanceof org.jfree.util.PublicCloneable >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : if $z0 == 0
org.jfree.chart.StandardChartTheme.getDrawingSupplier : if $z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : r2 = (org.jfree.util.PublicCloneable) $r5
org.jfree.chart.StandardChartTheme.getDrawingSupplier : r2 = (org.jfree.util.PublicCloneable) $r5 >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r6 = interfaceinvoke r2.<org.jfree.util.PublicCloneable: java.lang.Object clone()>()
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r6 = interfaceinvoke r2.<org.jfree.util.PublicCloneable: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2
org.jfree.chart.plot.DefaultDrawingSupplier.clone : r1 = (org.jfree.chart.plot.DefaultDrawingSupplier) $r2 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1 >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = (org.jfree.chart.plot.DrawingSupplier) $r6
org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = (org.jfree.chart.plot.DrawingSupplier) $r6 >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : goto [?= return r1]
org.jfree.chart.StandardChartTheme.getDrawingSupplier : goto [?= return r1] >>>>>>>> org.jfree.chart.StandardChartTheme.getDrawingSupplier : return r1
org.jfree.chart.StandardChartTheme.getDrawingSupplier : return r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)>($r3)
org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)>($r3) >>>>>>>> org.jfree.chart.plot.Plot.setDrawingSupplier : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = r1
org.jfree.chart.plot.Plot.setDrawingSupplier : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setDrawingSupplier : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setDrawingSupplier : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0]
org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $r4 != class "org/jfree/chart/event/PlotChangeListener"
org.jfree.chart.plot.Plot.notifyListeners : if $r4 != class "org/jfree/chart/event/PlotChangeListener" >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1
org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.plot.Plot.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r6 = (org.jfree.chart.event.PlotChangeListener) $r5
org.jfree.chart.plot.Plot.notifyListeners : $r6 = (org.jfree.chart.event.PlotChangeListener) $r5 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.PlotChangeListener: void plotChanged(org.jfree.chart.event.PlotChangeEvent)>(r1)
org.jfree.chart.plot.Plot.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.PlotChangeListener: void plotChanged(org.jfree.chart.event.PlotChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0) >>>>>>>> org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = i0 + -2
org.jfree.chart.plot.Plot.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : goto [?= (branch)]
org.jfree.chart.plot.Plot.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r4 = virtualinvoke r1.<org.jfree.chart.plot.Plot: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r4 = virtualinvoke r1.<org.jfree.chart.plot.Plot: java.awt.Paint getBackgroundPaint()>() >>>>>>>> org.jfree.chart.plot.Plot.getBackgroundPaint : $r1 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.getBackgroundPaint : $r1 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.getBackgroundPaint : return $r1
org.jfree.chart.plot.Plot.getBackgroundPaint : return $r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : if $r4 == null
org.jfree.chart.StandardChartTheme.applyToPlot : if $r4 == null >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>
org.jfree.chart.StandardChartTheme.applyToPlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setBackgroundPaint(java.awt.Paint)>($r5)
org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setBackgroundPaint(java.awt.Paint)>($r5) >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : if r1 != null
org.jfree.chart.plot.Plot.setBackgroundPaint : if r1 != null >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.setBackgroundPaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : if $r3 == null
org.jfree.chart.plot.Plot.setBackgroundPaint : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.setBackgroundPaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.Plot.setBackgroundPaint : $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : if $z0 == 0
org.jfree.chart.plot.Plot.setBackgroundPaint : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.plot.Plot.setBackgroundPaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>
org.jfree.chart.StandardChartTheme.applyToPlot : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setOutlinePaint(java.awt.Paint)>($r6)
org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setOutlinePaint(java.awt.Paint)>($r6) >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : if r1 != null
org.jfree.chart.plot.Plot.setOutlinePaint : if r1 != null >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.setOutlinePaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : if $r3 == null
org.jfree.chart.plot.Plot.setOutlinePaint : if $r3 == null >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.setOutlinePaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.Plot.setOutlinePaint : $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : if $z0 == 0
org.jfree.chart.plot.Plot.setOutlinePaint : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = r1
org.jfree.chart.plot.Plot.setOutlinePaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $z0 = r1 instanceof org.jfree.chart.plot.PiePlot
org.jfree.chart.StandardChartTheme.applyToPlot : $z0 = r1 instanceof org.jfree.chart.plot.PiePlot >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : if $z0 == 0
org.jfree.chart.StandardChartTheme.applyToPlot : if $z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : $r7 = (org.jfree.chart.plot.PiePlot) r1
org.jfree.chart.StandardChartTheme.applyToPlot : $r7 = (org.jfree.chart.plot.PiePlot) r1 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPiePlot(org.jfree.chart.plot.PiePlot)>($r7)
org.jfree.chart.StandardChartTheme.applyToPlot : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPiePlot(org.jfree.chart.plot.PiePlot)>($r7) >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $r2 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r2 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelLinkPaint(java.awt.Paint)>($r2)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelLinkPaint(java.awt.Paint)>($r2) >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkPaint : r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint> = r1
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkPaint : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $r3 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r3 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)>($r3)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)>($r3) >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkStyle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "style")
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "style") >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkStyle : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> = r1
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelLinkStyle : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelFont(java.awt.Font)>($r4)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setLabelFont(java.awt.Font)>($r4) >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.plot.PiePlot.setLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelFont : r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont> = r1
org.jfree.chart.plot.PiePlot.setLabelFont : r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setLabelFont : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelFont : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator> >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setShadowGenerator(org.jfree.chart.util.ShadowGenerator)>($r5)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void setShadowGenerator(org.jfree.chart.util.ShadowGenerator)>($r5) >>>>>>>> org.jfree.chart.plot.PiePlot.setShadowGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> = r1
org.jfree.chart.plot.PiePlot.setShadowGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> = r1 >>>>>>>> org.jfree.chart.plot.PiePlot.setShadowGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setShadowGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $z0 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z0 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionPaint>
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionPaint> >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : return $z0
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : return $z0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z0 == 0
org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void clearSectionPaints(boolean)>(0)
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void clearSectionPaints(boolean)>(0) >>>>>>>> org.jfree.chart.plot.PiePlot.clearSectionPaints : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap>
org.jfree.chart.plot.PiePlot.clearSectionPaints : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap> >>>>>>>> org.jfree.chart.plot.PiePlot.clearSectionPaints : virtualinvoke $r1.<org.jfree.chart.PaintMap: void clear()>()
org.jfree.chart.plot.PiePlot.clearSectionPaints : virtualinvoke $r1.<org.jfree.chart.PaintMap: void clear()>() >>>>>>>> org.jfree.chart.PaintMap.clear : $r1 = r0.<org.jfree.chart.PaintMap: java.util.Map store>
org.jfree.chart.PaintMap.clear : $r1 = r0.<org.jfree.chart.PaintMap: java.util.Map store> >>>>>>>> org.jfree.chart.PaintMap.clear : interfaceinvoke $r1.<java.util.Map: void clear()>()
org.jfree.chart.PaintMap.clear : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> org.jfree.chart.plot.PiePlot.clearSectionPaints : if z0 == 0
org.jfree.chart.plot.PiePlot.clearSectionPaints : if z0 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $z1 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z1 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlinePaint>
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlinePaint> >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : return $z0
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : return $z0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z1 == 0
org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z1 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : $z2 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z2 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>() >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlineStroke>
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlineStroke> >>>>>>>> org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : return $z0
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : return $z0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z2 == 0
org.jfree.chart.StandardChartTheme.applyToPiePlot : if $z2 == 0 >>>>>>>> org.jfree.chart.StandardChartTheme.applyToPlot : goto [?= return]
org.jfree.chart.StandardChartTheme.applyToPlot : goto [?= return] >>>>>>>> org.jfree.chart.ChartFactory.createPieChart : return r4
org.jfree.chart.ChartFactory.createPieChart : return r4 >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createChart : $r3 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.demo.PieChartDemo1.createChart : $r3 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createChart : r2 = (org.jfree.chart.plot.PiePlot) $r3
org.jfree.chart.demo.PieChartDemo1.createChart : r2 = (org.jfree.chart.plot.PiePlot) $r3 >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createChart : virtualinvoke r2.<org.jfree.chart.plot.PiePlot: void setSectionOutlinesVisible(boolean)>(0)
org.jfree.chart.demo.PieChartDemo1.createChart : virtualinvoke r2.<org.jfree.chart.plot.PiePlot: void setSectionOutlinesVisible(boolean)>(0) >>>>>>>> org.jfree.chart.plot.PiePlot.setSectionOutlinesVisible : r0.<org.jfree.chart.plot.PiePlot: boolean sectionOutlinesVisible> = z0
org.jfree.chart.plot.PiePlot.setSectionOutlinesVisible : r0.<org.jfree.chart.plot.PiePlot: boolean sectionOutlinesVisible> = z0 >>>>>>>> org.jfree.chart.plot.PiePlot.setSectionOutlinesVisible : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setSectionOutlinesVisible : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createChart : virtualinvoke r2.<org.jfree.chart.plot.PiePlot: void setNoDataMessage(java.lang.String)>("No data available")
org.jfree.chart.demo.PieChartDemo1.createChart : virtualinvoke r2.<org.jfree.chart.plot.PiePlot: void setNoDataMessage(java.lang.String)>("No data available") >>>>>>>> org.jfree.chart.plot.Plot.setNoDataMessage : r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage> = r1
org.jfree.chart.plot.Plot.setNoDataMessage : r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setNoDataMessage : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setNoDataMessage : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createChart : return r1
org.jfree.chart.demo.PieChartDemo1.createChart : return r1 >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDemoPanel : $r3 = new org.jfree.chart.ChartPanel
org.jfree.chart.demo.PieChartDemo1.createDemoPanel : $r3 = new org.jfree.chart.ChartPanel >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDemoPanel : specialinvoke $r3.<org.jfree.chart.ChartPanel: void <init>(org.jfree.chart.JFreeChart)>(r1)
org.jfree.chart.demo.PieChartDemo1.createDemoPanel : specialinvoke $r3.<org.jfree.chart.ChartPanel: void <init>(org.jfree.chart.JFreeChart)>(r1) >>>>>>>> org.jfree.chart.ChartPanel.updateUI : $r1 = r0.<org.jfree.chart.ChartPanel: javax.swing.JPopupMenu popup>
org.jfree.chart.ChartPanel.updateUI : $r1 = r0.<org.jfree.chart.ChartPanel: javax.swing.JPopupMenu popup> >>>>>>>> org.jfree.chart.ChartPanel.updateUI : if $r1 == null
org.jfree.chart.ChartPanel.updateUI : if $r1 == null >>>>>>>> org.jfree.chart.ChartPanel.updateUI : specialinvoke r0.<javax.swing.JPanel: void updateUI()>()
org.jfree.chart.ChartPanel.updateUI : specialinvoke r0.<javax.swing.JPanel: void updateUI()>() >>>>>>>> org.jfree.chart.ChartPanel.setChart : $r4 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart>
org.jfree.chart.ChartPanel.setChart : $r4 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart> >>>>>>>> org.jfree.chart.ChartPanel.setChart : if $r4 == null
org.jfree.chart.ChartPanel.setChart : if $r4 == null >>>>>>>> org.jfree.chart.ChartPanel.setChart : r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart> = r1
org.jfree.chart.ChartPanel.setChart : r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart> = r1 >>>>>>>> org.jfree.chart.ChartPanel.setChart : if r1 == null
org.jfree.chart.ChartPanel.setChart : if r1 == null >>>>>>>> org.jfree.chart.ChartPanel.setChart : $r7 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart>
org.jfree.chart.ChartPanel.setChart : $r7 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart> >>>>>>>> org.jfree.chart.ChartPanel.setChart : virtualinvoke $r7.<org.jfree.chart.JFreeChart: void addChangeListener(org.jfree.chart.event.ChartChangeListener)>(r0)
org.jfree.chart.ChartPanel.setChart : virtualinvoke $r7.<org.jfree.chart.JFreeChart: void addChangeListener(org.jfree.chart.event.ChartChangeListener)>(r0) >>>>>>>> org.jfree.chart.JFreeChart.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.JFreeChart.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener") >>>>>>>> org.jfree.chart.JFreeChart.addChangeListener : $r2 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.JFreeChart.addChangeListener : $r2 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners> >>>>>>>> org.jfree.chart.JFreeChart.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/ChartChangeListener", r1)
org.jfree.chart.JFreeChart.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/ChartChangeListener", r1) >>>>>>>> org.jfree.chart.ChartPanel.setChart : $r8 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart>
org.jfree.chart.ChartPanel.setChart : $r8 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart> >>>>>>>> org.jfree.chart.ChartPanel.setChart : virtualinvoke $r8.<org.jfree.chart.JFreeChart: void addProgressListener(org.jfree.chart.event.ChartProgressListener)>(r0)
org.jfree.chart.ChartPanel.setChart : virtualinvoke $r8.<org.jfree.chart.JFreeChart: void addProgressListener(org.jfree.chart.event.ChartProgressListener)>(r0) >>>>>>>> org.jfree.chart.JFreeChart.addProgressListener : $r2 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.chart.JFreeChart.addProgressListener : $r2 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners> >>>>>>>> org.jfree.chart.JFreeChart.addProgressListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/ChartProgressListener", r1)
org.jfree.chart.JFreeChart.addProgressListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/ChartProgressListener", r1) >>>>>>>> org.jfree.chart.ChartPanel.setChart : r2 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.ChartPanel.setChart : r2 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.ChartPanel.setChart : r0.<org.jfree.chart.ChartPanel: boolean domainZoomable> = 0
org.jfree.chart.ChartPanel.setChart : r0.<org.jfree.chart.ChartPanel: boolean domainZoomable> = 0 >>>>>>>> org.jfree.chart.ChartPanel.setChart : r0.<org.jfree.chart.ChartPanel: boolean rangeZoomable> = 0
org.jfree.chart.ChartPanel.setChart : r0.<org.jfree.chart.ChartPanel: boolean rangeZoomable> = 0 >>>>>>>> org.jfree.chart.ChartPanel.setChart : $z0 = r2 instanceof org.jfree.chart.plot.Zoomable
org.jfree.chart.ChartPanel.setChart : $z0 = r2 instanceof org.jfree.chart.plot.Zoomable >>>>>>>> org.jfree.chart.ChartPanel.setChart : if $z0 == 0
org.jfree.chart.ChartPanel.setChart : if $z0 == 0 >>>>>>>> org.jfree.chart.ChartPanel.setChart : goto [?= $z3 = r0.<org.jfree.chart.ChartPanel: boolean useBuffer>]
org.jfree.chart.ChartPanel.setChart : goto [?= $z3 = r0.<org.jfree.chart.ChartPanel: boolean useBuffer>] >>>>>>>> org.jfree.chart.ChartPanel.setChart : $z3 = r0.<org.jfree.chart.ChartPanel: boolean useBuffer>
org.jfree.chart.ChartPanel.setChart : $z3 = r0.<org.jfree.chart.ChartPanel: boolean useBuffer> >>>>>>>> org.jfree.chart.ChartPanel.setChart : if $z3 == 0
org.jfree.chart.ChartPanel.setChart : if $z3 == 0 >>>>>>>> org.jfree.chart.ChartPanel.setChart : virtualinvoke r0.<org.jfree.chart.ChartPanel: void repaint()>()
org.jfree.chart.ChartPanel.setChart : virtualinvoke r0.<org.jfree.chart.ChartPanel: void repaint()>() >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r1 = new javax.swing.JPopupMenu
org.jfree.chart.ChartPanel.createPopupMenu : $r1 = new javax.swing.JPopupMenu >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r2 = new java.lang.StringBuilder
org.jfree.chart.ChartPanel.createPopupMenu : $r2 = new java.lang.StringBuilder >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r7 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r7 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r8 = virtualinvoke $r7.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Chart")
org.jfree.chart.ChartPanel.createPopupMenu : $r8 = virtualinvoke $r7.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Chart") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.jfree.chart.ChartPanel.createPopupMenu : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.jfree.chart.ChartPanel.createPopupMenu : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.chart.ChartPanel.createPopupMenu : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r1.<javax.swing.JPopupMenu: void <init>(java.lang.String)>($r11)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r1.<javax.swing.JPopupMenu: void <init>(java.lang.String)>($r11) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r3 = $r1
org.jfree.chart.ChartPanel.createPopupMenu : r3 = $r1 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : z5 = 0
org.jfree.chart.ChartPanel.createPopupMenu : z5 = 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : if z0 == 0
org.jfree.chart.ChartPanel.createPopupMenu : if z0 == 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r12 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r12 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r13 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r13 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r14 = virtualinvoke $r13.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Properties...")
org.jfree.chart.ChartPanel.createPopupMenu : $r14 = virtualinvoke $r13.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Properties...") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r12.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r14)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r12.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r14) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r4 = $r12
org.jfree.chart.ChartPanel.createPopupMenu : r4 = $r12 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r4.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("PROPERTIES")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r4.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("PROPERTIES") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r4.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r4.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r4)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r4) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : z5 = 1
org.jfree.chart.ChartPanel.createPopupMenu : z5 = 1 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : if z1 == 0
org.jfree.chart.ChartPanel.createPopupMenu : if z1 == 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : if z5 == 0
org.jfree.chart.ChartPanel.createPopupMenu : if z5 == 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: void addSeparator()>()
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: void addSeparator()>() >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r16 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r16 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r17 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r17 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r18 = virtualinvoke $r17.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Copy")
org.jfree.chart.ChartPanel.createPopupMenu : $r18 = virtualinvoke $r17.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Copy") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r16.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r18)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r16.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r18) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r19 = $r16
org.jfree.chart.ChartPanel.createPopupMenu : r19 = $r16 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r19.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("COPY")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r19.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("COPY") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r19.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r19.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r19)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r19) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : if z2 != 0
org.jfree.chart.ChartPanel.createPopupMenu : if z2 != 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $z6 = 0
org.jfree.chart.ChartPanel.createPopupMenu : $z6 = 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : z5 = $z6
org.jfree.chart.ChartPanel.createPopupMenu : z5 = $z6 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : if z2 == 0
org.jfree.chart.ChartPanel.createPopupMenu : if z2 == 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r21 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r21 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r22 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r22 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r23 = virtualinvoke $r22.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Save_as...")
org.jfree.chart.ChartPanel.createPopupMenu : $r23 = virtualinvoke $r22.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Save_as...") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r21.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r23)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r21.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r23) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r24 = $r21
org.jfree.chart.ChartPanel.createPopupMenu : r24 = $r21 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r24.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("SAVE")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r24.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("SAVE") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r24.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r24.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r24)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r24) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : if z3 == 0
org.jfree.chart.ChartPanel.createPopupMenu : if z3 == 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r26 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r26 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r27 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r27 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r28 = virtualinvoke $r27.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Print...")
org.jfree.chart.ChartPanel.createPopupMenu : $r28 = virtualinvoke $r27.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Print...") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r26.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r28)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r26.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r28) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r29 = $r26
org.jfree.chart.ChartPanel.createPopupMenu : r29 = $r26 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r29.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("PRINT")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r29.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("PRINT") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r29.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r29.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r29)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r29) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : if z4 == 0
org.jfree.chart.ChartPanel.createPopupMenu : if z4 == 0 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r31 = new javax.swing.JMenu
org.jfree.chart.ChartPanel.createPopupMenu : $r31 = new javax.swing.JMenu >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r32 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r32 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r33 = virtualinvoke $r32.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Zoom_In")
org.jfree.chart.ChartPanel.createPopupMenu : $r33 = virtualinvoke $r32.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Zoom_In") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r31.<javax.swing.JMenu: void <init>(java.lang.String)>($r33)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r31.<javax.swing.JMenu: void <init>(java.lang.String)>($r33) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r34 = $r31
org.jfree.chart.ChartPanel.createPopupMenu : r34 = $r31 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r35 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r35 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r36 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r36 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r37 = virtualinvoke $r36.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("All_Axes")
org.jfree.chart.ChartPanel.createPopupMenu : $r37 = virtualinvoke $r36.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("All_Axes") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r35.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r37)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r35.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r37) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInBothMenuItem> = $r35
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInBothMenuItem> = $r35 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r38 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r38 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r38.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_IN_BOTH")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r38.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_IN_BOTH") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r39 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r39 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r39.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r39.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r40 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r40 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r34.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r40)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r34.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r40) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r34.<javax.swing.JMenu: void addSeparator()>()
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r34.<javax.swing.JMenu: void addSeparator()>() >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r42 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r42 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r43 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r43 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r44 = virtualinvoke $r43.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Domain_Axis")
org.jfree.chart.ChartPanel.createPopupMenu : $r44 = virtualinvoke $r43.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Domain_Axis") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r42.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r44)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r42.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r44) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInDomainMenuItem> = $r42
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInDomainMenuItem> = $r42 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r45 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r45 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r45.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_IN_DOMAIN")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r45.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_IN_DOMAIN") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r46 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r46 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r46.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r46.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r47 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r47 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r34.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r47)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r34.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r47) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r49 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r49 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r50 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r50 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r51 = virtualinvoke $r50.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Range_Axis")
org.jfree.chart.ChartPanel.createPopupMenu : $r51 = virtualinvoke $r50.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Range_Axis") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r49.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r51)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r49.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r51) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInRangeMenuItem> = $r49
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInRangeMenuItem> = $r49 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r52 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r52 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r52.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_IN_RANGE")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r52.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_IN_RANGE") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r53 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r53 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r53.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r53.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r54 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r54 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomInRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r34.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r54)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r34.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r54) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r34)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r34) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r57 = new javax.swing.JMenu
org.jfree.chart.ChartPanel.createPopupMenu : $r57 = new javax.swing.JMenu >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r58 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r58 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r59 = virtualinvoke $r58.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Zoom_Out")
org.jfree.chart.ChartPanel.createPopupMenu : $r59 = virtualinvoke $r58.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Zoom_Out") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r57.<javax.swing.JMenu: void <init>(java.lang.String)>($r59)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r57.<javax.swing.JMenu: void <init>(java.lang.String)>($r59) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r5 = $r57
org.jfree.chart.ChartPanel.createPopupMenu : r5 = $r57 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r60 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r60 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r61 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r61 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r62 = virtualinvoke $r61.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("All_Axes")
org.jfree.chart.ChartPanel.createPopupMenu : $r62 = virtualinvoke $r61.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("All_Axes") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r60.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r62)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r60.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r62) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutBothMenuItem> = $r60
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutBothMenuItem> = $r60 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r63 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r63 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r63.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_OUT_BOTH")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r63.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_OUT_BOTH") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r64 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r64 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r64.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r64.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r65 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r65 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r5.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r65)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r5.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r65) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r5.<javax.swing.JMenu: void addSeparator()>()
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r5.<javax.swing.JMenu: void addSeparator()>() >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r67 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r67 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r68 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r68 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r69 = virtualinvoke $r68.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Domain_Axis")
org.jfree.chart.ChartPanel.createPopupMenu : $r69 = virtualinvoke $r68.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Domain_Axis") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r67.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r69)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r67.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r69) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutDomainMenuItem> = $r67
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutDomainMenuItem> = $r67 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r70 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r70 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r70.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_DOMAIN_BOTH")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r70.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_DOMAIN_BOTH") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r71 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r71 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r71.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r71.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r72 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r72 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r5.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r72)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r5.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r72) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r74 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r74 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r75 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r75 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r76 = virtualinvoke $r75.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Range_Axis")
org.jfree.chart.ChartPanel.createPopupMenu : $r76 = virtualinvoke $r75.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Range_Axis") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r74.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r76)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r74.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r76) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutRangeMenuItem> = $r74
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutRangeMenuItem> = $r74 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r77 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r77 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r77.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_RANGE_BOTH")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r77.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_RANGE_BOTH") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r78 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r78 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r78.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r78.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r79 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r79 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomOutRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r5.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r79)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r5.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r79) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r5)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r5) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r82 = new javax.swing.JMenu
org.jfree.chart.ChartPanel.createPopupMenu : $r82 = new javax.swing.JMenu >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r83 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r83 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r84 = virtualinvoke $r83.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Auto_Range")
org.jfree.chart.ChartPanel.createPopupMenu : $r84 = virtualinvoke $r83.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Auto_Range") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r82.<javax.swing.JMenu: void <init>(java.lang.String)>($r84)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r82.<javax.swing.JMenu: void <init>(java.lang.String)>($r84) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r6 = $r82
org.jfree.chart.ChartPanel.createPopupMenu : r6 = $r82 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r85 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r85 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r86 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r86 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r87 = virtualinvoke $r86.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("All_Axes")
org.jfree.chart.ChartPanel.createPopupMenu : $r87 = virtualinvoke $r86.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("All_Axes") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r85.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r87)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r85.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r87) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetBothMenuItem> = $r85
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetBothMenuItem> = $r85 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r88 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r88 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r88.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_RESET_BOTH")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r88.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_RESET_BOTH") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r89 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r89 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r89.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r89.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r90 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetBothMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r90 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetBothMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r6.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r90)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r6.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r90) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r6.<javax.swing.JMenu: void addSeparator()>()
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r6.<javax.swing.JMenu: void addSeparator()>() >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r92 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r92 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r93 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r93 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r94 = virtualinvoke $r93.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Domain_Axis")
org.jfree.chart.ChartPanel.createPopupMenu : $r94 = virtualinvoke $r93.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Domain_Axis") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r92.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r94)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r92.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r94) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetDomainMenuItem> = $r92
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetDomainMenuItem> = $r92 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r95 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r95 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r95.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_RESET_DOMAIN")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r95.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_RESET_DOMAIN") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r96 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r96 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r96.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r96.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r97 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetDomainMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r97 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetDomainMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r6.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r97)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r6.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r97) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r99 = new javax.swing.JMenuItem
org.jfree.chart.ChartPanel.createPopupMenu : $r99 = new javax.swing.JMenuItem >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r100 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources>
org.jfree.chart.ChartPanel.createPopupMenu : $r100 = <org.jfree.chart.ChartPanel: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r101 = virtualinvoke $r100.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Range_Axis")
org.jfree.chart.ChartPanel.createPopupMenu : $r101 = virtualinvoke $r100.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Range_Axis") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r99.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r101)
org.jfree.chart.ChartPanel.createPopupMenu : specialinvoke $r99.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r101) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetRangeMenuItem> = $r99
org.jfree.chart.ChartPanel.createPopupMenu : r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetRangeMenuItem> = $r99 >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r102 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r102 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r102.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_RESET_RANGE")
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r102.<javax.swing.JMenuItem: void setActionCommand(java.lang.String)>("ZOOM_RESET_RANGE") >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r103 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r103 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r103.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke $r103.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : $r104 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetRangeMenuItem>
org.jfree.chart.ChartPanel.createPopupMenu : $r104 = r0.<org.jfree.chart.ChartPanel: javax.swing.JMenuItem zoomResetRangeMenuItem> >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r6.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r104)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r6.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r104) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r6)
org.jfree.chart.ChartPanel.createPopupMenu : virtualinvoke r3.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r6) >>>>>>>> org.jfree.chart.ChartPanel.createPopupMenu : return r3
org.jfree.chart.ChartPanel.createPopupMenu : return r3 >>>>>>>> org.jfree.chart.ChartPanel.setDisplayToolTips : if z0 == 0
org.jfree.chart.ChartPanel.setDisplayToolTips : if z0 == 0 >>>>>>>> org.jfree.chart.ChartPanel.setDisplayToolTips : $r1 = staticinvoke <javax.swing.ToolTipManager: javax.swing.ToolTipManager sharedInstance()>()
org.jfree.chart.ChartPanel.setDisplayToolTips : $r1 = staticinvoke <javax.swing.ToolTipManager: javax.swing.ToolTipManager sharedInstance()>() >>>>>>>> org.jfree.chart.ChartPanel.setDisplayToolTips : virtualinvoke $r1.<javax.swing.ToolTipManager: void registerComponent(javax.swing.JComponent)>(r0)
org.jfree.chart.ChartPanel.setDisplayToolTips : virtualinvoke $r1.<javax.swing.ToolTipManager: void registerComponent(javax.swing.JComponent)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.setDisplayToolTips : goto [?= return]
org.jfree.chart.ChartPanel.setDisplayToolTips : goto [?= return] >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDemoPanel : r2 = $r3
org.jfree.chart.demo.PieChartDemo1.createDemoPanel : r2 = $r3 >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDemoPanel : virtualinvoke r2.<org.jfree.chart.ChartPanel: void setMouseWheelEnabled(boolean)>(1)
org.jfree.chart.demo.PieChartDemo1.createDemoPanel : virtualinvoke r2.<org.jfree.chart.ChartPanel: void setMouseWheelEnabled(boolean)>(1) >>>>>>>> org.jfree.chart.ChartPanel.setMouseWheelEnabled : if z0 == 0
org.jfree.chart.ChartPanel.setMouseWheelEnabled : if z0 == 0 >>>>>>>> org.jfree.chart.ChartPanel.setMouseWheelEnabled : $r2 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.MouseWheelHandler mouseWheelHandler>
org.jfree.chart.ChartPanel.setMouseWheelEnabled : $r2 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.MouseWheelHandler mouseWheelHandler> >>>>>>>> org.jfree.chart.ChartPanel.setMouseWheelEnabled : if $r2 != null
org.jfree.chart.ChartPanel.setMouseWheelEnabled : if $r2 != null >>>>>>>> org.jfree.chart.ChartPanel.setMouseWheelEnabled : $r1 = new org.jfree.chart.MouseWheelHandler
org.jfree.chart.ChartPanel.setMouseWheelEnabled : $r1 = new org.jfree.chart.MouseWheelHandler >>>>>>>> org.jfree.chart.ChartPanel.setMouseWheelEnabled : specialinvoke $r1.<org.jfree.chart.MouseWheelHandler: void <init>(org.jfree.chart.ChartPanel)>(r0)
org.jfree.chart.ChartPanel.setMouseWheelEnabled : specialinvoke $r1.<org.jfree.chart.MouseWheelHandler: void <init>(org.jfree.chart.ChartPanel)>(r0) >>>>>>>> org.jfree.chart.ChartPanel.setMouseWheelEnabled : r0.<org.jfree.chart.ChartPanel: org.jfree.chart.MouseWheelHandler mouseWheelHandler> = $r1
org.jfree.chart.ChartPanel.setMouseWheelEnabled : r0.<org.jfree.chart.ChartPanel: org.jfree.chart.MouseWheelHandler mouseWheelHandler> = $r1 >>>>>>>> org.jfree.chart.ChartPanel.setMouseWheelEnabled : goto [?= return]
org.jfree.chart.ChartPanel.setMouseWheelEnabled : goto [?= return] >>>>>>>> org.jfree.chart.demo.PieChartDemo1.createDemoPanel : return r2
org.jfree.chart.demo.PieChartDemo1.createDemoPanel : return r2 >>>>>>>> org.jfree.chart.ChartPanel.updateUI : $r2 = r0.<org.jfree.chart.ChartPanel: javax.swing.JPopupMenu popup>
org.jfree.chart.ChartPanel.updateUI : $r2 = r0.<org.jfree.chart.ChartPanel: javax.swing.JPopupMenu popup> >>>>>>>> org.jfree.chart.ChartPanel.updateUI : staticinvoke <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>($r2)
org.jfree.chart.ChartPanel.updateUI : staticinvoke <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>($r2) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r1 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r1 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r1.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r1.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : r2 = $r1
org.jfree.chart.axis.LogAxis.createLogTickUnits : r2 = $r1 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r4 = new org.jfree.chart.util.LogFormat
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r4 = new org.jfree.chart.util.LogFormat >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r4.<org.jfree.chart.util.LogFormat: void <init>()>()
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r4.<org.jfree.chart.util.LogFormat: void <init>()>() >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : r3 = $r4
org.jfree.chart.axis.LogAxis.createLogTickUnits : r3 = $r4 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r5 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r5 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r5.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r3, 2)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r5.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r3, 2) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r5)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r5) >>>>>>>> org.jfree.chart.axis.TickUnits.add : if r1 != null
org.jfree.chart.axis.TickUnits.add : if r1 != null >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4)
org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r6 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r6 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r6.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r6.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r6)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r6) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0
org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : return $d0
org.jfree.chart.axis.TickUnit.getSize : return $d0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 1 >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r7 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r7 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r7.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.2, r3, 2)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r7.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.2, r3, 2) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r7)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r7) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r8 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r8 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r8.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r3, 5)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r8.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r3, 5) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r8)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r8) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r9 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r9 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r9.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r9.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r9)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r9) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r10 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r10 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r10.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0, r3, 10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r10.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.0, r3, 10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r10)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r10) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r11 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r11 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(3.0, r3, 15)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r11.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(3.0, r3, 15) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r11)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r11) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r12 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r12 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(4.0, r3, 20)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r12.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(4.0, r3, 20) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r12)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r12) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r13 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r13 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r13.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r3, 25)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r13.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r3, 25) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r13)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r13) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r14 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r14 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r14.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(6.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r14.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(6.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r14)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r14) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r15 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r15 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r15.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(7.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r15.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(7.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r15)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r15) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r16 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r16 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(8.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(8.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r16)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r16) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r17 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r17 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r17.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(9.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r17.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(9.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r17)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r17) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : $r18 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.LogAxis.createLogTickUnits : $r18 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(10.0, r3)
org.jfree.chart.axis.LogAxis.createLogTickUnits : specialinvoke $r18.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(10.0, r3) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18)
org.jfree.chart.axis.LogAxis.createLogTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18) >>>>>>>> org.jfree.chart.axis.LogAxis.createLogTickUnits : return r2
org.jfree.chart.axis.LogAxis.createLogTickUnits : return r2 >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> = r1
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : $r2 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2)
org.jfree.chart.axis.ValueAxis.setDefaultAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2
org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0
org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.Axis.getLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont>
org.jfree.chart.axis.Axis.getLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.axis.Axis.getLabelFont : return $r1
org.jfree.chart.axis.Axis.getLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint>
org.jfree.chart.axis.Axis.getLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.axis.Axis.getLabelPaint : return $r1
org.jfree.chart.axis.Axis.getLabelPaint : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : return $r1
org.jfree.chart.axis.Axis.getTickLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelPaint : return $r1
org.jfree.chart.axis.Axis.getTickLabelPaint : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1
org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets>
org.jfree.chart.axis.Axis.getLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets> >>>>>>>> org.jfree.chart.axis.Axis.getLabelInsets : return $r1
org.jfree.chart.axis.Axis.getLabelInsets : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabel : $r1 = r0.<org.jfree.chart.axis.Axis: java.lang.String label>
org.jfree.chart.axis.Axis.getLabel : $r1 = r0.<org.jfree.chart.axis.Axis: java.lang.String label> >>>>>>>> org.jfree.chart.axis.Axis.getLabel : return $r1
org.jfree.chart.axis.Axis.getLabel : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.isTickLabelsVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible>
org.jfree.chart.axis.Axis.isTickLabelsVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible> >>>>>>>> org.jfree.chart.axis.Axis.isTickLabelsVisible : return $z0
org.jfree.chart.axis.Axis.isTickLabelsVisible : return $z0 >>>>>>>> org.jfree.chart.axis.Axis.isTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible>
org.jfree.chart.axis.Axis.isTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.isTickMarksVisible : return $z0
org.jfree.chart.axis.Axis.isTickMarksVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0
org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getLowerBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.ValueAxis.getLowerBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerBound : return $d0
org.jfree.chart.axis.ValueAxis.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getUpperBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.ValueAxis.getUpperBound : $d0 = virtualinvoke $r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperBound : return $d0
org.jfree.chart.axis.ValueAxis.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.getOtherTabs : $r1 = specialinvoke r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JTabbedPane getOtherTabs()>()
org.jfree.chart.editor.DefaultLogAxisEditor.getOtherTabs : $r1 = specialinvoke r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JTabbedPane getOtherTabs()>() >>>>>>>> org.jfree.chart.editor.DefaultAxisEditor.getOtherTabs : $r1 = r0.<org.jfree.chart.editor.DefaultAxisEditor: javax.swing.JTabbedPane otherTabs>
org.jfree.chart.editor.DefaultAxisEditor.getOtherTabs : $r1 = r0.<org.jfree.chart.editor.DefaultAxisEditor: javax.swing.JTabbedPane otherTabs> >>>>>>>> org.jfree.chart.editor.DefaultAxisEditor.getOtherTabs : return $r1
org.jfree.chart.editor.DefaultAxisEditor.getOtherTabs : return $r1 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.getOtherTabs : return $r1
org.jfree.chart.editor.DefaultLogAxisEditor.getOtherTabs : return $r1 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : r1 = specialinvoke r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JPanel createTickUnitPanel()>()
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : r1 = specialinvoke r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JPanel createTickUnitPanel()>() >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r1 = new javax.swing.JPanel
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r1 = new javax.swing.JPanel >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r2 = new org.jfree.layout.LCBLayout
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r2 = new org.jfree.layout.LCBLayout >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r2.<org.jfree.layout.LCBLayout: void <init>(int)>(3)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r2.<org.jfree.layout.LCBLayout: void <init>(int)>(3) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r1.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r2)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r1.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r2) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : r3 = $r1
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : r3 = $r1 >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r4 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(4, 4, 4, 4)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r4 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(4, 4, 4, 4) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke r3.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r4)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke r3.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r4) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r5 = new javax.swing.JPanel
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r5 = new javax.swing.JPanel >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r5.<javax.swing.JPanel: void <init>()>()
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r5.<javax.swing.JPanel: void <init>()>() >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke r3.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r5)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke r3.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r5) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r7 = new javax.swing.JCheckBox
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r7 = new javax.swing.JCheckBox >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r8 = <org.jfree.chart.editor.DefaultValueAxisEditor: java.util.ResourceBundle localizationResources>
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r8 = <org.jfree.chart.editor.DefaultValueAxisEditor: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r9 = virtualinvoke $r8.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Auto-TickUnit_Selection")
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r9 = virtualinvoke $r8.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Auto-TickUnit_Selection") >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $z0 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: boolean autoTickUnitSelection>
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $z0 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r7.<javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>($r9, $z0)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r7.<javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>($r9, $z0) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox> = $r7
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox> = $r7 >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r10 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox>
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r10 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox> >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke $r10.<javax.swing.JCheckBox: void setActionCommand(java.lang.String)>("AutoTickOnOff")
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke $r10.<javax.swing.JCheckBox: void setActionCommand(java.lang.String)>("AutoTickOnOff") >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r11 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox>
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r11 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox> >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke $r11.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke $r11.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r12 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox>
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r12 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox> >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke r3.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r12)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke r3.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r12) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r14 = new javax.swing.JPanel
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : $r14 = new javax.swing.JPanel >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r14.<javax.swing.JPanel: void <init>()>()
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : specialinvoke $r14.<javax.swing.JPanel: void <init>()>() >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke r3.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r14)
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : virtualinvoke r3.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r14) >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : return r3
org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel : return r3 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r2 = new javax.swing.JLabel
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r2 = new javax.swing.JLabel >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r3 = <org.jfree.chart.editor.DefaultLogAxisEditor: java.util.ResourceBundle localizationResources>
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r3 = <org.jfree.chart.editor.DefaultLogAxisEditor: java.util.ResourceBundle localizationResources> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r4 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Manual_TickUnit_value")
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r4 = virtualinvoke $r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Manual_TickUnit_value") >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : specialinvoke $r2.<javax.swing.JLabel: void <init>(java.lang.String)>($r4)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : specialinvoke $r2.<javax.swing.JLabel: void <init>(java.lang.String)>($r4) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke r1.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r2)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke r1.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r2) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r6 = new javax.swing.JTextField
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r6 = new javax.swing.JTextField >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $d0 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: double manualTickUnitValue>
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $d0 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: double manualTickUnitValue> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r7 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r7 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : specialinvoke $r6.<javax.swing.JTextField: void <init>(java.lang.String)>($r7)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : specialinvoke $r6.<javax.swing.JTextField: void <init>(java.lang.String)>($r7) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> = $r6
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> = $r6 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r8 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit>
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r8 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $z0 = virtualinvoke r0.<org.jfree.chart.editor.DefaultLogAxisEditor: boolean isAutoTickUnitSelection()>()
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $z0 = virtualinvoke r0.<org.jfree.chart.editor.DefaultLogAxisEditor: boolean isAutoTickUnitSelection()>() >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: boolean autoTickUnitSelection>
org.jfree.chart.editor.DefaultValueAxisEditor.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.isAutoTickUnitSelection : return $z0
org.jfree.chart.editor.DefaultValueAxisEditor.isAutoTickUnitSelection : return $z0 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : if $z0 != 0
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : if $z0 != 0 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $z1 = 0
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $z1 = 0 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke $r8.<javax.swing.JTextField: void setEnabled(boolean)>($z1)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke $r8.<javax.swing.JTextField: void setEnabled(boolean)>($z1) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r9 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit>
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r9 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke $r9.<javax.swing.JTextField: void setActionCommand(java.lang.String)>("TickUnitValue")
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke $r9.<javax.swing.JTextField: void setActionCommand(java.lang.String)>("TickUnitValue") >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r10 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit>
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r10 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke $r10.<javax.swing.JTextField: void addActionListener(java.awt.event.ActionListener)>(r0)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke $r10.<javax.swing.JTextField: void addActionListener(java.awt.event.ActionListener)>(r0) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r11 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit>
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r11 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke $r11.<javax.swing.JTextField: void addFocusListener(java.awt.event.FocusListener)>(r0)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke $r11.<javax.swing.JTextField: void addFocusListener(java.awt.event.FocusListener)>(r0) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r12 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit>
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r12 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke r1.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r12)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke r1.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r12) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r14 = new javax.swing.JPanel
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : $r14 = new javax.swing.JPanel >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : specialinvoke $r14.<javax.swing.JPanel: void <init>()>()
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : specialinvoke $r14.<javax.swing.JPanel: void <init>()>() >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke r1.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r14)
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : virtualinvoke r1.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r14) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : return r1
org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel : return r1 >>>>>>>> org.jfree.chart.axis.LogAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.LogAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.LogAxis.getTickUnit : return $r1
org.jfree.chart.axis.LogAxis.getTickUnit : return $r1 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : specialinvoke r0.<org.jfree.chart.editor.DefaultValueAxisEditor: void toggleAutoTick()>()
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : specialinvoke r0.<org.jfree.chart.editor.DefaultValueAxisEditor: void toggleAutoTick()>() >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.toggleAutoTick : $r1 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox>
org.jfree.chart.editor.DefaultValueAxisEditor.toggleAutoTick : $r1 = r0.<org.jfree.chart.editor.DefaultValueAxisEditor: javax.swing.JCheckBox autoTickUnitSelectionCheckBox> >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.toggleAutoTick : $z0 = virtualinvoke $r1.<javax.swing.JCheckBox: boolean isSelected()>()
org.jfree.chart.editor.DefaultValueAxisEditor.toggleAutoTick : $z0 = virtualinvoke $r1.<javax.swing.JCheckBox: boolean isSelected()>() >>>>>>>> org.jfree.chart.editor.DefaultValueAxisEditor.toggleAutoTick : r0.<org.jfree.chart.editor.DefaultValueAxisEditor: boolean autoTickUnitSelection> = $z0
org.jfree.chart.editor.DefaultValueAxisEditor.toggleAutoTick : r0.<org.jfree.chart.editor.DefaultValueAxisEditor: boolean autoTickUnitSelection> = $z0 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $z0 = virtualinvoke r0.<org.jfree.chart.editor.DefaultLogAxisEditor: boolean isAutoTickUnitSelection()>()
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $z0 = virtualinvoke r0.<org.jfree.chart.editor.DefaultLogAxisEditor: boolean isAutoTickUnitSelection()>() >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : if $z0 == 0
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : if $z0 == 0 >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $r1 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit>
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $r1 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $d0 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: double manualTickUnitValue>
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $d0 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: double manualTickUnitValue> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0)
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : virtualinvoke $r1.<javax.swing.JTextField: void setText(java.lang.String)>($r2)
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : virtualinvoke $r1.<javax.swing.JTextField: void setText(java.lang.String)>($r2) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $r3 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit>
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : $r3 = r0.<org.jfree.chart.editor.DefaultLogAxisEditor: javax.swing.JTextField manualTickUnit> >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : virtualinvoke $r3.<javax.swing.JTextField: void setEnabled(boolean)>(0)
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : virtualinvoke $r3.<javax.swing.JTextField: void setEnabled(boolean)>(0) >>>>>>>> org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : goto [?= return]
org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick : goto [?= return] >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : virtualinvoke r0.<org.jfree.chart.plot.GreyPalette: void setPaletteName(java.lang.String)>("Grey")
org.jfree.chart.plot.GreyPalette.initialize : virtualinvoke r0.<org.jfree.chart.plot.GreyPalette: void setPaletteName(java.lang.String)>("Grey") >>>>>>>> org.jfree.chart.plot.ColorPalette.setPaletteName : r0.<org.jfree.chart.plot.ColorPalette: java.lang.String paletteName> = r1
org.jfree.chart.plot.ColorPalette.setPaletteName : r0.<org.jfree.chart.plot.ColorPalette: java.lang.String paletteName> = r1 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r1 = newarray (int)[256]
org.jfree.chart.plot.GreyPalette.initialize : $r1 = newarray (int)[256] >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : r0.<org.jfree.chart.plot.GreyPalette: int[] r> = $r1
org.jfree.chart.plot.GreyPalette.initialize : r0.<org.jfree.chart.plot.GreyPalette: int[] r> = $r1 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r2 = newarray (int)[256]
org.jfree.chart.plot.GreyPalette.initialize : $r2 = newarray (int)[256] >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : r0.<org.jfree.chart.plot.GreyPalette: int[] g> = $r2
org.jfree.chart.plot.GreyPalette.initialize : r0.<org.jfree.chart.plot.GreyPalette: int[] g> = $r2 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r3 = newarray (int)[256]
org.jfree.chart.plot.GreyPalette.initialize : $r3 = newarray (int)[256] >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : r0.<org.jfree.chart.plot.GreyPalette: int[] b> = $r3
org.jfree.chart.plot.GreyPalette.initialize : r0.<org.jfree.chart.plot.GreyPalette: int[] b> = $r3 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r4 = r0.<org.jfree.chart.plot.GreyPalette: int[] r>
org.jfree.chart.plot.GreyPalette.initialize : $r4 = r0.<org.jfree.chart.plot.GreyPalette: int[] r> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r4[0] = 255
org.jfree.chart.plot.GreyPalette.initialize : $r4[0] = 255 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r5 = r0.<org.jfree.chart.plot.GreyPalette: int[] g>
org.jfree.chart.plot.GreyPalette.initialize : $r5 = r0.<org.jfree.chart.plot.GreyPalette: int[] g> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r5[0] = 255
org.jfree.chart.plot.GreyPalette.initialize : $r5[0] = 255 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r6 = r0.<org.jfree.chart.plot.GreyPalette: int[] b>
org.jfree.chart.plot.GreyPalette.initialize : $r6 = r0.<org.jfree.chart.plot.GreyPalette: int[] b> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r6[0] = 255
org.jfree.chart.plot.GreyPalette.initialize : $r6[0] = 255 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r7 = r0.<org.jfree.chart.plot.GreyPalette: int[] r>
org.jfree.chart.plot.GreyPalette.initialize : $r7 = r0.<org.jfree.chart.plot.GreyPalette: int[] r> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r7[1] = 0
org.jfree.chart.plot.GreyPalette.initialize : $r7[1] = 0 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r8 = r0.<org.jfree.chart.plot.GreyPalette: int[] g>
org.jfree.chart.plot.GreyPalette.initialize : $r8 = r0.<org.jfree.chart.plot.GreyPalette: int[] g> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r8[1] = 0
org.jfree.chart.plot.GreyPalette.initialize : $r8[1] = 0 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r9 = r0.<org.jfree.chart.plot.GreyPalette: int[] b>
org.jfree.chart.plot.GreyPalette.initialize : $r9 = r0.<org.jfree.chart.plot.GreyPalette: int[] b> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r9[1] = 0
org.jfree.chart.plot.GreyPalette.initialize : $r9[1] = 0 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : i0 = 2
org.jfree.chart.plot.GreyPalette.initialize : i0 = 2 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : if i0 >= 256
org.jfree.chart.plot.GreyPalette.initialize : if i0 >= 256 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r10 = r0.<org.jfree.chart.plot.GreyPalette: int[] r>
org.jfree.chart.plot.GreyPalette.initialize : $r10 = r0.<org.jfree.chart.plot.GreyPalette: int[] r> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r10[i0] = i0
org.jfree.chart.plot.GreyPalette.initialize : $r10[i0] = i0 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r11 = r0.<org.jfree.chart.plot.GreyPalette: int[] g>
org.jfree.chart.plot.GreyPalette.initialize : $r11 = r0.<org.jfree.chart.plot.GreyPalette: int[] g> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r11[i0] = i0
org.jfree.chart.plot.GreyPalette.initialize : $r11[i0] = i0 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r12 = r0.<org.jfree.chart.plot.GreyPalette: int[] b>
org.jfree.chart.plot.GreyPalette.initialize : $r12 = r0.<org.jfree.chart.plot.GreyPalette: int[] b> >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : $r12[i0] = i0
org.jfree.chart.plot.GreyPalette.initialize : $r12[i0] = i0 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : i0 = i0 + 1
org.jfree.chart.plot.GreyPalette.initialize : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.GreyPalette.initialize : goto [?= (branch)]
org.jfree.chart.plot.GreyPalette.initialize : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.ColorPalette.getMaxZ : $d0 = r0.<org.jfree.chart.plot.ColorPalette: double maxZ>
org.jfree.chart.plot.ColorPalette.getMaxZ : $d0 = r0.<org.jfree.chart.plot.ColorPalette: double maxZ> >>>>>>>> org.jfree.chart.plot.ColorPalette.getMaxZ : return $d0
org.jfree.chart.plot.ColorPalette.getMaxZ : return $d0 >>>>>>>> org.jfree.chart.editor.PaletteSample.setPalette : r0.<org.jfree.chart.editor.PaletteSample: org.jfree.chart.plot.ColorPalette palette> = r1
org.jfree.chart.editor.PaletteSample.setPalette : r0.<org.jfree.chart.editor.PaletteSample: org.jfree.chart.plot.ColorPalette palette> = r1 >>>>>>>> org.jfree.chart.editor.PaletteSample.setPalette : virtualinvoke r0.<org.jfree.chart.editor.PaletteSample: void repaint()>()
