org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clear : $r1 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clear : virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: void clear()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clear : virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: void clear()>() >>>>>>>> org.jfree.data.KeyedObjects2D.clear : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.clear : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.jfree.data.KeyedObjects2D.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.jfree.data.KeyedObjects2D.clear : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.clear : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.clear : interfaceinvoke $r2.<java.util.List: void clear()>()
org.jfree.data.KeyedObjects2D.clear : interfaceinvoke $r2.<java.util.List: void clear()>() >>>>>>>> org.jfree.data.KeyedObjects2D.clear : $r3 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows>
org.jfree.data.KeyedObjects2D.clear : $r3 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows> >>>>>>>> org.jfree.data.KeyedObjects2D.clear : interfaceinvoke $r3.<java.util.List: void clear()>()
org.jfree.data.KeyedObjects2D.clear : interfaceinvoke $r3.<java.util.List: void clear()>() >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clear : specialinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: void updateBounds()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clear : specialinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: void updateBounds()>() >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValue> = #NaN
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValue> = #NaN >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueRow> = -1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueRow> = -1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueColumn> = -1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueColumn> = -1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValue> = #NaN
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValue> = #NaN >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueRow> = -1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueRow> = -1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueColumn> = -1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueColumn> = -1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValueIncStdDev> = #NaN
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValueIncStdDev> = #NaN >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevRow> = -1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevRow> = -1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevColumn> = -1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevColumn> = -1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValueIncStdDev> = #NaN
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValueIncStdDev> = #NaN >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevRow> = -1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevRow> = -1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevColumn> = -1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevColumn> = -1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : $r2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : $r2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : i0 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: int getRowCount()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : i0 = virtualinvoke $r2.<org.jfree.data.KeyedObjects2D: int getRowCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.getRowCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.KeyedObjects2D.getRowCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getRowCount : return $i0
org.jfree.data.KeyedObjects2D.getRowCount : return $i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : $r3 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : $r3 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : i1 = virtualinvoke $r3.<org.jfree.data.KeyedObjects2D: int getColumnCount()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : i1 = virtualinvoke $r3.<org.jfree.data.KeyedObjects2D: int getColumnCount()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.getColumnCount : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.KeyedObjects2D.getColumnCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnCount : return $i0
org.jfree.data.KeyedObjects2D.getColumnCount : return $i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : i2 = 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : i2 = 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : if i2 >= i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds : if i2 >= i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clear : virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clear : virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowKeys : $r1 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowKeys : $r1 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowKeys : $r2 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: java.util.List getRowKeys()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowKeys : $r2 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: java.util.List getRowKeys()>() >>>>>>>> org.jfree.data.KeyedObjects2D.getRowKeys : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.getRowKeys : $r1 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getRowKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.data.KeyedObjects2D.getRowKeys : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getRowKeys : return $r2
org.jfree.data.KeyedObjects2D.getRowKeys : return $r2 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowKeys : return $r2
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowKeys : return $r2 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : $r2 = specialinvoke r0.<org.jfree.data.general.AbstractDataset: java.lang.Object clone()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : $r2 = specialinvoke r0.<org.jfree.data.general.AbstractDataset: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3
org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : return r1
org.jfree.data.general.AbstractDataset.clone : return r1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : r1 = (org.jfree.data.statistics.DefaultStatisticalCategoryDataset) $r2
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : r1 = (org.jfree.data.statistics.DefaultStatisticalCategoryDataset) $r2 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : $r3 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : $r3 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : $r4 = virtualinvoke $r3.<org.jfree.data.KeyedObjects2D: java.lang.Object clone()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : $r4 = virtualinvoke $r3.<org.jfree.data.KeyedObjects2D: java.lang.Object clone()>() >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.KeyedObjects2D.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.KeyedObjects2D.clone : r1 = (org.jfree.data.KeyedObjects2D) $r5
org.jfree.data.KeyedObjects2D.clone : r1 = (org.jfree.data.KeyedObjects2D) $r5 >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $r2 = new java.util.ArrayList
org.jfree.data.KeyedObjects2D.clone : $r2 = new java.util.ArrayList >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $r6 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.clone : $r6 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r6)
org.jfree.data.KeyedObjects2D.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r6) >>>>>>>> org.jfree.data.KeyedObjects2D.clone : r1.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> = $r2
org.jfree.data.KeyedObjects2D.clone : r1.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> = $r2 >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $r7 = new java.util.ArrayList
org.jfree.data.KeyedObjects2D.clone : $r7 = new java.util.ArrayList >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $r8 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.clone : $r8 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.clone : specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8)
org.jfree.data.KeyedObjects2D.clone : specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8) >>>>>>>> org.jfree.data.KeyedObjects2D.clone : r1.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> = $r7
org.jfree.data.KeyedObjects2D.clone : r1.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> = $r7 >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $r9 = new java.util.ArrayList
org.jfree.data.KeyedObjects2D.clone : $r9 = new java.util.ArrayList >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $r10 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows>
org.jfree.data.KeyedObjects2D.clone : $r10 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows> >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $i0 = interfaceinvoke $r10.<java.util.List: int size()>()
org.jfree.data.KeyedObjects2D.clone : $i0 = interfaceinvoke $r10.<java.util.List: int size()>() >>>>>>>> org.jfree.data.KeyedObjects2D.clone : specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0)
org.jfree.data.KeyedObjects2D.clone : specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.jfree.data.KeyedObjects2D.clone : r1.<org.jfree.data.KeyedObjects2D: java.util.List rows> = $r9
org.jfree.data.KeyedObjects2D.clone : r1.<org.jfree.data.KeyedObjects2D: java.util.List rows> = $r9 >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $r11 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows>
org.jfree.data.KeyedObjects2D.clone : $r11 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows> >>>>>>>> org.jfree.data.KeyedObjects2D.clone : r3 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.KeyedObjects2D.clone : r3 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.KeyedObjects2D.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.KeyedObjects2D.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.KeyedObjects2D.clone : if $z0 == 0
org.jfree.data.KeyedObjects2D.clone : if $z0 == 0 >>>>>>>> org.jfree.data.KeyedObjects2D.clone : return r1
org.jfree.data.KeyedObjects2D.clone : return r1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : $r5 = (org.jfree.data.KeyedObjects2D) $r4
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : $r5 = (org.jfree.data.KeyedObjects2D) $r4 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : r1.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> = $r5
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : r1.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> = $r5 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : return r1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone : return r1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : d0 = virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double getRangeLowerBound(boolean)>(z0)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : d0 = virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double getRangeLowerBound(boolean)>(z0) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeLowerBound : if z0 == 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeLowerBound : if z0 == 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeLowerBound : $d2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValue>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeLowerBound : $d2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValue> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeLowerBound : return $d2
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeLowerBound : return $d2 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : d1 = virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double getRangeUpperBound(boolean)>(z0)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : d1 = virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double getRangeUpperBound(boolean)>(z0) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeUpperBound : if z0 == 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeUpperBound : if z0 == 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeUpperBound : $d2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValue>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeUpperBound : $d2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValue> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeUpperBound : return $d2
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeUpperBound : return $d2 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : if $z1 == 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : if $z2 == 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : if $z2 == 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : return null
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds : return null >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: int getRowCount()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowCount : $i0 = virtualinvoke $r1.<org.jfree.data.KeyedObjects2D: int getRowCount()>() >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowCount : return $i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 0, 0, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getFirstMillisecond : return $l4
org.jfree.data.time.Day.getFirstMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i1 = virtualinvoke $r3.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1 >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, $i3, i2, 23, 59, 59) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Day.getLastMillisecond : return $l4
org.jfree.data.time.Day.getLastMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1
org.jfree.data.time.Day.peg : r0.<org.jfree.data.time.Day: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Minute.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Minute: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Minute.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Minute: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day>
org.jfree.data.time.Minute.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>()
org.jfree.data.time.Minute.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>() >>>>>>>> org.jfree.data.time.Day.getYear : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getYear : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getYear : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getYYYY()>()
org.jfree.data.time.Day.getYear : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getYYYY()>() >>>>>>>> org.jfree.data.time.Day.getYear : return $i0
org.jfree.data.time.Day.getYear : return $i0 >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day>
org.jfree.data.time.Minute.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>()
org.jfree.data.time.Minute.getFirstMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getMonth()>()
org.jfree.data.time.Day.getMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getMonth()>() >>>>>>>> org.jfree.data.time.Day.getMonth : return $i0
org.jfree.data.time.Day.getMonth : return $i0 >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : i1 = $i3 - 1
org.jfree.data.time.Minute.getFirstMillisecond : i1 = $i3 - 1 >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day>
org.jfree.data.time.Minute.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>()
org.jfree.data.time.Minute.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getDayOfMonth : $r1 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate> >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getDayOfMonth()>()
org.jfree.data.time.Day.getDayOfMonth : $i0 = virtualinvoke $r1.<org.jfree.date.SerialDate: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Day.getDayOfMonth : return $i0
org.jfree.data.time.Day.getDayOfMonth : return $i0 >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Minute.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : $b4 = r0.<org.jfree.data.time.Minute: byte hour>
org.jfree.data.time.Minute.getFirstMillisecond : $b4 = r0.<org.jfree.data.time.Minute: byte hour> >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : $b5 = r0.<org.jfree.data.time.Minute: byte minute>
org.jfree.data.time.Minute.getFirstMillisecond : $b5 = r0.<org.jfree.data.time.Minute: byte minute> >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, $b5, 0)
org.jfree.data.time.Minute.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, $b5, 0) >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Minute.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Minute.getFirstMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Minute.getFirstMillisecond : return $l6
org.jfree.data.time.Minute.getFirstMillisecond : return $l6 >>>>>>>> org.jfree.data.time.Minute.peg : r0.<org.jfree.data.time.Minute: long firstMillisecond> = $l0
org.jfree.data.time.Minute.peg : r0.<org.jfree.data.time.Minute: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Minute.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Minute: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Minute.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Minute: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day>
org.jfree.data.time.Minute.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>()
org.jfree.data.time.Minute.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>() >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day>
org.jfree.data.time.Minute.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>()
org.jfree.data.time.Minute.getLastMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>() >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : i1 = $i3 - 1
org.jfree.data.time.Minute.getLastMillisecond : i1 = $i3 - 1 >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day>
org.jfree.data.time.Minute.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>()
org.jfree.data.time.Minute.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Minute.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>() >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : $b4 = r0.<org.jfree.data.time.Minute: byte hour>
org.jfree.data.time.Minute.getLastMillisecond : $b4 = r0.<org.jfree.data.time.Minute: byte hour> >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : $b5 = r0.<org.jfree.data.time.Minute: byte minute>
org.jfree.data.time.Minute.getLastMillisecond : $b5 = r0.<org.jfree.data.time.Minute: byte minute> >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, $b5, 59)
org.jfree.data.time.Minute.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, $b5, 59) >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Minute.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Minute.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Minute.getLastMillisecond : return $l6
org.jfree.data.time.Minute.getLastMillisecond : return $l6 >>>>>>>> org.jfree.data.time.Minute.peg : r0.<org.jfree.data.time.Minute: long lastMillisecond> = $l1
org.jfree.data.time.Minute.peg : r0.<org.jfree.data.time.Minute: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Minute.getMinute : $b0 = r0.<org.jfree.data.time.Minute: byte minute>
org.jfree.data.time.Minute.getMinute : $b0 = r0.<org.jfree.data.time.Minute: byte minute> >>>>>>>> org.jfree.data.time.Minute.getMinute : return $b0
org.jfree.data.time.Minute.getMinute : return $b0 >>>>>>>> org.jfree.data.time.Minute.getHour : $r1 = new org.jfree.data.time.Hour
org.jfree.data.time.Minute.getHour : $r1 = new org.jfree.data.time.Hour >>>>>>>> org.jfree.data.time.Minute.getHour : $b0 = r0.<org.jfree.data.time.Minute: byte hour>
org.jfree.data.time.Minute.getHour : $b0 = r0.<org.jfree.data.time.Minute: byte hour> >>>>>>>> org.jfree.data.time.Minute.getHour : $r2 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day>
org.jfree.data.time.Minute.getHour : $r2 = r0.<org.jfree.data.time.Minute: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Minute.getHour : specialinvoke $r1.<org.jfree.data.time.Hour: void <init>(int,org.jfree.data.time.Day)>($b0, $r2)
org.jfree.data.time.Minute.getHour : specialinvoke $r1.<org.jfree.data.time.Hour: void <init>(int,org.jfree.data.time.Day)>($b0, $r2) >>>>>>>> org.jfree.data.time.Hour.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Hour: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Hour.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Hour: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day>
org.jfree.data.time.Hour.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>()
org.jfree.data.time.Hour.getFirstMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>() >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day>
org.jfree.data.time.Hour.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>()
org.jfree.data.time.Hour.getFirstMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>() >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : i1 = $i3 - 1
org.jfree.data.time.Hour.getFirstMillisecond : i1 = $i3 - 1 >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day>
org.jfree.data.time.Hour.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>()
org.jfree.data.time.Hour.getFirstMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : $b4 = r0.<org.jfree.data.time.Hour: byte hour>
org.jfree.data.time.Hour.getFirstMillisecond : $b4 = r0.<org.jfree.data.time.Hour: byte hour> >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, 0, 0)
org.jfree.data.time.Hour.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, 0, 0) >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Hour.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : $l5 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Hour.getFirstMillisecond : $l5 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Hour.getFirstMillisecond : return $l5
org.jfree.data.time.Hour.getFirstMillisecond : return $l5 >>>>>>>> org.jfree.data.time.Hour.peg : r0.<org.jfree.data.time.Hour: long firstMillisecond> = $l0
org.jfree.data.time.Hour.peg : r0.<org.jfree.data.time.Hour: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Hour.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Hour: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Hour.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Hour: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day>
org.jfree.data.time.Hour.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>()
org.jfree.data.time.Hour.getLastMillisecond : i0 = virtualinvoke $r2.<org.jfree.data.time.Day: int getYear()>() >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day>
org.jfree.data.time.Hour.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>()
org.jfree.data.time.Hour.getLastMillisecond : $i3 = virtualinvoke $r3.<org.jfree.data.time.Day: int getMonth()>() >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : i1 = $i3 - 1
org.jfree.data.time.Hour.getLastMillisecond : i1 = $i3 - 1 >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day>
org.jfree.data.time.Hour.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>()
org.jfree.data.time.Hour.getLastMillisecond : i2 = virtualinvoke $r4.<org.jfree.data.time.Day: int getDayOfMonth()>() >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : $b4 = r0.<org.jfree.data.time.Hour: byte hour>
org.jfree.data.time.Hour.getLastMillisecond : $b4 = r0.<org.jfree.data.time.Hour: byte hour> >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, 59, 59)
org.jfree.data.time.Hour.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, $b4, 59, 59) >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Hour.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : $l5 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Hour.getLastMillisecond : $l5 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Hour.getLastMillisecond : return $l5
org.jfree.data.time.Hour.getLastMillisecond : return $l5 >>>>>>>> org.jfree.data.time.Hour.peg : r0.<org.jfree.data.time.Hour: long lastMillisecond> = $l1
org.jfree.data.time.Hour.peg : r0.<org.jfree.data.time.Hour: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.Minute.getHour : return $r1
org.jfree.data.time.Minute.getHour : return $r1 >>>>>>>> org.jfree.data.time.Hour.getDay : $r1 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day>
org.jfree.data.time.Hour.getDay : $r1 = r0.<org.jfree.data.time.Hour: org.jfree.data.time.Day day> >>>>>>>> org.jfree.data.time.Hour.getDay : return $r1
org.jfree.data.time.Hour.getDay : return $r1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $r5 = new org.jfree.data.statistics.MeanAndStandardDeviation
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $r5 = new org.jfree.data.statistics.MeanAndStandardDeviation >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : specialinvoke $r5.<org.jfree.data.statistics.MeanAndStandardDeviation: void <init>(java.lang.Number,java.lang.Number)>(r1, r2)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : specialinvoke $r5.<org.jfree.data.statistics.MeanAndStandardDeviation: void <init>(java.lang.Number,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r6 = $r5
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r6 = $r5 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $r7 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $r7 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : virtualinvoke $r7.<org.jfree.data.KeyedObjects2D: void addObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)>(r6, r3, r4)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : virtualinvoke $r7.<org.jfree.data.KeyedObjects2D: void addObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)>(r6, r3, r4) >>>>>>>> org.jfree.data.KeyedObjects2D.addObject : virtualinvoke r0.<org.jfree.data.KeyedObjects2D: void setObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.KeyedObjects2D.addObject : virtualinvoke r0.<org.jfree.data.KeyedObjects2D: void setObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "rowKey")
org.jfree.data.KeyedObjects2D.setObject : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "rowKey") >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "columnKey")
org.jfree.data.KeyedObjects2D.setObject : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "columnKey") >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r5 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.setObject : $r5 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : i0 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>(r2)
org.jfree.data.KeyedObjects2D.setObject : i0 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : if i0 < 0
org.jfree.data.KeyedObjects2D.setObject : if i0 < 0 >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r8 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.setObject : $r8 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r9 = new org.jfree.data.KeyedObjects
org.jfree.data.KeyedObjects2D.setObject : $r9 = new org.jfree.data.KeyedObjects >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : specialinvoke $r9.<org.jfree.data.KeyedObjects: void <init>()>()
org.jfree.data.KeyedObjects2D.setObject : specialinvoke $r9.<org.jfree.data.KeyedObjects: void <init>()>() >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : r4 = $r9
org.jfree.data.KeyedObjects2D.setObject : r4 = $r9 >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r10 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows>
org.jfree.data.KeyedObjects2D.setObject : $r10 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rows> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : virtualinvoke r4.<org.jfree.data.KeyedObjects: void setObject(java.lang.Comparable,java.lang.Object)>(r3, r1)
org.jfree.data.KeyedObjects2D.setObject : virtualinvoke r4.<org.jfree.data.KeyedObjects: void setObject(java.lang.Comparable,java.lang.Object)>(r3, r1) >>>>>>>> org.jfree.data.KeyedObjects.setObject : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.KeyedObjects.setObject : i0 = virtualinvoke r0.<org.jfree.data.KeyedObjects: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.KeyedObjects.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.KeyedObjects.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.KeyedObjects.getIndex : i0 = 0
org.jfree.data.KeyedObjects.getIndex : i0 = 0 >>>>>>>> org.jfree.data.KeyedObjects.getIndex : $r4 = r0.<org.jfree.data.KeyedObjects: java.util.List data>
org.jfree.data.KeyedObjects.getIndex : $r4 = r0.<org.jfree.data.KeyedObjects: java.util.List data> >>>>>>>> org.jfree.data.KeyedObjects.getIndex : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.KeyedObjects.getIndex : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.KeyedObjects.getIndex : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.KeyedObjects.getIndex : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.KeyedObjects.getIndex : if $z0 == 0
org.jfree.data.KeyedObjects.getIndex : if $z0 == 0 >>>>>>>> org.jfree.data.KeyedObjects.getIndex : return -1
org.jfree.data.KeyedObjects.getIndex : return -1 >>>>>>>> org.jfree.data.KeyedObjects.setObject : if i0 < 0
org.jfree.data.KeyedObjects.setObject : if i0 < 0 >>>>>>>> org.jfree.data.KeyedObjects.setObject : $r6 = new org.jfree.data.KeyedObject
org.jfree.data.KeyedObjects.setObject : $r6 = new org.jfree.data.KeyedObject >>>>>>>> org.jfree.data.KeyedObjects.setObject : specialinvoke $r6.<org.jfree.data.KeyedObject: void <init>(java.lang.Comparable,java.lang.Object)>(r1, r2)
org.jfree.data.KeyedObjects.setObject : specialinvoke $r6.<org.jfree.data.KeyedObject: void <init>(java.lang.Comparable,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.data.KeyedObjects.setObject : r7 = $r6
org.jfree.data.KeyedObjects.setObject : r7 = $r6 >>>>>>>> org.jfree.data.KeyedObjects.setObject : $r8 = r0.<org.jfree.data.KeyedObjects: java.util.List data>
org.jfree.data.KeyedObjects.setObject : $r8 = r0.<org.jfree.data.KeyedObjects: java.util.List data> >>>>>>>> org.jfree.data.KeyedObjects.setObject : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7)
org.jfree.data.KeyedObjects.setObject : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r11 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.setObject : $r11 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : i1 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.jfree.data.KeyedObjects2D.setObject : i1 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : if i1 >= 0
org.jfree.data.KeyedObjects2D.setObject : if i1 >= 0 >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : $r12 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.setObject : $r12 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.KeyedObjects2D.setObject : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : d0 = #NaN
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : d0 = #NaN >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : d1 = #NaN
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : d1 = #NaN >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if r1 == null
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if r1 == null >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if r2 == null
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if r2 == null >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $r8 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $r8 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : i0 = virtualinvoke $r8.<org.jfree.data.KeyedObjects2D: int getColumnIndex(java.lang.Comparable)>(r4)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : i0 = virtualinvoke $r8.<org.jfree.data.KeyedObjects2D: int getColumnIndex(java.lang.Comparable)>(r4) >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.KeyedObjects2D.getColumnIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnIndex : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys>
org.jfree.data.KeyedObjects2D.getColumnIndex : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List columnKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.KeyedObjects2D.getColumnIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getColumnIndex : return $i0
org.jfree.data.KeyedObjects2D.getColumnIndex : return $i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $r9 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $r9 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.KeyedObjects2D data> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : i1 = virtualinvoke $r9.<org.jfree.data.KeyedObjects2D: int getRowIndex(java.lang.Comparable)>(r3)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : i1 = virtualinvoke $r9.<org.jfree.data.KeyedObjects2D: int getRowIndex(java.lang.Comparable)>(r3) >>>>>>>> org.jfree.data.KeyedObjects2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.KeyedObjects2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.KeyedObjects2D.getRowIndex : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys>
org.jfree.data.KeyedObjects2D.getRowIndex : $r2 = r0.<org.jfree.data.KeyedObjects2D: java.util.List rowKeys> >>>>>>>> org.jfree.data.KeyedObjects2D.getRowIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.KeyedObjects2D.getRowIndex : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.KeyedObjects2D.getRowIndex : return $i0
org.jfree.data.KeyedObjects2D.getRowIndex : return $i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $i2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueRow>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $i2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueRow> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if i0 != $i2
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if i0 != $i2 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $i4 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevRow>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $i4 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevRow> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if i0 != $i4
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if i0 != $i4 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $i6 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueRow>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $i6 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueRow> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if i0 != $i6
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if i0 != $i6 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $i8 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevRow>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $i8 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevRow> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if i0 != $i8
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if i0 != $i8 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z0 != 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z0 != 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValue>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d2 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValue> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z1 != 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z1 != 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValue> = d0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValue> = d0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueRow> = i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueRow> = i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueColumn> = i1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueColumn> = i1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d4 = d0 + d1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d4 = d0 + d1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z2 != 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z2 != 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d5 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValueIncStdDev>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d5 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValueIncStdDev> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d5)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d5) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z3 != 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z3 != 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d8 = d0 + d1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d8 = d0 + d1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValueIncStdDev> = $d8
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double maximumRangeValueIncStdDev> = $d8 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevRow> = i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevRow> = i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevColumn> = i1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int maximumRangeValueIncStdDevColumn> = i1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z4 != 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z4 != 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d9 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValue>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d9 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValue> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d9)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d9) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z5 != 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z5 != 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValue> = d0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValue> = d0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueRow> = i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueRow> = i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueColumn> = i1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueColumn> = i1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d11 = d0 - d1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d11 = d0 - d1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d11)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d11) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z6 != 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z6 != 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d12 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValueIncStdDev>
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d12 = r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValueIncStdDev> >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d12)
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d12) >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z7 != 0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : if $z7 != 0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d15 = d0 - d1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : $d15 = d0 - d1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValueIncStdDev> = $d15
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: double minimumRangeValueIncStdDev> = $d15 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevRow> = i0
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevRow> = i0 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevColumn> = i1
org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: int minimumRangeValueIncStdDevColumn> = i1 >>>>>>>> org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add : virtualinvoke r0.<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: void fireDatasetChanged()>()
