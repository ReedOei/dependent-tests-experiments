org.jfree.chart.plot.XYPlot.isDomainMinorGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean domainMinorGridlinesVisible>
org.jfree.chart.axis.Axis.getLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont>
org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label>
org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint>
org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible>
org.jfree.chart.plot.CombinedRangeXYPlot.draw : $r18 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.draw : if r4 != null goto $r15 = virtualinvoke r4.<org.jfree.chart.plot.PlotState: java.util.Map getSharedAxisStates()>()
org.jfree.chart.plot.CombinedRangeXYPlot.draw : $r22 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.awt.geom.Rectangle2D[] subplotAreas>
org.jfree.chart.plot.CombinedRangeXYPlot.draw : r10 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.plot.CombinedRangeXYPlot.draw : r11 = virtualinvoke r9.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(r1, d0, r2, r8, r10, r5)
org.jfree.chart.plot.CombinedRangeXYPlot.draw : if r5 == null goto $r22 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.awt.geom.Rectangle2D[] subplotAreas>
org.jfree.chart.plot.CombinedRangeXYPlot.draw : d0 = staticinvoke <org.jfree.ui.RectangleEdge: double coordinate(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r8, r10)
org.jfree.chart.plot.CombinedRangeXYPlot.draw : r7 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.chart.axis.AxisSpace calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.CombinedRangeXYPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.CombinedRangeXYPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.CombinedRangeXYPlot.draw : r13 = null
org.jfree.chart.plot.CombinedRangeXYPlot.draw : if r5 == null goto r6 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.CombinedRangeXYPlot.draw : r8 = virtualinvoke r7.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.CombinedRangeXYPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.CombinedRangeXYPlot.draw : i0 = 0
org.jfree.chart.plot.CombinedRangeXYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: void setFixedDomainAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)>(r7)
org.jfree.chart.plot.CombinedRangeXYPlot.draw : $r15 = virtualinvoke r4.<org.jfree.chart.plot.PlotState: java.util.Map getSharedAxisStates()>()
org.jfree.chart.plot.CombinedRangeXYPlot.draw : if r5 == null goto return
org.jfree.chart.plot.CombinedRangeXYPlot.draw : $r14 = new org.jfree.chart.plot.PlotState
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $z2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : if r1 == null goto $z2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $r2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.lang.Boolean shapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $r4 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.BooleanList seriesShapesFilled>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemURLGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setPlot : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> = r1
org.jfree.chart.axis.AxisState.cursorDown : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.drawOutline : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.drawOutline : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.axis.Tick.getText : $r1 = r0.<org.jfree.chart.axis.Tick: java.lang.String text>
org.jfree.chart.title.LegendGraphic.draw : $r11 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape getLine()>()
org.jfree.chart.title.LegendGraphic.draw : $d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.title.LegendGraphic.draw : return null
org.jfree.chart.title.LegendGraphic.draw : $r14 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke>
org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>
org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.title.LegendGraphic.draw : $r13 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint>
org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.title.LegendGraphic.draw : $r10 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation>
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>
org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 goto specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1)
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange>
org.jfree.chart.annotations.AbstractXYAnnotation.getToolTipText : $r1 = r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String toolTipText>
org.jfree.chart.axis.AxisCollection.getAxesAtBottom : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtBottom>
org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getYValue : return d0
org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getYValue : if r1 == null goto return d0
org.jfree.data.xy.AbstractXYDataset.getYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getY(int,int)>(i0, i1)
org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0]
org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemLabelGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemLabelGenerator>
org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1
org.jfree.chart.axis.ValueTick.getValue : $d0 = r0.<org.jfree.chart.axis.ValueTick: double value>
org.jfree.chart.plot.CombinedRangeXYPlot.setOrientation : virtualinvoke r3.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1)
org.jfree.chart.plot.CombinedRangeXYPlot.setOrientation : $r4 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.setOrientation : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedRangeXYPlot.setOrientation : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.CombinedRangeXYPlot.setOrientation")]
org.jfree.chart.plot.CombinedRangeXYPlot.setOrientation : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedRangeXYPlot.setOrientation : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1)
org.jfree.chart.plot.XYPlot.drawRangeMarkers : $i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.drawRangeMarkers : if r5 == null goto return
org.jfree.chart.plot.XYPlot.drawRangeMarkers : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.drawRangeMarkers : if r4 != null goto $i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.drawRangeMarkers : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(i0)
org.jfree.chart.plot.XYPlot.drawRangeMarkers : r5 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.Collection getRangeMarkers(int,org.jfree.ui.Layer)>(i0, r3)
org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1
org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible>
org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont>
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.TickUnit.compareTo : return -1
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 0
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.annotations.XYTextAnnotation.getPaint : $r1 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint paint>
org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint>
org.jfree.chart.annotations.XYTextAnnotation.draw : r9 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r13, r7)
org.jfree.chart.annotations.XYTextAnnotation.draw : $d4 = virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: double getRotationAngle()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : $r16 = virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String getText()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : $r20 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint backgroundPaint>
org.jfree.chart.annotations.XYTextAnnotation.draw : $r22 = virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getPaint()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : $z0 = r0.<org.jfree.chart.annotations.XYTextAnnotation: boolean outlineVisible>
org.jfree.chart.annotations.XYTextAnnotation.draw : $d0 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double x>
org.jfree.chart.annotations.XYTextAnnotation.draw : $d2 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double y>
org.jfree.chart.annotations.XYTextAnnotation.draw : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.annotations.XYTextAnnotation.draw : $r23 = virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String getText()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : $r12 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : $r24 = virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor getTextAnchor()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : $r13 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : if r10 != null goto virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>(r6, r19, i0, r10, r11)
org.jfree.chart.annotations.XYTextAnnotation.draw : $r15 = virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font getFont()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : r11 = virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String getURL()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : r19 = staticinvoke <org.jfree.text.TextUtilities: java.awt.Shape calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>($r16, r1, f0, f1, $r17, $d4, $r18)
org.jfree.chart.annotations.XYTextAnnotation.draw : r8 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r12, r7)
org.jfree.chart.annotations.XYTextAnnotation.draw : r10 = virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String getToolTipText()>()
org.jfree.chart.annotations.XYTextAnnotation.draw : r7 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.plot.Plot.fillBackground : $z0 = r4 instanceof java.awt.GradientPaint
org.jfree.chart.plot.Plot.fillBackground : r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r15)
org.jfree.chart.plot.Plot.fillBackground : r15 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.Plot.fillBackground : $f8 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.fillBackground : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "orientation")
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4)
org.jfree.chart.renderer.AbstractRenderer.isItemLabelVisible : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: boolean isSeriesItemLabelsVisible(int)>(i0)
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.plot.Plot.drawBackgroundImage : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : if r4 == null goto return r22
org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>()
org.jfree.chart.block.BlockContainer.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.block.BlockContainer.draw")]
org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockContainer.draw : r4 = null
org.jfree.chart.block.BlockContainer.draw : if r4 == null goto (branch)
org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3)
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null goto $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r1 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : if r2 == null goto return r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r1 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : return r1
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.axis.Tick.getRotationAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getSeriesShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r2 == null goto (branch)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Shape getNextShape()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r1 != null goto return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r1 != null goto (branch)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 0)
org.jfree.chart.plot.XYPlot.drawAnnotations : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>()
org.jfree.chart.plot.XYPlot.drawAnnotations : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.drawAnnotations")]
org.jfree.chart.plot.XYPlot.drawAnnotations : interfaceinvoke r5.<org.jfree.chart.annotations.XYAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r0, r2, r6, r7, 0, r3)
org.jfree.chart.plot.XYPlot.drawAnnotations : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.drawAnnotations : r7 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.XYPlot.drawAnnotations : $r8 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.drawAnnotations : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.drawDomainMarkers : $i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.drawDomainMarkers : if r5 == null goto return
org.jfree.chart.plot.XYPlot.drawDomainMarkers : r5 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.Collection getDomainMarkers(int,org.jfree.ui.Layer)>(i0, r3)
org.jfree.chart.plot.XYPlot.drawDomainMarkers : if r4 != null goto $i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.drawDomainMarkers : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(i0)
org.jfree.chart.plot.XYPlot.drawDomainMarkers : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxisForDataset(int)>(i0)
org.jfree.chart.block.FlowArrangement.arrangeFN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : d19 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r5.<java.util.List: void clear()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6)
org.jfree.chart.block.FlowArrangement.arrangeFN : $r13 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeFN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeFN : $d20 = d2 + d3
org.jfree.chart.block.FlowArrangement.arrangeFN : $r9 = new java.util.ArrayList
org.jfree.chart.block.FlowArrangement.arrangeFN : d0 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $d23 = staticinvoke <java.lang.Math: double min(double,double)>($d22, d0)
org.jfree.chart.block.FlowArrangement.arrangeFN : $d11 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $d8 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d25 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFN : i0 = 0
org.jfree.chart.block.FlowArrangement.arrangeFN : $r14 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeFN : $d4 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $r7 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = 0.0
org.jfree.chart.axis.Tick.getAngle : $d0 = r0.<org.jfree.chart.axis.Tick: double angle>
org.jfree.chart.block.FlowArrangement.arrangeFR : return r4
org.jfree.chart.block.FlowArrangement.arrangeFR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.FlowArrangement.arrangeFR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.plot.XYPlot.drawRangeTickBands : if r4 == null goto return
org.jfree.chart.plot.XYPlot.drawRangeTickBands : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint getRangeTickBandPaint()>()
org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : $r1 = r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride>
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null goto r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : return r2
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : r2 = newarray (java.lang.Object)[1]
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : $r3 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i0)
org.jfree.chart.plot.XYPlot.getDomainTickBandPaint : $r1 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainTickBandPaint>
org.jfree.data.xy.XYDataItem.compareTo : $r4 = virtualinvoke r2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYDataItem.compareTo : $b2 = d0 cmpg 0.0
org.jfree.data.xy.XYDataItem.compareTo : r2 = (org.jfree.data.xy.XYDataItem) r1
org.jfree.data.xy.XYDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYDataItem.compareTo : return b0
org.jfree.data.xy.XYDataItem.compareTo : goto [?= return b0]
org.jfree.data.xy.XYDataItem.compareTo : $b1 = d0 cmpl 0.0
org.jfree.data.xy.XYDataItem.compareTo : b0 = -1
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.axis.Axis.notifyListeners : $r4 = r2[i0]
org.jfree.chart.axis.Axis.notifyListeners : $i2 = i0 + 1
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : d2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2)
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : i3 = i1 - 1
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : i2 = 0
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : $b5 = d0 cmpl d1
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : $r2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: org.jfree.data.DomainOrder getDomainOrder()>()
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : $b6 = d2 cmpl d0
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : if i1 > 1 goto $r2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: org.jfree.data.DomainOrder getDomainOrder()>()
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : return i2
org.jfree.chart.JFreeChart.notifyListeners : $r4 = r2[i0]
org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.JFreeChart.notifyListeners : $i2 = i0 + 1
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractXYDataset.getXValue : return d0
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null goto return d0
org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1
org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement")
org.jfree.chart.plot.Plot.setInsets : if z0 == 0 goto return
org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets")
org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1
org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>(r1, 1)
org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0
org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN
org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : return d0
org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : return r4
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r3 = new org.jfree.chart.axis.AxisSpace
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $d8 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : virtualinvoke r4.<org.jfree.chart.axis.AxisSpace: void ensureAtLeast(org.jfree.chart.axis.AxisSpace)>(r31)
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $d19 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : d0 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r24 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.awt.geom.Rectangle2D[] subplotAreas>
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r13 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : if r6 == null goto r7 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r21 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : r8 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r13, r5)
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r18 = newarray (java.awt.geom.Rectangle2D)[i3]
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $d20 = d7 + d2
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : i1 = 0
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r15 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : r5 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : d1 = 0.0
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r19 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : r4 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r8, r4)
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r23 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : r14 = virtualinvoke r4.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : d7 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $i4 = virtualinvoke r9.<org.jfree.chart.plot.XYPlot: int getWeight()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : r7 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : if r7 == null goto r14 = virtualinvoke r4.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $i7 = virtualinvoke r10.<org.jfree.chart.plot.XYPlot: int getWeight()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : i0 = 0
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.chart.axis.AxisSpace getFixedRangeAxisSpace()>()
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : i2 = 0
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : goto [?= $r29 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.awt.geom.Rectangle2D[] subplotAreas>]
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r16 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace : $r29 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.awt.geom.Rectangle2D[] subplotAreas>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.renderer.xy.XYItemRendererState.startSeriesPass : r0.<org.jfree.chart.renderer.xy.XYItemRendererState: int firstItemIndex> = i1
org.jfree.chart.renderer.xy.XYItemRendererState.startSeriesPass : r0.<org.jfree.chart.renderer.xy.XYItemRendererState: int lastItemIndex> = i2
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null goto return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.axis.AxisSpace.getBottom : $d0 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height>
org.jfree.chart.plot.XYPlot.getWeight : $i0 = r0.<org.jfree.chart.plot.XYPlot: int weight>
org.jfree.chart.plot.XYPlot.getRangeGridlinePaint : $r1 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.plot.XYPlot.drawQuadrants : $r13 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : $r30 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.drawQuadrants : d8 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : $r16 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : $r14 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : d4 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : if z0 == 0 goto return
org.jfree.chart.plot.XYPlot.drawQuadrants : $r12 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : d6 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: double getUpperBound()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : if r3 != null goto $r7 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : $r10 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : z0 = 0
org.jfree.chart.plot.XYPlot.drawQuadrants : $r17 = newarray (java.awt.geom.Rectangle2D)[4]
org.jfree.chart.plot.XYPlot.drawQuadrants : d10 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: double getUpperBound()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : $r36 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.drawQuadrants : $r7 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : $r24 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.drawQuadrants : $r15 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : if r4 != null goto $r10 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : $r18 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint[] quadrantPaint>
org.jfree.chart.plot.XYPlot.drawQuadrants : r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>()
org.jfree.chart.plot.XYPlot.drawQuadrants : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.LegendItem.setLabelFont : r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> = r1
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : if r1 != null goto $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : return r5
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d8 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5 = newarray (float)[2]
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d11 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d6 = virtualinvoke r1.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d14 = virtualinvoke r1.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r8 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d4 = d1 * d0
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $z1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isRangeGridlinesVisible()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $r12 = virtualinvoke r8.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : r5 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint getRangeGridlinePaint()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : if r6 == null goto return
org.jfree.chart.plot.XYPlot.drawRangeGridlines : r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : r4 = null
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $d1 = virtualinvoke r8.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $d0 = virtualinvoke r8.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.drawRangeGridlines")]
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $z6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isRangeGridlinesVisible()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke getRangeGridlineStroke()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $r11 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $z7 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isRangeZeroBaselineVisible()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : z4 = 0
org.jfree.chart.plot.XYPlot.drawRangeGridlines : z0 = 0
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $r10 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $r13 = virtualinvoke r8.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $z5 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isRangeMinorGridlinesVisible()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : z4 = 1
org.jfree.chart.plot.XYPlot.drawRangeGridlines : $r15 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer()>()
org.jfree.chart.plot.XYPlot.drawRangeGridlines : r5 = null
org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1
org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor")
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape>
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : if r1 != null goto return r1
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : r1 = null
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : return r1
org.jfree.chart.axis.AxisSpace.getTop : $d0 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : return -1
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = 0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r3 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r5 = virtualinvoke r2.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.annotations.XYTextAnnotation.getFont : $r1 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font>
org.jfree.chart.renderer.AbstractRenderer.getItemStroke : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke lookupSeriesStroke(int)>(i0)
org.jfree.chart.plot.CrosshairState.updateCrosshairPoint : $r3 = r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor>
org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1
org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>()
org.jfree.chart.axis.Axis.isVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean visible>
org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0)
org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.chart.plot.Plot.createAndAddEntity : if r2 == null goto return
org.jfree.chart.plot.XYPlot.isDomainCrosshairVisible : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairVisible>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0 goto $i1 = i0 + 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1
org.jfree.chart.plot.PlotState.getSharedAxisStates : $r1 = r0.<org.jfree.chart.plot.PlotState: java.util.Map sharedAxisStates>
org.jfree.chart.plot.CrosshairState.getDomainAxisIndex : $i0 = r0.<org.jfree.chart.plot.CrosshairState: int domainAxisIndex>
org.jfree.chart.axis.Axis.drawLabel : $r15 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.Axis.drawLabel : r7 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>()
org.jfree.chart.axis.Axis.drawLabel : d42 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : $d43 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : return r6
org.jfree.chart.axis.Axis.drawLabel : goto [?= return r6]
org.jfree.chart.axis.Axis.drawLabel : r9 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>()
org.jfree.chart.axis.Axis.drawLabel : if r1 == null goto return r6
org.jfree.chart.axis.Axis.drawLabel : $d26 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : $d36 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.axis.Axis.drawLabel : d19 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.drawLabel : $r24 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.Axis.drawLabel : $d27 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.Axis.drawLabel : r19 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d16, $d17, $d18)
org.jfree.chart.axis.Axis.drawLabel : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>()
org.jfree.chart.axis.Axis.drawLabel : $d48 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.Axis.drawLabel : $r14 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Paint getLabelPaint()>()
org.jfree.chart.axis.Axis.drawLabel : r27 = interfaceinvoke r26.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.drawLabel : $d37 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r7)
org.jfree.chart.axis.Axis.drawLabel : r26 = virtualinvoke r25.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10)
org.jfree.chart.axis.Axis.drawLabel : $d16 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : r25 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d33, $d34, $d35)
org.jfree.chart.axis.Axis.drawLabel : $d21 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.Axis.drawLabel : $d18 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : $r18 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.Axis.drawLabel : $d20 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.axis.Axis.drawLabel : r10 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r1, r2, r9)
org.jfree.chart.axis.Axis.drawLabel : $d35 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : r20 = virtualinvoke r19.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10)
org.jfree.chart.axis.Axis.drawLabel : $f2 = (float) d19
org.jfree.chart.axis.Axis.drawLabel : $d30 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.Axis.drawLabel : $d45 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.Axis.drawLabel : r21 = interfaceinvoke r20.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.drawLabel : $d32 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r6, "state")
org.jfree.chart.axis.Axis.drawLabel : $f4 = (float) d41
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.getAxisLineStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.plot.XYPlot.setWeight : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setWeight : r0.<org.jfree.chart.plot.XYPlot: int weight> = i0
org.jfree.chart.title.LegendTitle.arrange : return r4
org.jfree.chart.title.LegendTitle.arrange : if r5 != null goto r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>()
org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6)
org.jfree.chart.plot.XYPlot.getFixedRangeAxisSpace : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d1 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double bottom> = d0
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d2 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d0 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d3 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d6 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d9 = r0.<org.jfree.chart.axis.AxisSpace: double right>
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont>
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : return r4
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : goto [?= return r4]
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < 0 goto $r5 = new java.lang.IllegalArgumentException
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if r2 == null goto r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.annotations.AbstractXYAnnotation.getURL : $r1 = r0.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String url>
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.axis.Axis.isMinorTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible>
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null goto r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null goto $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText>
org.jfree.chart.plot.XYPlot.getDomainCrosshairValue : $d0 = r0.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue>
org.jfree.chart.axis.Axis.createAndAddEntity : if r4 == null goto return
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.annotations.XYTextAnnotation.getRotationAngle : $d0 = r0.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle>
org.jfree.chart.axis.Axis.getTickMarkOutsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength>
org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke>
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getPlotLines : $z0 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotLines>
org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke>
org.jfree.chart.plot.XYPlot.getSeriesRenderingOrder : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder>
org.jfree.chart.axis.Axis.removeChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d3 = d2 - d1
org.jfree.chart.axis.ValueAxis.lengthToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(0.0, r1, r2)
org.jfree.chart.axis.ValueAxis.lengthToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r1, r2)
org.jfree.chart.axis.NumberAxis.draw : return r11
org.jfree.chart.axis.NumberAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVisible()>()
org.jfree.chart.axis.NumberAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r11, r3, r4, r5)
org.jfree.chart.axis.NumberAxis.draw : n0 = null
org.jfree.chart.axis.NumberAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r2, r3, r4)
org.jfree.chart.axis.NumberAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.Axis.getFixedDimension : $d0 = r0.<org.jfree.chart.axis.Axis: double fixedDimension>
org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : return r1
org.jfree.chart.renderer.AbstractRenderer.getItemVisible : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: boolean isSeriesVisible(int)>(i0)
org.jfree.chart.axis.AxisSpace.add : $r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.AxisSpace.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.AxisSpace.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "edge")
org.jfree.chart.axis.AxisSpace.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.AxisSpace.add : $d3 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.add : $d5 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.plot.XYPlot.getRenderer : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRenderer : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRenderer : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(0)
org.jfree.chart.plot.XYPlot.getRenderer : r1 = null
org.jfree.chart.plot.XYPlot.getRenderer : return r1
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : return i0
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if i0 >= 0 goto return i0
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.axis.NumberAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.NumberAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.axis.TickType.equals : r2 = (org.jfree.chart.axis.TickType) r1
org.jfree.chart.axis.TickType.equals : if r0 != r1 goto $z0 = r1 instanceof org.jfree.chart.axis.TickType
org.jfree.chart.axis.TickType.equals : $r3 = r0.<org.jfree.chart.axis.TickType: java.lang.String name>
org.jfree.chart.axis.TickType.equals : return 1
org.jfree.chart.axis.TickType.equals : return 0
org.jfree.chart.axis.TickType.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickType
org.jfree.chart.axis.NumberAxis.valueToJava2D : d2 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = 0.0
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isInverted()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d11 = d0 - d1
org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = 0.0
org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1
org.jfree.chart.axis.AxisState.getCursor : $d0 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1 goto $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d10 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0 goto $r21 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3)
org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.BorderArrangement.arrange : r5 = null
org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1
org.jfree.chart.plot.CrosshairState.setCrosshairY : r0.<org.jfree.chart.plot.CrosshairState: double crosshairY> = d0
org.jfree.chart.plot.CrosshairState.setCrosshairX : r0.<org.jfree.chart.plot.CrosshairState: double crosshairX> = d0
org.jfree.chart.axis.Axis.getLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint>
org.jfree.chart.plot.XYPlot.drawDomainTickBands : if r4 == null goto return
org.jfree.chart.plot.XYPlot.drawDomainTickBands : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint getDomainTickBandPaint()>()
org.jfree.chart.axis.Axis.getTickMarkStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke>
org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.chart.plot.XYPlot.getRangeAxisForDataset : return r4
org.jfree.chart.plot.XYPlot.getRangeAxisForDataset : goto [?= return r4]
org.jfree.chart.plot.XYPlot.getRangeAxisForDataset : if r2 == null goto r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(0)
org.jfree.chart.plot.XYPlot.getRangeAxisForDataset : if i0 < 0 goto $r5 = new java.lang.IllegalArgumentException
org.jfree.chart.plot.XYPlot.getRangeAxisForDataset : $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.XYPlot.getRangeAxisForDataset : $i2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.getRangeAxisForDataset : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.plot.XYPlot.getRangeAxisForDataset : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.drawAxes : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.XYPlot.drawAxes : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.drawAxes")]
org.jfree.chart.plot.XYPlot.drawAxes : $d4 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r5 = new org.jfree.chart.axis.AxisCollection
org.jfree.chart.plot.XYPlot.drawAxes : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r21 = new java.util.HashMap
org.jfree.chart.plot.XYPlot.drawAxes : $r13 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.drawAxes : d7 = virtualinvoke r33.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.plot.XYPlot.drawAxes : $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r32 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.plot.XYPlot.drawAxes : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r24 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtTop()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r15 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i0)
org.jfree.chart.plot.XYPlot.drawAxes : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.XYPlot.drawAxes : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r33)
org.jfree.chart.plot.XYPlot.drawAxes : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.XYPlot.drawAxes : return r22
org.jfree.chart.plot.XYPlot.drawAxes : if r19 == null goto i2 = i2 + 1
org.jfree.chart.plot.XYPlot.drawAxes : $z3 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r44 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtRight()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r28 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtBottom()>()
org.jfree.chart.plot.XYPlot.drawAxes : $d8 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.plot.XYPlot.drawAxes : if r7 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.drawAxes : $d12 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.XYPlot.drawAxes : $d9 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.XYPlot.drawAxes : i0 = 0
org.jfree.chart.plot.XYPlot.drawAxes : i2 = 0
org.jfree.chart.plot.XYPlot.drawAxes : $r36 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtLeft()>()
org.jfree.chart.plot.XYPlot.drawAxes : $r17 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.drawAxes : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()", "org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds")]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r20 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i9, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i9)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 goto (branch)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i9, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 goto r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i9 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r19)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z15 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d12)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin>
org.jfree.chart.axis.AxisState.cursorLeft : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.axis.ValueTick.getTickType : $r1 = r0.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType tickType>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getLegendTextPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : if r1 != null goto return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint>
org.jfree.chart.axis.Axis.getAxisLinePaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getPlotDiscontinuous : $z0 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotDiscontinuous>
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: org.jfree.chart.LegendItemCollection getFixedLegendItems()>()
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : $r7 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : if r1 != null goto return r1
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : r4 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : virtualinvoke r1.<org.jfree.chart.LegendItemCollection: void addAll(org.jfree.chart.LegendItemCollection)>(r4)
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems")]
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : return r1
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : $r6 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems : $r5 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.annotations.XYTextAnnotation.getText : $r1 = r0.<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String text>
org.jfree.chart.plot.XYPlot.getDomainMarkers : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.getDomainMarkers : $r8 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.XYPlot.getDomainMarkers : return r2
org.jfree.chart.plot.XYPlot.getDomainMarkers : if r2 == null goto return r2
org.jfree.chart.plot.XYPlot.getDomainMarkers : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.getDomainMarkers : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDomainMarkers : $r9 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.getDomainMarkers : r2 = null
org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.initialise : $r8 = new java.awt.geom.GeneralPath
org.jfree.chart.renderer.xy.StandardXYItemRenderer.initialise : return r7
org.jfree.chart.renderer.xy.StandardXYItemRenderer.initialise : staticinvoke <org.jfree.chart.renderer.xy.StandardXYItemRenderer$State: int access$002(org.jfree.chart.renderer.xy.StandardXYItemRenderer$State,int)>(r7, -1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.initialise : $r6 = new org.jfree.chart.renderer.xy.StandardXYItemRenderer$State
org.jfree.data.xy.XYSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.xy.XYSeriesCollection.addSeries : $r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r0)
org.jfree.data.xy.XYSeriesCollection.addSeries : $r9 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.chart.plot.XYPlot.setRangeAxis : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.setRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.XYPlot.setRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setRangeAxis : if r2 == null goto $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.setRangeAxis : if r1 == null goto virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setRangeAxis : if r1 == null goto r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.XYPlot.setRangeAxis : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void removeChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0)
org.jfree.chart.axis.AxisState.setTicks : r0.<org.jfree.chart.axis.AxisState: java.util.List ticks> = r1
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>()
org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : return i1
org.jfree.chart.plot.XYPlot.getDomainGridlinePaint : $r1 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint domainGridlinePaint>
org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : return r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r4 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r1 = new java.util.ArrayList
org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d1 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r7 = null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r9 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Paint lookupSeriesPaint(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : return r2
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r21 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r10 = r9
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r28 = interfaceinvoke r3.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r17 == null goto virtualinvoke r2.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(r3)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r17 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Paint lookupLegendTextPaint(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r6 = null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r18 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemLabelGenerator()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : z0 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getItemShapeFilled(int,int)>(i1, 0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r8 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape lookupLegendShape(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r27 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Font lookupLegendTextFont(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(i0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r3 = virtualinvoke r1.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(r3)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r23 = new org.jfree.chart.LegendItem
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r5 = r4
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r3 == null goto return r2
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getItemVisible(int,int)>(i1, 0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r11 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Stroke lookupSeriesStroke(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r19 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r1 != null goto r2 = null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r2 = null
org.jfree.chart.axis.AxisSpace.shrink : if r2 != null goto $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.AxisSpace.shrink : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d2, $d5, $d10, $d15)
org.jfree.chart.axis.AxisSpace.shrink : return r2
org.jfree.chart.axis.AxisSpace.shrink : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.AxisSpace.shrink : $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.AxisSpace.shrink : $r3 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.AxisSpace.shrink : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.AxisSpace.shrink : $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.axis.NumberAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.Axis.getLabelEnclosure : return r4
org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = d0 - 1.5707963267948966
org.jfree.chart.axis.Axis.getLabelEnclosure : d2 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r12 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.axis.Axis.getLabelEnclosure : $r3 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = interfaceinvoke r10.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r10 = virtualinvoke r9.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r12)
org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : if r5 == null goto return r4
org.jfree.chart.axis.Axis.getLabelEnclosure : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : $r11 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.Axis.getLabelEnclosure : r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>(d0, d1, d2)
org.jfree.chart.axis.Axis.getLabelEnclosure : r7 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r5, r1, r6)
org.jfree.chart.axis.Axis.getLabelEnclosure : d1 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r5 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.lang.String getLabel()>()
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r4
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : r4 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r0, r1, r2, z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.XYRangeInfo
org.jfree.data.xy.XYDataItem.clone : goto [?= return r1]
org.jfree.data.xy.XYDataItem.clone : r1 = null
org.jfree.data.xy.XYDataItem.clone : return r1
org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null goto d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r12 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r8 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d2)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $i1 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r8)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d2 = virtualinvoke r12.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : return d8
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d1 = virtualinvoke r12.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $d9 = staticinvoke <java.lang.Math: double max(double,double)>(d3, d4)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r7 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d1)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : if r6 == null goto r7 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d1)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $d5 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $i0 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r7)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 goto $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null goto i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d5 = d0 / d1
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $b0 = d8 cmpl d3
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r8 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2)
org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11)
org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>
org.jfree.chart.block.LabelBlock.draw : return r8
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10)
org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.draw : r8 = null
org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor>
org.jfree.chart.block.LabelBlock.draw : if r4 == null goto return r8
org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.draw : r4 = null
org.jfree.chart.block.LabelBlock.draw : r6 = null
org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10)
org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.LabelBlock.draw : r5 = null
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawAnnotations : $r12 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawAnnotations : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawAnnotations : $r9 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawAnnotations : $r7 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawAnnotations : n0 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawAnnotations : $r11 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.XYPlot.getDomainGridlineStroke : $r1 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke domainGridlineStroke>
org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints>
org.jfree.chart.JFreeChart.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.JFreeChart.draw")]
org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : if r11 == null goto (branch)
org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage>
org.jfree.chart.JFreeChart.draw : if r4 == null goto (branch)
org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.JFreeChart.draw : r6 = null
org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.JFreeChart.draw : r45 = r28
org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>()
org.jfree.chart.JFreeChart.draw : if r6 == null goto $z6 = 0
org.jfree.chart.JFreeChart.draw : if r4 == null goto $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : r46 = null
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : if r6 == null goto r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>(r1, r2, null, null)
org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.title.LegendGraphic.getLine : $r1 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D
org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.plot.XYPlot.setDomainCrosshairValue : r0.<org.jfree.chart.plot.XYPlot: double domainCrosshairValue> = d0
org.jfree.chart.plot.XYPlot.setDomainCrosshairValue : $z1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isDomainCrosshairVisible()>()
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.data.xy.XYSeriesCollection.getDomainOrder : i1 = 0
org.jfree.data.xy.XYSeriesCollection.getDomainOrder : $r3 = <org.jfree.data.DomainOrder: org.jfree.data.DomainOrder ASCENDING>
org.jfree.data.xy.XYSeriesCollection.getDomainOrder : r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getDomainOrder : $z0 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: boolean getAutoSort()>()
org.jfree.data.xy.XYSeriesCollection.getDomainOrder : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : if z1 == 0 goto return
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r12 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $z4 = r0.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible>
org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = null
org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r11 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.ValueAxis.drawAxisLine : if z0 == 0 goto (branch)
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r17 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getAxisLineStroke()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : z0 = 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r10 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible>
org.jfree.chart.axis.ValueAxis.drawAxisLine : z1 = 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r13 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>()
org.jfree.chart.axis.Axis.isTickLabelsVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible>
org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11)
org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>()
org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0
org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>()
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10)
org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0
org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1
org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11)
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText>
org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0
org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1
org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : return r2
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : $r4 = virtualinvoke r0.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.xy.XYDataset,int)>(r1, i0)
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : $r3 = r0.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.String formatPattern>
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset")
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.isRangeGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeGridlinesVisible>
org.jfree.data.xy.XYSeriesCollection.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataRange : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : return r2
org.jfree.chart.plot.XYPlot.getDataRange : $z11 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r15 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDataRange : $r27 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : r32 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.getDataRange")]
org.jfree.chart.plot.XYPlot.getDataRange : $r29 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : if r26 == null goto (branch)
org.jfree.chart.plot.XYPlot.getDataRange : $z7 = r8 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo
org.jfree.chart.plot.XYPlot.getDataRange : i0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDataRange : r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRendererForDataset(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : if r9 == null goto $r28 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer
org.jfree.chart.plot.XYPlot.getDataRange : $r19 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDataRange : if i1 != 0 goto r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r5 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDataRange : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.getDataRange : $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z14 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z3 = r7 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo
org.jfree.chart.plot.XYPlot.getDataRange : r10 = (org.jfree.chart.renderer.xy.AbstractXYItemRenderer) r9
org.jfree.chart.plot.XYPlot.getDataRange : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : r11 = virtualinvoke r10.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.Collection getAnnotations()>()
org.jfree.chart.plot.XYPlot.getDataRange : r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : if z0 == 0 goto (branch)
org.jfree.chart.plot.XYPlot.getDataRange : $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.getDataRange")]
org.jfree.chart.plot.XYPlot.getDataRange : if i1 < 0 goto r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : if i0 != 0 goto i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDataRange : if i0 < 0 goto i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDataRange : z0 = 1
org.jfree.chart.plot.XYPlot.getDataRange : z0 = 0
org.jfree.chart.plot.XYPlot.getDataRange : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : if r9 == null goto $r30 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.getDataRange : r12 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r14 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDataRange : r2 = null
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.getDataRange")]
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r7 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : return r2
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r8 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r2 != null goto return r2
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth")]
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d4 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d1 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : d0 = 0.0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d7 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if z0 != 0 goto $r12 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r9 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>($r11, r2, r6)
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $r11 = virtualinvoke r8.<org.jfree.chart.axis.Tick: java.lang.String getText()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $r10 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : return d0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : goto [?= return d0]
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r6 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r5)
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.plot.CrosshairState.setCrosshairDistance : r0.<org.jfree.chart.plot.CrosshairState: double distance> = d0
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1
org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : d2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2)
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : i3 = i1 - 1
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : d3 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i3)
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : $b7 = d3 cmpg d1
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : $b6 = d2 cmpl d1
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : i2 = 0
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : $b5 = d0 cmpl d1
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : $r2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: org.jfree.data.DomainOrder getDomainOrder()>()
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : return i3
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : if i1 > 1 goto $r2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: org.jfree.data.DomainOrder getDomainOrder()>()
org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null goto $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null goto d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getDefaultAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0
org.jfree.chart.renderer.RendererUtilities.findLiveItems : $r1 = newarray (int)[2]
org.jfree.chart.renderer.RendererUtilities.findLiveItems : i2 = staticinvoke <org.jfree.chart.renderer.RendererUtilities: int findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)>(r0, i0, d0, d1)
org.jfree.chart.renderer.RendererUtilities.findLiveItems : i1 = staticinvoke <org.jfree.chart.renderer.RendererUtilities: int findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)>(r0, i0, d0, d1)
org.jfree.chart.renderer.RendererUtilities.findLiveItems : if i1 <= i2 goto $r1 = newarray (int)[2]
org.jfree.chart.axis.Axis.getLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets>
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint>
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : if r1 != null goto $z1 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>()
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $z1 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>()
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : if r1 != null goto (branch)
org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>()
org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>()
org.jfree.chart.axis.AxisCollection.getAxesAtLeft : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft>
org.jfree.chart.plot.CombinedRangeXYPlot.equals : return 0
org.jfree.chart.plot.CombinedRangeXYPlot.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.plot.CombinedRangeXYPlot
org.jfree.chart.plot.CombinedRangeXYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.CombinedRangeXYPlot
org.jfree.chart.LegendItem.setDatasetIndex : r0.<org.jfree.chart.LegendItem: int datasetIndex> = i0
org.jfree.chart.plot.XYPlot.getDomainAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxis : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getDomainAxis : if r1 != null goto return r1
org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = null
org.jfree.chart.plot.XYPlot.getDomainAxis : return r1
org.jfree.chart.plot.XYPlot.getDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getRangeCrosshairValue : $d0 = r0.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue>
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer")
org.jfree.chart.axis.Tick.getTextAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getBaseShapesVisible : $z0 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesVisible>
org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.JFreeChart.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.JFreeChart.addChangeListener : $r2 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.plot.XYPlot.setRangeCrosshairValue : $z1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isRangeCrosshairVisible()>()
org.jfree.chart.plot.XYPlot.setRangeCrosshairValue : r0.<org.jfree.chart.plot.XYPlot: double rangeCrosshairValue> = d0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : return r2
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if r3 != null goto $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex")
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r4 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero>
org.jfree.chart.annotations.XYTextAnnotation.setFont : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>()
org.jfree.chart.annotations.XYTextAnnotation.setFont : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font> = r1
org.jfree.chart.annotations.XYTextAnnotation.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.plot.XYPlot.isRangeCrosshairVisible : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairVisible>
org.jfree.chart.plot.XYPlot.setOrientation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.XYPlot.setOrientation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.annotations.XYTextAnnotation.getRotationAnchor : $r1 = r0.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.renderer.AbstractRenderer.getItemPaint : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint lookupSeriesPaint(int)>(i0)
org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : return r5
org.jfree.chart.axis.ValueAxis.reserveSpace : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : d4 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : if r5 != null goto $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $d6 = d5 + d1
org.jfree.chart.axis.ValueAxis.reserveSpace : d5 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z3)
org.jfree.chart.axis.ValueAxis.reserveSpace : d7 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.ValueAxis.reserveSpace : $z7 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z5)
org.jfree.chart.axis.ValueAxis.reserveSpace : $d8 = d7 + d2
org.jfree.chart.axis.ValueAxis.reserveSpace : $z6 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : d0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double getFixedDimension()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $b0 = d0 cmpl 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : $z4 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : d3 = 0.0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : r7 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : $r10 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : $z0 = virtualinvoke r7.<org.jfree.data.Range: boolean contains(double)>(d0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : r9 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : $r11 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r9)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r6)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : $r14 = new java.awt.geom.Line2D$Double
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : r8 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : $d5 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5)
org.jfree.chart.plot.XYPlot.getRangeAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation(int)>(i0)
org.jfree.chart.plot.XYPlot.getRangeAxisEdge : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.getRangeAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>()
org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.axis.NumberAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : return r6
org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : $r5 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.refreshTicks : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.axis.AxisCollection.getAxesAtTop : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtTop>
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 goto r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 goto return
org.jfree.data.xy.XYSeries.add : if z0 == 0 goto return
org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)]
org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0)
org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : if i0 >= 0 goto $z2 = r0.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>
org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>()
org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getPlotImages : $z0 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotImages>
org.jfree.chart.plot.XYPlot.getRangeMarkers : $r9 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.getRangeMarkers : $r8 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.XYPlot.getRangeMarkers : return r2
org.jfree.chart.plot.XYPlot.getRangeMarkers : if r2 == null goto return r2
org.jfree.chart.plot.XYPlot.getRangeMarkers : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.getRangeMarkers : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getRangeMarkers : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.getRangeMarkers : r2 = null
org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.plot.Plot.setParent : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> = r1
org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0
org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer>
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $z0 = r0.<org.jfree.chart.annotations.AbstractAnnotation: boolean notify>
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $r1 = new org.jfree.chart.event.AnnotationChangeEvent
org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1
org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.BorderArrangement.add : if r2 != null goto r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.ValueAxis.getLowerBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if r1 == null goto return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.plot.XYPlot.isRangeMinorGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeMinorGridlinesVisible>
org.jfree.chart.axis.AxisCollection.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axis")
org.jfree.chart.axis.AxisCollection.add : $r6 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtBottom>
org.jfree.chart.axis.AxisCollection.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.AxisCollection.add : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.AxisCollection.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "edge")
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.XYPlot.draw : $r51 = virtualinvoke r42.<org.jfree.chart.axis.AxisState: java.util.List getTicks()>()
org.jfree.chart.plot.XYPlot.draw : $d24 = virtualinvoke r11.<org.jfree.chart.plot.CrosshairState: double getCrosshairY()>()
org.jfree.chart.plot.XYPlot.draw : $r29 = new org.jfree.chart.plot.CrosshairState
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r37)
org.jfree.chart.plot.XYPlot.draw : r81 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i21)
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r11.<org.jfree.chart.plot.CrosshairState: void setAnchor(java.awt.geom.Point2D)>(r3)
org.jfree.chart.plot.XYPlot.draw : $i16 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r26)
org.jfree.chart.plot.XYPlot.draw : i20 = virtualinvoke r11.<org.jfree.chart.plot.CrosshairState: int getDomainAxisIndex()>()
org.jfree.chart.plot.XYPlot.draw : r70 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(i14)
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r26, r5)
org.jfree.chart.plot.XYPlot.draw : $z4 = virtualinvoke r26.<java.awt.geom.Rectangle2D: boolean isEmpty()>()
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r11.<org.jfree.chart.plot.CrosshairState: void setAnchorY(double)>(#NaN)
org.jfree.chart.plot.XYPlot.draw : $r39 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.XYPlot.draw : if r42 == null goto (branch)
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r11.<org.jfree.chart.plot.CrosshairState: void setCrosshairDistance(double)>(#Infinity)
org.jfree.chart.plot.XYPlot.draw : if r70 == null goto i14 = i14 + -1
org.jfree.chart.plot.XYPlot.draw : $r49 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.XYPlot.draw : z6 = 0
org.jfree.chart.plot.XYPlot.draw : $i15 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.draw : $r85 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.draw : $r46 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.XYPlot.draw : if r74 == null goto i18 = i18 + -1
org.jfree.chart.plot.XYPlot.draw : r82 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i21)
org.jfree.chart.plot.XYPlot.draw : i21 = virtualinvoke r11.<org.jfree.chart.plot.CrosshairState: int getRangeAxisIndex()>()
org.jfree.chart.plot.XYPlot.draw : if z0 != 0 goto return
org.jfree.chart.plot.XYPlot.draw : r78 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i20)
org.jfree.chart.plot.XYPlot.draw : r76 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i18)
org.jfree.chart.plot.XYPlot.draw : $d9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: double getRangeCrosshairValue()>()
org.jfree.chart.plot.XYPlot.draw : r15 = null
org.jfree.chart.plot.XYPlot.draw : r10 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.plot.XYPlot.draw : $z12 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isDomainCrosshairVisible()>()
org.jfree.chart.plot.XYPlot.draw : r8 = virtualinvoke r7.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.XYPlot.draw : $d8 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: double getDomainCrosshairValue()>()
org.jfree.chart.plot.XYPlot.draw : if z6 != 0 goto i22 = 0
org.jfree.chart.plot.XYPlot.draw : $r73 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.XYPlot.draw : i22 = 0
org.jfree.chart.plot.XYPlot.draw : $r48 = virtualinvoke r4.<org.jfree.chart.plot.PlotState: java.util.Map getSharedAxisStates()>()
org.jfree.chart.plot.XYPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.Map drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r26, r5)
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r26)
org.jfree.chart.plot.XYPlot.draw : $z9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)>(r1, r26, i17, r5, r11)
org.jfree.chart.plot.XYPlot.draw : i18 = i13 - 1
org.jfree.chart.plot.XYPlot.draw : r16 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.DatasetRenderingOrder getDatasetRenderingOrder()>()
org.jfree.chart.plot.XYPlot.draw : if r3 == null goto $r29 = new org.jfree.chart.plot.CrosshairState
org.jfree.chart.plot.XYPlot.draw : r79 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i20)
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r38)
org.jfree.chart.plot.XYPlot.draw : $r25 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.XYPlot.draw : $r40 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>()
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r26)
org.jfree.chart.plot.XYPlot.draw : $r53 = virtualinvoke r42.<org.jfree.chart.axis.AxisState: java.util.List getTicks()>()
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r26)
org.jfree.chart.plot.XYPlot.draw : $r27 = virtualinvoke r26.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.plot.XYPlot.draw : $r69 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.draw : r37 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.XYPlot.draw : $z14 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isRangeCrosshairVisible()>()
org.jfree.chart.plot.XYPlot.draw : $z13 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.draw : $r61 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.XYPlot.draw : r72 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i14)
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r26)
org.jfree.chart.plot.XYPlot.draw : $r68 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder REVERSE>
org.jfree.chart.plot.XYPlot.draw : r75 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxisForDataset(int)>(i18)
org.jfree.chart.plot.XYPlot.draw : if r5 == null goto r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.XYPlot.draw : i24 = 0
org.jfree.chart.plot.XYPlot.draw : r7 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.XYPlot.draw : i14 = i13 - 1
org.jfree.chart.plot.XYPlot.draw : r71 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxisForDataset(int)>(i14)
org.jfree.chart.plot.XYPlot.draw : $r55 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.XYPlot.draw : $r54 = virtualinvoke r13.<org.jfree.chart.axis.AxisState: java.util.List getTicks()>()
org.jfree.chart.plot.XYPlot.draw : r26 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.awt.Rectangle integerise(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.plot.XYPlot.draw : if r3 == null goto $d8 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: double getDomainCrosshairValue()>()
org.jfree.chart.plot.XYPlot.draw : $r52 = virtualinvoke r13.<org.jfree.chart.axis.AxisState: java.util.List getTicks()>()
org.jfree.chart.plot.XYPlot.draw : if r13 == null goto r14 = r1
org.jfree.chart.plot.XYPlot.draw : if r4 == null goto (branch)
org.jfree.chart.plot.XYPlot.draw : $z11 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData>
org.jfree.chart.plot.XYPlot.draw : $d19 = virtualinvoke r11.<org.jfree.chart.plot.CrosshairState: double getCrosshairX()>()
org.jfree.chart.plot.XYPlot.draw : $r88 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.XYPlot.draw : $r59 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.XYPlot.draw : r38 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.XYPlot.draw : i8 = 0
org.jfree.chart.plot.XYPlot.draw : if r42 != null goto $r46 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.XYPlot.draw : $i19 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.draw : if r5 == null goto virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r26)
org.jfree.chart.plot.XYPlot.draw : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.XYPlot.draw : $r41 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r40)
org.jfree.chart.plot.XYPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: float getForegroundAlpha()>()
org.jfree.chart.plot.XYPlot.draw : r74 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(i18)
org.jfree.chart.plot.XYPlot.draw : $r87 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.draw : if r13 != null goto (branch)
org.jfree.chart.plot.XYPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.XYPlot.draw : $r77 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.draw : $r62 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder FORWARD>
org.jfree.chart.plot.XYPlot.draw : virtualinvoke r11.<org.jfree.chart.plot.CrosshairState: void setAnchorX(double)>(#NaN)
org.jfree.chart.plot.XYPlot.draw : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.XYPlot.draw : r14 = r1
org.jfree.chart.plot.XYPlot.draw : if r13 == null goto (branch)
org.jfree.chart.plot.XYPlot.draw : i0 = 0
org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D
org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.LegendItemCollection.addAll : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.plot.CombinedRangeXYPlot.getSubplots : $r2 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.getSubplots : $r1 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities>
org.jfree.chart.plot.XYPlot.drawDomainGridlines : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke getDomainGridlineStroke()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $r15 = (org.jfree.chart.renderer.xy.AbstractXYItemRenderer) r9
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $r13 = virtualinvoke r7.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.drawDomainGridlines")]
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $z1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isDomainGridlinesVisible()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $z5 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isDomainGridlinesVisible()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $r12 = virtualinvoke r7.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : r4 = null
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $z6 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $z4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isDomainMinorGridlinesVisible()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : z0 = 1
org.jfree.chart.plot.XYPlot.drawDomainGridlines : z0 = 0
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $r16 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : $r10 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : r5 = null
org.jfree.chart.plot.XYPlot.drawDomainGridlines : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.drawDomainGridlines : r5 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint getDomainGridlinePaint()>()
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.chart.annotations.XYTextAnnotation.getTextAnchor : $r1 = r0.<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.plot.XYPlot.getDatasetCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.XYPlot.isDomainCrosshairLockedOnData : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean domainCrosshairLockedOnData>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.xy.XYSeries.getAutoSort : $z0 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.chart.plot.XYPlot.getRendererForDataset : return r2
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r6 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRendererForDataset : i0 = 0
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getRendererForDataset : if r2 != null goto return r2
org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = null
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : return r5
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i0 > 500 goto return r5
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i1 > 0 goto i2 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i3 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int calculateVisibleTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d6 = (double) i2
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $i5 = i4 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d10 = (double) i4
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r21 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if r10 == null goto $r18 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double calculateLowestVisibleTickValue()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r13 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER_RIGHT>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d15 = d4 - d12
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r14)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r4 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r18 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: void clear()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r24 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r23 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d0 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i3 = i3 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r12 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER_RIGHT>
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i4 = 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d3 = 0.0
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.plot.XYPlot.getRangeAxis : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getRangeAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.getRangeAxis : r1 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i0)
org.jfree.chart.plot.XYPlot.getRangeAxis : if r1 != null goto return r1
org.jfree.chart.plot.XYPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.getRangeAxis : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.plot.XYPlot.getRangeAxis : r1 = null
org.jfree.chart.plot.XYPlot.getRangeAxis : return r1
org.jfree.chart.plot.XYPlot.getRangeAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(0)
org.jfree.chart.plot.XYPlot.getOrientation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.XYPlot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.XYPlot.drawBackground : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.block.FlowArrangement.arrangeRR : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($d1)
org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.FlowArrangement.arrangeRR : $r8 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r5)
org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.FlowArrangement.arrangeRR : $r7 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible>
org.jfree.chart.plot.XYPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.chart.plot.XYPlot.drawZeroRangeBaseline : $z0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isRangeZeroBaselineVisible()>()
org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint>
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.axis.Axis.getLabel : $r1 = r0.<org.jfree.chart.axis.Axis: java.lang.String label>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPassCount : return 1
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i3 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r8)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i3)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()", "org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds")]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r9 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i3, i5)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0 goto r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.render : virtualinvoke r9.<org.jfree.chart.renderer.xy.XYItemRendererState: void endSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)>(r5, i4, i5, i6, i2, i1)
org.jfree.chart.plot.XYPlot.render : $d0 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>()
org.jfree.chart.plot.XYPlot.render : return z0
org.jfree.chart.plot.XYPlot.render : r10 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.SeriesRenderingOrder getSeriesRenderingOrder()>()
org.jfree.chart.plot.XYPlot.render : if i6 != -1 goto $z2 = virtualinvoke r9.<org.jfree.chart.renderer.xy.XYItemRendererState: boolean getProcessVisibleItemsOnly()>()
org.jfree.chart.plot.XYPlot.render : i1 = interfaceinvoke r8.<org.jfree.chart.renderer.xy.XYItemRenderer: int getPassCount()>()
org.jfree.chart.plot.XYPlot.render : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxisForDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.render : r8 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(i0)
org.jfree.chart.plot.XYPlot.render : $z1 = staticinvoke <org.jfree.data.general.DatasetUtilities: boolean isEmptyOrNull(org.jfree.data.xy.XYDataset)>(r5)
org.jfree.chart.plot.XYPlot.render : i3 = interfaceinvoke r5.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.plot.XYPlot.render : $i8 = r11[0]
org.jfree.chart.plot.XYPlot.render : i4 = i3 - 1
org.jfree.chart.plot.XYPlot.render : i5 = 0
org.jfree.chart.plot.XYPlot.render : $z2 = virtualinvoke r9.<org.jfree.chart.renderer.xy.XYItemRendererState: boolean getProcessVisibleItemsOnly()>()
org.jfree.chart.plot.XYPlot.render : if r6 == null goto return z0
org.jfree.chart.plot.XYPlot.render : $i10 = r11[1]
org.jfree.chart.plot.XYPlot.render : $d1 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double getUpperBound()>()
org.jfree.chart.plot.XYPlot.render : r5 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.render : $r12 = <org.jfree.chart.plot.SeriesRenderingOrder: org.jfree.chart.plot.SeriesRenderingOrder REVERSE>
org.jfree.chart.plot.XYPlot.render : interfaceinvoke r8.<org.jfree.chart.renderer.xy.XYItemRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,org.jfree.chart.plot.CrosshairState,int)>(r1, r9, r2, r3, r0, r6, r7, r5, i4, i12, r4, i2)
org.jfree.chart.plot.XYPlot.render : virtualinvoke r9.<org.jfree.chart.renderer.xy.XYItemRendererState: void startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)>(r5, i4, i5, i6, i2, i1)
org.jfree.chart.plot.XYPlot.render : $i7 = interfaceinvoke r5.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i4)
org.jfree.chart.plot.XYPlot.render : z0 = 1
org.jfree.chart.plot.XYPlot.render : z0 = 0
org.jfree.chart.plot.XYPlot.render : i12 = i5
org.jfree.chart.plot.XYPlot.render : r11 = staticinvoke <org.jfree.chart.renderer.RendererUtilities: int[] findLiveItems(org.jfree.data.xy.XYDataset,int,double,double)>(r5, i4, $d0, $d1)
org.jfree.chart.plot.XYPlot.render : i2 = 0
org.jfree.chart.plot.XYPlot.render : r9 = interfaceinvoke r8.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.chart.renderer.xy.XYItemRendererState initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r0, r5, r3)
org.jfree.chart.plot.XYPlot.render : if r8 != null goto r9 = interfaceinvoke r8.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.chart.renderer.xy.XYItemRendererState initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r0, r5, r3)
org.jfree.chart.plot.XYPlot.render : r7 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : return r2
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if r3 != null goto $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex")
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r4 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1)
org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrange : r6 = null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.chart.plot.XYPlot.isRangeCrosshairLockedOnData : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, r6)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, $r7)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d5 = d0 / d1
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r9 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $b0 = d8 cmpl d3
org.jfree.data.general.Series.addVetoableChangeListener : $r2 = r0.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport>
org.jfree.chart.plot.CrosshairState.getCrosshairX : $d0 = r0.<org.jfree.chart.plot.CrosshairState: double crosshairX>
org.jfree.chart.plot.CrosshairState.getCrosshairY : $d0 = r0.<org.jfree.chart.plot.CrosshairState: double crosshairY>
org.jfree.chart.axis.Axis.isAxisLineVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible>
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : return i0
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if i0 >= 0 goto return i0
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : if r1 != null goto return r1
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : r1 = null
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : return r1
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : return r2
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r2 != null goto return r2
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1
org.jfree.chart.plot.CrosshairState.setAnchor : r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor> = r1
org.jfree.chart.renderer.xy.XYItemRendererState.getProcessVisibleItemsOnly : $z0 = r0.<org.jfree.chart.renderer.xy.XYItemRendererState: boolean processVisibleItemsOnly>
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : return r2
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : $r8 = virtualinvoke r4.<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : $r5 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange")]
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : r2 = null
org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange : $r6 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : return r36
org.jfree.chart.JFreeChart.drawTitle : n0 = null
org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null]
org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t")
org.jfree.chart.JFreeChart.drawTitle : r36 = null
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0)
org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area")
org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7)
org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23)
org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r1 = new org.jfree.chart.block.RectangleConstraint
org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < 0 goto $r1 = new java.lang.IllegalArgumentException
org.jfree.data.xy.XYSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : return r3
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : i0 = 0
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if r3 != null goto $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if r5 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r21 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.addAnnotation : if z0 == 0 goto return
org.jfree.chart.plot.XYPlot.addAnnotation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "annotation")
org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.addAnnotation : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)>(r1, 1)
org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke r1.<org.jfree.chart.annotations.XYAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>(r0)
org.jfree.chart.plot.CombinedRangeXYPlot.plotChanged : virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r1)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape lookupSeriesShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : if r1 != null goto return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : if r1 != null goto (branch)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getLegendShape(int)>(i0)
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible>
org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r2 == null goto (branch)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r1 != null goto return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Stroke getNextStroke()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r1 != null goto (branch)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesStroke(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetRenderingOrder : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder>
org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line>
org.jfree.chart.plot.CombinedRangeXYPlot.setGap : r0.<org.jfree.chart.plot.CombinedRangeXYPlot: double gap> = d0
org.jfree.chart.plot.XYPlot.isRangeZeroBaselineVisible : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.plot.XYPlot.setFixedDomainAxisSpace : if z0 == 0 goto return
org.jfree.chart.plot.XYPlot.setFixedDomainAxisSpace : r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace> = r1
org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r2 == null goto (branch)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r1 != null goto return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r1 != null goto (branch)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>()
org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.chart.axis.Axis.getLabelAngle : $d0 = r0.<org.jfree.chart.axis.Axis: double labelAngle>
org.jfree.data.xy.XYSeries.getY : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : r7 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : $z0 = virtualinvoke r7.<org.jfree.data.Range: boolean contains(double)>(d0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : $d5 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : d1 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r4, $r10)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : r9 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : $r11 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r9)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r6)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : $r14 = new java.awt.geom.Line2D$Double
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : r8 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : $r10 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5)
org.jfree.chart.plot.CombinedRangeXYPlot.setFixedDomainAxisSpaceForSubplots : $r4 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.setFixedDomainAxisSpaceForSubplots : virtualinvoke r3.<org.jfree.chart.plot.XYPlot: void setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)>(r1, 0)
org.jfree.chart.plot.CombinedRangeXYPlot.setFixedDomainAxisSpaceForSubplots : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedRangeXYPlot.setFixedDomainAxisSpaceForSubplots : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.CombinedRangeXYPlot.setFixedDomainAxisSpaceForSubplots")]
org.jfree.chart.plot.CombinedRangeXYPlot.setFixedDomainAxisSpaceForSubplots : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getRangeTickBandPaint : $r1 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Paint rangeTickBandPaint>
org.jfree.chart.axis.NumberAxis.setTickUnit : if z0 == 0 goto return
org.jfree.chart.axis.NumberAxis.setTickUnit : r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> = r1
org.jfree.chart.axis.NumberAxis.setTickUnit : if z1 == 0 goto (branch)
org.jfree.chart.axis.NumberAxis.setTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit")
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 == null goto return 1
org.jfree.chart.plot.Plot.axisChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendTitle.draw : if r8 != null goto r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendTitle.draw : return r9
org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4)
org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3)
org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>()
org.jfree.chart.title.LegendTitle.draw : r6 = null
org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.plot.XYPlot.calculateAxisSpace : $r3 = new org.jfree.chart.axis.AxisSpace
org.jfree.chart.plot.XYPlot.calculateAxisSpace : r5 = virtualinvoke r6.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.XYPlot.calculateAxisSpace : return r7
org.jfree.chart.plot.XYPlot.calculateAxisSpace : r7 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, r5, r6)
org.jfree.chart.plot.XYPlot.calculateAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, r2, r4)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $r5 = virtualinvoke r3.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("123", r4)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : return d4
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r4 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d1 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimBorder : return r1
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.updateCrosshairValues : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "orientation")
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.updateCrosshairValues : $r4 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.updateCrosshairValues : if r1 == null goto return
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.updateCrosshairValues : virtualinvoke r1.<org.jfree.chart.plot.CrosshairState: void updateCrosshairPoint(double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)>(d0, d1, i0, i1, d2, d3, r2)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.updateCrosshairValues : $r3 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.XYPlot.integerise : $d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.XYPlot.integerise : $d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.XYPlot.integerise : $r2 = new java.awt.Rectangle
org.jfree.chart.plot.XYPlot.integerise : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.plot.XYPlot.integerise : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1)
org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.plot.CrosshairState.setAnchorX : r0.<org.jfree.chart.plot.CrosshairState: double anchorX> = d0
org.jfree.chart.plot.CrosshairState.setAnchorY : r0.<org.jfree.chart.plot.CrosshairState: double anchorY> = d0
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemToolTipGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>
org.jfree.chart.axis.Axis.isTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible>
org.jfree.chart.plot.XYPlot.isDomainZeroBaselineVisible : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean domainZeroBaselineVisible>
org.jfree.chart.renderer.xy.StandardXYItemRenderer$State.access$002 : r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer$State: int seriesIndex> = i0
org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.plot.CrosshairState.getRangeAxisIndex : $i0 = r0.<org.jfree.chart.plot.CrosshairState: int rangeAxisIndex>
org.jfree.chart.axis.Axis.getTickMarkInsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkInsideLength>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 goto specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r22 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : return r6
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r15 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: java.lang.String getText()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d6 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r34 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r26 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getTickMarkStroke()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r39 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkInsideLength()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r38 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r30 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r27 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickMarkPaint()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r12 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float[] calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r9, d0, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d29 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r7, r1, r2, $z13)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r35 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r16 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getTextAnchor()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z9 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r24 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d24 = 0.0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorDown(double)>(d29)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r14 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickLabelPaint()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z13 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r5 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r37 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r32 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels")]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickMarksVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d25 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r7, r1, r2, $z10)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = null
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d2 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getAngle()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkOutsideLength()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isMinorTickMarksVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorLeft(double)>(d26)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r28 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isAxisLineVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r29 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.AxisCollection.getAxesAtRight : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtRight>
org.jfree.chart.plot.XYPlot.getFixedLegendItems : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>()
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> = z0
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $r1 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>()
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z1 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null goto d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.plot.CombinedRangeXYPlot.add : $r4 = new org.jfree.ui.RectangleInsets
org.jfree.chart.plot.CombinedRangeXYPlot.add : virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CombinedRangeXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setRangeAxis(org.jfree.chart.axis.ValueAxis)>(null)
org.jfree.chart.plot.CombinedRangeXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setParent(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CombinedRangeXYPlot.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "subplot")
org.jfree.chart.plot.CombinedRangeXYPlot.add : $r5 = r0.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedRangeXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void addChangeListener(org.jfree.chart.event.PlotChangeListener)>(r0)
org.jfree.chart.plot.CombinedRangeXYPlot.add : if i0 > 0 goto virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setParent(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CombinedRangeXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setWeight(int)>(i0)
org.jfree.chart.plot.CombinedRangeXYPlot.add : virtualinvoke r0.<org.jfree.chart.plot.CombinedRangeXYPlot: void configureRangeAxes()>()
org.jfree.data.Range.constrain : $z0 = virtualinvoke r0.<org.jfree.data.Range: boolean contains(double)>(d0)
org.jfree.data.Range.constrain : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.constrain : return d1
org.jfree.data.Range.constrain : $d3 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.constrain : d1 = d0
org.jfree.data.Range.constrain : d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset>
org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimPadding : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font getLegendTextFont(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : if r1 != null goto return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : return r1
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $i1 = lengthof r2
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount>
org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>()
org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : r0.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle> = d0
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r0 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.plot.XYPlot.getRangeGridlineStroke : $r1 = r0.<org.jfree.chart.plot.XYPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>()
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.Axis.getTickMarkPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : return r5
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i0 > 500 goto return r5
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i1 > 0 goto i2 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i1 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : n1 = null
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i3 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : n0 = null
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int calculateVisibleTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d6 = (double) i2
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $i5 = i4 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r14 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r17 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d10 = (double) i4
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r21 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double calculateLowestVisibleTickValue()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d15 = d4 - d12
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r4 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r12)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r24 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r23 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if r10 == null goto $r16 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d0 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i3 = i3 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r16 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i2 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r18 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d3 = 0.0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i4 = 0
org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : $r7 = new org.jfree.chart.axis.AxisSpace
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : $r18 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : return r3
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : $r21 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : $r16 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : i0 = 0
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : if r3 != null goto $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : $r9 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : $r14 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i0)
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : if r5 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace : r3 = virtualinvoke r5.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r6, r3)
org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1
org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location")
org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.AxisState.getTicks : $r1 = r0.<org.jfree.chart.axis.AxisState: java.util.List ticks>
org.jfree.data.xy.XYSeriesCollection.getX : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getX : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : $r2 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.axis.ValueAxis.getUpperBound : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null goto i0 = i0 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1)
org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimMargin : return r1
org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.data.xy.XYSeriesCollection.getY : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getY(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getY : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.chart.title.LegendItemBlockContainer.draw : return r4
org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null
org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null)
org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey>
org.jfree.chart.plot.XYPlot.isDomainGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.XYPlot: boolean domainGridlinesVisible>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if z0 == 0 goto return
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if i0 != 0 goto $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : return d0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $r12 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : if z0 == 0 goto $r12 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d11 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $f0 = virtualinvoke r13.<java.awt.font.LineMetrics: float getHeight()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : d0 = 0.0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r13 = virtualinvoke r5.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("ABCxyz", $r12)
org.jfree.chart.plot.XYPlot.getLegendItems : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.XYPlot.getLegendItems : $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getLegendItems : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i1)
org.jfree.chart.plot.XYPlot.getLegendItems : if r3 == null goto i1 = i1 + 1
org.jfree.chart.plot.XYPlot.getLegendItems : i3 = 0
org.jfree.chart.plot.XYPlot.getLegendItems : r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(i1)
org.jfree.chart.plot.XYPlot.getLegendItems : $z0 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: boolean isSeriesVisible(int)>(i3)
org.jfree.chart.plot.XYPlot.getLegendItems : i1 = 0
org.jfree.chart.plot.XYPlot.getLegendItems : if r3 != null goto (branch)
org.jfree.chart.plot.XYPlot.getLegendItems : $r7 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.XYPlot.getLegendItems : if r4 == null goto i3 = i3 + 1
org.jfree.chart.plot.XYPlot.getLegendItems : $z1 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: boolean isSeriesVisibleInLegend(int)>(i3)
org.jfree.chart.plot.XYPlot.getLegendItems : if r2 == null goto i1 = i1 + 1
org.jfree.chart.plot.XYPlot.getLegendItems : i2 = interfaceinvoke r2.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.plot.XYPlot.getLegendItems : r4 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>(i1, i3)
org.jfree.chart.plot.XYPlot.getLegendItems : return r1
org.jfree.chart.plot.XYPlot.getLegendItems : virtualinvoke r1.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r4)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $i8 = i1 - 1
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : d2 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r3, r15)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z23 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getPlotImages()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r13)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: void updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)>(r9, d0, d1, i20, i21, d2, d3, r12)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : r14 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Stroke getItemStroke(int,int)>(i0, i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z17 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $r31 = r2.<org.jfree.chart.renderer.xy.XYItemRendererState: java.awt.geom.Line2D workingLine>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z15 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d19)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : d30 = d2
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d7)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z20 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getBaseShapesVisible()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r14)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $i9 = i1 - 1
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : r16 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : i20 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r6)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z25 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean isItemLabelVisible(int,int)>(i0, i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z5 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean drawSeriesLineAsPath>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $r40 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : r15 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $r28 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : z1 = 1
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : r10 = null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : d19 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d7, r3, r15)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : if z0 != 0 goto $z20 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getBaseShapesVisible()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : d0 = interfaceinvoke r8.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : i21 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r7)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : d1 = interfaceinvoke r8.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i0, i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $r30 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z12 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getPlotDiscontinuous()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z4 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getPlotLines()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $r33 = r2.<org.jfree.chart.renderer.xy.XYItemRendererState: java.awt.geom.Line2D workingLine>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : d3 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d1, r3, r16)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : r11 = null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : z0 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getItemVisible(int,int)>(i0, i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $r32 = r2.<org.jfree.chart.renderer.xy.XYItemRendererState: java.awt.geom.Line2D workingLine>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : r13 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Paint getItemPaint(int,int)>(i0, i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : if z1 == 0 goto (branch)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : r12 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : if r4 == null goto r12 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : if r11 == null goto return
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : d6 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d8, r3, r16)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : if i1 == 0 goto (branch)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem : d31 = d3
org.jfree.chart.plot.XYPlot.getRendererCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.plot.XYPlot.drawZeroDomainBaseline : $z0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: boolean isDomainZeroBaselineVisible()>()
org.jfree.chart.plot.XYPlot.getDomainAxisEdge : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.getDomainAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation(int)>(i0)
org.jfree.chart.plot.XYPlot.getDomainAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>()
org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount>
org.jfree.data.Range.combine : $r2 = new org.jfree.data.Range
org.jfree.data.Range.combine : $d2 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.combine : if r1 != null goto $d2 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.combine : $d4 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.combine : return r1
org.jfree.data.Range.combine : if r0 != null goto (branch)
org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r3 == null goto (branch)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r4 == null goto (branch)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r5 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r7 != null goto $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r1 != null goto $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r8 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r6 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i2 < 0 goto (branch)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i2 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)>(r0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null)
org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
