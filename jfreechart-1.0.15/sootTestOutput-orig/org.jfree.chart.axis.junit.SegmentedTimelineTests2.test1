org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r2.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTime : $i5 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(12)
org.jfree.chart.axis.SegmentedTimeline.getTime : return l0
org.jfree.chart.axis.SegmentedTimeline.getTime : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTime : $i2 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(2)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i7 = virtualinvoke $r12.<java.util.Calendar: int get(int)>(14)
org.jfree.chart.axis.SegmentedTimeline.getTime : $r11 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTime : $i3 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(5)
org.jfree.chart.axis.SegmentedTimeline.getTime : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $i4 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(11)
org.jfree.chart.axis.SegmentedTimeline.getTime : $r13 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTime : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving>
org.jfree.chart.axis.SegmentedTimeline.getTime : $i1 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(1)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i6 = virtualinvoke $r10.<java.util.Calendar: int get(int)>(13)
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumber : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>()
org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>()
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $b6 = l2 cmp l3
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : return null
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $l5 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc(long)>(1L)
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l5 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l9 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l5 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r3)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $i2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$300(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $b4 = l0 cmp 0L
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : return l0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline.addException : i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.addException : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.addException : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.access$400 : $i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if r3 == null goto (branch)
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount")]
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : i2 = 0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $l7 = (long) i2
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $b3 = l1 cmp l0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline$Segment intersect(long,long)>(l0, l1)
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.SegmentedTimeline.getGroupSegmentCount : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount>
org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsExcluded>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l11 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l13 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l1 = l23 + 1L
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l25 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$l11 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>", "org.jfree.chart.axis.SegmentedTimeline.toMillisecond")]
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l23 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l1 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> = r1
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if r1 == null goto r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> = r1
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l3 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l11 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l6 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.setAdjustForDaylightSaving : r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving> = z0
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline.access$200 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded>
org.jfree.chart.axis.SegmentedTimeline.access$300 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount>
org.jfree.chart.axis.SegmentedTimeline$Segment.before : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : l1 = l0
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i6 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(12)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i8 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(14)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : return l1
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i5 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(11)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i4 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(5)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i7 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(13)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r12 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i3 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r10 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i2 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(1)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l8 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getExceptionSegmentCount(long,long)>($l26, $l27)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : return l4
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l24 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l22 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l25 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l30 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l12 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l28 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTime(java.util.Date)>(r1)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l11 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l26 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l9 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentStart : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>()
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : return 1
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline.getStartTime : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline$Segment.after : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = i2 - 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r2)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = i2 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean after(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean before(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1 goto $i5 = i0 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i4 = i0 + i1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i0 > i1 goto $i5 = i0 + 1", "org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments")]
org.jfree.chart.axis.SegmentedTimeline.access$100 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.access$000 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l7 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : l4 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentEnd()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l5 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l15 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l12 = virtualinvoke $r5.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : l3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r6 = new org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$l16 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()", "org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions")]
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExcludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l9 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $i10 = virtualinvoke $r4.<org.jfree.chart.axis.SegmentedTimeline: int getSegmentsExcluded()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline>
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$l7 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()", "org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions")]
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r7 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline>
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l16 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.getSegment : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentEnd : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd>
