org.jfree.chart.util.LineUtilities.clipLine : virtualinvoke r0.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d0, d1, d2, d3)
org.jfree.chart.util.LineUtilities.clipLine : d1 = d6
org.jfree.chart.util.LineUtilities.clipLine : $i4 = i0 & 1
org.jfree.chart.util.LineUtilities.clipLine : d2 = d5
org.jfree.chart.util.LineUtilities.clipLine : d3 = d7
org.jfree.chart.util.LineUtilities.clipLine : $i3 = i0 & i1
org.jfree.chart.util.LineUtilities.clipLine : if i0 == 0 goto (branch)
org.jfree.chart.util.LineUtilities.clipLine : $i14 = i1 & 4
org.jfree.chart.util.LineUtilities.clipLine : i0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: int outcode(double,double)>(d0, d1)
org.jfree.chart.util.LineUtilities.clipLine : $d19 = d6 - d1
org.jfree.chart.util.LineUtilities.clipLine : $i16 = i1 & 8
org.jfree.chart.util.LineUtilities.clipLine : d9 = d3 - d1
org.jfree.chart.util.LineUtilities.clipLine : $d25 = d5 - d2
org.jfree.chart.util.LineUtilities.clipLine : d8 = d2 - d0
org.jfree.chart.util.LineUtilities.clipLine : $i6 = i0 & 4
org.jfree.chart.util.LineUtilities.clipLine : $i8 = i0 & 8
org.jfree.chart.util.LineUtilities.clipLine : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.util.LineUtilities.clipLine : d1 = virtualinvoke r0.<java.awt.geom.Line2D: double getY1()>()
org.jfree.chart.util.LineUtilities.clipLine : $d13 = d5 - d0
org.jfree.chart.util.LineUtilities.clipLine : d2 = virtualinvoke r0.<java.awt.geom.Line2D: double getX2()>()
org.jfree.chart.util.LineUtilities.clipLine : $d28 = d7 - d3
org.jfree.chart.util.LineUtilities.clipLine : d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.util.LineUtilities.clipLine : $i12 = i1 & 1
org.jfree.chart.util.LineUtilities.clipLine : $i10 = i0 & 2
org.jfree.chart.util.LineUtilities.clipLine : return 1
org.jfree.chart.util.LineUtilities.clipLine : return 0
org.jfree.chart.util.LineUtilities.clipLine : d7 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.util.LineUtilities.clipLine : $d10 = d4 - d0
org.jfree.chart.util.LineUtilities.clipLine : d0 = d4
org.jfree.chart.util.LineUtilities.clipLine : d0 = virtualinvoke r0.<java.awt.geom.Line2D: double getX1()>()
org.jfree.chart.util.LineUtilities.clipLine : i1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: int outcode(double,double)>(d2, d3)
org.jfree.chart.util.LineUtilities.clipLine : d3 = virtualinvoke r0.<java.awt.geom.Line2D: double getY2()>()
org.jfree.chart.util.LineUtilities.clipLine : $i2 = i0 | i1
org.jfree.chart.util.LineUtilities.clipLine : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$i2 = i0 | i1", "org.jfree.chart.util.LineUtilities.clipLine")]
org.jfree.chart.util.LineUtilities.clipLine : d0 = d5
org.jfree.chart.util.LineUtilities.clipLine : d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.util.LineUtilities.clipLine : if i1 == 0 goto (branch)
