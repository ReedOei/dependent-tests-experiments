org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label>
org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint>
org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible>
org.jfree.chart.title.LegendTitle.getBackgroundPaint : $r1 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.PaintMap.clear : $r1 = r0.<org.jfree.chart.PaintMap: java.util.Map store>
org.jfree.chart.plot.PiePlot.getLabelGenerator : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator>
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.drawOutline : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.drawOutline : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.title.LegendGraphic.draw : $r22 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint>
org.jfree.chart.title.LegendGraphic.draw : $d2 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>
org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5)
org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>
org.jfree.chart.title.LegendGraphic.draw : r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>
org.jfree.chart.title.LegendGraphic.draw : return null
org.jfree.chart.title.LegendGraphic.draw : $r17 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.title.LegendGraphic.draw : $r23 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke>
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r19)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r19)
org.jfree.chart.title.LegendGraphic.draw : $z3 = r5 instanceof java.awt.GradientPaint
org.jfree.chart.title.LegendGraphic.draw : $z2 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled>
org.jfree.chart.title.LegendGraphic.draw : $r15 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation>
org.jfree.chart.title.LegendGraphic.draw : $z4 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible>
org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.plot.PieLabelRecord.getAngle : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double angle>
org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.PieLabelLinkStyle.toString : $r1 = r0.<org.jfree.chart.plot.PieLabelLinkStyle: java.lang.String name>
org.jfree.chart.plot.PiePlot.getLabelLinkDepth : return 0.1
org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0]
org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1
org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1
org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1
org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible>
org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont>
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1
org.jfree.chart.plot.PiePlotState.setPieWRadius : r0.<org.jfree.chart.plot.PiePlotState: double pieWRadius> = d0
org.jfree.chart.plot.PiePlot.getMinimumArcAngleToDraw : $d0 = r0.<org.jfree.chart.plot.PiePlot: double minimumArcAngleToDraw>
org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint>
org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.chart.plot.PiePlotState.getPieWRadius : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieWRadius>
org.jfree.chart.plot.Plot.fillBackground : $z0 = r4 instanceof java.awt.GradientPaint
org.jfree.chart.plot.Plot.fillBackground : r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r15)
org.jfree.chart.plot.Plot.fillBackground : r15 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.Plot.fillBackground : $f8 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.fillBackground : $r3 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.fillBackground : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "orientation")
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4)
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.plot.Plot.drawBackgroundImage : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : if r4 == null goto return r22
org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>()
org.jfree.chart.block.BlockContainer.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.block.BlockContainer.draw")]
org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockContainer.draw : r4 = null
org.jfree.chart.block.BlockContainer.draw : if r4 == null goto (branch)
org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3)
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.plot.PiePlot.getSectionKey : if r1 != null goto return r1
org.jfree.chart.plot.PiePlot.getSectionKey : r1 = null
org.jfree.chart.plot.PiePlot.getSectionKey : return r1
org.jfree.chart.plot.PiePlot.getSectionKey : $r2 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getSectionKey : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getSectionKey : if i0 < 0 goto (branch)
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.plot.PieLabelRecord.getLinkPercent : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double linkPercent>
org.jfree.chart.block.FlowArrangement.arrangeFN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : d19 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r5.<java.util.List: void clear()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6)
org.jfree.chart.block.FlowArrangement.arrangeFN : $r13 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeFN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeFN : $d20 = d2 + d3
org.jfree.chart.block.FlowArrangement.arrangeFN : $r9 = new java.util.ArrayList
org.jfree.chart.block.FlowArrangement.arrangeFN : d0 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $d23 = staticinvoke <java.lang.Math: double min(double,double)>($d22, d0)
org.jfree.chart.block.FlowArrangement.arrangeFN : $d11 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $d8 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d25 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFN : i0 = 0
org.jfree.chart.block.FlowArrangement.arrangeFN : $r14 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeFN : $d4 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $r7 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = 0.0
org.jfree.chart.plot.PiePlot.getLabelLinkStyle : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>
org.jfree.chart.block.FlowArrangement.arrangeFR : return r4
org.jfree.chart.block.FlowArrangement.arrangeFR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.FlowArrangement.arrangeFR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.plot.PiePlot.clearSectionPaints : if z0 == 0 goto return
org.jfree.chart.plot.PiePlot.clearSectionPaints : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap>
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.plot.PiePlot.setLabelFont : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelFont : r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont> = r1
org.jfree.chart.plot.PiePlot.setLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null goto r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.PaintMap.put : $r3 = r0.<org.jfree.chart.PaintMap: java.util.Map store>
org.jfree.chart.PaintMap.put : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.chart.ChartFactory.createPieChart3D : return r4
org.jfree.chart.ChartFactory.createPieChart3D : $r8 = new org.jfree.chart.JFreeChart
org.jfree.chart.ChartFactory.createPieChart3D : if z2 == 0 goto $r8 = new org.jfree.chart.JFreeChart
org.jfree.chart.ChartFactory.createPieChart3D : $r10 = <org.jfree.chart.ChartFactory: org.jfree.chart.ChartTheme currentTheme>
org.jfree.chart.ChartFactory.createPieChart3D : if z1 == 0 goto (branch)
org.jfree.chart.ChartFactory.createPieChart3D : $r5 = new org.jfree.ui.RectangleInsets
org.jfree.chart.ChartFactory.createPieChart3D : $r2 = new org.jfree.chart.plot.PiePlot3D
org.jfree.chart.ChartFactory.createPieChart3D : $r6 = new org.jfree.chart.labels.StandardPieToolTipGenerator
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : return r3
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r6 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat numberFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r8 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat percentFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r4 = interfaceinvoke r1.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r2)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : if r4 == null goto $r8 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat percentFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d2 = virtualinvoke r4.<java.lang.Number: double doubleValue()>()
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : if r4 == null goto r3[1] = "null"
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d1 = 0.0
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $b0 = d2 cmpl 0.0
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3 = newarray (java.lang.Object)[4]
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d0 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>(r1)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : $r10 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.text.NumberFormat numberFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : r3[1] = "null"
org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray : d1 = d2 / d0
org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1
org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement")
org.jfree.chart.plot.Plot.setInsets : if z0 == 0 goto return
org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets")
org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1
org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setInsets : virtualinvoke r0.<org.jfree.chart.plot.Plot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>(r1, 1)
org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0
org.jfree.chart.plot.PieLabelRecord.getUpperY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY>
org.jfree.chart.title.LegendTitle.setItemPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setItemPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.title.LegendTitle.setItemPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = r1
org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.getSubtitle : if i0 < 0 goto $r1 = new java.lang.IllegalArgumentException
org.jfree.chart.JFreeChart.getSubtitle : $r2 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.plot.Plot.getBackgroundPaint : $r1 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.StandardChartTheme.apply : i0 = virtualinvoke r1.<org.jfree.chart.JFreeChart: int getSubtitleCount()>()
org.jfree.chart.StandardChartTheme.apply : i1 = 0
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(r7)
org.jfree.chart.StandardChartTheme.apply : if r7 == null goto return
org.jfree.chart.StandardChartTheme.apply : r7 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.StandardChartTheme.apply : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>
org.jfree.chart.StandardChartTheme.apply : $r3 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>
org.jfree.chart.StandardChartTheme.apply : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "chart")
org.jfree.chart.StandardChartTheme.apply : if r2 == null goto i0 = virtualinvoke r1.<org.jfree.chart.JFreeChart: int getSubtitleCount()>()
org.jfree.chart.StandardChartTheme.apply : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>
org.jfree.chart.StandardChartTheme.apply : r2 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle getTitle()>()
org.jfree.chart.StandardChartTheme.apply : $r5 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.Title getSubtitle(int)>(i1)
org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1
org.jfree.chart.plot.PiePlot.setCircular : if z1 == 0 goto return
org.jfree.chart.plot.PiePlot.setCircular : r0.<org.jfree.chart.plot.PiePlot: boolean circular> = z0
org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.StandardChartTheme.applyToTitle : $r12 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToTitle : $z1 = r1 instanceof org.jfree.chart.title.LegendTitle
org.jfree.chart.StandardChartTheme.applyToTitle : $r11 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>
org.jfree.chart.StandardChartTheme.applyToTitle : $r10 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.StandardChartTheme.applyToTitle : r9 = (org.jfree.chart.title.LegendTitle) r1
org.jfree.chart.StandardChartTheme.applyToTitle : $z0 = r1 instanceof org.jfree.chart.title.TextTitle
org.jfree.chart.StandardChartTheme.applyToTitle : goto [?= return]
org.jfree.chart.StandardChartTheme.applyToTitle : $r14 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer getWrapper()>()
org.jfree.chart.StandardChartTheme.applyToTitle : $r13 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>
org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1
org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor")
org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : r3 = null
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : return r3
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : $r5 = r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.String labelFormat>
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : r4 = virtualinvoke r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)>(r1, r2)
org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel : if r1 == null goto return r3
org.jfree.data.DefaultKeyedValues.getKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.chart.plot.PieLabelRecord.setAllocatedY : r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY> = d0
org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint> = r1
org.jfree.chart.plot.PiePlot.setLabelLinkPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.PieLabelRecord.compareTo : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double baseY>
org.jfree.chart.plot.PieLabelRecord.compareTo : return b0
org.jfree.chart.plot.PieLabelRecord.compareTo : r2 = (org.jfree.chart.plot.PieLabelRecord) r1
org.jfree.chart.plot.PieLabelRecord.compareTo : b0 = 0
org.jfree.chart.plot.PieLabelRecord.compareTo : $z0 = r1 instanceof org.jfree.chart.plot.PieLabelRecord
org.jfree.chart.plot.PieLabelRecord.compareTo : b0 = -1
org.jfree.chart.plot.PiePlot.getLabelLinkMargin : $d0 = r0.<org.jfree.chart.plot.PiePlot: double labelLinkMargin>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.PiePlot3D.getDarkerSides : $z0 = r0.<org.jfree.chart.plot.PiePlot3D: boolean darkerSides>
org.jfree.chart.title.LegendTitle.arrange : return r4
org.jfree.chart.title.LegendTitle.arrange : if r5 != null goto r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>()
org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6)
org.jfree.chart.plot.PiePlot.getExplodePercent : return d0
org.jfree.chart.plot.PiePlot.getExplodePercent : if r2 == null goto return d0
org.jfree.chart.plot.PiePlot.getExplodePercent : $r4 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages>
org.jfree.chart.plot.PiePlot.getExplodePercent : d0 = 0.0
org.jfree.chart.plot.PiePlot.getExplodePercent : $r3 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages>
org.jfree.chart.StandardChartTheme.applyToPlot : $r7 = (org.jfree.chart.plot.PiePlot) r1
org.jfree.chart.StandardChartTheme.applyToPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot")
org.jfree.chart.StandardChartTheme.applyToPlot : $r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r3 = virtualinvoke r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r4 = virtualinvoke r1.<org.jfree.chart.plot.Plot: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>
org.jfree.chart.StandardChartTheme.applyToPlot : $z0 = r1 instanceof org.jfree.chart.plot.PiePlot
org.jfree.chart.StandardChartTheme.applyToPlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>
org.jfree.data.general.DefaultPieDataset.getIndex : $r2 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null goto r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null goto $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText>
org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null goto $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "record")
org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord : $r2 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke>
org.jfree.chart.title.Title.notifyListeners : $r4 = r2[i0]
org.jfree.chart.title.Title.notifyListeners : $i2 = i0 + 1
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.data.general.DefaultPieDataset.getKey : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke>
org.jfree.chart.plot.PieLabelRecord.getAllocatedY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY>
org.jfree.chart.JFreeChart.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.JFreeChart: void fireChartChanged()>()
org.jfree.chart.JFreeChart.setBackgroundPaint : $r2 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.setBackgroundPaint : $r3 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.setBackgroundPaint : r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke baseSectionOutlineStroke>
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>()
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : return r6
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke getSectionOutlineStroke()>()
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.StrokeMap sectionOutlineStrokeMap>
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if z0 == 0 goto r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke baseSectionOutlineStroke>
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if r5 == null goto (branch)
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : if r2 == null goto $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.StrokeMap sectionOutlineStrokeMap>
org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke : $r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable,boolean)>(r1, $z0)
org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0
org.jfree.chart.JFreeChart.getTitle : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.plot.PiePlot.setShadowGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setShadowGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> = r1
org.jfree.chart.plot.PiePlot.getLabelGap : $d0 = r0.<org.jfree.chart.plot.PiePlot: double labelGap>
org.jfree.chart.plot.PiePlot3D.draw : $d84 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.draw : if r5 == null goto i24 = i24 + 1
org.jfree.chart.plot.PiePlot3D.draw : r101 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable)>(r99)
org.jfree.chart.plot.PiePlot3D.draw : r47 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: org.jfree.chart.plot.PiePlotState initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r0, null, r5)
org.jfree.chart.plot.PiePlot3D.draw : d16 = d16 + d17
org.jfree.chart.plot.PiePlot3D.draw : if r98 == null goto i23 = i23 + 1
org.jfree.chart.plot.PiePlot3D.draw : $r46 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: org.jfree.chart.labels.PieSectionLabelGenerator getLabelGenerator()>()
org.jfree.chart.plot.PiePlot3D.draw : $r105 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.PiePlot3D.draw : $d131 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r31)
org.jfree.chart.plot.PiePlot3D.draw : $r80 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot3D.draw : $d77 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r26.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>(r74)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r19)
org.jfree.chart.plot.PiePlot3D.draw : $d151 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : $r41 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.plot.PiePlot3D.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.PiePlot3D.draw : r93 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Paint lookupSectionPaint(java.lang.Comparable)>(r92)
org.jfree.chart.plot.PiePlot3D.draw : d111 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.PiePlot3D.draw : $d119 = d21 - d20
org.jfree.chart.plot.PiePlot3D.draw : r96 = virtualinvoke r20.<java.util.ArrayList: java.util.Iterator iterator()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r111)
org.jfree.chart.plot.PiePlot3D.draw : r19 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r27)
org.jfree.chart.plot.PiePlot3D.draw : r32 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable)>(r29)
org.jfree.chart.plot.PiePlot3D.draw : d110 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot3D.draw : $r76 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : if i0 >= 0 goto $r59 = new java.util.ArrayList
org.jfree.chart.plot.PiePlot3D.draw : $r62 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r30)
org.jfree.chart.plot.PiePlot3D.draw : $d61 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.draw : $z3 = interfaceinvoke r57.<java.util.List: boolean isEmpty()>()
org.jfree.chart.plot.PiePlot3D.draw : r21 = interfaceinvoke r57.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.PiePlot3D.draw : $d171 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : $d59 = 1.0 + d11
org.jfree.chart.plot.PiePlot3D.draw : $r103 = virtualinvoke r20.<java.util.ArrayList: java.lang.Object get(int)>(i24)
org.jfree.chart.plot.PiePlot3D.draw : r30 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Paint lookupSectionPaint(java.lang.Comparable)>(r29)
org.jfree.chart.plot.PiePlot3D.draw : i3 = 0
org.jfree.chart.plot.PiePlot3D.draw : $d60 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r28)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: void drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)>(r1, r13, r98, r78, r27, r100, r101, r102, 1, 0)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r78)
org.jfree.chart.plot.PiePlot3D.draw : i23 = 0
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r110)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r28)
org.jfree.chart.plot.PiePlot3D.draw : d1 = 0.0
org.jfree.chart.plot.PiePlot3D.draw : $d33 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.draw : $d72 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: void drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)>(r1, r13, r91, r78, r27, r93, r94, r95, 0, 1)
org.jfree.chart.plot.PiePlot3D.draw : $d68 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r47.<org.jfree.chart.plot.PiePlotState: void setExplodedPieArea(java.awt.geom.Rectangle2D)>(r12)
org.jfree.chart.plot.PiePlot3D.draw : $d168 = virtualinvoke r104.<java.awt.geom.Arc2D$Double: double getAngleExtent()>()
org.jfree.chart.plot.PiePlot3D.draw : i22 = 0
org.jfree.chart.plot.PiePlot3D.draw : $r87 = <java.awt.Color: java.awt.Color lightGray>
org.jfree.chart.plot.PiePlot3D.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z10 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.PiePlot3D.draw")]
org.jfree.chart.plot.PiePlot3D.draw : $r90 = interfaceinvoke r89.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot3D.draw : $d78 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.plot.PiePlot3D.draw : d0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: double getInteriorGap()>()
org.jfree.chart.plot.PiePlot3D.draw : if r5 == null goto virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r47.<org.jfree.chart.plot.PiePlotState: void setPieArea(java.awt.geom.Rectangle2D)>(r13)
org.jfree.chart.plot.PiePlot3D.draw : $r50 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot3D.draw : $d52 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: double getLabelLinkMargin()>()
org.jfree.chart.plot.PiePlot3D.draw : $r48 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot3D.draw : d18 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: double getStartAngle()>()
org.jfree.chart.plot.PiePlot3D.draw : $r51 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot3D.draw : $d40 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.draw : $d30 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : $d124 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : r110 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable)>(r108)
org.jfree.chart.plot.PiePlot3D.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: float getForegroundAlpha()>()
org.jfree.chart.plot.PiePlot3D.draw : d16 = 0.0
org.jfree.chart.plot.PiePlot3D.draw : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: boolean isCircular()>()
org.jfree.chart.plot.PiePlot3D.draw : $r71 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : $r58 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.PiePlot3D.draw : $d164 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.draw : $r86 = new java.awt.Polygon
org.jfree.chart.plot.PiePlot3D.draw : $r60 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot3D.draw : $d139 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : $d157 = virtualinvoke r33.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.plot.PiePlot3D.draw : r31 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable)>(r29)
org.jfree.chart.plot.PiePlot3D.draw : $b10 = d17 cmpg 0.0
org.jfree.chart.plot.PiePlot3D.draw : $d28 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: double getLabelGap()>()
org.jfree.chart.plot.PiePlot3D.draw : $r85 = newarray (int)[4]
org.jfree.chart.plot.PiePlot3D.draw : $r66 = new java.awt.geom.Ellipse2D$Double
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r8)
org.jfree.chart.plot.PiePlot3D.draw : r99 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.lang.Comparable getSectionKey(int)>(i23)
org.jfree.chart.plot.PiePlot3D.draw : $r69 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot3D.draw : goto [?= i3 = i3 + 1]
org.jfree.chart.plot.PiePlot3D.draw : $r79 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : $r75 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z9 = interfaceinvoke r89.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.PiePlot3D.draw")]
org.jfree.chart.plot.PiePlot3D.draw : r10 = null
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.plot.PiePlot3D.draw : $z11 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: boolean getSimpleLabels()>()
org.jfree.chart.plot.PiePlot3D.draw : $r64 = new java.awt.geom.Ellipse2D$Double
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r47.<org.jfree.chart.plot.PiePlotState: void setLinkArea(java.awt.geom.Rectangle2D)>(r14)
org.jfree.chart.plot.PiePlot3D.draw : $r117 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot3D.draw : i24 = 0
org.jfree.chart.plot.PiePlot3D.draw : r33 = virtualinvoke r28.<java.awt.geom.Arc2D$Double: java.awt.geom.Point2D getStartPoint()>()
org.jfree.chart.plot.PiePlot3D.draw : r111 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable)>(r108)
org.jfree.chart.plot.PiePlot3D.draw : r9 = r1
org.jfree.chart.plot.PiePlot3D.draw : if r23 != null goto d17 = virtualinvoke r23.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot3D.draw : $z9 = interfaceinvoke r89.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot3D.draw : $d144 = virtualinvoke r65.<java.awt.geom.Ellipse2D: double getCenterY()>()
org.jfree.chart.plot.PiePlot3D.draw : $r82 = virtualinvoke r20.<java.util.ArrayList: java.lang.Object get(int)>(i3)
org.jfree.chart.plot.PiePlot3D.draw : $r83 = newarray (int)[4]
org.jfree.chart.plot.PiePlot3D.draw : $d112 = d16 * 360.0
org.jfree.chart.plot.PiePlot3D.draw : $d147 = virtualinvoke r65.<java.awt.geom.Ellipse2D: double getCenterY()>()
org.jfree.chart.plot.PiePlot3D.draw : r109 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Paint lookupSectionPaint(java.lang.Comparable,boolean)>(r108, 1)
org.jfree.chart.plot.PiePlot3D.draw : i22 = i22 + 1
org.jfree.chart.plot.PiePlot3D.draw : $r88 = <java.awt.Color: java.awt.Color gray>
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r32)
org.jfree.chart.plot.PiePlot3D.draw : $r68 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot3D.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.PiePlot3D.draw")]
org.jfree.chart.plot.PiePlot3D.draw : $r77 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : r100 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Paint lookupSectionPaint(java.lang.Comparable)>(r99)
org.jfree.chart.plot.PiePlot3D.draw : $r59 = new java.util.ArrayList
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>(r1, r116, d15, r118, r14, r47)
org.jfree.chart.plot.PiePlot3D.draw : $r97 = interfaceinvoke r96.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot3D.draw : r94 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable)>(r92)
org.jfree.chart.plot.PiePlot3D.draw : r89 = virtualinvoke r20.<java.util.ArrayList: java.util.Iterator iterator()>()
org.jfree.chart.plot.PiePlot3D.draw : $r72 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : $d161 = virtualinvoke r33.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.plot.PiePlot3D.draw : $r52 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: org.jfree.data.general.PieDataset getDataset()>()
org.jfree.chart.plot.PiePlot3D.draw : i24 = i24 + 1
org.jfree.chart.plot.PiePlot3D.draw : $r73 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : i23 = i23 + 1
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r35)
org.jfree.chart.plot.PiePlot3D.draw : $d169 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot3D.draw : $z2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: boolean isCircular()>()
org.jfree.chart.plot.PiePlot3D.draw : d15 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>(r15)
org.jfree.chart.plot.PiePlot3D.draw : r116 = interfaceinvoke r15.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.chart.plot.PiePlot3D.draw : r15 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: org.jfree.data.general.PieDataset getDataset()>()
org.jfree.chart.plot.PiePlot3D.draw : $r119 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: org.jfree.chart.util.ShadowGenerator getShadowGenerator()>()
org.jfree.chart.plot.PiePlot3D.draw : r63 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.PiePlot3D.draw : $r53 = interfaceinvoke r15.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.chart.plot.PiePlot3D.draw : $r42 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: org.jfree.chart.util.ShadowGenerator getShadowGenerator()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.PiePlot3D.draw : r57 = interfaceinvoke r15.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r106)
org.jfree.chart.plot.PiePlot3D.draw : $d82 = virtualinvoke r13.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : $r81 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.draw : $r49 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.PiePlot3D.draw : goto [?= i24 = i24 + 1]
org.jfree.chart.plot.PiePlot3D.draw : $r61 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: org.jfree.util.Rotation getDirection()>()
org.jfree.chart.plot.PiePlot3D.draw : $d115 = d16 + d17
org.jfree.chart.plot.PiePlot3D.draw : $d39 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot3D.draw : i2 = virtualinvoke r20.<java.util.ArrayList: int size()>()
org.jfree.chart.plot.PiePlot3D.draw : $d65 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r20.<java.util.ArrayList: boolean add(java.lang.Object)>(null)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r109)
org.jfree.chart.plot.PiePlot3D.draw : d17 = virtualinvoke r23.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot3D.draw : $z10 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.PiePlot3D.draw : r8 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r106)
org.jfree.chart.plot.PiePlot3D.draw : r95 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable)>(r92)
org.jfree.chart.plot.PiePlot3D.draw : i3 = i3 + 1
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r63)
org.jfree.chart.plot.PiePlot3D.draw : r29 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.lang.Comparable getSectionKey(int)>(i3)
org.jfree.chart.plot.PiePlot3D.draw : if r91 == null goto i22 = i22 + 1
org.jfree.chart.plot.PiePlot3D.draw : d11 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: double getMaximumExplodePercent()>()
org.jfree.chart.plot.PiePlot3D.draw : $d35 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot3D.draw : r92 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.lang.Comparable getSectionKey(int)>(i22)
org.jfree.chart.plot.PiePlot3D.draw : if r28 != null goto r29 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.lang.Comparable getSectionKey(int)>(i3)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r47.<org.jfree.chart.plot.PiePlotState: void setLinkArea(java.awt.geom.Rectangle2D)>(r11)
org.jfree.chart.plot.PiePlot3D.draw : $d37 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.PiePlot3D.draw : $r107 = interfaceinvoke r57.<java.util.List: java.lang.Object get(int)>(i24)
org.jfree.chart.plot.PiePlot3D.draw : $d51 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: double getLabelLinkMargin()>()
org.jfree.chart.plot.PiePlot3D.draw : if r104 != null goto $r105 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.PiePlot3D.draw : r102 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable)>(r99)
org.jfree.chart.plot.PiePlot3D.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r35)
org.jfree.chart.plot.PiePlot3D.draw : r23 = interfaceinvoke r15.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r22)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1
org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1 goto $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d10 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0 goto $r21 = new org.jfree.ui.Size2D
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if r3 == null goto (branch)
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : if r4 == null goto $b0 = d1 cmpl 0.0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d0 = 0.0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r1 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.util.List getKeys()>()
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d0 = d0 + d1
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : d1 = 0.0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : return d0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : $b0 = d1 cmpl 0.0
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : r4 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.lang.Number getValue(java.lang.Comparable)>(r3)
org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()", "org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal")]
org.jfree.chart.JFreeChart.getSubtitleCount : $r1 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.plot.PiePlotState.setExplodedPieArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D explodedPieArea> = r1
org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3)
org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.BorderArrangement.arrange : r5 = null
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1
org.jfree.chart.plot.AbstractPieLabelDistributor.clear : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.PiePlotState.setTotal : r0.<org.jfree.chart.plot.PiePlotState: double total> = d0
org.jfree.data.general.DefaultPieDataset.getItemCount : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.chart.plot.PiePlot3D.isAngleAtBack : $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0)
org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0
org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.plot.PiePlot.setToolTipGenerator : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setToolTipGenerator : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieToolTipGenerator toolTipGenerator> = r1
org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.PiePlotState.setPassesRequired : r0.<org.jfree.chart.plot.PiePlotState: int passesRequired> = i0
org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.plot.Plot.setBackgroundPaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.setBackgroundPaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.plot.Plot.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setBackgroundPaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.setBackgroundPaint : if r1 != null goto $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.Plot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if r2 == null goto $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionOutlinePaintMap>
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable,boolean)>(r1, $z0)
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if z0 == 0 goto r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint baseSectionOutlinePaint>
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : return r6
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionOutlinePaintMap>
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint baseSectionOutlinePaint>
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : if r5 == null goto (branch)
org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint getSectionOutlinePaint()>()
org.jfree.chart.plot.PiePlot.getMaximumLabelWidth : $d0 = r0.<org.jfree.chart.plot.PiePlot: double maximumLabelWidth>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null goto d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.plot.Plot.setDrawingSupplier : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setDrawingSupplier : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = r1
org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11)
org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>
org.jfree.chart.block.LabelBlock.draw : return r8
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10)
org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.draw : r8 = null
org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor>
org.jfree.chart.block.LabelBlock.draw : if r4 == null goto return r8
org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.draw : r4 = null
org.jfree.chart.block.LabelBlock.draw : r6 = null
org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10)
org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.LabelBlock.draw : r5 = null
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints>
org.jfree.chart.JFreeChart.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.JFreeChart.draw")]
org.jfree.chart.JFreeChart.draw : $r33 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : if r36 == null goto $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : if r11 == null goto (branch)
org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage>
org.jfree.chart.JFreeChart.draw : if r4 == null goto (branch)
org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.JFreeChart.draw : r6 = null
org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.JFreeChart.draw : r45 = r28
org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>()
org.jfree.chart.JFreeChart.draw : if r6 == null goto $z6 = 0
org.jfree.chart.JFreeChart.draw : if r4 == null goto $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : r46 = null
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : if r6 == null goto r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.plot.PiePlot.getSectionPaint : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint sectionPaint>
org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D
org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11)
org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>()
org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0
org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>()
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10)
org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0
org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1
org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11)
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText>
org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : i1 = 0
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : d2 = d0
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : $r5 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : $d10 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getLabelHeight()>()
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : i0 = 0
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : $r4 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: void setAllocatedY(double)>(d9)
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : $d7 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getLabelHeight()>()
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : d5 = d1 - d3
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : r1 = virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i1)
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : $r3 = virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i0)
org.jfree.chart.plot.PieLabelDistributor.spreadEvenly : d3 = 0.0
org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1
org.jfree.chart.title.TextTitle.arrange : $r18 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.title.TextTitle.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.TextTitle.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.TextTitle.arrange : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.TextTitle.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.TextTitle.arrange : $r16 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.title.TextTitle.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.TextTitle.arrange : $d3 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.TextTitle.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.title.TextTitle.arrange : $r17 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.title.TextTitle.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.TextTitle.arrange : r6 = null
org.jfree.chart.StandardChartTheme.getDrawingSupplier : goto [?= return r1]
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r6 = interfaceinvoke r2.<org.jfree.util.PublicCloneable: java.lang.Object clone()>()
org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = null
org.jfree.chart.StandardChartTheme.getDrawingSupplier : return r1
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r4 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.PiePlot.drawLeftLabels : d4 = virtualinvoke r9.<org.jfree.text.TextBox: double getHeight(java.awt.Graphics2D)>(r2)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r17 = new org.jfree.text.TextBox
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r28 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d18 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getLabelLinkDepth()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r19 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelOutlinePaint>
org.jfree.chart.plot.PiePlot.drawLeftLabels : d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d8)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r11 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r27 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r29 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : if r6 == null goto i0 = i0 + 1
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r25 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : d22 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d14 = staticinvoke <java.lang.Math: double cos(double)>(d2)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r10 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d9 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r32 = virtualinvoke $r31.<org.jfree.chart.plot.AbstractPieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i2)
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelShadowPaint>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r18 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelBackgroundPaint>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r31 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r20 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelOutlineStroke>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r14 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawLeftLabels : i0 = 0
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r24 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.chart.plot.PiePlot.drawLeftLabels : i2 = 0
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $d23 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getInteriorGap()>()
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r15 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont>
org.jfree.chart.plot.PiePlot.drawLeftLabels : $r12 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator>
org.jfree.data.general.DefaultPieDataset.getValue : $r2 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.data.general.DefaultPieDataset.getValue : $i1 = virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: int getItemCount()>()
org.jfree.data.general.DefaultPieDataset.getValue : r1 = null
org.jfree.data.general.DefaultPieDataset.getValue : return r1
org.jfree.data.general.DefaultPieDataset.getValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1
org.jfree.chart.plot.PiePlot.getLegendItems : return r2
org.jfree.chart.plot.PiePlot.getLegendItems : $z2 = r0.<org.jfree.chart.plot.PiePlot: boolean ignoreNullValues>
org.jfree.chart.plot.PiePlot.getLegendItems : $r32 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset getDataset()>()
org.jfree.chart.plot.PiePlot.getLegendItems : $r29 = new org.jfree.chart.LegendItem
org.jfree.chart.plot.PiePlot.getLegendItems : r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.PiePlot.getLegendItems : $r17 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getLegendItems : r12 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionOutlinePaint(java.lang.Comparable)>(r6)
org.jfree.chart.plot.PiePlot.getLegendItems : $r16 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getLegendItems : r8 = r22
org.jfree.chart.plot.PiePlot.getLegendItems : r10 = null
org.jfree.chart.plot.PiePlot.getLegendItems : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot.getLegendItems : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Shape getLegendItemShape()>()
org.jfree.chart.plot.PiePlot.getLegendItems : if r22 == null goto i0 = i0 + 1
org.jfree.chart.plot.PiePlot.getLegendItems : $r19 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getLegendItems : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.PiePlot.getLegendItems")]
org.jfree.chart.plot.PiePlot.getLegendItems : goto [?= (branch)]
org.jfree.chart.plot.PiePlot.getLegendItems : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot.getLegendItems : r11 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint lookupSectionPaint(java.lang.Comparable)>(r6)
org.jfree.chart.plot.PiePlot.getLegendItems : $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator legendLabelToolTipGenerator>
org.jfree.chart.plot.PiePlot.getLegendItems : $r20 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator legendLabelGenerator>
org.jfree.chart.plot.PiePlot.getLegendItems : r9 = null
org.jfree.chart.plot.PiePlot.getLegendItems : $b2 = d0 cmpl 0.0
org.jfree.chart.plot.PiePlot.getLegendItems : if z4 == 0 goto i0 = i0 + 1
org.jfree.chart.plot.PiePlot.getLegendItems : if r7 != null goto d0 = virtualinvoke r7.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.getLegendItems : $r26 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.urls.PieURLGenerator legendLabelURLGenerator>
org.jfree.chart.plot.PiePlot.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.PiePlot.getLegendItems : $b1 = d0 cmpl 0.0
org.jfree.chart.plot.PiePlot.getLegendItems : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r15)
org.jfree.chart.plot.PiePlot.getLegendItems : $r33 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getLegendItems : z0 = 1
org.jfree.chart.plot.PiePlot.getLegendItems : i0 = i0 + 1
org.jfree.chart.plot.PiePlot.getLegendItems : i0 = 0
org.jfree.chart.plot.PiePlot.getLegendItems : r13 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke lookupSectionOutlineStroke(java.lang.Comparable)>(r6)
org.jfree.chart.plot.PiePlot.getLegendItems : virtualinvoke r15.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>(r6)
org.jfree.chart.plot.PiePlot.getLegendItems : d0 = virtualinvoke r7.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PieLabelLinkStyle.equals : r2 = (org.jfree.chart.plot.PieLabelLinkStyle) r1
org.jfree.chart.plot.PieLabelLinkStyle.equals : $r3 = r0.<org.jfree.chart.plot.PieLabelLinkStyle: java.lang.String name>
org.jfree.chart.plot.PieLabelLinkStyle.equals : return 1
org.jfree.chart.plot.PieLabelLinkStyle.equals : if r0 != r1 goto $z0 = r1 instanceof org.jfree.chart.plot.PieLabelLinkStyle
org.jfree.chart.plot.PieLabelLinkStyle.equals : return 0
org.jfree.chart.plot.PieLabelLinkStyle.equals : $z0 = r1 instanceof org.jfree.chart.plot.PieLabelLinkStyle
org.jfree.chart.plot.PiePlotState.setLinkArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D linkArea> = r1
org.jfree.chart.title.TextTitle.drawHorizontal : $r11 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment RIGHT>
org.jfree.chart.title.TextTitle.drawHorizontal : $r12 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.title.TextTitle.drawHorizontal : $r8 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.drawHorizontal : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.title.TextTitle.drawHorizontal : r5 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.title.TextTitle.drawHorizontal : $r18 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.drawHorizontal : r4 = <org.jfree.text.TextBlockAnchor: org.jfree.text.TextBlockAnchor TOP_CENTER>
org.jfree.chart.title.TextTitle.drawHorizontal : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.drawHorizontal : r4 = null
org.jfree.chart.title.TextTitle.drawHorizontal : $r9 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>
org.jfree.chart.title.TextTitle.drawHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.drawHorizontal : $d3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.title.TextTitle.drawHorizontal : f1 = 0.0F
org.jfree.chart.title.TextTitle.drawHorizontal : $r10 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.chart.title.TextTitle.drawHorizontal : f0 = 0.0F
org.jfree.chart.title.TextTitle.drawHorizontal : $r7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.PieLabelRecord.getGap : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double gap>
org.jfree.chart.plot.AbstractPieLabelDistributor.getItemCount : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlinePaint>
org.jfree.chart.plot.PieLabelDistributor.adjustDownwards : $d11 = virtualinvoke r2.<org.jfree.chart.plot.PieLabelRecord: double getLabelHeight()>()
org.jfree.chart.plot.PieLabelDistributor.adjustDownwards : $d4 = d0 + d1
org.jfree.chart.plot.PieLabelDistributor.adjustDownwards : $d5 = virtualinvoke r2.<org.jfree.chart.plot.PieLabelRecord: double getLabelHeight()>()
org.jfree.chart.plot.PieLabelDistributor.adjustDownwards : i0 = 0
org.jfree.chart.plot.PieLabelDistributor.adjustDownwards : $i3 = i0 + 1
org.jfree.chart.plot.PieLabelDistributor.adjustDownwards : r1 = virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i0)
org.jfree.chart.plot.PieLabelDistributor.adjustDownwards : $d8 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getUpperY()>()
org.jfree.chart.plot.PieLabelDistributor.adjustDownwards : $d2 = virtualinvoke r2.<org.jfree.chart.plot.PieLabelRecord: double getLowerY()>()
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer")
org.jfree.chart.plot.Plot.setOutlinePaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = r1
org.jfree.chart.plot.Plot.setOutlinePaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.setOutlinePaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setOutlinePaint : if r1 != null goto $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.PiePlot.drawRightLabels : d4 = virtualinvoke r9.<org.jfree.text.TextBox: double getHeight(java.awt.Graphics2D)>(r2)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r17 = new org.jfree.text.TextBox
org.jfree.chart.plot.PiePlot.drawRightLabels : $r28 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawRightLabels : d21 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $r19 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelOutlinePaint>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r11 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $r27 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r29 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : if r6 == null goto i0 = i0 + 1
org.jfree.chart.plot.PiePlot.drawRightLabels : $r25 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : $d17 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getLabelLinkDepth()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d14 = staticinvoke <java.lang.Math: double cos(double)>(d2)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r10 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : $d9 = virtualinvoke r5.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $d22 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: double getInteriorGap()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $r32 = virtualinvoke $r31.<org.jfree.chart.plot.AbstractPieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i2)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelShadowPaint>
org.jfree.chart.plot.PiePlot.drawRightLabels : $d10 = staticinvoke <java.lang.Math: double sin(double)>(d2)
org.jfree.chart.plot.PiePlot.drawRightLabels : $r18 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelBackgroundPaint>
org.jfree.chart.plot.PiePlot.drawRightLabels : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawRightLabels : $r31 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.AbstractPieLabelDistributor labelDistributor>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r20 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelOutlineStroke>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r14 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Comparable getKey(int)>(i0)
org.jfree.chart.plot.PiePlot.drawRightLabels : i0 = 0
org.jfree.chart.plot.PiePlot.drawRightLabels : $r24 = interfaceinvoke r1.<org.jfree.data.KeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.chart.plot.PiePlot.drawRightLabels : i2 = 0
org.jfree.chart.plot.PiePlot.drawRightLabels : $r23 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r15 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont>
org.jfree.chart.plot.PiePlot.drawRightLabels : $r12 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator>
org.jfree.chart.plot.PiePlot.getShadowGenerator : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PiePlot.drawLabels : r9 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.PiePlot.drawLabels : $r13 = new org.jfree.data.DefaultKeyedValues
org.jfree.chart.plot.PiePlot.drawLabels : $z2 = r0.<org.jfree.chart.plot.PiePlot: boolean ignoreNullValues>
org.jfree.chart.plot.PiePlot.drawLabels : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawLabels : $d4 = r0.<org.jfree.chart.plot.PiePlot: double startAngle>
org.jfree.chart.plot.PiePlot.drawLabels : d1 = 0.0
org.jfree.chart.plot.PiePlot.drawLabels : d2 = virtualinvoke r11.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.drawLabels : $r16 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.drawLabels : $d11 = staticinvoke <java.lang.Math: double toRadians(double)>(d3)
org.jfree.chart.plot.PiePlot.drawLabels : $d21 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot.drawLabels : $r22 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.labels.PieSectionLabelGenerator labelGenerator>
org.jfree.chart.plot.PiePlot.drawLabels : $r19 = new java.lang.Double
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>(r7, r1, r3, r4, f0, r5)
org.jfree.chart.plot.PiePlot.drawLabels : d2 = 0.0
org.jfree.chart.plot.PiePlot.drawLabels : $z4 = r0.<org.jfree.chart.plot.PiePlot: boolean ignoreZeroValues>
org.jfree.chart.plot.PiePlot.drawLabels : $r18 = new java.lang.Double
org.jfree.chart.plot.PiePlot.drawLabels : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.PiePlot.drawLabels")]
org.jfree.chart.plot.PiePlot.drawLabels : d1 = d1 + d2
org.jfree.chart.plot.PiePlot.drawLabels : $r15 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot.drawLabels : r6 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.PiePlot.drawLabels : if r11 != null goto d2 = virtualinvoke r11.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.PiePlot.drawLabels : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot.drawLabels : $r12 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, 1.0F)
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>(r8, r1, r3, r4, f0, r5)
org.jfree.chart.plot.PiePlot.drawLabels : if z0 == 0 goto (branch)
org.jfree.chart.plot.PiePlot.drawLabels : $r14 = new org.jfree.data.DefaultKeyedValues
org.jfree.chart.plot.PiePlot.drawLabels : $d18 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.PiePlot.drawLabels : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r6)
org.jfree.chart.plot.PiePlot.drawLabels : $r21 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.ui.RectangleInsets labelPadding>
org.jfree.chart.plot.PiePlot.drawLabels : $r20 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Font getLabelFont()>()
org.jfree.chart.plot.PiePlot.drawLabels : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot.isCircular : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean circular>
org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord : $r1 = r0.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.plot.PiePlot3D.drawSide : $r52 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.drawSide : $b0 = d1 cmpg 0.0
org.jfree.chart.plot.PiePlot3D.drawSide : d0 = virtualinvoke r3.<java.awt.geom.Arc2D: double getAngleStart()>()
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r31)
org.jfree.chart.plot.PiePlot3D.drawSide : $d59 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r27.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>(r5)
org.jfree.chart.plot.PiePlot3D.drawSide : $z5 = specialinvoke r0.<org.jfree.chart.plot.PiePlot3D: boolean isAngleAtFront(double)>(d2)
org.jfree.chart.plot.PiePlot3D.drawSide : d2 = d0 + d1
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r51.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>(r5)
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r6)
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r56.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>(r4)
org.jfree.chart.plot.PiePlot3D.drawSide : $z3 = specialinvoke r0.<org.jfree.chart.plot.PiePlot3D: boolean isAngleAtFront(double)>(d0)
org.jfree.chart.plot.PiePlot3D.drawSide : $d32 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.drawSide : $r47 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.drawSide : d1 = virtualinvoke r3.<java.awt.geom.Arc2D: double getAngleExtent()>()
org.jfree.chart.plot.PiePlot3D.drawSide : $d53 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.PiePlot3D.drawSide : $r26 = virtualinvoke r3.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>()
org.jfree.chart.plot.PiePlot3D.drawSide : $d56 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.drawSide : goto [?= return]
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r56)
org.jfree.chart.plot.PiePlot3D.drawSide : $r54 = virtualinvoke r3.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>()
org.jfree.chart.plot.PiePlot3D.drawSide : $d26 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r56)
org.jfree.chart.plot.PiePlot3D.drawSide : $d62 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.PiePlot3D.drawSide : $z4 = specialinvoke r0.<org.jfree.chart.plot.PiePlot3D: boolean isAngleAtBack(double)>(d2)
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r27)
org.jfree.chart.plot.PiePlot3D.drawSide : $r49 = virtualinvoke r3.<java.awt.geom.Arc2D: java.awt.geom.Point2D getStartPoint()>()
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r51)
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r7)
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r31.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>(r4)
org.jfree.chart.plot.PiePlot3D.drawSide : $d21 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r8)
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r51)
org.jfree.chart.plot.PiePlot3D.drawSide : if z0 == 0 goto return
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r27)
org.jfree.chart.plot.PiePlot3D.drawSide : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r31)
org.jfree.chart.plot.PiePlot3D.drawSide : $z2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot3D: boolean getDarkerSides()>()
org.jfree.chart.plot.PiePlot3D.drawSide : $d27 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.PiePlot3D.drawSide : $r28 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.drawSide : if z1 == 0 goto (branch)
org.jfree.chart.plot.PiePlot3D.drawSide : $r24 = new java.awt.geom.Area
org.jfree.chart.plot.PiePlot3D.drawSide : $r30 = virtualinvoke r3.<java.awt.geom.Arc2D: java.awt.geom.Point2D getStartPoint()>()
org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0
org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer>
org.jfree.chart.plot.PiePlotState.getPieCenterY : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieCenterY>
org.jfree.chart.plot.PiePlot.initialise : $d1 = virtualinvoke r3.<org.jfree.chart.plot.PiePlot: double getStartAngle()>()
org.jfree.chart.plot.PiePlot.initialise : $d0 = staticinvoke <org.jfree.data.general.DatasetUtilities: double calculatePieDatasetTotal(org.jfree.data.general.PieDataset)>($r9)
org.jfree.chart.plot.PiePlot.initialise : $r8 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.initialise : $r6 = new org.jfree.chart.plot.PiePlotState
org.jfree.chart.plot.PiePlot.initialise : return r7
org.jfree.chart.plot.PiePlot.initialise : $r9 = virtualinvoke r3.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset getDataset()>()
org.jfree.chart.plot.PiePlot.initialise : virtualinvoke r7.<org.jfree.chart.plot.PiePlotState: void setPassesRequired(int)>(2)
org.jfree.chart.plot.PiePlotState.getPieCenterX : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieCenterX>
org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1
org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.BorderArrangement.add : if r2 != null goto r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D
org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.plot.PieLabelDistributor.adjustUpwards : $r3 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels>
org.jfree.chart.plot.PieLabelDistributor.adjustUpwards : $d4 = virtualinvoke r2.<org.jfree.chart.plot.PieLabelRecord: double getLabelHeight()>()
org.jfree.chart.plot.PieLabelDistributor.adjustUpwards : $d2 = virtualinvoke r2.<org.jfree.chart.plot.PieLabelRecord: double getUpperY()>()
org.jfree.chart.plot.PieLabelDistributor.adjustUpwards : $d10 = virtualinvoke r2.<org.jfree.chart.plot.PieLabelRecord: double getLabelHeight()>()
org.jfree.chart.plot.PieLabelDistributor.adjustUpwards : r1 = virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i0)
org.jfree.chart.plot.PieLabelDistributor.adjustUpwards : $i2 = i0 - 1
org.jfree.chart.plot.PieLabelDistributor.adjustUpwards : $d13 = staticinvoke <java.lang.Math: double max(double,double)>($d6, $d12)
org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities>
org.jfree.chart.plot.PiePlot.getStartAngle : $d0 = r0.<org.jfree.chart.plot.PiePlot: double startAngle>
org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0
org.jfree.chart.PaintMap.getPaint : $r2 = r0.<org.jfree.chart.PaintMap: java.util.Map store>
org.jfree.chart.PaintMap.getPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 goto $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.plot.PieLabelRecord.getLabelHeight : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double labelHeight>
org.jfree.chart.block.FlowArrangement.arrangeRR : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($d1)
org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.FlowArrangement.arrangeRR : $r8 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r5)
org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.FlowArrangement.arrangeRR : $r7 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible>
org.jfree.chart.title.TextTitle.setFont : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.TextTitle.setFont : r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> = r1
org.jfree.chart.title.TextTitle.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.title.TextTitle.setFont : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint>
org.jfree.chart.plot.PieLabelRecord.getLabel : $r1 = r0.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox label>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r7 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean labelLinksVisible>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d22 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r20.<java.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>(d1, d2, d0, d8, d6, d7, d4, d5)
org.jfree.chart.plot.PiePlot.drawLeftLabel : d8 = d7
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r6 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle getLabelLinkStyle()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r18 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle CUBIC_CURVE>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d16 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d27 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : d2 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAllocatedY()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $f0 = (float) d1
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d10 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d18 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieHRadius()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d9 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getGap()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $d12 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieWRadius()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r20)
org.jfree.chart.plot.PiePlot.drawLeftLabel : r21 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox getLabel()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r15 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle QUAD_CURVE>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r10 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelLinkStroke>
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r11 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle STANDARD>
org.jfree.chart.plot.PiePlot.drawLeftLabel : d3 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAngle()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r19 = new java.awt.geom.CubicCurve2D$Float
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r8 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawLeftLabel : $r9 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint>
org.jfree.chart.title.LegendTitle.setItemFont : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setItemFont : r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> = r1
org.jfree.chart.title.LegendTitle.setItemFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1)
org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrange : r6 = null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.chart.plot.PiePlot.getLabelFont : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Font labelFont>
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : virtualinvoke r0.<org.jfree.chart.plot.PiePlot: void fireChangeEvent()>()
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> = r1
org.jfree.chart.plot.PiePlot.setLabelLinkStyle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "style")
org.jfree.data.DefaultKeyedValues.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r1, r2)
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : if r3 == null goto (branch)
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : return d0
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r5 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.PiePlot.getMaximumExplodePercent")]
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : d0 = 0.0
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r8 = r0.<org.jfree.chart.plot.PiePlot: java.util.Map explodePercentages>
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PiePlot.getMaximumExplodePercent : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1
org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : return r36
org.jfree.chart.JFreeChart.drawTitle : r10 = (org.jfree.chart.block.EntityBlockResult) r19
org.jfree.chart.JFreeChart.drawTitle : n0 = null
org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null]
org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t")
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0)
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area")
org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.JFreeChart.drawTitle : $d6 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r9, r7)
org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.JFreeChart.drawTitle : r8 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : r36 = interfaceinvoke r10.<org.jfree.chart.block.EntityBlockResult: org.jfree.chart.entity.EntityCollection getEntityCollection()>()
org.jfree.chart.JFreeChart.drawTitle : r9 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r8, r3, $r17, $r18)
org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams
org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.JFreeChart.drawTitle : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : r36 = null
org.jfree.chart.JFreeChart.drawTitle : $r17 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7)
org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23)
org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.data.DefaultKeyedValues.getKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r1 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.title.TextTitle.draw : if r4 == null goto return r6
org.jfree.chart.title.TextTitle.draw : r18 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.draw : return r6
org.jfree.chart.title.TextTitle.draw : r14 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r9)
org.jfree.chart.title.TextTitle.draw : $r19 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.draw : r4 = null
org.jfree.chart.title.TextTitle.draw : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r17)
org.jfree.chart.title.TextTitle.draw : $r10 = r0.<org.jfree.chart.title.TextTitle: java.lang.String text>
org.jfree.chart.title.TextTitle.draw : $r15 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.TextTitle.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.TextTitle.draw : r17 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r14)
org.jfree.chart.title.TextTitle.draw : $r8 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.TextTitle.draw : $z1 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.TextTitle.draw : $r23 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.TextTitle.draw : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r9)
org.jfree.chart.title.TextTitle.draw : $z2 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : return r5
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r2 == null goto $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap>
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r2 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint getSectionPaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r7 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap>
org.jfree.chart.plot.PiePlot.lookupSectionPaint : return r6
org.jfree.chart.plot.PiePlot.lookupSectionPaint : goto [?= return r6]
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r3 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r3 == null goto r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint baseSectionPaint>
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if z0 == 0 goto r6 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint baseSectionPaint>
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $z0 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : r6 = interfaceinvoke r3.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>()
org.jfree.chart.plot.PiePlot.lookupSectionPaint : if r5 == null goto (branch)
org.jfree.chart.plot.PiePlot.lookupSectionPaint : $r4 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.PaintMap sectionPaintMap>
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible>
org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line>
org.jfree.chart.plot.PiePlot3D.isAngleAtFront : $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0)
org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.plot.PiePlot.getDataset : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.data.general.PieDataset dataset>
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null goto i0 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: int getItemCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $b2 = d0 cmpl 0.0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 != 0 goto i1 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: int getItemCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : r1 = interfaceinvoke r0.<org.jfree.data.general.PieDataset: java.lang.Number getValue(int)>(i1)
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r1 == null goto i1 = i1 + 1
org.jfree.chart.plot.PiePlot.getSectionOutlinePaint : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint sectionOutlinePaint>
org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendTitle.draw : if r8 != null goto r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendTitle.draw : return r9
org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4)
org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3)
org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>()
org.jfree.chart.title.LegendTitle.draw : r6 = null
org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.plot.PiePlotState.setPieCenterX : r0.<org.jfree.chart.plot.PiePlotState: double pieCenterX> = d0
org.jfree.chart.plot.PiePlotState.setPieCenterY : r0.<org.jfree.chart.plot.PiePlotState: double pieCenterY> = d0
org.jfree.chart.JFreeChart.fireChartChanged : $r1 = new org.jfree.chart.event.ChartChangeEvent
org.jfree.chart.JFreeChart.fireChartChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r2)
org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1
org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimBorder : return r1
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.block.BlockResult.getEntityCollection : $r1 = r0.<org.jfree.chart.block.BlockResult: org.jfree.chart.entity.EntityCollection entities>
org.jfree.chart.labels.StandardPieSectionLabelGenerator.generateSectionLabel : $r3 = specialinvoke r0.<org.jfree.chart.labels.AbstractPieItemLabelGenerator: java.lang.String generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)>(r1, r2)
org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1)
org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.plot.PiePlotState.setPieHRadius : r0.<org.jfree.chart.plot.PiePlotState: double pieHRadius> = d0
org.jfree.chart.plot.PiePlot.getSimpleLabels : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean simpleLabels>
org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r1.<org.jfree.chart.event.TitleChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.PiePlotState.getLinkArea : $r1 = r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D linkArea>
org.jfree.chart.plot.PieLabelDistributor.isOverlap : d0 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getUpperY()>()
org.jfree.chart.plot.PieLabelDistributor.isOverlap : i0 = 0
org.jfree.chart.plot.PieLabelDistributor.isOverlap : return 1
org.jfree.chart.plot.PieLabelDistributor.isOverlap : r1 = virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)>(i0)
org.jfree.chart.plot.PieLabelDistributor.isOverlap : d0 = 0.0
org.jfree.chart.plot.PieLabelDistributor.isOverlap : return 0
org.jfree.chart.plot.PieLabelDistributor.isOverlap : $d1 = virtualinvoke r1.<org.jfree.chart.plot.PieLabelRecord: double getLowerY()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z1 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r2 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z2 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : $z0 = virtualinvoke r1.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>()
org.jfree.chart.StandardChartTheme.applyToPiePlot : virtualinvoke r1.<org.jfree.chart.plot.PiePlot: void clearSectionPaints(boolean)>(0)
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r3 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>
org.jfree.chart.StandardChartTheme.applyToPiePlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: void adjustUpwards(double,double)>(d0, d1)
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z0 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>()
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z1 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>()
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: void spreadEvenly(double,double)>(d0, d1)
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: void sort()>()
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : $z2 = specialinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: boolean isOverlap()>()
org.jfree.chart.plot.PieLabelDistributor.distributeLabels : virtualinvoke r0.<org.jfree.chart.plot.PieLabelDistributor: void adjustDownwards(double,double)>(d0, d1)
org.jfree.chart.plot.PieLabelRecord.getLowerY : $d0 = r0.<org.jfree.chart.plot.PieLabelRecord: double allocatedY>
org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.plot.PiePlotState.getPieHRadius : $d0 = r0.<org.jfree.chart.plot.PiePlotState: double pieHRadius>
org.jfree.chart.title.TextTitle.setPaint : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>
org.jfree.chart.title.TextTitle.setPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.data.general.DefaultPieDataset.getKeys : $r1 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null goto d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.plot.PiePlot.getInteriorGap : $d0 = r0.<org.jfree.chart.plot.PiePlot: double interiorGap>
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionOutlineStroke>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.getValue : if i0 >= 0 goto $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.chart.plot.PiePlotState.setPieArea : r0.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D pieArea> = r1
org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset>
org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimPadding : return r1
org.jfree.chart.title.LegendTitle.getWrapper : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r7 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean labelLinksVisible>
org.jfree.chart.plot.PiePlot.drawRightLabel : $d22 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r20.<java.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>(d1, d2, d0, d8, d6, d7, d4, d5)
org.jfree.chart.plot.PiePlot.drawRightLabel : d8 = d7
org.jfree.chart.plot.PiePlot.drawRightLabel : $r6 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : r4 = virtualinvoke r0.<org.jfree.chart.plot.PiePlot: org.jfree.chart.plot.PieLabelLinkStyle getLabelLinkStyle()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $r18 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle CUBIC_CURVE>
org.jfree.chart.plot.PiePlot.drawRightLabel : $d16 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d27 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterY()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : d2 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAllocatedY()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $f0 = (float) d1
org.jfree.chart.plot.PiePlot.drawRightLabel : $d10 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieCenterX()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d18 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieHRadius()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d9 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getGap()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $d12 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: double getPieWRadius()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r20)
org.jfree.chart.plot.PiePlot.drawRightLabel : r21 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: org.jfree.text.TextBox getLabel()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $r15 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle QUAD_CURVE>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r10 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke labelLinkStroke>
org.jfree.chart.plot.PiePlot.drawRightLabel : $r11 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle STANDARD>
org.jfree.chart.plot.PiePlot.drawRightLabel : d3 = virtualinvoke r3.<org.jfree.chart.plot.PieLabelRecord: double getAngle()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $r19 = new java.awt.geom.CubicCurve2D$Float
org.jfree.chart.plot.PiePlot.drawRightLabel : $r8 = virtualinvoke r2.<org.jfree.chart.plot.PiePlotState: java.awt.geom.Rectangle2D getLinkArea()>()
org.jfree.chart.plot.PiePlot.drawRightLabel : $r9 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Paint labelLinkPaint>
org.jfree.chart.StrokeMap.getStroke : $r2 = r0.<org.jfree.chart.StrokeMap: java.util.Map store>
org.jfree.chart.StrokeMap.getStroke : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1
org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1
org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location")
org.jfree.chart.JFreeChart.getPlot : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null goto i0 = i0 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1)
org.jfree.chart.plot.PiePlot.getLegendItemShape : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Shape legendItemShape>
org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimMargin : return r1
org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.title.LegendItemBlockContainer.draw : return r4
org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null
org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null)
org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey>
org.jfree.data.general.DefaultPieDataset.setValue : virtualinvoke r0.<org.jfree.data.general.DefaultPieDataset: void fireDatasetChanged()>()
org.jfree.data.general.DefaultPieDataset.setValue : $r3 = r0.<org.jfree.data.general.DefaultPieDataset: org.jfree.data.DefaultKeyedValues data>
org.jfree.data.general.DefaultPieDataset.setValue : $r2 = new java.lang.Double
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.chart.plot.PiePlotState.setLatestAngle : r0.<org.jfree.chart.plot.PiePlotState: double latestAngle> = d0
org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint : $z0 = r0.<org.jfree.chart.plot.PiePlot: boolean autoPopulateSectionPaint>
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.plot.PieLabelDistributor.sort : $r1 = r0.<org.jfree.chart.plot.PieLabelDistributor: java.util.List labels>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.plot.PiePlot.getSectionOutlineStroke : $r1 = r0.<org.jfree.chart.plot.PiePlot: java.awt.Stroke sectionOutlineStroke>
org.jfree.chart.title.TextTitle.arrangeRR : $r16 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.arrangeRR : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.arrangeRR : $r14 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.arrangeRR : return r7
org.jfree.chart.title.TextTitle.arrangeRR : $z0 = r0.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>
org.jfree.chart.title.TextTitle.arrangeRR : $r9 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.arrangeRR : $r10 = r0.<org.jfree.chart.title.TextTitle: java.lang.String text>
org.jfree.chart.title.TextTitle.arrangeRR : $d0 = virtualinvoke r2.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint>
org.jfree.chart.plot.PiePlot.getDirection : $r1 = r0.<org.jfree.chart.plot.PiePlot: org.jfree.util.Rotation direction>
org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null)
org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
