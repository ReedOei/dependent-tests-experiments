org.jfree.chart.axis.DateAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : if r1 != null goto $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.Tick.getText : $r1 = r0.<org.jfree.chart.axis.Tick: java.lang.String text>
org.jfree.chart.axis.DateAxis.getMinimumDate : r2 = (org.jfree.data.time.DateRange) r1
org.jfree.chart.axis.DateAxis.getMinimumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.getMinimumDate : return r3
org.jfree.chart.axis.DateAxis.getMinimumDate : goto [?= return r3]
org.jfree.chart.axis.DateAxis.getMinimumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.getMinimumDate : n0 = null
org.jfree.chart.axis.DateAxis.getMinimumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getLowerDate()>()
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if z0 == 0 goto return
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void autoAdjustRange()>()
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $b0 = d0 cmpg 0.0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setAutoRangeMinimumSize(double,boolean)>(d0, 1)
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $d1 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $z1 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> = d0
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.DateAxis.getMaximumDate : r2 = (org.jfree.data.time.DateRange) r1
org.jfree.chart.axis.DateAxis.getMaximumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.getMaximumDate : return r3
org.jfree.chart.axis.DateAxis.getMaximumDate : goto [?= return r3]
org.jfree.chart.axis.DateAxis.getMaximumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getUpperDate()>()
org.jfree.chart.axis.DateAxis.getMaximumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.getMaximumDate : n0 = null
org.jfree.chart.axis.DateAxis.refreshTicksVertical : return r5
org.jfree.chart.axis.DateAxis.refreshTicksVertical : r11 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER_RIGHT>
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : if i2 > 0 goto i3 = 1
org.jfree.chart.axis.DateAxis.refreshTicksVertical : i3 = 1
org.jfree.chart.axis.DateAxis.refreshTicksVertical : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)", "org.jfree.chart.axis.DateAxis.refreshTicksVertical")]
org.jfree.chart.axis.DateAxis.refreshTicksVertical : r9 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMaximumDate()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $r15 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksVertical : i2 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : if z0 != 0 goto l0 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : r6 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $r24 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.DateAxis.refreshTicksVertical : l6 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : l0 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $l15 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : r7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : goto [?= (branch)]
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $r4 = new java.util.ArrayList
org.jfree.chart.axis.DateAxis.refreshTicksVertical : r8 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)>(r7)
org.jfree.chart.axis.DateAxis.refreshTicksVertical : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.DateAxis.refreshTicksVertical : l5 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $r26 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)
org.jfree.chart.axis.DateAxis.refreshTicksVertical : r22 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat getDateFormatOverride()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : d0 = 0.0
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $r27 = new org.jfree.chart.axis.DateTick
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $r28 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $r14 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition>
org.jfree.chart.axis.DateAxis.refreshTicksVertical : i2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: int getMinorTickCount()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : if r22 == null goto $r24 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.DateAxis.refreshTicksVertical : r12 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER_RIGHT>
org.jfree.chart.axis.DateAxis.refreshTicksVertical : $z7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.DateAxis.refreshTicksVertical : z0 = 0
org.jfree.chart.axis.DateAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r13)
org.jfree.chart.axis.DateAxis.refreshTicksVertical : i7 = 1
org.jfree.data.time.DateRange.getUpperDate : $r1 = new java.util.Date
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l7 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l9 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l13 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l3 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l5 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l1 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l11 = (long) i0
org.jfree.chart.axis.DateAxis.previousStandardDate : $i11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : return r10
org.jfree.chart.axis.DateAxis.previousStandardDate : $l55 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.DateAxis.previousStandardDate : i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCount()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(i54, i2, 1, 0, 0, 0)
org.jfree.chart.axis.DateAxis.previousStandardDate : $r30 = new org.jfree.data.time.Month
org.jfree.chart.axis.DateAxis.previousStandardDate : $i13 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
org.jfree.chart.axis.DateAxis.previousStandardDate : $r35 = virtualinvoke r9.<org.jfree.data.time.Month: org.jfree.data.time.RegularTimePeriod previous()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : l10 = virtualinvoke r10.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $i12 = i1 / i0
org.jfree.chart.axis.DateAxis.previousStandardDate : $r37 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.previousStandardDate : $r12 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.previousStandardDate : i54 = virtualinvoke r3.<java.util.Calendar: int get(int)>(1)
org.jfree.chart.axis.DateAxis.previousStandardDate : $r39 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition>
org.jfree.chart.axis.DateAxis.previousStandardDate : $r34 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : if r1 != null goto $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.data.time.Month.previous : $i0 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.previous : return r1
org.jfree.data.time.Month.previous : $r2 = new org.jfree.data.time.Month
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : return r5
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r11 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if i2 > 0 goto i3 = 1
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i3 = 1
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r9 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMaximumDate()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r15 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i2 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if z0 != 0 goto l0 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r24 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l6 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l0 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $l15 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : goto [?= (branch)]
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r4 = new java.util.ArrayList
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r26 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)>(r7)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r12 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l5 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)", "org.jfree.chart.axis.DateAxis.refreshTicksHorizontal")]
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r22 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat getDateFormatOverride()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : d0 = 0.0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r27 = new org.jfree.chart.axis.DateTick
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r28 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r14 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: int getMinorTickCount()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if r22 == null goto $r24 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : z0 = 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r13)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i7 = 1
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : return r2
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r62 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r116 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r125 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r113 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r50 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r7.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r107 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r15 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r47 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r98 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "locale")
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "zone")
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r53 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r23 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r77 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r128 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r41 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r8.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r18 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r122 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r59 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r74 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r119 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r29 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r95 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r11 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r80 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r12 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r17 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r4.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r14 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r9.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r68 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r101 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r56 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r35 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r65 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r26 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r86 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r16 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r92 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r104 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r13 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r20 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r6.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r10 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r38 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r134 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r131 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r32 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r83 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r71 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r89 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r110 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r44 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 3
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 2
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 1
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 6
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 5
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 4
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "unitType")
org.jfree.chart.axis.DateTickUnit.addToDate : r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2)
org.jfree.chart.axis.DateTickUnit.addToDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.DateTickUnit.addToDate : $r5 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateTickUnit.addToDate : $r4 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType>
org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.chart.axis.DateAxis.setRange : $z2 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.DateAxis.setRange : $l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.setRange : $r4 = new org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.setRange : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, 1, 1)
org.jfree.chart.axis.DateAxis.setRange : specialinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, z0, z1)
org.jfree.chart.axis.DateAxis.setTickUnit : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setAutoTickUnitSelection(boolean,boolean)>(0, 0)
org.jfree.chart.axis.DateAxis.setTickUnit : if z0 == 0 goto return
org.jfree.chart.axis.DateAxis.setTickUnit : r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit> = r1
org.jfree.chart.axis.DateAxis.setTickUnit : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)>(r1, 1, 1)
org.jfree.chart.axis.DateAxis.setTickUnit : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.DateAxis.setTickUnit : if z1 == 0 goto (branch)
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year>
org.jfree.chart.axis.DateAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Day.getLastMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $l0 = r0.<org.jfree.data.time.Day: long lastMillisecond>
org.jfree.data.time.Day.getLastMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getLastMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getLastMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.chart.axis.DateAxis.calculateDateForPosition : r3 = null
org.jfree.chart.axis.DateAxis.calculateDateForPosition : return r3
org.jfree.chart.axis.DateAxis.calculateDateForPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "period")
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r4 = <org.jfree.chart.axis.DateTickMarkPosition: org.jfree.chart.axis.DateTickMarkPosition START>
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r8 = <org.jfree.chart.axis.DateTickMarkPosition: org.jfree.chart.axis.DateTickMarkPosition END>
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r6 = <org.jfree.chart.axis.DateTickMarkPosition: org.jfree.chart.axis.DateTickMarkPosition MIDDLE>
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r9 = new java.util.Date
org.jfree.chart.axis.DateTickUnit.dateToString : $r2 = r0.<org.jfree.chart.axis.DateTickUnit: java.text.DateFormat formatter>
org.jfree.chart.axis.DateTickUnitType.toString : $r1 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.ValueAxis.setAutoTickUnitSelection : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.ValueAxis.setAutoTickUnitSelection : if z1 == 0 goto return
org.jfree.chart.axis.ValueAxis.setAutoTickUnitSelection : r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection> = z0
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 goto r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 goto return
org.jfree.chart.axis.ValueAxis.setRange : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> = 0
org.jfree.chart.axis.DateTickUnit.getUnit : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int unit>
org.jfree.chart.axis.DateAxis.setTickMarkPosition : r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition> = r1
org.jfree.chart.axis.DateAxis.setTickMarkPosition : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.DateAxis.setTickMarkPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.data.time.RegularTimePeriod.getEnd : $r1 = new java.util.Date
org.jfree.data.time.RegularTimePeriod.getStart : $r1 = new java.util.Date
org.jfree.chart.axis.DateTickUnit.getCount : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.axis.DateTickUnit.notNull : if r0 != null goto return r0
org.jfree.chart.axis.DateTickUnit.notNull : return r0
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.data.time.Day.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Day: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Day.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Day: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.chart.axis.DateTickUnit.getCalendarField : $r1 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType>
org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getLastMillisecond : $l0 = r0.<org.jfree.data.time.Month: long lastMillisecond>
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year>
org.jfree.chart.axis.DateTickUnitType.equals : $r3 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.DateTickUnitType.equals : $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType
org.jfree.chart.axis.DateTickUnitType.equals : r2 = (org.jfree.chart.axis.DateTickUnitType) r1
org.jfree.chart.axis.DateTickUnitType.equals : return 1
org.jfree.chart.axis.DateTickUnitType.equals : return 0
org.jfree.chart.axis.DateTickUnitType.equals : if r0 != r1 goto $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType
org.jfree.chart.axis.DateAxis.isHiddenValue : $r2 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateTickUnitType.getCalendarField : $i0 = r0.<org.jfree.chart.axis.DateTickUnitType: int calendarField>
org.jfree.chart.axis.DateTickUnit.getMultiple : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.axis.DateAxis.nextStandardDate : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)>(r1, r2)
org.jfree.chart.axis.DateAxis.nextStandardDate : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : $r5 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.nextStandardDate : $r7 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : virtualinvoke r4.<java.util.Calendar: void setTime(java.util.Date)>(r3)
org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount>
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : return r4
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : goto [?= return r4]
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : r4 = r1
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>()
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $r5 = new org.jfree.data.time.Month
org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>()
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.DateAxis.getDateFormatOverride : $r1 = r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat dateFormatOverride>
org.jfree.chart.axis.DateAxis$DefaultTimeline.containsDomainValue : return 1
org.jfree.data.time.DateRange.getLowerDate : $r1 = new java.util.Date
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.data.time.Day.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Day: long firstMillisecond>
org.jfree.data.time.Day.getFirstMillisecond : $r2 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Day.getFirstMillisecond : $r3 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $i3 = i1 - 1
org.jfree.data.time.Day.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void clear()>()
org.jfree.data.time.Day.getFirstMillisecond : $r4 = r0.<org.jfree.data.time.Day: org.jfree.date.SerialDate serialDate>
org.jfree.data.time.Day.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.chart.axis.DateTickUnit.intToUnitType : tableswitch(i0) {     case 0: goto $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>;     case 1: goto $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>;     case 2: goto $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>;     case 3: goto $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>;     case 4: goto $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>;     case 5: goto $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>;     case 6: goto $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>;     default: goto $r8 = new java.lang.IllegalArgumentException; }
org.jfree.chart.axis.DateTickUnit.intToUnitType : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.DateAxis.refreshTicks : return r5
org.jfree.chart.axis.DateAxis.refreshTicks : r5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.DateAxis.refreshTicks : r5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.DateAxis.refreshTicks : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.DateAxis.refreshTicks : r5 = null
org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount>
