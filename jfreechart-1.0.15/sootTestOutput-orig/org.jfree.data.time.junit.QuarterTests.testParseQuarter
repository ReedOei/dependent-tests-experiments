org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Quarter.getFirstMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] FIRST_MONTH_IN_QUARTER>
org.jfree.data.time.Quarter.getFirstMillisecond : $s2 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Quarter.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Quarter.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Quarter.parseQuarter : return r4
org.jfree.data.time.Quarter.parseQuarter : $i4 = i0 + 1
org.jfree.data.time.Quarter.parseQuarter : i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("Q")
org.jfree.data.time.Quarter.parseQuarter : $r15 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>()
org.jfree.data.time.Quarter.parseQuarter : $r16 = new org.jfree.data.time.Quarter
org.jfree.data.time.Quarter.parseQuarter : $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.jfree.data.time.Quarter.parseQuarter : r13 = virtualinvoke r12.<java.lang.String: java.lang.String replace(char,char)>(44, 32)
org.jfree.data.time.Quarter.parseQuarter : r12 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(47, 32)
org.jfree.data.time.Quarter.parseQuarter : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1)
org.jfree.data.time.Quarter.parseQuarter : $r7 = new java.lang.StringBuilder
org.jfree.data.time.Quarter.parseQuarter : if i0 != -1 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.jfree.data.time.Quarter.parseQuarter : r14 = virtualinvoke r13.<java.lang.String: java.lang.String replace(char,char)>(45, 32)
org.jfree.data.time.Quarter.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Quarter.getLastMillisecond : $s3 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getLastMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] LAST_MONTH_IN_QUARTER>
org.jfree.data.time.Quarter.getLastMillisecond : $s4 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Year.parseYear : goto [?= $r5 = new org.jfree.data.time.Year]
org.jfree.data.time.Year.parseYear : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.jfree.data.time.Year.parseYear : $r5 = new org.jfree.data.time.Year
org.jfree.data.time.Quarter.getYear : $r1 = new org.jfree.data.time.Year
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Quarter.getQuarter : $b0 = r0.<org.jfree.data.time.Quarter: byte quarter>
org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year>
