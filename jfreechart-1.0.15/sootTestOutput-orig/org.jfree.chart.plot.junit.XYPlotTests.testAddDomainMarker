org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 goto specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.XYPlot.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.equals : return 1
org.jfree.chart.plot.Marker.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.plot.Marker.getListeners : $r2 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.clearDomainMarkers : interfaceinvoke r13.<java.util.Collection: void clear()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r4 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : if r3 == null goto $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.clearDomainMarkers")]
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r1 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.clearDomainMarkers : r11 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r7 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r11 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r14 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : virtualinvoke r16.<org.jfree.chart.plot.Marker: void removeChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.clearDomainMarkers : if r13 == null goto virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : r14 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $i1 = virtualinvoke r13.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r8 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.XYPlot.clearDomainMarkers")]
org.jfree.chart.plot.XYPlot.clearDomainMarkers : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r9 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.jfree.chart.plot.XYPlot.clearDomainMarkers : $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 goto $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null goto i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.addDomainMarker : $r8 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.addDomainMarker : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.addDomainMarker : virtualinvoke r1.<org.jfree.chart.plot.Marker: void addChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.addDomainMarker : $r2 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.addDomainMarker : if r3 != null goto interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.addDomainMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "marker")
org.jfree.chart.plot.XYPlot.addDomainMarker : if z0 == 0 goto return
org.jfree.chart.plot.XYPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer)>(0, r1, r2)
org.jfree.chart.plot.XYPlot.addDomainMarker : $r4 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.XYPlot.addDomainMarker : $r9 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.XYPlot.addDomainMarker : interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.addDomainMarker : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "layer")
org.jfree.chart.plot.XYPlot.addDomainMarker : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.ui.Layer,boolean)>(i0, r1, r2, 1)
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.Marker.removeChangeListener : $r2 = r0.<org.jfree.chart.plot.Marker: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 goto specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
