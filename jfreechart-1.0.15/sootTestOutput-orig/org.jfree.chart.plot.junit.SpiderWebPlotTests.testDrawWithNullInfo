org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label>
org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint>
org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible>
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.drawOutline : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.drawOutline : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.title.LegendGraphic.draw : $r22 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint>
org.jfree.chart.title.LegendGraphic.draw : $d2 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>
org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5)
org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>
org.jfree.chart.title.LegendGraphic.draw : r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>
org.jfree.chart.title.LegendGraphic.draw : return null
org.jfree.chart.title.LegendGraphic.draw : $r17 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.title.LegendGraphic.draw : $r23 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke>
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r19)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r19)
org.jfree.chart.title.LegendGraphic.draw : $z3 = r5 instanceof java.awt.GradientPaint
org.jfree.chart.title.LegendGraphic.draw : $z2 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled>
org.jfree.chart.title.LegendGraphic.draw : $r15 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation>
org.jfree.chart.title.LegendGraphic.draw : $z4 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible>
org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.SpiderWebPlot.getLabelFont : $r1 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Font labelFont>
org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1
org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1
org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1
org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible>
org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont>
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.data.category.DefaultCategoryDataset.getValue : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1
org.jfree.chart.plot.SpiderWebPlot.getLabelPaint : $r1 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint labelPaint>
org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint>
org.jfree.chart.plot.Plot.fillBackground : $z0 = r4 instanceof java.awt.GradientPaint
org.jfree.chart.plot.Plot.fillBackground : r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r15)
org.jfree.chart.plot.Plot.fillBackground : r15 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.Plot.fillBackground : $f8 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.fillBackground : $r3 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.fillBackground : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "orientation")
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4)
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.plot.Plot.drawBackgroundImage : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : if r4 == null goto return r22
org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>()
org.jfree.chart.block.BlockContainer.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.block.BlockContainer.draw")]
org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockContainer.draw : r4 = null
org.jfree.chart.block.BlockContainer.draw : if r4 == null goto (branch)
org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3)
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : $r6 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.PaintList seriesPaintList>
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : $r4 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint seriesPaint>
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : $r7 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.PaintList seriesPaintList>
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : goto [?= return r1]
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : r3 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>()
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : if r1 != null goto return r1
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : return r1
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : if r2 == null goto r1 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint baseSeriesPaint>
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : r1 = r3
org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint : r2 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlineStroke : $r2 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Stroke seriesOutlineStroke>
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlineStroke : r1 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Stroke baseSeriesOutlineStroke>
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlineStroke : $r4 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.StrokeList seriesOutlineStrokeList>
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlineStroke : if r1 != null goto return r1
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlineStroke : return r1
org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null goto r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.plot.SpiderWebPlot.getLegendItemShape : $r1 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Shape legendItemShape>
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1
org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement")
org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0
org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 goto $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 goto return
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r5 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues2D.setValue : $r10 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1
org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor")
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape>
org.jfree.chart.plot.SpiderWebPlot.getStartAngle : $d0 = r0.<org.jfree.chart.plot.SpiderWebPlot: double startAngle>
org.jfree.chart.plot.SpiderWebPlot.draw : r8 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.SpiderWebPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.SpiderWebPlot.draw : $r25 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint axisLinePaint>
org.jfree.chart.plot.SpiderWebPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: float getForegroundAlpha()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $d13 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.SpiderWebPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: void drawRadarPoly(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotRenderingInfo,int,int,double,double)>(r1, r10, r9, r5, i4, i2, d7, d6)
org.jfree.chart.plot.SpiderWebPlot.draw : d34 = 2.0 * d8
org.jfree.chart.plot.SpiderWebPlot.draw : $d15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.SpiderWebPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r12)
org.jfree.chart.plot.SpiderWebPlot.draw : $d25 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d5)
org.jfree.chart.plot.SpiderWebPlot.draw : if r5 == null goto virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.SpiderWebPlot.draw : $d30 = d3 + d3
org.jfree.chart.plot.SpiderWebPlot.draw : $d23 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $d10 = r0.<org.jfree.chart.plot.SpiderWebPlot: double maxValue>
org.jfree.chart.plot.SpiderWebPlot.draw : specialinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: void calculateMaxValue(int,int)>(i1, i2)
org.jfree.chart.plot.SpiderWebPlot.draw : $d40 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: double getStartAngle()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $d26 = d2 + d2
org.jfree.chart.plot.SpiderWebPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.SpiderWebPlot.draw : $d19 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $r13 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.SpiderWebPlot.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.SpiderWebPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $d21 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $r17 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.data.category.CategoryDataset dataset>
org.jfree.chart.plot.SpiderWebPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.plot.SpiderWebPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.plot.SpiderWebPlot.draw : $r22 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.SpiderWebPlot.draw : $r15 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.TableOrder dataExtractOrder>
org.jfree.chart.plot.SpiderWebPlot.draw : $r18 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.data.category.CategoryDataset dataset>
org.jfree.chart.plot.SpiderWebPlot.draw : $r23 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.Rotation getDirection()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $r14 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.data.category.CategoryDataset dataset>
org.jfree.chart.plot.SpiderWebPlot.draw : $r24 = new java.awt.geom.Line2D$Double
org.jfree.chart.plot.SpiderWebPlot.draw : z0 = 0
org.jfree.chart.plot.SpiderWebPlot.draw : d35 = 2.0 * d8
org.jfree.chart.plot.SpiderWebPlot.draw : $r26 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Stroke axisLineStroke>
org.jfree.chart.plot.SpiderWebPlot.draw : r11 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.geom.Point2D getWebPoint(java.awt.geom.Rectangle2D,double,double)>(r10, d9, 1.0)
org.jfree.chart.plot.SpiderWebPlot.draw : i0 = 0
org.jfree.chart.plot.SpiderWebPlot.draw : $d20 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.SpiderWebPlot.draw : $d47 = (double) i2
org.jfree.chart.plot.SpiderWebPlot.draw : $r21 = new java.awt.geom.Point2D$Double
org.jfree.chart.plot.SpiderWebPlot.draw : $d17 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.SpiderWebPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.SpiderWebPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r8)
org.jfree.chart.plot.SpiderWebPlot.draw : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)]
org.jfree.chart.plot.SpiderWebPlot.draw : i4 = 0
org.jfree.chart.plot.SpiderWebPlot.getPlotValue : $r4 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.data.category.CategoryDataset dataset>
org.jfree.chart.plot.SpiderWebPlot.getPlotValue : r1 = null
org.jfree.chart.plot.SpiderWebPlot.getPlotValue : return r1
org.jfree.chart.plot.SpiderWebPlot.getPlotValue : $r3 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.TableOrder dataExtractOrder>
org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $r3 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d19 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d23 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d18 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d11 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d17 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : d5 = d5 + d0
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d20 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $r6 = new java.awt.geom.Point2D$Double
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : r5 = virtualinvoke r4.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d16 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d21 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation : $d6 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>()
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.LegendTitle.arrange : return r4
org.jfree.chart.title.LegendTitle.arrange : if r5 != null goto r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>()
org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6)
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null goto r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null goto $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText>
org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null goto $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke>
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke>
org.jfree.data.category.DefaultCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.SpiderWebPlot.getInteriorGap : $d0 = r0.<org.jfree.chart.plot.SpiderWebPlot: double interiorGap>
org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1
org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1 goto $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0 goto $r21 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3)
org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.BorderArrangement.arrange : r5 = null
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1
org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.generateColumnLabel : $r2 = interfaceinvoke r1.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getColumnKey(int)>(i0)
org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled>
org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.plot.SpiderWebPlot.getDataset : $r1 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.data.category.CategoryDataset dataset>
org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.plot.Plot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.Plot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null goto d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11)
org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>
org.jfree.chart.block.LabelBlock.draw : return r8
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10)
org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.draw : r8 = null
org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor>
org.jfree.chart.block.LabelBlock.draw : if r4 == null goto return r8
org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.draw : r4 = null
org.jfree.chart.block.LabelBlock.draw : r6 = null
org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10)
org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.LabelBlock.draw : r5 = null
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints>
org.jfree.chart.JFreeChart.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.JFreeChart.draw")]
org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : if r11 == null goto (branch)
org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage>
org.jfree.chart.JFreeChart.draw : if r4 == null goto (branch)
org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.JFreeChart.draw : r6 = null
org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.draw : r45 = r28
org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>()
org.jfree.chart.JFreeChart.draw : if r6 == null goto $z6 = 0
org.jfree.chart.JFreeChart.draw : if r4 == null goto $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : r46 = null
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : if r6 == null goto r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D
org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11)
org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>()
org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0
org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>()
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10)
org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0
org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1
org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11)
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText>
org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0
org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1
org.jfree.data.category.DefaultCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer")
org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0
org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer>
org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1
org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.BorderArrangement.add : if r2 != null goto r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.data.category.DefaultCategoryDataset.getColumnKey : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D
org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities>
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : r0.<org.jfree.chart.plot.SpiderWebPlot: double maxValue> = d1
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : d1 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : i3 = 0
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : if r1 == null goto i3 = i3 + 1
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : i2 = 0
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : n0 = null
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : d0 = 0.0
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : $d2 = r0.<org.jfree.chart.plot.SpiderWebPlot: double maxValue>
org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue : r1 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.lang.Number getPlotValue(int,int)>(i2, i3)
org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 goto $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : r7 = null
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $f0 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: float getForegroundAlpha()>()
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r12)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r11)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $d13 = virtualinvoke r9.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : r36 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint getSeriesPaint(int)>(i0)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $b3 = d2 cmpl 0.0
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : r8 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.lang.Number getPlotValue(int,int)>(i0, i2)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : r12 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Stroke getSeriesOutlineStroke(int)>(i0)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r13)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $r38 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, 0.1F)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $r20 = new java.awt.geom.Ellipse2D$Double
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $d4 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: double getStartAngle()>()
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r6)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r10)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $r5 = new java.awt.Polygon
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $r39 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $d18 = virtualinvoke r9.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r13)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r6)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : r10 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint getSeriesPaint(int)>(i0)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $d11 = r0.<org.jfree.chart.plot.SpiderWebPlot: double maxValue>
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : if r4 == null goto i2 = 0
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r36)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : d2 = virtualinvoke r8.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $r19 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.Rotation getDirection()>()
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : if r7 == null goto i2 = i2 + 1
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : i2 = 0
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : r11 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint getSeriesOutlinePaint(int)>(i0)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $z2 = r0.<org.jfree.chart.plot.SpiderWebPlot: boolean webFilled>
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : $r37 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Stroke getSeriesOutlineStroke(int)>(i0)
org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly : if r8 == null goto i2 = i2 + 1
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.block.FlowArrangement.arrangeRR : return r4
org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible>
org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint>
org.jfree.data.category.DefaultCategoryDataset.addValue : virtualinvoke r0.<org.jfree.data.category.DefaultCategoryDataset: void fireDatasetChanged()>()
org.jfree.data.category.DefaultCategoryDataset.addValue : $r4 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.data.category.DefaultCategoryDataset.addValue : $r3 = new java.lang.Double
org.jfree.chart.plot.SpiderWebPlot.getDirection : $r1 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.Rotation direction>
org.jfree.chart.plot.SpiderWebPlot.getWebPoint : d2 = staticinvoke <java.lang.Math: double toRadians(double)>(d0)
org.jfree.chart.plot.SpiderWebPlot.getWebPoint : $d5 = staticinvoke <java.lang.Math: double cos(double)>(d2)
org.jfree.chart.plot.SpiderWebPlot.getWebPoint : $d19 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.SpiderWebPlot.getWebPoint : $r2 = new java.awt.geom.Point2D$Double
org.jfree.chart.plot.SpiderWebPlot.getWebPoint : $d9 = staticinvoke <java.lang.Math: double sin(double)>(d2)
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1)
org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrange : r6 = null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null goto return r1
org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0 goto return r1
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2)
org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null
org.jfree.data.DefaultKeyedValues2D.getValue : return r1
org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : return r36
org.jfree.chart.JFreeChart.drawTitle : n0 = null
org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null]
org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t")
org.jfree.chart.JFreeChart.drawTitle : r36 = null
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0)
org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area")
org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7)
org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23)
org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlinePaint : r1 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint baseSeriesOutlinePaint>
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlinePaint : $r2 = r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint seriesOutlinePaint>
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlinePaint : if r1 != null goto return r1
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlinePaint : return r1
org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlinePaint : $r4 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.PaintList seriesOutlinePaintList>
org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible>
org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line>
org.jfree.chart.plot.SpiderWebPlot.drawLabel : r8 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $f0 = virtualinvoke r6.<java.awt.font.LineMetrics: float getAscent()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $r15 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Font getLabelFont()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $r18 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint getLabelPaint()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $d5 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : n0 = null
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $r19 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Font getLabelFont()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $r10 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.chart.labels.CategoryItemLabelGenerator labelGenerator>
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $r17 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, 1.0F)
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $r16 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Font getLabelFont()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : r3 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : r7 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.geom.Point2D calculateLabelLocation(java.awt.geom.Rectangle2D,double,java.awt.geom.Rectangle2D,double)>(r5, d3, r2, d1)
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $d4 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.plot.SpiderWebPlot.drawLabel : $r9 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.TableOrder dataExtractOrder>
org.jfree.chart.plot.SpiderWebPlot.drawLabel : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r8)
org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if i0 == 0 goto return 1
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i3 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : $r1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i2, i3)
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i2 = 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 0
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null goto i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendTitle.draw : if r8 != null goto r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendTitle.draw : return r9
org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4)
org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3)
org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>()
org.jfree.chart.title.LegendTitle.draw : r6 = null
org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimBorder : return r1
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.data.category.DefaultCategoryDataset.getRowKeys : $r1 = r0.<org.jfree.data.category.DefaultCategoryDataset: org.jfree.data.DefaultKeyedValues2D data>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1)
org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null goto d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset>
org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimPadding : return r1
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1
org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1
org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location")
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : return r2
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r12)
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : r11 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Stroke getSeriesOutlineStroke(int)>(i0)
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.SpiderWebPlot.getLegendItems")]
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : r10 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint getSeriesOutlinePaint(int)>(i0)
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : $r14 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.util.TableOrder dataExtractOrder>
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : virtualinvoke r12.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>(r6)
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : $r20 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : $r1 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : $r21 = new org.jfree.chart.LegendItem
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : if r3 != null goto i0 = 0
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : $r13 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.data.category.CategoryDataset getDataset()>()
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : r8 = r7
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : r3 = null
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : $r22 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.data.category.CategoryDataset getDataset()>()
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : i0 = i0 + 1
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : i0 = 0
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : r9 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Paint getSeriesPaint(int)>(i0)
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : r5 = virtualinvoke r0.<org.jfree.chart.plot.SpiderWebPlot: java.awt.Shape getLegendItemShape()>()
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : $r16 = r0.<org.jfree.chart.plot.SpiderWebPlot: org.jfree.data.category.CategoryDataset dataset>
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.plot.SpiderWebPlot.getLegendItems : virtualinvoke r12.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(i0)
org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null goto i0 = i0 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1)
org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimMargin : return r1
org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.title.LegendItemBlockContainer.draw : return r4
org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null
org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null)
org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey>
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint>
org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null)
org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
