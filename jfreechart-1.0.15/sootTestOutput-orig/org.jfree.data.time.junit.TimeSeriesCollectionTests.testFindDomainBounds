org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.TimeSeries.removeAgedItems : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d1 = r0.<org.jfree.data.time.TimeSeries: double minY>
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r2 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $r3 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d3 = r0.<org.jfree.data.time.TimeSeries: double maxY>
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3
org.jfree.data.general.DatasetUtilities.findDomainBounds : goto [?= return r3]
org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = interfaceinvoke r2.<org.jfree.data.xy.XYDomainInfo: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>(r1, z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r2 = (org.jfree.data.xy.XYDomainInfo) r0
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.time.TimeSeriesDataItem.getPeriod : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.general.AbstractSeriesDataset.seriesChanged : virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: void fireDatasetChanged()>()
org.jfree.data.time.TimeSeries.getTimePeriod : $r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>(i0)
org.jfree.data.time.TimeSeries.add : if z4 == 0 goto return
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>()
org.jfree.data.time.TimeSeries.add : $r2 = new org.jfree.data.time.TimeSeriesDataItem
org.jfree.data.time.TimeSeries.add : $r8 = virtualinvoke r7.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>()
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)
org.jfree.data.time.TimeSeries.add : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r7)
org.jfree.data.time.TimeSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.time.TimeSeries.add : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.add : z2 = 0
org.jfree.data.time.TimeSeries.add : if i0 != 0 goto $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double,boolean)>(r1, d0, 1)
org.jfree.data.time.TimeSeries.add : if z0 == 0 goto return
org.jfree.data.time.TimeSeries.add : $r25 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.add : $r9 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.add : z4 = 1
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.TimeSeriesDataItem,boolean)>(r3, z0)
org.jfree.data.time.TimeSeries.add : $r6 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>()
org.jfree.data.time.TimeSeries.add : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = r2
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.time.TimeSeries.getItemCount : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeriesDataItem.clone : goto [?= return r1]
org.jfree.data.time.TimeSeriesDataItem.clone : r1 = null
org.jfree.data.time.TimeSeriesDataItem.clone : return r1
org.jfree.data.time.TimeSeriesDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.TimeSeries.getRawDataItem : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.data.time.TimeSeriesDataItem.getValue : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $i1 = i0 - 1
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l5 = virtualinvoke r7.<org.jfree.data.time.RegularTimePeriod: long getLastMillisecond(java.util.Calendar)>($r13)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : return r2
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : i0 = virtualinvoke r5.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, r8)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.time.TimeSeries getSeries(java.lang.Comparable)>(r4)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if z0 != 0 goto $r11 = new org.jfree.data.Range
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r6 = virtualinvoke r5.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>(0)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()", "org.jfree.data.time.TimeSeriesCollection.getDomainBounds")]
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r11 = new org.jfree.data.Range
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if i0 <= 0 goto (branch)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r2 = null
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l4 = virtualinvoke r6.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond(java.util.Calendar)>($r12)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.time.TimeSeries.maxIgnoreNaN : return d1
org.jfree.data.time.TimeSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.time.TimeSeriesCollection.getSeries : r5 = virtualinvoke r4.<org.jfree.data.time.TimeSeries: java.lang.Comparable getKey()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : return r2
org.jfree.data.time.TimeSeriesCollection.getSeries : r2 = r4
org.jfree.data.time.TimeSeriesCollection.getSeries : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : $r6 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.getSeries : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()", "org.jfree.data.time.TimeSeriesCollection.getSeries")]
org.jfree.data.time.TimeSeriesCollection.getSeries : r2 = null
org.jfree.data.time.TimeSeriesCollection.getSeries : if r5 == null goto (branch)
org.jfree.data.time.TimeSeries.minIgnoreNaN : return d1
org.jfree.data.time.TimeSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.general.Series.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.time.TimeSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.time.TimeSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.Range.combine : return r1
org.jfree.data.Range.combine : if r0 != null goto (branch)
