org.jfree.chart.axis.Axis.getLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont>
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : if r1 != null goto return r1
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : r1 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation : return r1
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $r7 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint>
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $z6 = r1 instanceof org.jfree.chart.renderer.category.MinMaxCategoryRenderer
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "renderer")
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $z3 = r1 instanceof org.jfree.chart.renderer.category.BarRenderer3D
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : r2 = (org.jfree.chart.renderer.category.BarRenderer) r1
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $z4 = r1 instanceof org.jfree.chart.renderer.category.LineRenderer3D
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $z2 = r0.<org.jfree.chart.StandardChartTheme: boolean shadowVisible>
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $z5 = r1 instanceof org.jfree.chart.renderer.category.StatisticalBarRenderer
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $z1 = r1 instanceof org.jfree.chart.renderer.category.BarRenderer
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $z0 = r1 instanceof org.jfree.chart.renderer.AbstractRenderer
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $r3 = (org.jfree.chart.renderer.AbstractRenderer) r1
org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer : $r6 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.category.BarPainter barPainter>
org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible>
org.jfree.chart.title.LegendTitle.getBackgroundPaint : $r1 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.axis.DateAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double getLowerMargin()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : $r14 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.autoAdjustRange : $d3 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : $d8 = (double) l3
org.jfree.chart.axis.DateAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1
org.jfree.chart.axis.DateAxis.autoAdjustRange : $d11 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double getUpperMargin()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : $d5 = (double) l1
org.jfree.chart.axis.DateAxis.autoAdjustRange : $d9 = (double) l3
org.jfree.chart.axis.DateAxis.autoAdjustRange : if r3 != null goto $r11 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0)
org.jfree.chart.axis.DateAxis.autoAdjustRange : l0 = l0 + l4
org.jfree.chart.axis.DateAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.DateAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.autoAdjustRange : $r11 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.autoAdjustRange : $l12 = l0 - l11
org.jfree.chart.axis.DateAxis.autoAdjustRange : if r1 != null goto $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.DateAxis.autoAdjustRange : $r10 = new org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.autoAdjustRange : $d7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double getAutoRangeMinimumSize()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : $r15 = new org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.autoAdjustRange : $r13 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.autoAdjustRange : $d4 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double getFixedAutoRange()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r18, 0, 0)
org.jfree.chart.axis.DateAxis.autoAdjustRange : $r12 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.autoAdjustRange : l11 = l11 - l4
org.jfree.chart.plot.Plot.isOutlineVisible : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.plot.Plot.drawOutline : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.drawOutline : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.drawOutline : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $r5 = r0.<org.jfree.chart.plot.Plot: java.awt.Stroke outlineStroke>
org.jfree.chart.plot.Plot.drawOutline : $z0 = r0.<org.jfree.chart.plot.Plot: boolean outlineVisible>
org.jfree.chart.axis.Tick.getText : $r1 = r0.<org.jfree.chart.axis.Tick: java.lang.String text>
org.jfree.chart.axis.CategoryLabelPosition.getWidthType : $r1 = r0.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.chart.axis.CategoryLabelWidthType widthType>
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r7 = null
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke getRangeGridlineStroke()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $d1 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.CategoryPlot.drawRangeGridlines")]
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r14 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r6 = null
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r13 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z4 = 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeZeroBaselineVisible()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if r5 != null goto r6 = null
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z4 = 1
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint getRangeGridlinePaint()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $r12 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeGridlinesVisible()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r8 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r11 = (org.jfree.chart.renderer.category.AbstractCategoryItemRenderer) r5
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeGridlinesVisible()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : z0 = 0
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $d0 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : $z8 = r5 instanceof org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : virtualinvoke r11.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)>(r1, r0, r4, r2, $d1, r7, r6)
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.drawRangeGridlines : if r4 != null goto r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange>
org.jfree.chart.StandardChartTheme.applyToValueAxis : $r3 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>
org.jfree.chart.StandardChartTheme.applyToValueAxis : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToValueAxis : $z1 = r1 instanceof org.jfree.chart.axis.PeriodAxis
org.jfree.chart.StandardChartTheme.applyToValueAxis : $r2 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>
org.jfree.chart.StandardChartTheme.applyToValueAxis : $z0 = r1 instanceof org.jfree.chart.axis.SymbolAxis
org.jfree.chart.StandardChartTheme.applyToValueAxis : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>
org.jfree.chart.axis.DateAxis.getMinimumDate : r2 = (org.jfree.data.time.DateRange) r1
org.jfree.chart.axis.DateAxis.getMinimumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.getMinimumDate : return r3
org.jfree.chart.axis.DateAxis.getMinimumDate : goto [?= return r3]
org.jfree.chart.axis.DateAxis.getMinimumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.getMinimumDate : n0 = null
org.jfree.chart.axis.DateAxis.getMinimumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getLowerDate()>()
org.jfree.chart.axis.AxisCollection.getAxesAtBottom : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtBottom>
org.jfree.chart.axis.AxisState.setMax : r0.<org.jfree.chart.axis.AxisState: double max> = d0
org.jfree.chart.plot.CategoryPlot.datasetChanged : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r7)
org.jfree.chart.plot.CategoryPlot.datasetChanged : if r2 == null goto i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r6 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.CategoryPlot.datasetChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i1)
org.jfree.chart.plot.CategoryPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.CategoryPlot.datasetChanged : $r8 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0]
org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.drawTickMarks : if r5 != null goto r6 = (org.jfree.chart.plot.CategoryPlot) r5
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r6 = (org.jfree.chart.plot.CategoryPlot) r5
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r13 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Stroke getTickMarkStroke()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r8 = virtualinvoke r6.<org.jfree.chart.plot.CategoryPlot: java.util.List getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)>(r0)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r11 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $z5 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r5 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $f1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: float getTickMarkOutsideLength()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r14 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.drawTickMarks : virtualinvoke r4.<org.jfree.chart.axis.AxisState: void cursorLeft(double)>(d2)
org.jfree.chart.axis.CategoryAxis.drawTickMarks : r21 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : goto [?= return]
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $r12 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Paint getTickMarkPaint()>()
org.jfree.chart.axis.CategoryAxis.drawTickMarks : $f0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: float getTickMarkInsideLength()>()
org.jfree.chart.axis.ValueTick.getValue : $d0 = r0.<org.jfree.chart.axis.ValueTick: double value>
org.jfree.chart.plot.CategoryPlot.getDomainCrosshairRowKey : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey>
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if z0 == 0 goto return
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void autoAdjustRange()>()
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $b0 = d0 cmpg 0.0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setAutoRangeMinimumSize(double,boolean)>(d0, 1)
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $d1 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $z1 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> = d0
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.DateAxis$DefaultTimeline.toMillisecond : return l0
org.jfree.chart.axis.TickUnit.compareTo : return -1
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 0
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.DateAxis.getMaximumDate : r2 = (org.jfree.data.time.DateRange) r1
org.jfree.chart.axis.DateAxis.getMaximumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.getMaximumDate : return r3
org.jfree.chart.axis.DateAxis.getMaximumDate : goto [?= return r3]
org.jfree.chart.axis.DateAxis.getMaximumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getUpperDate()>()
org.jfree.chart.axis.DateAxis.getMaximumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.getMaximumDate : n0 = null
org.jfree.chart.plot.CategoryPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getDataset : r1 = null
org.jfree.chart.plot.CategoryPlot.getDataset : return r1
org.jfree.chart.plot.CategoryPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.Plot.fillBackground : $z0 = r4 instanceof java.awt.GradientPaint
org.jfree.chart.plot.Plot.fillBackground : r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r15)
org.jfree.chart.plot.Plot.fillBackground : r15 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.Plot.fillBackground : $f8 = r0.<org.jfree.chart.plot.Plot: float backgroundAlpha>
org.jfree.chart.plot.Plot.fillBackground : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "orientation")
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.plot.Plot.fillBackground : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4)
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.plot.Plot.drawBackgroundImage : $r6 = r0.<org.jfree.chart.plot.Plot: java.awt.Image backgroundImage>
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : if r4 == null goto return r22
org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r4 = null
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.axis.Tick.getRotationAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.plot.CategoryPlot.setRangeGridlinePaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeGridlinePaint> = r1
org.jfree.chart.plot.CategoryPlot.setRangeGridlinePaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setRangeGridlinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.axis.Tick.getAngle : $d0 = r0.<org.jfree.chart.axis.Tick: double angle>
org.jfree.chart.plot.CrosshairState.getDatasetIndex : $i0 = r0.<org.jfree.chart.plot.CrosshairState: int datasetIndex>
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.data.time.DateRange.getUpperDate : $r1 = new java.util.Date
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null goto r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.plot.CategoryPlot.drawZeroRangeBaseline : $z0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeZeroBaselineVisible()>()
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.axis.Axis.notifyListeners : $r4 = r2[i0]
org.jfree.chart.axis.Axis.notifyListeners : $i2 = i0 + 1
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l7 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l9 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l13 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l3 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l5 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l1 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l11 = (long) i0
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $z2 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : return r3
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if r4 != null goto $z2 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r11 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r1 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : $r6 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis : if r5 == null goto i1 = i1 + 1
org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1
org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement")
org.jfree.chart.plot.CategoryPlot.rendererChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void configureRangeAxes()>()
org.jfree.chart.plot.CategoryPlot.rendererChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.CategoryPlot.rendererChanged : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r6)
org.jfree.chart.plot.CategoryPlot.rendererChanged : if r2 == null goto virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void configureRangeAxes()>()
org.jfree.chart.plot.CategoryPlot.rendererChanged : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.StandardChartTheme.applyToCategoryAxis : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToCategoryAxis : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>
org.jfree.chart.StandardChartTheme.applyToCategoryAxis : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>
org.jfree.chart.StandardChartTheme.applyToCategoryAxis : $r3 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>
org.jfree.chart.StandardChartTheme.applyToCategoryAxis : $z0 = r1 instanceof org.jfree.chart.axis.SubCategoryAxis
org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : $r1 = r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable columnKey>
org.jfree.chart.title.LegendTitle.setItemPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setItemPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.title.LegendTitle.setItemPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = r1
org.jfree.chart.axis.DateAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isAutoRange()>()
org.jfree.chart.axis.DateAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void autoAdjustRange()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : return r4
org.jfree.chart.axis.DateAxis.previousStandardDate : $i11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : i7 = virtualinvoke r3.<java.util.Calendar: int get(int)>(12)
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.DateAxis.previousStandardDate : i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCount()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : i8 = virtualinvoke r3.<java.util.Calendar: int get(int)>(13)
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, i2)
org.jfree.chart.axis.DateAxis.previousStandardDate : i6 = virtualinvoke r3.<java.util.Calendar: int get(int)>(11)
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(i3, i4, i5, i6, i7, i8)
org.jfree.chart.axis.DateAxis.previousStandardDate : $i13 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $i12 = i1 / i0
org.jfree.chart.axis.DateAxis.previousStandardDate : $l14 = virtualinvoke r4.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $r12 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.previousStandardDate : $i17 = i2 - 1
org.jfree.chart.axis.DateAxis.previousStandardDate : i4 = virtualinvoke r3.<java.util.Calendar: int get(int)>(2)
org.jfree.chart.axis.DateAxis.previousStandardDate : i3 = virtualinvoke r3.<java.util.Calendar: int get(int)>(1)
org.jfree.chart.axis.DateAxis.previousStandardDate : r4 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : i5 = virtualinvoke r3.<java.util.Calendar: int get(int)>(5)
org.jfree.chart.plot.CategoryPlot.draw : $r27 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.draw : $r35 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable getDomainCrosshairColumnKey()>()
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchorY(double)>(#NaN)
org.jfree.chart.plot.CategoryPlot.draw : r24 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Rectangle integerise(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setCrosshairDatasetIndex(int,boolean)>(i24, 0)
org.jfree.chart.plot.CategoryPlot.draw : $r56 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.draw : $z14 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairLockedOnData>
org.jfree.chart.plot.CategoryPlot.draw : $r22 = new org.jfree.chart.plot.PlotRenderingInfo
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainCrosshairRowKey(java.lang.Comparable,boolean)>(r16, 0)
org.jfree.chart.plot.CategoryPlot.draw : $r70 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.draw : $z15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeCrosshairVisible()>()
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setCrosshairDistance(double)>(#Infinity)
org.jfree.chart.plot.CategoryPlot.draw : $r25 = virtualinvoke r24.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.plot.CategoryPlot.draw : $d8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: double getRangeCrosshairValue()>()
org.jfree.chart.plot.CategoryPlot.draw : if z6 != 0 goto i24 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: int getDatasetIndex()>()
org.jfree.chart.plot.CategoryPlot.draw : r66 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.plot.CategoryPlot.draw : r15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder getDatasetRenderingOrder()>()
org.jfree.chart.plot.CategoryPlot.draw : if r3 == null goto $r29 = new org.jfree.chart.plot.CategoryCrosshairState
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r24)
org.jfree.chart.plot.CategoryPlot.draw : $r48 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.draw : $r59 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.CategoryPlot.draw : $z4 = virtualinvoke r24.<java.awt.geom.Rectangle2D: boolean isEmpty()>()
org.jfree.chart.plot.CategoryPlot.draw : r12 = r1
org.jfree.chart.plot.CategoryPlot.draw : i14 = 0
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r36)
org.jfree.chart.plot.CategoryPlot.draw : $r71 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.draw : $r43 = virtualinvoke r39.<org.jfree.chart.axis.AxisState: java.util.List getTicks()>()
org.jfree.chart.plot.CategoryPlot.draw : r13 = null
org.jfree.chart.plot.CategoryPlot.draw : z6 = 0
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchorX(double)>(#NaN)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24)
org.jfree.chart.plot.CategoryPlot.draw : i24 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: int getDatasetIndex()>()
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setDataArea(java.awt.geom.Rectangle2D)>(r24)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24)
org.jfree.chart.plot.CategoryPlot.draw : $r54 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.draw : i7 = 0
org.jfree.chart.plot.CategoryPlot.draw : r16 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable getRowKey()>()
org.jfree.chart.plot.CategoryPlot.draw : $r23 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.plot.CategoryPlot.draw : if z0 != 0 goto return
org.jfree.chart.plot.CategoryPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.CategoryPlot.draw : $r44 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.plot.CategoryPlot.draw : $z9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)>(r1, r24, i11, r5, r10)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainCrosshairColumnKey(java.lang.Comparable,boolean)>(r17, 0)
org.jfree.chart.plot.CategoryPlot.draw : $r51 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.CategoryPlot.draw : r14 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.CategoryPlot.draw : r17 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable getColumnKey()>()
org.jfree.chart.plot.CategoryPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r24, r5)
org.jfree.chart.plot.CategoryPlot.draw : r8 = virtualinvoke r7.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24)
org.jfree.chart.plot.CategoryPlot.draw : $r52 = <org.jfree.chart.plot.DatasetRenderingOrder: org.jfree.chart.plot.DatasetRenderingOrder FORWARD>
org.jfree.chart.plot.CategoryPlot.draw : $r50 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.draw : $r37 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.CategoryPlot.draw : $r29 = new org.jfree.chart.plot.CategoryCrosshairState
org.jfree.chart.plot.CategoryPlot.draw : r65 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i24)
org.jfree.chart.plot.CategoryPlot.draw : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.CategoryPlot.draw : r36 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: void setAnchor(java.awt.geom.Point2D)>(r3)
org.jfree.chart.plot.CategoryPlot.draw : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.CategoryPlot.draw : $r34 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable getDomainCrosshairRowKey()>()
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r24)
org.jfree.chart.plot.CategoryPlot.draw : $z13 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isDomainCrosshairVisible()>()
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.CategoryPlot.draw : if r39 == null goto r12 = r1
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setPlotArea(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.CategoryPlot.draw : $d21 = virtualinvoke r10.<org.jfree.chart.plot.CategoryCrosshairState: double getCrosshairY()>()
org.jfree.chart.plot.CategoryPlot.draw : i12 = 0
org.jfree.chart.plot.CategoryPlot.draw : $r28 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer()>()
org.jfree.chart.plot.CategoryPlot.draw : $r58 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.draw : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.CategoryPlot.draw : if r5 != null goto virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setPlotArea(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.CategoryPlot.draw : if r3 == null goto $r34 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable getDomainCrosshairRowKey()>()
org.jfree.chart.plot.CategoryPlot.draw : $z16 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isOutlineVisible()>()
org.jfree.chart.plot.CategoryPlot.draw : i0 = 0
org.jfree.chart.plot.CategoryPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r14)
org.jfree.chart.plot.CategoryPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: float getForegroundAlpha()>()
org.jfree.chart.plot.CategoryPlot.draw : if r39 != null goto (branch)
org.jfree.chart.plot.CategoryPlot.getDomainAxisCount : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.JFreeChart.getSubtitle : if i0 < 0 goto $r1 = new java.lang.IllegalArgumentException
org.jfree.chart.JFreeChart.getSubtitle : $r2 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d15 = (double) l0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d12 = d2 - d0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d18 = d5 - d0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d1 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)>(r1, $r10)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d9 = (double) l0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d19 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)>(r1, r6)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : l0 = 0L
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r10 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r12 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d4)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)>(r6, 0, 0)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r7 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $b1 = d19 cmpl d6
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d7 = (double) l0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d13 = d1 / d3
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r11 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>()
org.jfree.chart.plot.Plot.getBackgroundPaint : $r1 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : if r1 != null goto $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : return r5
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5 = newarray (float)[2]
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d3 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d1 = virtualinvoke r1.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.StandardChartTheme.apply : i0 = virtualinvoke r1.<org.jfree.chart.JFreeChart: int getSubtitleCount()>()
org.jfree.chart.StandardChartTheme.apply : i1 = 0
org.jfree.chart.StandardChartTheme.apply : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(r7)
org.jfree.chart.StandardChartTheme.apply : if r7 == null goto return
org.jfree.chart.StandardChartTheme.apply : r7 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.StandardChartTheme.apply : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>
org.jfree.chart.StandardChartTheme.apply : $r3 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>
org.jfree.chart.StandardChartTheme.apply : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "chart")
org.jfree.chart.StandardChartTheme.apply : if r2 == null goto i0 = virtualinvoke r1.<org.jfree.chart.JFreeChart: int getSubtitleCount()>()
org.jfree.chart.StandardChartTheme.apply : $r4 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>
org.jfree.chart.StandardChartTheme.apply : r2 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle getTitle()>()
org.jfree.chart.StandardChartTheme.apply : $r5 = virtualinvoke r1.<org.jfree.chart.JFreeChart: org.jfree.chart.title.Title getSubtitle(int)>(i1)
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : return r3
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r4 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List datasetsMappedToDomainAxis(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis : $r2 = new java.util.ArrayList
org.jfree.chart.plot.PlotRenderingInfo.setPlotArea : r0.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea> = r1
org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getRangeAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRangeAxis : if r1 != null goto return r1
org.jfree.chart.plot.CategoryPlot.getRangeAxis : r1 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxis : return r1
org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : if r1 == null goto i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.CategoryPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.StandardChartTheme.applyToTitle : $r12 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>
org.jfree.chart.StandardChartTheme.applyToTitle : $z1 = r1 instanceof org.jfree.chart.title.LegendTitle
org.jfree.chart.StandardChartTheme.applyToTitle : $r11 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>
org.jfree.chart.StandardChartTheme.applyToTitle : $r10 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.StandardChartTheme.applyToTitle : r9 = (org.jfree.chart.title.LegendTitle) r1
org.jfree.chart.StandardChartTheme.applyToTitle : $z0 = r1 instanceof org.jfree.chart.title.TextTitle
org.jfree.chart.StandardChartTheme.applyToTitle : goto [?= return]
org.jfree.chart.StandardChartTheme.applyToTitle : $r14 = virtualinvoke r9.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer getWrapper()>()
org.jfree.chart.StandardChartTheme.applyToTitle : $r13 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.axis.Axis.fireChangeEvent : $r1 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : return r5
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if i2 > 0 goto i3 = 1
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i3 = 1
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r11 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor BOTTOM_CENTER>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r9 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMaximumDate()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r15 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i2 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if z0 != 0 goto l0 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r24 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l6 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l0 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $l15 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : goto [?= (branch)]
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r26 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r4 = new java.util.ArrayList
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)>(r7)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r12 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor BOTTOM_CENTER>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l5 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)", "org.jfree.chart.axis.DateAxis.refreshTicksHorizontal")]
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r22 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat getDateFormatOverride()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : d0 = 0.0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r27 = new org.jfree.chart.axis.DateTick
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r28 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r14 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: int getMinorTickCount()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if r22 == null goto $r24 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : z0 = 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r13)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i7 = 1
org.jfree.chart.plot.CategoryPlot.drawDomainGridlines : $z0 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isDomainGridlinesVisible()>()
org.jfree.chart.plot.CategoryPlot.drawBackground : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.CategoryPlot.drawBackground : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : if i0 >= 0 goto specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1
org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>()
org.jfree.chart.axis.Axis.isVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean visible>
org.jfree.chart.renderer.AbstractRenderer.clearSeriesPaints : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.clearSeriesPaints : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.chart.ChartFactory.createGanttChart : $r12 = new org.jfree.chart.renderer.category.GanttRenderer
org.jfree.chart.ChartFactory.createGanttChart : return r10
org.jfree.chart.ChartFactory.createGanttChart : $r15 = new org.jfree.chart.plot.CategoryPlot
org.jfree.chart.ChartFactory.createGanttChart : $r14 = new org.jfree.chart.urls.StandardCategoryURLGenerator
org.jfree.chart.ChartFactory.createGanttChart : $r4 = new org.jfree.chart.axis.CategoryAxis
org.jfree.chart.ChartFactory.createGanttChart : $r8 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance()>()
org.jfree.chart.ChartFactory.createGanttChart : if z1 == 0 goto (branch)
org.jfree.chart.ChartFactory.createGanttChart : $r16 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.ChartFactory.createGanttChart : $r13 = new org.jfree.chart.labels.IntervalCategoryToolTipGenerator
org.jfree.chart.ChartFactory.createGanttChart : $r11 = new org.jfree.chart.axis.DateAxis
org.jfree.chart.ChartFactory.createGanttChart : $r17 = new org.jfree.chart.JFreeChart
org.jfree.chart.ChartFactory.createGanttChart : $r19 = <org.jfree.chart.ChartFactory: org.jfree.chart.ChartTheme currentTheme>
org.jfree.chart.ChartFactory.createGanttChart : if z2 == 0 goto $r15 = new org.jfree.chart.plot.CategoryPlot
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawOutline : virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r3)
org.jfree.chart.plot.Plot.createAndAddEntity : if r2 == null goto return
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0 goto $i1 = i0 + 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if z0 == 0 goto return
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : if i0 != 0 goto $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : return r2
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r62 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r116 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r125 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r113 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r50 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r7.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r107 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r15 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r47 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r98 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "locale")
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "zone")
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r53 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r23 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r77 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r128 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r41 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r8.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r18 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r122 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r59 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r74 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r119 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r29 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r95 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r11 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r80 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r12 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r17 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r4.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r14 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r9.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r68 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r101 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r56 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r35 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r65 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r26 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r86 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r16 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r92 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r104 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r13 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r20 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r6.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r10 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r38 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r134 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r131 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r32 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r83 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r71 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r89 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r110 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r44 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.plot.CategoryPlot.getRendererCount : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.axis.Axis.drawLabel : $r15 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.Axis.drawLabel : r7 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>()
org.jfree.chart.axis.Axis.drawLabel : d42 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : $d43 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : goto [?= return r6]
org.jfree.chart.axis.Axis.drawLabel : return r6
org.jfree.chart.axis.Axis.drawLabel : r9 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>()
org.jfree.chart.axis.Axis.drawLabel : if r1 == null goto return r6
org.jfree.chart.axis.Axis.drawLabel : r12 = virtualinvoke r11.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10)
org.jfree.chart.axis.Axis.drawLabel : $d10 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : r11 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d2, $d3, $d4)
org.jfree.chart.axis.Axis.drawLabel : $d36 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.axis.Axis.drawLabel : $r24 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.Axis.drawLabel : $d14 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.Axis.drawLabel : $d48 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.Axis.drawLabel : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>()
org.jfree.chart.axis.Axis.drawLabel : $r14 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Paint getLabelPaint()>()
org.jfree.chart.axis.Axis.drawLabel : r27 = interfaceinvoke r26.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.drawLabel : $d37 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r7)
org.jfree.chart.axis.Axis.drawLabel : r26 = virtualinvoke r25.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10)
org.jfree.chart.axis.Axis.drawLabel : r25 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d33, $d34, $d35)
org.jfree.chart.axis.Axis.drawLabel : $d8 = virtualinvoke r16.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.Axis.drawLabel : $r18 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.Axis.drawLabel : $d35 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : r10 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r1, r2, r9)
org.jfree.chart.axis.Axis.drawLabel : d0 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.drawLabel : $d2 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : $d45 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.Axis.drawLabel : $d32 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : r16 = interfaceinvoke r12.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.drawLabel : $f0 = (float) d0
org.jfree.chart.axis.Axis.drawLabel : $d4 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : $d11 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r6, "state")
org.jfree.chart.axis.Axis.drawLabel : $f4 = (float) d41
org.jfree.chart.axis.Axis.drawLabel : $d5 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.axis.Axis.getAxisLineStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.title.LegendTitle.arrange : return r4
org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>()
org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 3
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 2
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 1
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 6
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 5
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 4
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "unitType")
org.jfree.chart.StandardChartTheme.applyToPlot : $r9 = (org.jfree.chart.plot.CategoryPlot) r1
org.jfree.chart.StandardChartTheme.applyToPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot")
org.jfree.chart.StandardChartTheme.applyToPlot : $r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r3 = virtualinvoke r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r4 = virtualinvoke r1.<org.jfree.chart.plot.Plot: java.awt.Paint getBackgroundPaint()>()
org.jfree.chart.StandardChartTheme.applyToPlot : $r6 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>
org.jfree.chart.StandardChartTheme.applyToPlot : $z1 = r1 instanceof org.jfree.chart.plot.MultiplePiePlot
org.jfree.chart.StandardChartTheme.applyToPlot : $z0 = r1 instanceof org.jfree.chart.plot.PiePlot
org.jfree.chart.StandardChartTheme.applyToPlot : $r5 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>
org.jfree.chart.StandardChartTheme.applyToPlot : $z2 = r1 instanceof org.jfree.chart.plot.CategoryPlot
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.chart.axis.AxisState.getMax : $d0 = r0.<org.jfree.chart.axis.AxisState: double max>
org.jfree.chart.plot.PlotRenderingInfo.getOwner : $r1 = r0.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo owner>
org.jfree.chart.axis.DateTickUnit.addToDate : r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2)
org.jfree.chart.axis.DateTickUnit.addToDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.DateTickUnit.addToDate : $r5 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateTickUnit.addToDate : $r4 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType>
org.jfree.chart.axis.Axis.createAndAddEntity : if r4 == null goto return
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.CategoryPlot.getOrientation : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.axis.Axis.getTickMarkOutsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength>
org.jfree.chart.title.Title.notifyListeners : $r4 = r2[i0]
org.jfree.chart.title.Title.notifyListeners : $i2 = i0 + 1
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.getFixedDimension : $d0 = r0.<org.jfree.chart.axis.Axis: double fixedDimension>
org.jfree.chart.axis.DateAxis.valueToJava2D : $d12 = d6 - d1
org.jfree.chart.axis.DateAxis.valueToJava2D : $r6 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.valueToJava2D : return d3
org.jfree.chart.axis.DateAxis.valueToJava2D : goto [?= return d3]
org.jfree.chart.axis.DateAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : $r4 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.valueToJava2D : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isInverted()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : $r7 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.valueToJava2D : d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.DateAxis.valueToJava2D : $r5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : d3 = 0.0
org.jfree.chart.JFreeChart.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.JFreeChart: void fireChartChanged()>()
org.jfree.chart.JFreeChart.setBackgroundPaint : $r2 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.setBackgroundPaint : $r3 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.setBackgroundPaint : r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.CategoryCrosshairState.getRowKey : $r1 = r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable rowKey>
org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.axis.AxisSpace.add : $d1 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.add : $r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.AxisSpace.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.AxisSpace.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "edge")
org.jfree.chart.axis.AxisSpace.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.AxisSpace.add : $d5 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.JFreeChart.getTitle : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairRowKey : if z0 == 0 goto return
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairRowKey : r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairRowKey> = r1
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.renderer.AbstractRenderer.getAutoPopulateSeriesStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesStroke>
org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.category.BarRenderer.setShadowPaint : virtualinvoke r0.<org.jfree.chart.renderer.category.BarRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.BarRenderer.setShadowPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.renderer.category.BarRenderer.setShadowPaint : r0.<org.jfree.chart.renderer.category.BarRenderer: java.awt.Paint shadowPaint> = r1
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : $r3 = new org.jfree.chart.axis.AxisSpace
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : return r6
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, r2, r5)
org.jfree.chart.plot.CategoryPlot.calculateAxisSpace : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, r2, r4)
org.jfree.chart.axis.TickType.equals : r2 = (org.jfree.chart.axis.TickType) r1
org.jfree.chart.axis.TickType.equals : if r0 != r1 goto $z0 = r1 instanceof org.jfree.chart.axis.TickType
org.jfree.chart.axis.TickType.equals : $r3 = r0.<org.jfree.chart.axis.TickType: java.lang.String name>
org.jfree.chart.axis.TickType.equals : return 1
org.jfree.chart.axis.TickType.equals : return 0
org.jfree.chart.axis.TickType.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickType
org.jfree.chart.axis.AxisState.getCursor : $d0 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.JFreeChart.getSubtitleCount : $r1 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.plot.CrosshairState.setCrosshairY : r0.<org.jfree.chart.plot.CrosshairState: double crosshairY> = d0
org.jfree.chart.axis.Axis.getLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r8 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : return r2
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : if r2 == null goto return r2
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.getRangeMarkers : r2 = null
org.jfree.chart.axis.Axis.getTickMarkStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke>
org.jfree.chart.renderer.category.BarRenderer.setBarPainter : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "painter")
org.jfree.chart.renderer.category.BarRenderer.setBarPainter : virtualinvoke r0.<org.jfree.chart.renderer.category.BarRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.BarRenderer.setBarPainter : r0.<org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter barPainter> = r1
org.jfree.chart.plot.CategoryPlot.render : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxisForDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.render : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0)
org.jfree.chart.plot.CategoryPlot.render : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.render : z0 = 0
org.jfree.chart.plot.CategoryPlot.render : if z1 == 0 goto return z0
org.jfree.chart.plot.CategoryPlot.render : return z0
org.jfree.chart.plot.CategoryPlot.render : $z2 = staticinvoke <org.jfree.data.general.DatasetUtilities: boolean isEmptyOrNull(org.jfree.data.category.CategoryDataset)>(r5)
org.jfree.chart.plot.CategoryPlot.render : r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i0)
org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin>
org.jfree.chart.axis.AxisState.cursorLeft : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.axis.ValueTick.getTickType : $r1 = r0.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType tickType>
org.jfree.chart.renderer.category.BarRenderer.findRangeBounds : return null
org.jfree.chart.renderer.category.BarRenderer.findRangeBounds : if r1 != null goto r2 = specialinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r1, z0)
org.jfree.chart.axis.Axis.getAxisLinePaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.plot.CategoryPlot.setShadowGenerator : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setShadowGenerator : r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.util.ShadowGenerator shadowGenerator> = r1
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.axis.DateAxis.setRange : $z2 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.DateAxis.setRange : specialinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, z0, z1)
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : return r8
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : if r1 == null goto r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : n0 = null
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : goto [?= return r8]
org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset : if i0 >= 0 goto n0 = null
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : if r1 == null goto i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.CategoryAxis: void configure()>()
org.jfree.chart.axis.DateAxis.setTickUnit : if z0 == 0 goto return
org.jfree.chart.axis.DateAxis.setTickUnit : r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit> = r1
org.jfree.chart.axis.DateAxis.setTickUnit : if z1 == 0 goto (branch)
org.jfree.chart.axis.AxisState.setTicks : r0.<org.jfree.chart.axis.AxisState: java.util.List ticks> = r1
org.jfree.chart.plot.Plot.getForegroundAlpha : $f0 = r0.<org.jfree.chart.plot.Plot: float foregroundAlpha>
org.jfree.chart.axis.CategoryAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.CategoryAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>()
org.jfree.chart.plot.CategoryPlot.setAxisOffset : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "offset")
org.jfree.chart.plot.CategoryPlot.setAxisOffset : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setAxisOffset : r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleInsets axisOffset> = r1
org.jfree.chart.plot.CategoryCrosshairState.setColumnKey : r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable columnKey> = r1
org.jfree.chart.axis.CategoryAxis.refreshTicks : virtualinvoke r2.<org.jfree.chart.axis.AxisState: void setMax(double)>(d0)
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : r8 = virtualinvoke r7.<org.jfree.chart.plot.CategoryPlot: java.util.List getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)>(r0)
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r14 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r16 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: org.jfree.chart.axis.CategoryLabelWidthType getWidthType()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : return r6
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r15 = r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions>
org.jfree.chart.axis.CategoryAxis.refreshTicks : d0 = 0.0
org.jfree.chart.axis.CategoryAxis.refreshTicks : $r5 = new java.util.ArrayList
org.jfree.chart.axis.CategoryAxis.refreshTicks : if r8 == null goto virtualinvoke r2.<org.jfree.chart.axis.AxisState: void setMax(double)>(d0)
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d3 = (double) f0
org.jfree.chart.axis.CategoryAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.CategoryAxis.refreshTicks : f0 = r0.<org.jfree.chart.axis.CategoryAxis: float maximumCategoryLabelWidthRatio>
org.jfree.chart.axis.CategoryAxis.refreshTicks : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : r9 = virtualinvoke $r15.<org.jfree.chart.axis.CategoryLabelPositions: org.jfree.chart.axis.CategoryLabelPosition getLabelPosition(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.CategoryAxis.refreshTicks : i0 = 0
org.jfree.chart.axis.CategoryAxis.refreshTicks : r10 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.CategoryAxis.refreshTicks : f0 = virtualinvoke r9.<org.jfree.chart.axis.CategoryLabelPosition: float getWidthRatio()>()
org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.axis.Axis.setTickLabelFont : $r2 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.setTickLabelFont : virtualinvoke r0.<org.jfree.chart.axis.Axis: void fireChangeEvent()>()
org.jfree.chart.axis.Axis.setTickLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.axis.Axis.setTickLabelFont : r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> = r1
org.jfree.chart.axis.DateAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.renderer.category.IntervalBarRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.category.IntervalBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>(r1, 1)
org.jfree.chart.axis.AxisSpace.shrink : if r2 != null goto $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.AxisSpace.shrink : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d2, $d5, $d10, $d15)
org.jfree.chart.axis.AxisSpace.shrink : return r2
org.jfree.chart.axis.AxisSpace.shrink : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.AxisSpace.shrink : $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.AxisSpace.shrink : $r3 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.AxisSpace.shrink : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.AxisSpace.shrink : $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : return r4
org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = d0 - 1.5707963267948966
org.jfree.chart.axis.Axis.getLabelEnclosure : d2 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r12 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.axis.Axis.getLabelEnclosure : $r3 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = interfaceinvoke r10.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r10 = virtualinvoke r9.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r12)
org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : if r5 == null goto return r4
org.jfree.chart.axis.Axis.getLabelEnclosure : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : $r11 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.Axis.getLabelEnclosure : r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>(d0, d1, d2)
org.jfree.chart.axis.Axis.getLabelEnclosure : r7 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r5, r1, r6)
org.jfree.chart.axis.Axis.getLabelEnclosure : d1 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r5 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.lang.String getLabel()>()
org.jfree.chart.plot.Plot.setBackgroundPaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.setBackgroundPaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.plot.Plot.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setBackgroundPaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.chart.plot.Plot.setBackgroundPaint : if r1 != null goto $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint backgroundPaint>
org.jfree.data.time.DateRange.getUpperMillis : $l0 = r0.<org.jfree.data.time.DateRange: long upperDate>
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null goto d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.plot.Plot.setDrawingSupplier : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setDrawingSupplier : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = r1
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints>
org.jfree.chart.JFreeChart.draw : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.JFreeChart.draw")]
org.jfree.chart.JFreeChart.draw : $r33 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : if r36 == null goto $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : if r11 == null goto (branch)
org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage>
org.jfree.chart.JFreeChart.draw : if r4 == null goto (branch)
org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.JFreeChart.draw : r6 = null
org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.JFreeChart.draw : r45 = r28
org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>()
org.jfree.chart.JFreeChart.draw : if r6 == null goto $z6 = 0
org.jfree.chart.JFreeChart.draw : if r4 == null goto $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : r46 = null
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : if r6 == null goto r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.plot.CategoryPlot.getDomainAxis : if r1 != null goto return r1
org.jfree.chart.plot.CategoryPlot.getDomainAxis : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.getDomainAxis : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.getDomainAxis : r1 = null
org.jfree.chart.plot.CategoryPlot.getDomainAxis : return r1
org.jfree.chart.axis.DateAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.axis.DateAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : if i0 >= 0 goto specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.axis.ValueAxis.drawAxisLine : if z0 == 0 goto (branch)
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawAxisLine : z0 = 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r17 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getAxisLineStroke()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : if z1 == 0 goto return
org.jfree.chart.axis.ValueAxis.drawAxisLine : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $z4 = r0.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible>
org.jfree.chart.axis.ValueAxis.drawAxisLine : z1 = 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = null
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r9 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.Axis.isTickLabelsVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible>
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.Axis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.Axis.drawAxisLine : $r14 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.axis.Axis.drawAxisLine : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.Axis.drawAxisLine : $r13 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.axis.Axis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.axis.Axis.drawAxisLine : $d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.axis.Axis.drawAxisLine : r4 = null
org.jfree.chart.axis.Axis.drawAxisLine : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.Axis.drawAxisLine : $r9 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : return r5
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : goto [?= return r5]
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $d34 = virtualinvoke r5.<org.jfree.chart.axis.AxisState: double getMax()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r5.<org.jfree.chart.axis.AxisState: void cursorLeft(double)>(d36)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r5, "state")
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : i0 = 0
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r38 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : $r37 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r5, r2, r4)
org.jfree.chart.axis.CategoryAxis.drawCategoryLabels : virtualinvoke r5.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7)
org.jfree.chart.title.TextTitle.arrange : $r18 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.title.TextTitle.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.TextTitle.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.TextTitle.arrange : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.TextTitle.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.TextTitle.arrange : $r16 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.title.TextTitle.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.TextTitle.arrange : $d3 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.TextTitle.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.title.TextTitle.arrange : $r17 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.title.TextTitle.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.TextTitle.arrange : r6 = null
org.jfree.chart.StandardChartTheme.getDrawingSupplier : goto [?= return r1]
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r6 = interfaceinvoke r2.<org.jfree.util.PublicCloneable: java.lang.Object clone()>()
org.jfree.chart.StandardChartTheme.getDrawingSupplier : r1 = null
org.jfree.chart.StandardChartTheme.getDrawingSupplier : return r1
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r5 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.StandardChartTheme.getDrawingSupplier : $r4 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.CategoryPlot.isRangeZeroBaselineVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeZeroBaselineVisible>
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : i5 = 0
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : $r7 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)>(r2)
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(r3)
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : i3 = 0
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : i4 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: int getRendererCount()>()
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : $r8 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : r4 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i5)
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : r3 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(i3)
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : $r10 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator>
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : i0 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: int getDomainAxisCount()>()
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : if r3 == null goto i3 = i3 + 1
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : $z2 = r1 instanceof org.jfree.chart.plot.CombinedRangeCategoryPlot
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : virtualinvoke r0.<org.jfree.chart.StandardChartTheme: void applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)>(r4)
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : i1 = 0
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : $r9 = r0.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint>
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : $r6 = r0.<org.jfree.chart.StandardChartTheme: org.jfree.ui.RectangleInsets axisOffset>
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : i2 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: int getRangeAxisCount()>()
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : if r2 == null goto i1 = i1 + 1
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : if r4 == null goto i5 = i5 + 1
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : $z0 = r1 instanceof org.jfree.chart.plot.CombinedDomainCategoryPlot
org.jfree.chart.StandardChartTheme.applyToCategoryPlot : r2 = virtualinvoke r1.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxis(int)>(i1)
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r7 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : return r2
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r2 != null goto return r2
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.plot.CrosshairState.setCrosshairDistance : r0.<org.jfree.chart.plot.CrosshairState: double distance> = d0
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.renderer.AbstractRenderer.getAutoPopulateSeriesPaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesPaint>
org.jfree.chart.plot.CategoryPlot.getRenderer : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.getRenderer : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.getRenderer : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(0)
org.jfree.chart.plot.CategoryPlot.getRenderer : r1 = null
org.jfree.chart.plot.CategoryPlot.getRenderer : return r1
org.jfree.chart.axis.DateTickUnit.dateToString : $r2 = r0.<org.jfree.chart.axis.DateTickUnit: java.text.DateFormat formatter>
org.jfree.chart.plot.CategoryPlot.getLegendItems : r2 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(i1)
org.jfree.chart.plot.CategoryPlot.getLegendItems : i1 = 0
org.jfree.chart.plot.CategoryPlot.getLegendItems : $r6 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.CategoryPlot.getLegendItems : if r2 == null goto i1 = i1 + 1
org.jfree.chart.plot.CategoryPlot.getLegendItems : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getLegendItems : return r1
org.jfree.chart.plot.CategoryPlot.getLegendItems : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.axis.CategoryLabelPosition.getWidthRatio : $f0 = r0.<org.jfree.chart.axis.CategoryLabelPosition: float widthRatio>
org.jfree.chart.axis.Axis.getLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets>
org.jfree.chart.title.TextTitle.drawHorizontal : $r11 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment RIGHT>
org.jfree.chart.title.TextTitle.drawHorizontal : $r12 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.title.TextTitle.drawHorizontal : $r8 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.drawHorizontal : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.title.TextTitle.drawHorizontal : r5 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.title.TextTitle.drawHorizontal : $r18 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.drawHorizontal : r4 = <org.jfree.text.TextBlockAnchor: org.jfree.text.TextBlockAnchor TOP_CENTER>
org.jfree.chart.title.TextTitle.drawHorizontal : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.drawHorizontal : r4 = null
org.jfree.chart.title.TextTitle.drawHorizontal : $r9 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>
org.jfree.chart.title.TextTitle.drawHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.drawHorizontal : $d3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.title.TextTitle.drawHorizontal : f1 = 0.0F
org.jfree.chart.title.TextTitle.drawHorizontal : $r10 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.chart.title.TextTitle.drawHorizontal : f0 = 0.0F
org.jfree.chart.title.TextTitle.drawHorizontal : $r7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : goto [?= return r2]
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : return r2
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : i0 = 0
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.CategoryPlot.getRendererForDataset : r2 = null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawBackground : virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r3)
org.jfree.chart.axis.Axis.setTickLabelPaint : virtualinvoke r0.<org.jfree.chart.axis.Axis: void fireChangeEvent()>()
org.jfree.chart.axis.Axis.setTickLabelPaint : r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> = r1
org.jfree.chart.axis.Axis.setTickLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.CategoryPlot.getAnnotations : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.List annotations>
org.jfree.chart.axis.AxisCollection.getAxesAtLeft : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft>
org.jfree.chart.plot.Plot.setOutlinePaint : r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint> = r1
org.jfree.chart.plot.Plot.setOutlinePaint : $r4 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.setOutlinePaint : $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.Plot.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.setOutlinePaint : if r1 != null goto $r3 = r0.<org.jfree.chart.plot.Plot: java.awt.Paint outlinePaint>
org.jfree.chart.plot.CategoryCrosshairState.setRowKey : r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable rowKey> = r1
org.jfree.chart.axis.Tick.getTextAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.axis.DateAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.DateAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.lang.String getLabel()>()
org.jfree.chart.renderer.AbstractRenderer.clearSeriesStrokes : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.clearSeriesStrokes : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.axis.DateTickUnitType.toString : $r1 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.plot.CategoryPlot.isRangeGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeGridlinesVisible>
org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setBaseItemURLGenerator : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.urls.CategoryURLGenerator baseItemURLGenerator> = r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setBaseItemURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void fireChangeEvent()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : return r5
org.jfree.chart.axis.ValueAxis.reserveSpace : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : d4 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : if r5 != null goto $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $d6 = d5 + d1
org.jfree.chart.axis.ValueAxis.reserveSpace : d5 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z3)
org.jfree.chart.axis.ValueAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.ValueAxis.reserveSpace : $z6 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : d0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double getFixedDimension()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $b0 = d0 cmpl 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d3 = 0.0
org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.axis.Axis.setLabelFont : virtualinvoke r0.<org.jfree.chart.axis.Axis: void fireChangeEvent()>()
org.jfree.chart.axis.Axis.setLabelFont : $r2 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont>
org.jfree.chart.axis.Axis.setLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.axis.Axis.setLabelFont : r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont> = r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r7 = virtualinvoke r3.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r12 = new java.awt.geom.Line2D$Double
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $z0 = virtualinvoke r7.<org.jfree.data.Range: boolean contains(double)>(d0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r9 = null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r11 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $d3 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r9)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(r6)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : $r10 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : r8 = virtualinvoke r2.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r5)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.plot.CategoryPlot.isDomainGridlinesVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainGridlinesVisible>
org.jfree.chart.axis.AxisCollection.getAxesAtTop : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtTop>
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 goto r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 goto return
org.jfree.chart.axis.DateAxis$DefaultTimeline.toTimelineValue : return l0
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.axis.DateTickUnit.getUnit : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int unit>
org.jfree.chart.plot.CategoryPlot.getDomainCrosshairColumnKey : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r4 = r2[i0]
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i2 = i0 + 1
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : if r4 != null goto r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Collection getRangeMarkers(int,org.jfree.ui.Layer)>(i0, r3)
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Collection getRangeMarkers(int,org.jfree.ui.Layer)>(i0, r3)
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : if r5 == null goto return
org.jfree.chart.plot.CategoryPlot.drawRangeMarkers : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0)
org.jfree.chart.axis.CategoryAxis.draw : return r11
org.jfree.chart.axis.CategoryAxis.draw : $z2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickMarksVisible()>()
org.jfree.chart.axis.CategoryAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isVisible()>()
org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4)
org.jfree.chart.axis.CategoryAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r2, r3, r4, r6, r5)
org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r6, r3, r4, r5)
org.jfree.chart.axis.CategoryAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: void drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>(r1, d0, r3, r4, r6)
org.jfree.chart.axis.CategoryAxis.draw : $z1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isAxisLineVisible()>()
org.jfree.chart.axis.CategoryAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.CategoryAxis.draw : $r8 = new org.jfree.chart.axis.AxisState
org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue : r0.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue> = d0
org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue : $z1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: boolean isRangeCrosshairVisible()>()
org.jfree.chart.axis.AxisCollection.add : $r8 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtLeft>
org.jfree.chart.axis.AxisCollection.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axis")
org.jfree.chart.axis.AxisCollection.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.AxisCollection.add : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.AxisCollection.add : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.AxisCollection.add : $r4 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtTop>
org.jfree.chart.axis.AxisCollection.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "edge")
org.jfree.chart.renderer.category.BarRenderer.setShadowVisible : virtualinvoke r0.<org.jfree.chart.renderer.category.BarRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.BarRenderer.setShadowVisible : r0.<org.jfree.chart.renderer.category.BarRenderer: boolean shadowsVisible> = z0
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $z2 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : i1 = 0
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : return r3
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : if r4 != null goto $z2 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r7 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToRangeAxesMap>
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r5 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis : $r1 = new java.lang.Integer
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $d7 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r5 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r10 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat getDateFormatOverride()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $r14 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : if r10 == null goto r11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r8)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $i0 = virtualinvoke r13.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r11)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r8)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r4 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r9 = virtualinvoke r7.<org.jfree.data.time.DateRange: java.util.Date getUpperDate()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : return d6
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $d3 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r12 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r9)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r13 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r4)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r6 = virtualinvoke r4.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("ABCxyz", r5)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $i1 = virtualinvoke r13.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r12)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r8 = virtualinvoke r7.<org.jfree.data.time.DateRange: java.util.Date getLowerDate()>()
org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities>
org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeZeroBaselinePaint> = r1
org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.StandardChartTheme.applyToAbstractRenderer : virtualinvoke r1.<org.jfree.chart.renderer.AbstractRenderer: void clearSeriesPaints(boolean)>(0)
org.jfree.chart.StandardChartTheme.applyToAbstractRenderer : $z1 = virtualinvoke r1.<org.jfree.chart.renderer.AbstractRenderer: boolean getAutoPopulateSeriesStroke()>()
org.jfree.chart.StandardChartTheme.applyToAbstractRenderer : virtualinvoke r1.<org.jfree.chart.renderer.AbstractRenderer: void clearSeriesStrokes(boolean)>(0)
org.jfree.chart.StandardChartTheme.applyToAbstractRenderer : $z0 = virtualinvoke r1.<org.jfree.chart.renderer.AbstractRenderer: boolean getAutoPopulateSeriesPaint()>()
org.jfree.chart.axis.Axis.setLabelPaint : r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> = r1
org.jfree.chart.axis.Axis.setLabelPaint : virtualinvoke r0.<org.jfree.chart.axis.Axis: void fireChangeEvent()>()
org.jfree.chart.axis.Axis.setLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.CategoryPlot.isDomainCrosshairVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean domainCrosshairVisible>
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseItemLabelPaint(java.awt.Paint,boolean)>(r1, 1)
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.axis.DateAxis.draw : return r11
org.jfree.chart.axis.DateAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVisible()>()
org.jfree.chart.axis.DateAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.DateAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r11, r3, r4, r5)
org.jfree.chart.axis.DateAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r2, r3, r4)
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.title.TextTitle.setFont : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.TextTitle.setFont : r0.<org.jfree.chart.title.TextTitle: java.awt.Font font> = r1
org.jfree.chart.title.TextTitle.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.title.TextTitle.setFont : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.axis.DateTickUnit.getCount : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.plot.CategoryPlot.getDataRange : return r2
org.jfree.chart.plot.CategoryPlot.getDataRange : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CategoryPlot.getDataRange : $r13 = interfaceinvoke r6.<org.jfree.chart.renderer.category.CategoryItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>(r5)
org.jfree.chart.plot.CategoryPlot.getDataRange : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CategoryPlot.getDataRange : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRendererForDataset(org.jfree.data.category.CategoryDataset)>(r5)
org.jfree.chart.plot.CategoryPlot.getDataRange : if i0 < 0 goto $r10 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>()
org.jfree.chart.plot.CategoryPlot.getDataRange : $r9 = specialinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List datasetsMappedToRangeAxis(int)>(i0)
org.jfree.chart.plot.CategoryPlot.getDataRange : if r6 == null goto (branch)
org.jfree.chart.plot.CategoryPlot.getDataRange : $r7 = new java.util.ArrayList
org.jfree.chart.plot.CategoryPlot.getDataRange : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.getDataRange : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.getDataRange : r2 = null
org.jfree.chart.plot.CategoryPlot.getDataRange : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.CategoryPlot.getDataRange")]
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r7 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i0)
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : return r3
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean drawSharedDomainAxis>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r25 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : i0 = 0
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if r3 != null goto $r9 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : $r21 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>()
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r3 = virtualinvoke r6.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r7, r3)
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : r5 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r21, $r22)
org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace : if r6 == null goto i0 = i0 + 1
org.jfree.chart.axis.AxisState.cursorUp : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.axis.Axis.getLabel : $r1 = r0.<org.jfree.chart.axis.Axis: java.lang.String label>
org.jfree.chart.title.LegendTitle.setItemFont : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setItemFont : r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> = r1
org.jfree.chart.title.LegendTitle.setItemFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.chart.plot.CategoryPlot.getDatasetRenderingOrder : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.DatasetRenderingOrder renderingOrder>
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if z0 == 0 goto return
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, z0)
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation : if i0 != 0 goto $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.CrosshairState.getCrosshairY : $d0 = r0.<org.jfree.chart.plot.CrosshairState: double crosshairY>
org.jfree.chart.axis.Axis.isAxisLineVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : return r2
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r2 != null goto return r2
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1
org.jfree.chart.plot.CrosshairState.setAnchor : r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor> = r1
org.jfree.chart.plot.CategoryPlot.getRangeGridlinePaint : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint rangeGridlinePaint>
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : return r2
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : r2 = r0.<org.jfree.chart.axis.CategoryLabelPositions: org.jfree.chart.axis.CategoryLabelPosition positionForAxisAtLeft>
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : r2 = null
org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition : $r3 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : return r36
org.jfree.chart.JFreeChart.drawTitle : r10 = (org.jfree.chart.block.EntityBlockResult) r19
org.jfree.chart.JFreeChart.drawTitle : n0 = null
org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null]
org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t")
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0)
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area")
org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.JFreeChart.drawTitle : $d6 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r9, r7)
org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.JFreeChart.drawTitle : r8 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : r36 = interfaceinvoke r10.<org.jfree.chart.block.EntityBlockResult: org.jfree.chart.entity.EntityCollection getEntityCollection()>()
org.jfree.chart.JFreeChart.drawTitle : r9 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r8, r3, $r17, $r18)
org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams
org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.JFreeChart.drawTitle : $d2 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : r36 = null
org.jfree.chart.JFreeChart.drawTitle : $r17 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7)
org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23)
org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.chart.title.TextTitle.draw : if r4 == null goto return r6
org.jfree.chart.title.TextTitle.draw : r18 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.draw : return r6
org.jfree.chart.title.TextTitle.draw : r14 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r9)
org.jfree.chart.title.TextTitle.draw : $r19 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.draw : r4 = null
org.jfree.chart.title.TextTitle.draw : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r17)
org.jfree.chart.title.TextTitle.draw : $r10 = r0.<org.jfree.chart.title.TextTitle: java.lang.String text>
org.jfree.chart.title.TextTitle.draw : $r15 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.TextTitle.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.TextTitle.draw : r17 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r14)
org.jfree.chart.title.TextTitle.draw : $r8 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.TextTitle.draw : $z1 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.TextTitle.draw : $r23 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.TextTitle.draw : virtualinvoke r0.<org.jfree.chart.title.TextTitle: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r9)
org.jfree.chart.title.TextTitle.draw : $z2 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.axis.DateTickUnit.getCalendarField : $r1 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType>
org.jfree.chart.renderer.category.BarRenderer.setIncludeBaseInRange : virtualinvoke r0.<org.jfree.chart.renderer.category.BarRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.category.BarRenderer.setIncludeBaseInRange : $z1 = r0.<org.jfree.chart.renderer.category.BarRenderer: boolean includeBaseInRange>
org.jfree.chart.renderer.category.BarRenderer.setIncludeBaseInRange : r0.<org.jfree.chart.renderer.category.BarRenderer: boolean includeBaseInRange> = z0
org.jfree.chart.plot.CategoryPlot.drawAxes : $r20 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i2)
org.jfree.chart.plot.CategoryPlot.drawAxes : $r10 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.plot.CategoryPlot.drawAxes : $d5 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d4 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r5 = new org.jfree.chart.axis.AxisCollection
org.jfree.chart.plot.CategoryPlot.drawAxes : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r21 = new java.util.HashMap
org.jfree.chart.plot.CategoryPlot.drawAxes : $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r24 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtTop()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.CategoryPlot.drawAxes")]
org.jfree.chart.plot.CategoryPlot.drawAxes : d11 = virtualinvoke r41.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : return r22
org.jfree.chart.plot.CategoryPlot.drawAxes : if r19 == null goto i2 = i2 + 1
org.jfree.chart.plot.CategoryPlot.drawAxes : $r13 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.CategoryPlot.drawAxes : $z3 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r11)
org.jfree.chart.plot.CategoryPlot.drawAxes : $r17 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r40 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.plot.CategoryPlot.drawAxes : $r15 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawAxes : $r44 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtRight()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d8 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r28 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtBottom()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : if r7 == null goto i0 = i0 + 1
org.jfree.chart.plot.CategoryPlot.drawAxes : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.plot.CategoryPlot.drawAxes")]
org.jfree.chart.plot.CategoryPlot.drawAxes : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r39, r41)
org.jfree.chart.plot.CategoryPlot.drawAxes : if r9 == null goto (branch)
org.jfree.chart.plot.CategoryPlot.drawAxes : d3 = virtualinvoke r11.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d12 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $d9 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : i0 = 0
org.jfree.chart.plot.CategoryPlot.drawAxes : i2 = 0
org.jfree.chart.plot.CategoryPlot.drawAxes : $r36 = virtualinvoke r6.<org.jfree.chart.axis.AxisCollection: java.util.List getAxesAtLeft()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : if r39 == null goto (branch)
org.jfree.chart.plot.CategoryPlot.drawAxes : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAxes : $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.labels.CategoryToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void fireChangeEvent()>()
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation(int)>(0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : if r1 != null goto return r1
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r3 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : r1 = null
org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation : return r1
org.jfree.chart.plot.CategoryPlot.getRangeGridlineStroke : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Stroke rangeGridlineStroke>
org.jfree.chart.plot.CategoryPlot.getRangeCrosshairValue : $d0 = r0.<org.jfree.chart.plot.CategoryPlot: double rangeCrosshairValue>
org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.plot.Plot.drawNoDataMessage : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r3)
org.jfree.chart.plot.Plot.drawNoDataMessage : r3 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.Plot.drawNoDataMessage : if r4 == null goto virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r3)
org.jfree.chart.plot.Plot.drawNoDataMessage : r4 = r0.<org.jfree.chart.plot.Plot: java.lang.String noDataMessage>
org.jfree.chart.plot.Plot.drawNoDataMessage : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.axis.Axis.getLabelAngle : $d0 = r0.<org.jfree.chart.axis.Axis: double labelAngle>
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r21 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : return r3
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if r3 != null goto $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : i0 = 0
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i0)
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : $r8 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : r3 = virtualinvoke r5.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r6, r3)
org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace : if r5 == null goto i0 = i0 + 1
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : return 1
org.jfree.data.general.DatasetUtilities.isEmptyOrNull : if r0 != null goto i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.chart.plot.Plot.axisChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendTitle.draw : if r8 != null goto r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendTitle.draw : return r9
org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4)
org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3)
org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>()
org.jfree.chart.title.LegendTitle.draw : r6 = null
org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.JFreeChart.fireChartChanged : $r1 = new org.jfree.chart.event.ChartChangeEvent
org.jfree.chart.JFreeChart.fireChartChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r2)
org.jfree.chart.plot.DefaultDrawingSupplier.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.chart.plot.DefaultDrawingSupplier.clone : return r1
org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimBorder : return r1
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.axis.DateTickUnitType.equals : $r3 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.DateTickUnitType.equals : $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType
org.jfree.chart.axis.DateTickUnitType.equals : r2 = (org.jfree.chart.axis.DateTickUnitType) r1
org.jfree.chart.axis.DateTickUnitType.equals : return 1
org.jfree.chart.axis.DateTickUnitType.equals : return 0
org.jfree.chart.axis.DateTickUnitType.equals : if r0 != r1 goto $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType
org.jfree.chart.axis.DateAxis.isHiddenValue : $r2 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.block.BlockResult.getEntityCollection : $r1 = r0.<org.jfree.chart.block.BlockResult: org.jfree.chart.entity.EntityCollection entities>
org.jfree.data.time.DateRange.getLowerMillis : $l0 = r0.<org.jfree.data.time.DateRange: long lowerDate>
org.jfree.chart.plot.CrosshairState.setAnchorX : r0.<org.jfree.chart.plot.CrosshairState: double anchorX> = d0
org.jfree.chart.plot.CrosshairState.setAnchorY : r0.<org.jfree.chart.plot.CrosshairState: double anchorY> = d0
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1
org.jfree.chart.plot.CategoryPlot.drawAnnotations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CategoryPlot.drawAnnotations : $r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List getAnnotations()>()
org.jfree.chart.plot.CategoryPlot.drawAnnotations : $r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.List getAnnotations()>()
org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.titleChanged : virtualinvoke r1.<org.jfree.chart.event.TitleChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.axis.Axis.isTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible>
org.jfree.chart.plot.CategoryPlot.getRangeAxisCount : $r1 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Collection getDomainMarkers(int,org.jfree.ui.Layer)>(i0, r3)
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : if r4 != null goto r5 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: java.util.Collection getDomainMarkers(int,org.jfree.ui.Layer)>(i0, r3)
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : if r5 == null goto return
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r6 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxisForDataset(int)>(i0)
org.jfree.chart.plot.CategoryPlot.drawDomainMarkers : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseItemLabelFont(java.awt.Font,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseItemLabelFont> = r1
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r8 = <org.jfree.ui.Layer: org.jfree.ui.Layer BACKGROUND>
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : return r2
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : if r2 == null goto return r2
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundDomainMarkers>
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : $r4 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.getDomainMarkers : r2 = null
org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.axis.CategoryAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isVisible()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : return r5
org.jfree.chart.axis.CategoryAxis.reserveSpace : r15 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)
org.jfree.chart.axis.CategoryAxis.reserveSpace : $d7 = d3 + d1
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r11 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.CategoryAxis.reserveSpace : virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4)
org.jfree.chart.axis.CategoryAxis.reserveSpace : d0 = 0.0
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r12 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.CategoryAxis.reserveSpace : d3 = virtualinvoke r15.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : $z3 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.CategoryAxis.reserveSpace : d1 = 0.0
org.jfree.chart.axis.CategoryAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.CategoryAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.CategoryAxis.reserveSpace : if r5 != null goto $z0 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: boolean isVisible()>()
org.jfree.chart.axis.CategoryAxis.reserveSpace : d1 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getMax()>()
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : return r3
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : if r1 == null goto $r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge(int)>(0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : n0 = null
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : $r2 = r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation(int)>(i0)
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : r0.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.plot.CategoryPlot plot> = r1
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "plot")
org.jfree.chart.axis.Axis.getTickMarkInsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkInsideLength>
org.jfree.chart.plot.CategoryPlot.setCrosshairDatasetIndex : if z0 == 0 goto return
org.jfree.chart.plot.CategoryPlot.setCrosshairDatasetIndex : r0.<org.jfree.chart.plot.CategoryPlot: int crosshairDatasetIndex> = i0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r22 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : return r6
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r15 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: java.lang.String getText()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d6 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r26 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getTickMarkStroke()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkInsideLength()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d28 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r7, r1, r2, $z12)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r38 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r30 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r27 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickMarkPaint()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r12 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float[] calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r9, d0, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r16 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getTextAnchor()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z9 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r24 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d24 = 0.0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r33 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r14 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickLabelPaint()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z12 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r5 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r37 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r32 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()", "org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels")]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickMarksVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorUp(double)>(d28)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = null
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d2 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getAngle()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkOutsideLength()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r28 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isAxisLineVisible()>()
org.jfree.chart.axis.AxisCollection.getAxesAtRight : $r1 = r0.<org.jfree.chart.axis.AxisCollection: java.util.List axesAtRight>
org.jfree.chart.axis.DateTickUnitType.getCalendarField : $i0 = r0.<org.jfree.chart.axis.DateTickUnitType: int calendarField>
org.jfree.chart.title.TextTitle.setPaint : $r2 = r0.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>
org.jfree.chart.title.TextTitle.setPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.axis.DateTickUnit.getMultiple : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if i0 != 0 goto $r5 = new java.util.HashSet
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : if r1 != null goto i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.CategoryPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null goto d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : return r8
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : n0 = null
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : $r4 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.TreeMap datasetToDomainAxesMap>
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : if r1 == null goto r8 = virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxis(int)>(0)
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : goto [?= return r8]
org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset : if i0 >= 0 goto n0 = null
org.jfree.chart.plot.CategoryPlot.integerise : $d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.plot.CategoryPlot.integerise : $d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.CategoryPlot.integerise : $r2 = new java.awt.Rectangle
org.jfree.chart.plot.CategoryPlot.integerise : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.plot.CategoryPlot.integerise : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimPadding : return r1
org.jfree.chart.title.LegendTitle.getWrapper : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.axis.DateAxis.nextStandardDate : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)>(r1, r2)
org.jfree.chart.axis.DateAxis.nextStandardDate : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : $r5 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.nextStandardDate : $r7 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : virtualinvoke r4.<java.util.Calendar: void setTime(java.util.Date)>(r3)
org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount>
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : return r4
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : goto [?= return r4]
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : r4 = r1
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>()
org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>()
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.plot.CategoryPlot.setDomainGridlinePaint : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setDomainGridlinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.plot.CategoryPlot.setDomainGridlinePaint : r0.<org.jfree.chart.plot.CategoryPlot: java.awt.Paint domainGridlinePaint> = r1
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.Axis.getTickMarkPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint>
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : if z0 == 0 goto return
org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey : r0.<org.jfree.chart.plot.CategoryPlot: java.lang.Comparable domainCrosshairColumnKey> = r1
org.jfree.chart.axis.DateAxis.getDateFormatOverride : $r1 = r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat dateFormatOverride>
org.jfree.chart.axis.DateAxis$DefaultTimeline.containsDomainValue : return 1
org.jfree.data.time.DateRange.getLowerDate : $r1 = new java.util.Date
org.jfree.chart.JFreeChart.getPlot : $r1 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin>
org.jfree.chart.axis.AxisState.getTicks : $r1 = r0.<org.jfree.chart.axis.AxisState: java.util.List ticks>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null goto i0 = i0 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1)
org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimMargin : return r1
org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.plot.CategoryPlot.isRangeCrosshairVisible : $z0 = r0.<org.jfree.chart.plot.CategoryPlot: boolean rangeCrosshairVisible>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter>
org.jfree.chart.plot.PlotRenderingInfo.setDataArea : r0.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea> = r1
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : return d0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $r12 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : if z0 == 0 goto $r12 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d11 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $f0 = virtualinvoke r13.<java.awt.font.LineMetrics: float getHeight()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : d0 = 0.0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r13 = virtualinvoke r5.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("ABCxyz", $r12)
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.axis.DateAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.DateAxis.refreshTicks : return r5
org.jfree.chart.axis.DateAxis.refreshTicks : r5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.DateAxis.refreshTicks : r5 = null
org.jfree.chart.title.TextTitle.arrangeRR : $r16 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.arrangeRR : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.title.TextTitle.arrangeRR : $r14 = r0.<org.jfree.chart.title.TextTitle: org.jfree.text.TextBlock content>
org.jfree.chart.title.TextTitle.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.title.TextTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.TextTitle.arrangeRR : return r7
org.jfree.chart.title.TextTitle.arrangeRR : $z0 = r0.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>
org.jfree.chart.title.TextTitle.arrangeRR : $r9 = r0.<org.jfree.chart.title.TextTitle: java.awt.Font font>
org.jfree.chart.title.TextTitle.arrangeRR : $r10 = r0.<org.jfree.chart.title.TextTitle: java.lang.String text>
org.jfree.chart.title.TextTitle.arrangeRR : $d0 = virtualinvoke r2.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount>
org.jfree.data.Range.combine : return r1
org.jfree.data.Range.combine : if r0 != null goto (branch)
org.jfree.chart.plot.CategoryPlot.setOrientation : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.setOrientation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.CategoryPlot.setOrientation : r0.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation orientation> = r1
