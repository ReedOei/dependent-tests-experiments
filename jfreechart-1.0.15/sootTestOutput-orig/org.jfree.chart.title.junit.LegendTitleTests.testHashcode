org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 goto specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.title.Title.hashCode : s0 = 193
org.jfree.chart.title.Title.hashCode : $i1 = 37 * s0
org.jfree.chart.title.Title.hashCode : return i9
org.jfree.chart.title.Title.hashCode : $i5 = staticinvoke <org.jfree.util.ObjectUtilities: int hashCode(java.lang.Object)>($r2)
org.jfree.chart.title.Title.hashCode : $i7 = 37 * i6
org.jfree.chart.title.Title.hashCode : $i4 = 37 * i3
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.block.BlockBorder.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.block.BlockBorder
org.jfree.chart.block.BlockBorder.equals : return 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.block.AbstractBlock.equals : $r11 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.equals : $r9 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.equals : r2 = (org.jfree.chart.block.AbstractBlock) r1
org.jfree.chart.block.AbstractBlock.equals : $d2 = r0.<org.jfree.chart.block.AbstractBlock: double width>
org.jfree.chart.block.AbstractBlock.equals : $d0 = r0.<org.jfree.chart.block.AbstractBlock: double height>
org.jfree.chart.block.AbstractBlock.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.block.AbstractBlock
org.jfree.chart.block.AbstractBlock.equals : $r3 = r0.<org.jfree.chart.block.AbstractBlock: java.lang.String id>
org.jfree.chart.block.AbstractBlock.equals : return 1
org.jfree.chart.block.AbstractBlock.equals : $r5 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.equals : $z0 = r1 instanceof org.jfree.chart.block.AbstractBlock
org.jfree.chart.block.AbstractBlock.equals : $r7 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 goto $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null goto i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.title.LegendTitle.equals : $z0 = r1 instanceof org.jfree.chart.title.LegendTitle
org.jfree.chart.title.LegendTitle.equals : $r3 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.equals : $r17 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout>
org.jfree.chart.title.LegendTitle.equals : $r11 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.equals : $r9 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.title.LegendTitle.equals : r2 = (org.jfree.chart.title.LegendTitle) r1
org.jfree.chart.title.LegendTitle.equals : $z1 = specialinvoke r0.<org.jfree.chart.title.Title: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.LegendTitle.equals : $r19 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.equals : return 1
org.jfree.chart.title.LegendTitle.equals : $r13 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.equals : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.title.LegendTitle.equals : $r15 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.title.LegendTitle
org.jfree.chart.title.LegendTitle.equals : $r7 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null goto i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 goto specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.block.ColumnArrangement.equals : $z0 = r1 instanceof org.jfree.chart.block.ColumnArrangement
org.jfree.chart.block.ColumnArrangement.equals : $d0 = r0.<org.jfree.chart.block.ColumnArrangement: double horizontalGap>
org.jfree.chart.block.ColumnArrangement.equals : return 1
org.jfree.chart.block.ColumnArrangement.equals : $r5 = r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.ColumnArrangement.equals : r2 = (org.jfree.chart.block.ColumnArrangement) r1
org.jfree.chart.block.ColumnArrangement.equals : $r3 = r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.block.ColumnArrangement.equals : $d2 = r0.<org.jfree.chart.block.ColumnArrangement: double verticalGap>
org.jfree.chart.block.ColumnArrangement.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.block.ColumnArrangement
org.jfree.chart.block.FlowArrangement.equals : $z0 = r1 instanceof org.jfree.chart.block.FlowArrangement
org.jfree.chart.block.FlowArrangement.equals : $r5 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.equals : $d2 = r0.<org.jfree.chart.block.FlowArrangement: double verticalGap>
org.jfree.chart.block.FlowArrangement.equals : $r3 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.block.FlowArrangement.equals : return 1
org.jfree.chart.block.FlowArrangement.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.block.FlowArrangement
org.jfree.chart.block.FlowArrangement.equals : r2 = (org.jfree.chart.block.FlowArrangement) r1
org.jfree.chart.block.FlowArrangement.equals : $d0 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.title.Title.equals : $r7 = r0.<org.jfree.chart.title.Title: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.title.Title.equals : $r5 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.equals : $z1 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.title.Title
org.jfree.chart.title.Title.equals : $r3 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.equals : $z3 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.equals : $z5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.title.Title.equals : r2 = (org.jfree.chart.title.Title) r1
org.jfree.chart.title.Title.equals : $z0 = r1 instanceof org.jfree.chart.title.Title
