org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.xy.XYBarRenderer.getShadowsVisible : $z0 = r0.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean shadowsVisible>
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter>
org.jfree.chart.renderer.xy.XYBarRenderer.getBarAlignmentFactor : $d0 = r0.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor>
org.jfree.chart.renderer.xy.XYBarRenderer.getUseYInterval : $z0 = r0.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval>
org.jfree.chart.renderer.xy.XYBarRenderer.setShadowVisible : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.XYBarRenderer.setShadowVisible : r0.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean shadowsVisible> = z0
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
