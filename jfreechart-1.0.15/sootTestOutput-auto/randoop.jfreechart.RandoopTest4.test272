org.jfree.chart.axis.DateAxis.calculateDateForPosition : r3 = null
org.jfree.chart.axis.DateAxis.calculateDateForPosition : return r3
org.jfree.chart.axis.DateAxis.calculateDateForPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "period")
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r4 = <org.jfree.chart.axis.DateTickMarkPosition: org.jfree.chart.axis.DateTickMarkPosition START>
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r5 = new java.util.Date
org.jfree.chart.axis.ValueAxis.setVerticalTickLabels : $z1 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : return r2
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r62 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r116 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r125 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r113 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r50 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r7.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r107 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r15 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r47 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r98 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "locale")
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "zone")
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r53 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r23 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r77 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r128 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r41 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r8.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r18 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r122 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r59 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r74 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r119 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r29 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r95 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r11 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r80 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r12 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r17 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r4.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r14 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r9.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r68 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r101 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r56 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r35 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r65 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r26 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r86 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r16 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r92 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r104 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r13 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r20 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r6.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r10 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r38 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r134 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r131 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r32 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r83 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r71 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r89 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r110 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r44 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : if r1 != null goto $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.data.DefaultKeyedValues2D.getColumnKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTime : return l0
org.jfree.chart.axis.SegmentedTimeline.getTime : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving>
org.jfree.chart.axis.DateTickUnit.dateToString : $r2 = r0.<org.jfree.chart.axis.DateTickUnit: java.text.DateFormat formatter>
org.jfree.chart.axis.DateTickUnit.getCalendarField : $r1 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 3
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 2
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 1
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 6
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 5
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 4
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "unitType")
org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r6 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.removeValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = i1 + 1
org.jfree.data.DefaultKeyedValues2D.removeValue : if z1 == 0 goto return
org.jfree.data.DefaultKeyedValues2D.removeValue : $r20 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : i6 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(null, r1, r2)
org.jfree.data.DefaultKeyedValues2D.removeValue : z0 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.removeValue : z1 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : if z0 == 0 goto z1 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : i4 = 0
org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.chart.axis.DateAxis.getMinimumDate : r2 = (org.jfree.data.time.DateRange) r1
org.jfree.chart.axis.DateAxis.getMinimumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.getMinimumDate : return r3
org.jfree.chart.axis.DateAxis.getMinimumDate : goto [?= return r3]
org.jfree.chart.axis.DateAxis.getMinimumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.getMinimumDate : n0 = null
org.jfree.chart.axis.DateAxis.getMinimumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getLowerDate()>()
org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.util.RelativeDateFormat.getMinuteSuffix : $r1 = r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String minuteSuffix>
org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null goto $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.chart.axis.DateTickUnitType.toString : $r1 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if z0 == 0 goto return
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void autoAdjustRange()>()
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $b0 = d0 cmpg 0.0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setAutoRangeMinimumSize(double,boolean)>(d0, 1)
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $d1 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $z1 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> = d0
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1 goto $i5 = i0 + 1
org.jfree.data.time.Week.getWeek : $b0 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.data.time.TimeTableXYDataset.remove : if z0 == 0 goto return
org.jfree.data.time.TimeTableXYDataset.remove : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.chart.axis.SegmentedTimeline.access$100 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.equals : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>()
org.jfree.data.DefaultKeyedValues2D.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.data.KeyedValues2D
org.jfree.data.DefaultKeyedValues2D.equals : i2 = 0
org.jfree.data.DefaultKeyedValues2D.equals : $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List getColumnKeys()>()
org.jfree.data.DefaultKeyedValues2D.equals : $z0 = r1 instanceof org.jfree.data.KeyedValues2D
org.jfree.data.DefaultKeyedValues2D.equals : i1 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>()
org.jfree.data.DefaultKeyedValues2D.equals : r2 = (org.jfree.data.KeyedValues2D) r1
org.jfree.data.DefaultKeyedValues2D.equals : return 1
org.jfree.data.DefaultKeyedValues2D.equals : $i5 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: int getColumnCount()>()
org.jfree.data.DefaultKeyedValues2D.equals : if r1 != null goto (branch)
org.jfree.data.DefaultKeyedValues2D.equals : $i4 = interfaceinvoke r2.<org.jfree.data.KeyedValues2D: int getRowCount()>()
org.jfree.data.DefaultKeyedValues2D.equals : $r5 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List getRowKeys()>()
org.jfree.chart.axis.DateTickUnitType.equals : $r3 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.DateTickUnitType.equals : $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType
org.jfree.chart.axis.DateTickUnitType.equals : r2 = (org.jfree.chart.axis.DateTickUnitType) r1
org.jfree.chart.axis.DateTickUnitType.equals : return 1
org.jfree.chart.axis.DateTickUnitType.equals : return 0
org.jfree.chart.axis.DateTickUnitType.equals : if r0 != r1 goto $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType
org.jfree.data.time.Quarter.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Quarter.getLastMillisecond : $s3 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getLastMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] LAST_MONTH_IN_QUARTER>
org.jfree.data.time.Quarter.getLastMillisecond : $s4 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.chart.axis.SegmentedTimeline.access$000 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 goto r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 goto return
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>()
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1
org.jfree.chart.util.RelativeDateFormat.getHourSuffix : $r1 = r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String hourSuffix>
org.jfree.chart.util.RelativeDateFormat.getSecondSuffix : $r1 = r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String secondSuffix>
org.jfree.chart.axis.DateTickUnit.getUnit : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int unit>
org.jfree.data.time.RegularTimePeriod.getEnd : $r1 = new java.util.Date
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : goto [?= return z1]
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : z0 = 1
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : $b2 = l1 cmp l0
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : return z1
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : $l0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTime(java.util.Date)>(r1)
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : $z2 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(long)>(l1)
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : $l1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTime(java.util.Date)>(r2)
org.jfree.chart.axis.SegmentedTimeline.containsDomainRange : z1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l5 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r3)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.DateTickUnitType.getCalendarField : $i0 = r0.<org.jfree.chart.axis.DateTickUnitType: int calendarField>
org.jfree.data.time.Month.getSerialIndex : $i0 = r0.<org.jfree.data.time.Month: int year>
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.axis.DateTickUnit.getMultiple : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l7 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l9 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l13 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l3 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l5 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l1 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l11 = (long) i0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $i2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$300(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $b4 = l0 cmp 0L
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : return l0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline.addException : i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.addException : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment
org.jfree.chart.axis.SegmentedTimeline.addException : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.addException : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Quarter.getFirstMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] FIRST_MONTH_IN_QUARTER>
org.jfree.data.time.Quarter.getFirstMillisecond : $s2 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.chart.util.RelativeDateFormat.format : $l8 = <org.jfree.chart.util.RelativeDateFormat: long MILLISECONDS_IN_ONE_DAY>
org.jfree.chart.util.RelativeDateFormat.format : $l3 = <org.jfree.chart.util.RelativeDateFormat: long MILLISECONDS_IN_ONE_DAY>
org.jfree.chart.util.RelativeDateFormat.format : $l15 = l5 * 60000L
org.jfree.chart.util.RelativeDateFormat.format : return r2
org.jfree.chart.util.RelativeDateFormat.format : l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.util.RelativeDateFormat.format : $l6 = r0.<org.jfree.chart.util.RelativeDateFormat: long baseMillis>
org.jfree.chart.util.RelativeDateFormat.format : r4 = r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String positivePrefix>
org.jfree.chart.util.RelativeDateFormat.format : $r19 = virtualinvoke r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String getMinuteSuffix()>()
org.jfree.chart.util.RelativeDateFormat.format : $d1 = (double) l16
org.jfree.chart.util.RelativeDateFormat.format : $r21 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat secondFormatter>
org.jfree.chart.util.RelativeDateFormat.format : $r6 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat dayFormatter>
org.jfree.chart.util.RelativeDateFormat.format : $b18 = l4 cmp 0L
org.jfree.chart.util.RelativeDateFormat.format : $b7 = l1 cmp 0L
org.jfree.chart.util.RelativeDateFormat.format : $r24 = virtualinvoke r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String getSecondSuffix()>()
org.jfree.chart.util.RelativeDateFormat.format : $r16 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat minuteFormatter>
org.jfree.chart.util.RelativeDateFormat.format : $r14 = virtualinvoke r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String getHourSuffix()>()
org.jfree.chart.util.RelativeDateFormat.format : $l12 = <org.jfree.chart.util.RelativeDateFormat: long MILLISECONDS_IN_ONE_HOUR>
org.jfree.chart.util.RelativeDateFormat.format : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4)
org.jfree.chart.util.RelativeDateFormat.format : $r9 = virtualinvoke r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String getDaySuffix()>()
org.jfree.chart.util.RelativeDateFormat.format : l5 = l14 / 60000L
org.jfree.chart.util.RelativeDateFormat.format : $r11 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat hourFormatter>
org.jfree.chart.util.RelativeDateFormat.format : $b17 = l2 cmp 0L
org.jfree.chart.util.RelativeDateFormat.format : $l11 = <org.jfree.chart.util.RelativeDateFormat: long MILLISECONDS_IN_ONE_HOUR>
org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getLastMillisecond : $l0 = r0.<org.jfree.data.time.Week: long lastMillisecond>
org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.chart.util.RelativeDateFormat.clone : $r2 = specialinvoke r0.<java.text.DateFormat: java.lang.Object clone()>()
org.jfree.chart.util.RelativeDateFormat.clone : $r3 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat dayFormatter>
org.jfree.chart.util.RelativeDateFormat.clone : return r1
org.jfree.chart.util.RelativeDateFormat.clone : $r6 = r0.<org.jfree.chart.util.RelativeDateFormat: java.text.NumberFormat secondFormatter>
org.jfree.chart.axis.ValueAxis.setAutoRange : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.setAutoRange : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setAutoRange(boolean,boolean)>(z0, 1)
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $i11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : return r10
org.jfree.chart.axis.DateAxis.previousStandardDate : $l55 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.DateAxis.previousStandardDate : i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCount()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(i54, i2, 1, 0, 0, 0)
org.jfree.chart.axis.DateAxis.previousStandardDate : $r30 = new org.jfree.data.time.Month
org.jfree.chart.axis.DateAxis.previousStandardDate : $i13 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
org.jfree.chart.axis.DateAxis.previousStandardDate : l10 = virtualinvoke r10.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $i12 = i1 / i0
org.jfree.chart.axis.DateAxis.previousStandardDate : $r12 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.previousStandardDate : i54 = virtualinvoke r3.<java.util.Calendar: int get(int)>(1)
org.jfree.chart.axis.DateAxis.previousStandardDate : $r34 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition>
org.jfree.chart.axis.SegmentedTimeline.access$200 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded>
org.jfree.data.time.Quarter.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Quarter.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.axis.DateAxis.setRange : $z2 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.DateAxis.setRange : specialinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, z0, z1)
org.jfree.chart.axis.SegmentedTimeline.access$300 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount>
org.jfree.chart.axis.DateAxis.setTickUnit : if z0 == 0 goto return
org.jfree.chart.axis.DateAxis.setTickUnit : r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit> = r1
org.jfree.chart.axis.DateAxis.setTickUnit : if z1 == 0 goto (branch)
org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont>
org.jfree.chart.axis.DateAxis.nextStandardDate : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)>(r1, r2)
org.jfree.chart.axis.DateAxis.nextStandardDate : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : $r5 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.nextStandardDate : $r7 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : virtualinvoke r4.<java.util.Calendar: void setTime(java.util.Date)>(r3)
org.jfree.chart.axis.SegmentedTimeline.access$400 : $i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>()
org.jfree.chart.axis.SegmentedTimeline.getSegmentsGroupSize : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.time.Week.getYear : $r1 = new org.jfree.data.time.Year
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0 goto return
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : if r1 != null goto $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.data.time.RegularTimePeriod.downsize : $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Quarter")
org.jfree.data.time.RegularTimePeriod.downsize : $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Year")
org.jfree.data.time.RegularTimePeriod.downsize : return class "org/jfree/data/time/Day"
org.jfree.data.time.RegularTimePeriod.downsize : $z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "org/jfree/data/time/Month")
org.jfree.chart.renderer.AbstractRenderer.getSeriesPositiveItemLabelPosition : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.getSeriesPositiveItemLabelPosition : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesPositiveItemLabelPosition : if r1 != null goto return r1
org.jfree.chart.renderer.AbstractRenderer.getSeriesPositiveItemLabelPosition : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesPositiveItemLabelPosition : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPosition>
org.jfree.chart.renderer.AbstractRenderer.getSeriesPositiveItemLabelPosition : return r1
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Month: long firstMillisecond>
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 goto $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 goto return
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $i2 = neg i0
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 goto $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.DateRange.getLowerDate : $r1 = new java.util.Date
org.jfree.data.time.Month.previous : $i0 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.previous : $i4 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.previous : r1 = null
org.jfree.data.time.Month.previous : return r1
org.jfree.chart.axis.DateTickUnit.getCount : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.data.time.Week.compareTo : goto [?= return i0]
org.jfree.data.time.Week.compareTo : if i0 != 0 goto (branch)
org.jfree.data.time.Week.compareTo : return i0
org.jfree.data.time.Week.compareTo : r2 = (org.jfree.data.time.Week) r1
org.jfree.data.time.Week.compareTo : $b3 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.compareTo : $z0 = r1 instanceof org.jfree.data.time.Week
org.jfree.data.time.Week.compareTo : $s1 = r0.<org.jfree.data.time.Week: short year>
org.jfree.chart.axis.Axis.fireChangeEvent : $r1 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.DateTickUnit.equals : $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateTickUnit.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateTickUnit.equals : return 0
org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.chart.axis.SegmentedTimeline.getSegment : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment
org.jfree.chart.axis.DateTickUnit.notNull : if r0 != null goto return r0
org.jfree.chart.axis.DateTickUnit.notNull : return r0
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter>
org.jfree.chart.renderer.AbstractRenderer.getPositiveItemLabelPosition : $r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition getSeriesPositiveItemLabelPosition(int)>(i0)
org.jfree.data.time.TimeTableXYDataset.equals : r2 = (org.jfree.data.time.TimeTableXYDataset) r1
org.jfree.data.time.TimeTableXYDataset.equals : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>
org.jfree.data.time.TimeTableXYDataset.equals : $r9 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.equals : $z1 = r0.<org.jfree.data.time.TimeTableXYDataset: boolean domainIsPointsInTime>
org.jfree.data.time.TimeTableXYDataset.equals : $r5 = r0.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>
org.jfree.data.time.TimeTableXYDataset.equals : $z0 = r1 instanceof org.jfree.data.time.TimeTableXYDataset
org.jfree.data.time.TimeTableXYDataset.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.data.time.TimeTableXYDataset
org.jfree.data.time.TimeTableXYDataset.equals : return 1
org.jfree.data.time.TimeTableXYDataset.equals : $r8 = virtualinvoke $r7.<java.util.Calendar: java.util.TimeZone getTimeZone()>()
org.jfree.chart.axis.DateTickUnit.intToUnitType : tableswitch(i0) {     case 0: goto $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>;     case 1: goto $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>;     case 2: goto $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>;     case 3: goto $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>;     case 4: goto $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>;     case 5: goto $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>;     case 6: goto $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>;     default: goto $r8 = new java.lang.IllegalArgumentException; }
org.jfree.chart.axis.DateTickUnit.intToUnitType : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.chart.axis.Axis.setMinorTickMarksVisible : virtualinvoke r0.<org.jfree.chart.axis.Axis: void fireChangeEvent()>()
org.jfree.chart.axis.Axis.setMinorTickMarksVisible : $z1 = r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible>
org.jfree.chart.axis.Axis.setMinorTickMarksVisible : r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible> = z0
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.chart.util.RelativeDateFormat.getDaySuffix : $r1 = r0.<org.jfree.chart.util.RelativeDateFormat: java.lang.String daySuffix>
