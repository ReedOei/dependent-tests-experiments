org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.time.TimeTableXYDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: int getItemCount()>()
org.jfree.data.time.TimeTableXYDataset.getItemCount : $r1 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.getXValue : $r4 = interfaceinvoke r1.<org.jfree.data.time.TimePeriod: java.util.Date getStart()>()
org.jfree.data.time.TimeTableXYDataset.getXValue : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>
org.jfree.data.time.TimeTableXYDataset.getXValue : l0 = 0L
org.jfree.data.time.TimeTableXYDataset.getXValue : $r2 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.TimeTableXYDataset.getXValue : $l2 = specialinvoke r0.<org.jfree.data.time.TimeTableXYDataset: long getXValue(org.jfree.data.time.TimePeriod)>(r1)
org.jfree.data.time.TimeTableXYDataset.getXValue : return l0
org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : d0 = #NaN
org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : return d0
org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : if r1 == null goto return d0
org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound : r1 = virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>(z0)
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r6 = virtualinvoke r3.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i1)
org.jfree.data.DefaultKeyedValues2D.removeValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = i1 + 1
org.jfree.data.DefaultKeyedValues2D.removeValue : if z1 == 0 goto return
org.jfree.data.DefaultKeyedValues2D.removeValue : $r20 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.removeValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.removeValue : i6 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : i1 = 0
org.jfree.data.DefaultKeyedValues2D.removeValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(null, r1, r2)
org.jfree.data.DefaultKeyedValues2D.removeValue : z0 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.removeValue : z1 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : if z0 == 0 goto z1 = 1
org.jfree.data.DefaultKeyedValues2D.removeValue : i4 = 0
org.jfree.data.time.Week.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Week: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Week: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Week.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getFirstMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getFirstMillisecond : $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getFirstMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getFirstMillisecond : $i2 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.data.time.TimeTableXYDataset.add : if z0 == 0 goto return
org.jfree.data.time.TimeTableXYDataset.add : $z1 = r1 instanceof org.jfree.data.time.RegularTimePeriod
org.jfree.data.time.TimeTableXYDataset.add : $r5 = r0.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>
org.jfree.data.time.TimeTableXYDataset.add : virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: void fireDatasetChanged()>()
org.jfree.data.time.TimeTableXYDataset.add : r4 = (org.jfree.data.time.RegularTimePeriod) r1
org.jfree.data.time.TimeTableXYDataset.add : $r3 = new java.lang.Double
org.jfree.data.time.TimeTableXYDataset.add : $r6 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.DefaultKeyedValues2D.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(r1, r2, r3)
org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null goto $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Week.getWeek : $b0 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.TimeTableXYDataset.remove : if z0 == 0 goto return
org.jfree.data.time.TimeTableXYDataset.remove : $r3 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.DefaultKeyedValues.getItemCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues2D.getRowCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.time.TimeTableXYDataset.getSeriesCount : $r1 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.time.RegularTimePeriod.getStart : $r1 = new java.util.Date
org.jfree.data.time.TimeTableXYDataset.getStartY : $r1 = virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: java.lang.Number getY(int,int)>(i0, i1)
org.jfree.data.time.TimeTableXYDataset.getDomainBounds : return null
org.jfree.data.time.TimeTableXYDataset.getDomainBounds : $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.jfree.data.time.TimeTableXYDataset.getDomainBounds : $r4 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d10)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r13 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r14 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d11 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getEndYValue(int,int)>(i6, i8)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d10 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(i6, i8)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i6 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r16)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 goto r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i7 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i6)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i8 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d9 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getXValue(int,int)>(i6, i8)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z12 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d10)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r20 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()", "org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds")]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 goto (branch)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z11 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d9)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues2D.getRowKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.time.Week.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void clear()>()
org.jfree.data.time.Week.getLastMillisecond : $b1 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.getLastMillisecond : $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0)
org.jfree.data.time.Week.getLastMillisecond : $l4 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Week.getLastMillisecond : virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
org.jfree.data.time.Week.getLastMillisecond : $i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>()
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null goto return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.data.gantt.Task.equals : r2 = (org.jfree.data.gantt.Task) r1
org.jfree.data.gantt.Task.equals : $r7 = r0.<org.jfree.data.gantt.Task: java.lang.Double percentComplete>
org.jfree.data.gantt.Task.equals : $r3 = r0.<org.jfree.data.gantt.Task: java.lang.String description>
org.jfree.data.gantt.Task.equals : $z0 = r1 instanceof org.jfree.data.gantt.Task
org.jfree.data.gantt.Task.equals : $r9 = r0.<org.jfree.data.gantt.Task: java.util.List subtasks>
org.jfree.data.gantt.Task.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.data.gantt.Task
org.jfree.data.gantt.Task.equals : return 1
org.jfree.data.gantt.Task.equals : $r5 = r0.<org.jfree.data.gantt.Task: org.jfree.data.time.TimePeriod duration>
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>()
org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : return i1
org.jfree.data.DefaultKeyedValues2D.getRowKeys : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue : d0 = #NaN
org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getEndY(int,int)>(i0, i1)
org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue : return d0
org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue : if r1 == null goto return d0
org.jfree.data.time.TimeTableXYDataset.getSeriesKey : $r1 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.data.time.Week.getYear : $r1 = new org.jfree.data.time.Year
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $r2 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.getRowIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.time.TimeTableXYDataset.getEndY : $r1 = virtualinvoke r0.<org.jfree.data.time.TimeTableXYDataset: java.lang.Number getY(int,int)>(i0, i1)
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Month: long firstMillisecond>
org.jfree.data.DefaultKeyedValues2D.setValue : if i0 < 0 goto $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r13 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : if i1 >= 0 goto return
org.jfree.data.DefaultKeyedValues2D.setValue : $z0 = r0.<org.jfree.data.DefaultKeyedValues2D: boolean sortRowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r7 = new org.jfree.data.DefaultKeyedValues
org.jfree.data.DefaultKeyedValues2D.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rowKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.setValue : $i2 = neg i0
org.jfree.data.DefaultKeyedValues2D.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues2D: int getRowIndex(java.lang.Comparable)>(r2)
org.jfree.data.DefaultKeyedValues2D.setValue : $r12 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.setValue : virtualinvoke r4.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r3, r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 goto $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r4
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : r4 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r0, r1, r2, z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.XYRangeInfo
org.jfree.data.time.TimeTableXYDataset.getDomainIsPointsInTime : $z0 = r0.<org.jfree.data.time.TimeTableXYDataset: boolean domainIsPointsInTime>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.data.time.Week.compareTo : goto [?= return i0]
org.jfree.data.time.Week.compareTo : if i0 != 0 goto (branch)
org.jfree.data.time.Week.compareTo : return i0
org.jfree.data.time.Week.compareTo : r2 = (org.jfree.data.time.Week) r1
org.jfree.data.time.Week.compareTo : $b3 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.compareTo : $z0 = r1 instanceof org.jfree.data.time.Week
org.jfree.data.time.Week.compareTo : $s1 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Year.getYear : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Week.equals : $b0 = r0.<org.jfree.data.time.Week: byte week>
org.jfree.data.time.Week.equals : r2 = (org.jfree.data.time.Week) r1
org.jfree.data.time.Week.equals : if r1 != r0 goto $z0 = r1 instanceof org.jfree.data.time.Week
org.jfree.data.time.Week.equals : return 1
org.jfree.data.time.Week.equals : $s2 = r0.<org.jfree.data.time.Week: short year>
org.jfree.data.time.Week.equals : $z0 = r1 instanceof org.jfree.data.time.Week
org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue : d0 = #NaN
org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getStartY(int,int)>(i0, i1)
org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue : return d0
org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue : if r1 == null goto return d0
org.jfree.data.time.TimeTableXYDataset.getY : $r1 = r0.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>
org.jfree.chart.renderer.xy.CandlestickRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.CandlestickRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 1)
org.jfree.data.DefaultKeyedValues2D.getColumnKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null goto return
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.data.DefaultKeyedValues2D.getValue : $r4 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List rows>
org.jfree.data.DefaultKeyedValues2D.getValue : $r6 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.data.DefaultKeyedValues2D.getValue : if r2 == null goto return r1
org.jfree.data.DefaultKeyedValues2D.getValue : if i2 < 0 goto return r1
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i2)
org.jfree.data.DefaultKeyedValues2D.getValue : i2 = virtualinvoke r2.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r3)
org.jfree.data.DefaultKeyedValues2D.getValue : r1 = null
org.jfree.data.DefaultKeyedValues2D.getValue : return r1
org.jfree.data.DefaultKeyedValues2D.getColumnCount : $r1 = r0.<org.jfree.data.DefaultKeyedValues2D: java.util.List columnKeys>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r3 == null goto (branch)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r5 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r7 != null goto $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r1 != null goto $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r6 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r9 = new org.jfree.data.Range
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : return r2
org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : $z0 = r1 instanceof org.jfree.data.xy.OHLCDataset
org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip : r2 = null
