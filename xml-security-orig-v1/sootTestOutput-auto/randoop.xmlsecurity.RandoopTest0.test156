org.apache.xml.security.utils.Base64.encodeFullBlock : i1 = 0
org.apache.xml.security.utils.Base64.encodeFullBlock : $i6 = i0 + i2
org.apache.xml.security.utils.Base64.encodeFullBlock : i4 = i20 & 63
org.apache.xml.security.utils.Base64.encodeFullBlock : i2 = 0
org.apache.xml.security.utils.Base64.encodeFullBlock : $b9 = r0[i0]
org.apache.xml.security.utils.Base64.encodeFullBlock : i3 = 3
org.apache.xml.security.utils.Base64.encodeFullBlock : return r1
org.apache.xml.security.utils.Base64.encodeFullBlock : i5 = i1 << 8
org.apache.xml.security.utils.Base64.encodeFullBlock : r1 = newarray (char)[4]
org.apache.xml.security.utils.Base64.encodeFullBlock : i20 = i20 >> 6
org.apache.xml.security.utils.Base64.encodeFullBlock : $c21 = staticinvoke <org.apache.xml.security.utils.Base64: char getChar(int)>(i4)
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : $r4 = new java.security.SecureRandom
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : $r5 = new java.lang.StringBuilder
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : r1 = newarray (byte)[21]
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : $c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i0)
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : virtualinvoke r2.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : i0 = 0
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : $r14 = <org.apache.xml.security.utils.XMLUtils: java.lang.String randomNS>
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : $r9 = new java.lang.StringBuilder
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : <org.apache.xml.security.utils.XMLUtils: java.lang.String randomNS> = ""
org.apache.xml.security.utils.XMLUtils.getRandomNamespacePrefix : $r0 = <org.apache.xml.security.utils.XMLUtils: java.lang.String randomNS>
org.apache.xml.security.utils.Base64.encode : $i12 = lengthof r0
org.apache.xml.security.utils.Base64.encode : if i3 < i9 goto $i15 = lengthof r0
org.apache.xml.security.utils.Base64.encode : $r4 = staticinvoke <org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>(r0, i4)
org.apache.xml.security.utils.Base64.encode : $r9 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.xml.security.utils.Base64.encode : i3 = 0
org.apache.xml.security.utils.Base64.encode : i9 = 2147483647
org.apache.xml.security.utils.Base64.encode : $i0 = staticinvoke <org.apache.xml.security.utils.Base64: int getBase64WrapLength()>()
org.apache.xml.security.utils.Base64.encode : $i14 = i3 + 4
org.apache.xml.security.utils.Base64.encode : if i0 <= 3 goto i9 = 2147483647
org.apache.xml.security.utils.Base64.encode : $i15 = lengthof r0
org.apache.xml.security.utils.Base64.encode : $r2 = new java.lang.StringBuffer
org.apache.xml.security.utils.Base64.encode : $i5 = lengthof r0
org.apache.xml.security.utils.Base64.encode : i4 = 0
org.apache.xml.security.utils.Base64.getChar : $i1 = 65 + i0
org.apache.xml.security.utils.Base64.getChar : if i0 != 62 goto (branch)
org.apache.xml.security.utils.Base64.getChar : if i0 != 63 goto return 63
org.apache.xml.security.utils.Base64.getChar : if i0 < 52 goto (branch)
org.apache.xml.security.utils.Base64.getChar : return 43
org.apache.xml.security.utils.Base64.getChar : $i6 = i0 - 52
org.apache.xml.security.utils.Base64.getChar : return 47
org.apache.xml.security.utils.Base64.getChar : $i3 = i0 - 26
org.apache.xml.security.utils.Base64.getChar : if i0 < 0 goto (branch)
org.apache.xml.security.utils.Base64.getChar : if i0 < 26 goto (branch)
org.apache.xml.security.utils.Base64.getBase64WrapLength : $i0 = <org.apache.xml.security.utils.Base64: int _base64length>
