ant.HexDump.main : $r1 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("-test and demo of the converter ")
ant.HexDump.main : virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("-test and demo of the converter ") >>>>>>>> ant.HexDump.main : staticinvoke <ant.HexDump: void setDebug(boolean)>(0)
ant.HexDump.main : staticinvoke <ant.HexDump: void setDebug(boolean)>(0) >>>>>>>> ant.HexDump.main : $r11 = new java.lang.String
ant.HexDump.main : $r11 = new java.lang.String >>>>>>>> ant.HexDump.main : specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>("Niko")
ant.HexDump.main : specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>("Niko") >>>>>>>> ant.HexDump.main : r2 = $r11
ant.HexDump.main : r2 = $r11 >>>>>>>> ant.HexDump.main : r3 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>()
ant.HexDump.main : r3 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>() >>>>>>>> ant.HexDump.main : $r12 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r12 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r13 = new java.lang.StringBuilder
ant.HexDump.main : $r13 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ")
ant.HexDump.main : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ") >>>>>>>> ant.HexDump.main : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
ant.HexDump.main : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> ant.HexDump.main : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16)
ant.HexDump.main : virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16) >>>>>>>> ant.HexDump.main : $r17 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r17 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r18 = new java.lang.StringBuilder
ant.HexDump.main : $r18 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("converted1: ")
ant.HexDump.main : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("converted1: ") >>>>>>>> ant.HexDump.main : $r20 = staticinvoke <ant.HexDump: java.lang.String byteArrayToHexString(byte[])>(r3)
ant.HexDump.main : $r20 = staticinvoke <ant.HexDump: java.lang.String byteArrayToHexString(byte[])>(r3) >>>>>>>> ant.HexDump.main : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
ant.HexDump.main : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> ant.HexDump.main : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22)
ant.HexDump.main : virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22) >>>>>>>> ant.HexDump.main : $r23 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r23 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r24 = new java.lang.StringBuilder
ant.HexDump.main : $r24 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("converted1: ")
ant.HexDump.main : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("converted1: ") >>>>>>>> ant.HexDump.main : $i2 = lengthof r3
ant.HexDump.main : $i2 = lengthof r3 >>>>>>>> ant.HexDump.main : $r26 = staticinvoke <ant.HexDump: java.lang.String byteArrayToHexString(byte[],int,int)>(r3, 0, $i2)
ant.HexDump.main : $r26 = staticinvoke <ant.HexDump: java.lang.String byteArrayToHexString(byte[],int,int)>(r3, 0, $i2) >>>>>>>> ant.HexDump.main : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
ant.HexDump.main : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> ant.HexDump.main : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28)
ant.HexDump.main : virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28) >>>>>>>> ant.HexDump.main : $r29 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r29 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r30 = new java.lang.StringBuilder
ant.HexDump.main : $r30 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("converted3: ")
ant.HexDump.main : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("converted3: ") >>>>>>>> ant.HexDump.main : $r32 = staticinvoke <ant.HexDump: java.lang.String stringToHexString(java.lang.String)>(r2)
ant.HexDump.main : $r32 = staticinvoke <ant.HexDump: java.lang.String stringToHexString(java.lang.String)>(r2) >>>>>>>> ant.HexDump.main : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
ant.HexDump.main : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> ant.HexDump.main : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r34)
ant.HexDump.main : virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r34) >>>>>>>> ant.HexDump.main : $r35 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r35 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("----Convert integer to hexString...")
ant.HexDump.main : virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("----Convert integer to hexString...") >>>>>>>> ant.HexDump.main : b0 = -2
ant.HexDump.main : b0 = -2 >>>>>>>> ant.HexDump.main : $r36 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r36 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r37 = new java.lang.StringBuilder
ant.HexDump.main : $r37 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ")
ant.HexDump.main : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ") >>>>>>>> ant.HexDump.main : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
ant.HexDump.main : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> ant.HexDump.main : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ")
ant.HexDump.main : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") >>>>>>>> ant.HexDump.main : $r41 = staticinvoke <ant.HexDump: java.lang.String intToHexString(int)>(b0)
ant.HexDump.main : $r41 = staticinvoke <ant.HexDump: java.lang.String intToHexString(int)>(b0) >>>>>>>> ant.HexDump.main : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
ant.HexDump.main : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> ant.HexDump.main : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r43)
ant.HexDump.main : virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r43) >>>>>>>> ant.HexDump.main : $r44 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r44 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("----Convert byte[] to binary String...")
ant.HexDump.main : virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("----Convert byte[] to binary String...") >>>>>>>> ant.HexDump.main : $r45 = newarray (byte)[10]
ant.HexDump.main : $r45 = newarray (byte)[10] >>>>>>>> ant.HexDump.main : $r45[0] = -1
ant.HexDump.main : $r45[0] = -1 >>>>>>>> ant.HexDump.main : $r45[1] = 0
ant.HexDump.main : $r45[1] = 0 >>>>>>>> ant.HexDump.main : $r45[2] = 51
ant.HexDump.main : $r45[2] = 51 >>>>>>>> ant.HexDump.main : $r45[3] = 17
ant.HexDump.main : $r45[3] = 17 >>>>>>>> ant.HexDump.main : $r45[4] = -1
ant.HexDump.main : $r45[4] = -1 >>>>>>>> ant.HexDump.main : $r45[5] = 95
ant.HexDump.main : $r45[5] = 95 >>>>>>>> ant.HexDump.main : $r45[6] = 95
ant.HexDump.main : $r45[6] = 95 >>>>>>>> ant.HexDump.main : $r45[7] = 79
ant.HexDump.main : $r45[7] = 79 >>>>>>>> ant.HexDump.main : $r45[8] = 31
ant.HexDump.main : $r45[8] = 31 >>>>>>>> ant.HexDump.main : $r45[9] = -1
ant.HexDump.main : $r45[9] = -1 >>>>>>>> ant.HexDump.main : r4 = $r45
ant.HexDump.main : r4 = $r45 >>>>>>>> ant.HexDump.main : $r46 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r46 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r47 = new java.lang.StringBuilder
ant.HexDump.main : $r47 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ")
ant.HexDump.main : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ") >>>>>>>> ant.HexDump.main : $r49 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r4)
ant.HexDump.main : $r49 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r4) >>>>>>>> ant.HexDump.main : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49)
ant.HexDump.main : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49) >>>>>>>> ant.HexDump.main : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ")
ant.HexDump.main : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") >>>>>>>> ant.HexDump.main : $r52 = staticinvoke <ant.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r4)
ant.HexDump.main : $r52 = staticinvoke <ant.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r4) >>>>>>>> ant.HexDump.main : $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)
ant.HexDump.main : $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52) >>>>>>>> ant.HexDump.main : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r54)
ant.HexDump.main : virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r54) >>>>>>>> ant.HexDump.main : staticinvoke <ant.HexDump: void setByteSeparator(char)>(45)
ant.HexDump.main : staticinvoke <ant.HexDump: void setByteSeparator(char)>(45) >>>>>>>> ant.HexDump.main : $r55 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r55 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r56 = new java.lang.StringBuilder
ant.HexDump.main : $r56 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r56.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r56.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ")
ant.HexDump.main : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ") >>>>>>>> ant.HexDump.main : $r58 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r4)
ant.HexDump.main : $r58 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r4) >>>>>>>> ant.HexDump.main : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58)
ant.HexDump.main : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58) >>>>>>>> ant.HexDump.main : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ")
ant.HexDump.main : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") >>>>>>>> ant.HexDump.main : $r61 = staticinvoke <ant.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r4)
ant.HexDump.main : $r61 = staticinvoke <ant.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r4) >>>>>>>> ant.HexDump.main : $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61)
ant.HexDump.main : $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61) >>>>>>>> ant.HexDump.main : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r63)
ant.HexDump.main : virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r63) >>>>>>>> ant.HexDump.main : staticinvoke <ant.HexDump: void setByteSeparator(char)>(42)
ant.HexDump.main : staticinvoke <ant.HexDump: void setByteSeparator(char)>(42) >>>>>>>> ant.HexDump.main : staticinvoke <ant.HexDump: void setWithByteSeparator(boolean)>(1)
ant.HexDump.main : staticinvoke <ant.HexDump: void setWithByteSeparator(boolean)>(1) >>>>>>>> ant.HexDump.main : $r64 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r64 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r65 = new java.lang.StringBuilder
ant.HexDump.main : $r65 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r65.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r65.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ")
ant.HexDump.main : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ") >>>>>>>> ant.HexDump.main : $r67 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r4)
ant.HexDump.main : $r67 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r4) >>>>>>>> ant.HexDump.main : $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67)
ant.HexDump.main : $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67) >>>>>>>> ant.HexDump.main : $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ")
ant.HexDump.main : $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") >>>>>>>> ant.HexDump.main : $r70 = staticinvoke <ant.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r4)
ant.HexDump.main : $r70 = staticinvoke <ant.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r4) >>>>>>>> ant.HexDump.main : $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70)
ant.HexDump.main : $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70) >>>>>>>> ant.HexDump.main : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>($r72)
ant.HexDump.main : virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>($r72) >>>>>>>> ant.HexDump.main : $r73 = newarray (char)[2]
ant.HexDump.main : $r73 = newarray (char)[2] >>>>>>>> ant.HexDump.main : $r73[0] = 97
ant.HexDump.main : $r73[0] = 97 >>>>>>>> ant.HexDump.main : $r73[1] = 98
ant.HexDump.main : $r73[1] = 98 >>>>>>>> ant.HexDump.main : r5 = $r73
ant.HexDump.main : r5 = $r73 >>>>>>>> ant.HexDump.main : staticinvoke <ant.HexDump: void setBitDigits(char[])>(r5)
ant.HexDump.main : r5 = $r73 >>>>>>>> ant.HexDump.main : $r74 := @caughtexception
ant.HexDump.main : r6 = $r74 >>>>>>>> ant.HexDump.main : virtualinvoke r6.<java.lang.Exception: void printStackTrace()>()
ant.HexDump.main : virtualinvoke r6.<java.lang.Exception: void printStackTrace()>() >>>>>>>> ant.HexDump.main : $r75 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r75 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r76 = new java.lang.StringBuilder
ant.HexDump.main : $r76 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r76.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r76.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ")
ant.HexDump.main : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert: ") >>>>>>>> ant.HexDump.main : $r78 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r4)
ant.HexDump.main : $r78 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r4) >>>>>>>> ant.HexDump.main : $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78)
ant.HexDump.main : $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78) >>>>>>>> ant.HexDump.main : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ")
ant.HexDump.main : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") >>>>>>>> ant.HexDump.main : $r81 = staticinvoke <ant.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r4)
ant.HexDump.main : $r81 = staticinvoke <ant.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r4) >>>>>>>> ant.HexDump.main : $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)
ant.HexDump.main : $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81) >>>>>>>> ant.HexDump.main : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r83)
ant.HexDump.main : virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r83) >>>>>>>> ant.HexDump.main : staticinvoke <ant.HexDump: void setBitDigits(char,char)>(48, 49)
ant.HexDump.main : staticinvoke <ant.HexDump: void setBitDigits(char,char)>(48, 49) >>>>>>>> ant.HexDump.main : $r84 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r84 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>("---- Convert.toByteArray(int) ")
ant.HexDump.main : virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>("---- Convert.toByteArray(int) ") >>>>>>>> ant.HexDump.main : i3 = -10
ant.HexDump.main : i3 = -10 >>>>>>>> ant.HexDump.main : if i3 >= 10
ant.HexDump.main : if i3 >= 10 >>>>>>>> ant.HexDump.main : $r85 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : if i3 >= 10 >>>>>>>> ant.HexDump.main : $r100 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r100 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r100.<java.io.PrintStream: void println(java.lang.String)>("---- toHexString(int) ")
ant.HexDump.main : virtualinvoke $r100.<java.io.PrintStream: void println(java.lang.String)>("---- toHexString(int) ") >>>>>>>> ant.HexDump.main : b4 = -1
ant.HexDump.main : b4 = -1 >>>>>>>> ant.HexDump.main : $r101 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r101 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r102 = new java.lang.StringBuilder
ant.HexDump.main : $r102 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r102.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r102.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b4)
ant.HexDump.main : $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b4) >>>>>>>> ant.HexDump.main : $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x")
ant.HexDump.main : $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x") >>>>>>>> ant.HexDump.main : $r105 = staticinvoke <ant.HexDump: java.lang.String toHexString(int)>(b4)
ant.HexDump.main : $r105 = staticinvoke <ant.HexDump: java.lang.String toHexString(int)>(b4) >>>>>>>> ant.HexDump.main : $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105)
ant.HexDump.main : $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105) >>>>>>>> ant.HexDump.main : $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ")
ant.HexDump.main : $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") >>>>>>>> ant.HexDump.main : $r108 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(int)>(b4)
ant.HexDump.main : $r108 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(int)>(b4) >>>>>>>> ant.HexDump.main : $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108)
ant.HexDump.main : $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108) >>>>>>>> ant.HexDump.main : $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r110)
ant.HexDump.main : virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r110) >>>>>>>> ant.HexDump.main : i5 = b4 + 1
ant.HexDump.main : i5 = b4 + 1 >>>>>>>> ant.HexDump.main : $r111 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r111 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r112 = new java.lang.StringBuilder
ant.HexDump.main : $r112 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r112.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r112.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)
ant.HexDump.main : $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5) >>>>>>>> ant.HexDump.main : $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x")
ant.HexDump.main : $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x") >>>>>>>> ant.HexDump.main : $r115 = staticinvoke <ant.HexDump: java.lang.String toHexString(int)>(i5)
ant.HexDump.main : $r115 = staticinvoke <ant.HexDump: java.lang.String toHexString(int)>(i5) >>>>>>>> ant.HexDump.main : $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115)
ant.HexDump.main : $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115) >>>>>>>> ant.HexDump.main : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ")
ant.HexDump.main : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") >>>>>>>> ant.HexDump.main : $r118 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(int)>(i5)
ant.HexDump.main : $r118 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(int)>(i5) >>>>>>>> ant.HexDump.main : $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118)
ant.HexDump.main : $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118) >>>>>>>> ant.HexDump.main : $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r111.<java.io.PrintStream: void println(java.lang.String)>($r120)
ant.HexDump.main : virtualinvoke $r111.<java.io.PrintStream: void println(java.lang.String)>($r120) >>>>>>>> ant.HexDump.main : $r121 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r121 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r121.<java.io.PrintStream: void println(java.lang.String)>("---- toHexString(long) ")
ant.HexDump.main : virtualinvoke $r121.<java.io.PrintStream: void println(java.lang.String)>("---- toHexString(long) ") >>>>>>>> ant.HexDump.main : l6 = 100L
ant.HexDump.main : l6 = 100L >>>>>>>> ant.HexDump.main : $r122 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r122 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r123 = new java.lang.StringBuilder
ant.HexDump.main : $r123 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r123.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r123.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6)
ant.HexDump.main : $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6) >>>>>>>> ant.HexDump.main : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x")
ant.HexDump.main : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x") >>>>>>>> ant.HexDump.main : $r126 = staticinvoke <ant.HexDump: java.lang.String toHexString(long)>(l6)
ant.HexDump.main : $r126 = staticinvoke <ant.HexDump: java.lang.String toHexString(long)>(l6) >>>>>>>> ant.HexDump.main : $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126)
ant.HexDump.main : $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126) >>>>>>>> ant.HexDump.main : $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ")
ant.HexDump.main : $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") >>>>>>>> ant.HexDump.main : $r129 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(long)>(l6)
ant.HexDump.main : $r129 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(long)>(l6) >>>>>>>> ant.HexDump.main : $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129)
ant.HexDump.main : $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129) >>>>>>>> ant.HexDump.main : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r122.<java.io.PrintStream: void println(java.lang.String)>($r131)
ant.HexDump.main : virtualinvoke $r122.<java.io.PrintStream: void println(java.lang.String)>($r131) >>>>>>>> ant.HexDump.main : $r132 = new java.util.Random
ant.HexDump.main : $r132 = new java.util.Random >>>>>>>> ant.HexDump.main : specialinvoke $r132.<java.util.Random: void <init>()>()
ant.HexDump.main : specialinvoke $r132.<java.util.Random: void <init>()>() >>>>>>>> ant.HexDump.main : r8 = $r132
ant.HexDump.main : r8 = $r132 >>>>>>>> ant.HexDump.main : l7 = virtualinvoke r8.<java.util.Random: long nextLong()>()
ant.HexDump.main : l7 = virtualinvoke r8.<java.util.Random: long nextLong()>() >>>>>>>> ant.HexDump.main : $r133 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r133 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r134 = new java.lang.StringBuilder
ant.HexDump.main : $r134 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r134.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r134.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7)
ant.HexDump.main : $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7) >>>>>>>> ant.HexDump.main : $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x")
ant.HexDump.main : $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x") >>>>>>>> ant.HexDump.main : $r137 = staticinvoke <ant.HexDump: java.lang.String toHexString(long)>(l7)
ant.HexDump.main : $r137 = staticinvoke <ant.HexDump: java.lang.String toHexString(long)>(l7) >>>>>>>> ant.HexDump.main : $r138 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r137)
ant.HexDump.main : $r138 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r137) >>>>>>>> ant.HexDump.main : $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ")
ant.HexDump.main : $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") >>>>>>>> ant.HexDump.main : $r140 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(long)>(l7)
ant.HexDump.main : $r140 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(long)>(l7) >>>>>>>> ant.HexDump.main : $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140)
ant.HexDump.main : $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140) >>>>>>>> ant.HexDump.main : $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r133.<java.io.PrintStream: void println(java.lang.String)>($r142)
ant.HexDump.main : virtualinvoke $r133.<java.io.PrintStream: void println(java.lang.String)>($r142) >>>>>>>> ant.HexDump.main : $r143 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r143 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r143.<java.io.PrintStream: void println(java.lang.String)>("---- toHexString(short) ")
ant.HexDump.main : virtualinvoke $r143.<java.io.PrintStream: void println(java.lang.String)>("---- toHexString(short) ") >>>>>>>> ant.HexDump.main : b1 = 100
ant.HexDump.main : b1 = 100 >>>>>>>> ant.HexDump.main : $r144 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r144 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r145 = new java.lang.StringBuilder
ant.HexDump.main : $r145 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r145.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r145.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1)
ant.HexDump.main : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1) >>>>>>>> ant.HexDump.main : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x")
ant.HexDump.main : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x") >>>>>>>> ant.HexDump.main : $r148 = staticinvoke <ant.HexDump: java.lang.String toHexString(short)>(b1)
ant.HexDump.main : $r148 = staticinvoke <ant.HexDump: java.lang.String toHexString(short)>(b1) >>>>>>>> ant.HexDump.main : $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148)
ant.HexDump.main : $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148) >>>>>>>> ant.HexDump.main : $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ")
ant.HexDump.main : $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") >>>>>>>> ant.HexDump.main : $r151 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(short)>(b1)
ant.HexDump.main : $r151 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(short)>(b1) >>>>>>>> ant.HexDump.main : $r152 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r151)
ant.HexDump.main : $r152 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r151) >>>>>>>> ant.HexDump.main : $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r144.<java.io.PrintStream: void println(java.lang.String)>($r153)
ant.HexDump.main : virtualinvoke $r144.<java.io.PrintStream: void println(java.lang.String)>($r153) >>>>>>>> ant.HexDump.main : $r154 = new java.util.Random
ant.HexDump.main : $r154 = new java.util.Random >>>>>>>> ant.HexDump.main : specialinvoke $r154.<java.util.Random: void <init>()>()
ant.HexDump.main : specialinvoke $r154.<java.util.Random: void <init>()>() >>>>>>>> ant.HexDump.main : r155 = $r154
ant.HexDump.main : r155 = $r154 >>>>>>>> ant.HexDump.main : $i8 = virtualinvoke r155.<java.util.Random: int nextInt()>()
ant.HexDump.main : $i8 = virtualinvoke r155.<java.util.Random: int nextInt()>() >>>>>>>> ant.HexDump.main : s9 = (short) $i8
ant.HexDump.main : s9 = (short) $i8 >>>>>>>> ant.HexDump.main : $r156 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r156 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r157 = new java.lang.StringBuilder
ant.HexDump.main : $r157 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r157.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r157.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s9)
ant.HexDump.main : $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s9) >>>>>>>> ant.HexDump.main : $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x")
ant.HexDump.main : $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0x") >>>>>>>> ant.HexDump.main : $r160 = staticinvoke <ant.HexDump: java.lang.String toHexString(short)>(s9)
ant.HexDump.main : $r160 = staticinvoke <ant.HexDump: java.lang.String toHexString(short)>(s9) >>>>>>>> ant.HexDump.main : $r161 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r160)
ant.HexDump.main : $r161 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r160) >>>>>>>> ant.HexDump.main : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ")
ant.HexDump.main : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") >>>>>>>> ant.HexDump.main : $r163 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(short)>(s9)
ant.HexDump.main : $r163 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(short)>(s9) >>>>>>>> ant.HexDump.main : $r164 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r163)
ant.HexDump.main : $r164 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r163) >>>>>>>> ant.HexDump.main : $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r156.<java.io.PrintStream: void println(java.lang.String)>($r165)
ant.HexDump.main : virtualinvoke $r156.<java.io.PrintStream: void println(java.lang.String)>($r165) >>>>>>>> ant.HexDump.main : $r166 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r166 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r166.<java.io.PrintStream: void println(java.lang.String)>("---- read file in Hex-Format ")
ant.HexDump.main : virtualinvoke $r166.<java.io.PrintStream: void println(java.lang.String)>("---- read file in Hex-Format ") >>>>>>>> ant.HexDump.main : r9 = "12345654321"
ant.HexDump.main : r9 = "12345654321" >>>>>>>> ant.HexDump.main : $r167 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r167 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r168 = new java.lang.StringBuilder
ant.HexDump.main : $r168 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r168.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r168.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
ant.HexDump.main : $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> ant.HexDump.main : $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ")
ant.HexDump.main : $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") >>>>>>>> ant.HexDump.main : $r171 = staticinvoke <ant.HexDump: java.lang.String stringToHexString(java.lang.String)>(r9)
ant.HexDump.main : $r171 = staticinvoke <ant.HexDump: java.lang.String stringToHexString(java.lang.String)>(r9) >>>>>>>> ant.HexDump.main : $r172 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r171)
ant.HexDump.main : $r172 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r171) >>>>>>>> ant.HexDump.main : $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r167.<java.io.PrintStream: void println(java.lang.String)>($r173)
ant.HexDump.main : virtualinvoke $r167.<java.io.PrintStream: void println(java.lang.String)>($r173) >>>>>>>> ant.HexDump.main : $r174 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r174 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : virtualinvoke $r174.<java.io.PrintStream: void println(java.lang.String)>("Das ist die Hex-Darstellung des obigen Strings")
ant.HexDump.main : virtualinvoke $r174.<java.io.PrintStream: void println(java.lang.String)>("Das ist die Hex-Darstellung des obigen Strings") >>>>>>>> ant.HexDump.main : $i10 = virtualinvoke r9.<java.lang.String: int length()>()
ant.HexDump.main : $i10 = virtualinvoke r9.<java.lang.String: int length()>() >>>>>>>> ant.HexDump.main : r10 = newarray (byte)[$i10]
ant.HexDump.main : r10 = newarray (byte)[$i10] >>>>>>>> ant.HexDump.main : staticinvoke <ant.HexDump: byte[] hexStringToByteArray(java.lang.String)>(r9)
ant.HexDump.main : staticinvoke <ant.HexDump: byte[] hexStringToByteArray(java.lang.String)>(r9) >>>>>>>> ant.HexDump.main : $r176 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r176 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r177 = new java.lang.StringBuilder
ant.HexDump.main : $r177 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r177.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r177.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ba = ")
ant.HexDump.main : $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ba = ") >>>>>>>> ant.HexDump.main : $r179 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r3)
ant.HexDump.main : $r179 = staticinvoke <ant.HexDump: java.lang.String toHexString(byte[])>(r3) >>>>>>>> ant.HexDump.main : $r180 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r179)
ant.HexDump.main : $r180 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r179) >>>>>>>> ant.HexDump.main : $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r176.<java.io.PrintStream: void println(java.lang.String)>($r181)
ant.HexDump.main : virtualinvoke $r176.<java.io.PrintStream: void println(java.lang.String)>($r181) >>>>>>>> ant.HexDump.main : return
ant.HexDump.main : $r85 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r86 = new java.lang.StringBuilder
ant.HexDump.main : $r86 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r86.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r86.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert = ")
ant.HexDump.main : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to convert = ") >>>>>>>> ant.HexDump.main : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)
ant.HexDump.main : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3) >>>>>>>> ant.HexDump.main : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ")
ant.HexDump.main : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") >>>>>>>> ant.HexDump.main : $r90 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(int)>(i3)
ant.HexDump.main : $r90 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(int)>(i3) >>>>>>>> ant.HexDump.main : $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90)
ant.HexDump.main : $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90) >>>>>>>> ant.HexDump.main : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r92)
ant.HexDump.main : virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r92) >>>>>>>> ant.HexDump.main : r7 = newarray (byte)[4]
ant.HexDump.main : r7 = newarray (byte)[4] >>>>>>>> ant.HexDump.main : r93 = staticinvoke <ant.HexDump: byte[] toByteArray(int)>(i3)
ant.HexDump.main : r93 = staticinvoke <ant.HexDump: byte[] toByteArray(int)>(i3) >>>>>>>> ant.HexDump.main : $r94 = <java.lang.System: java.io.PrintStream out>
ant.HexDump.main : $r94 = <java.lang.System: java.io.PrintStream out> >>>>>>>> ant.HexDump.main : $r95 = new java.lang.StringBuilder
ant.HexDump.main : $r95 = new java.lang.StringBuilder >>>>>>>> ant.HexDump.main : specialinvoke $r95.<java.lang.StringBuilder: void <init>()>()
ant.HexDump.main : specialinvoke $r95.<java.lang.StringBuilder: void <init>()>() >>>>>>>> ant.HexDump.main : $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("convertet byteArray = ")
ant.HexDump.main : $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("convertet byteArray = ") >>>>>>>> ant.HexDump.main : $r97 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(byte[])>(r93)
ant.HexDump.main : $r97 = staticinvoke <ant.HexDump: java.lang.String toBinaryString(byte[])>(r93) >>>>>>>> ant.HexDump.main : $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97)
ant.HexDump.main : $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97) >>>>>>>> ant.HexDump.main : $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>()
ant.HexDump.main : $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> ant.HexDump.main : virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>($r99)
ant.HexDump.main : virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>($r99) >>>>>>>> ant.HexDump.main : i3 = i3 + 1
ant.HexDump.main : i3 = i3 + 1 >>>>>>>> ant.HexDump.main : goto [?= (branch)]
ant.HexDump.main : goto [?= (branch)] >>>>>>>> ant.HexDump.main : if i3 >= 10
ant.HexDump.main : staticinvoke <ant.HexDump: void setBitDigits(char[])>(r5) >>>>>>>> ant.HexDump.main : goto [?= $r75 = <java.lang.System: java.io.PrintStream out>]
ant.HexDump.main : staticinvoke <ant.HexDump: void setBitDigits(char[])>(r5) >>>>>>>> ant.HexDump.main : $r74 := @caughtexception
ant.HexDump.main : goto [?= $r75 = <java.lang.System: java.io.PrintStream out>] >>>>>>>> ant.HexDump.main : $r75 = <java.lang.System: java.io.PrintStream out>
