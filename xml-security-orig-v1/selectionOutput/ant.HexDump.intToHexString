ant.HexDump.intToHexString : r0 = newarray (char)[8] >>>>>>>> ant.HexDump.intToHexString : i1 = 7
ant.HexDump.intToHexString : i1 = 7 >>>>>>>> ant.HexDump.intToHexString : if i1 < 0
ant.HexDump.intToHexString : if i1 < 0 >>>>>>>> ant.HexDump.intToHexString : $r1 = <ant.HexDump: char[] HEX_DIGITS>
ant.HexDump.intToHexString : if i1 < 0 >>>>>>>> ant.HexDump.intToHexString : $r2 = new java.lang.String
ant.HexDump.intToHexString : $r2 = new java.lang.String >>>>>>>> ant.HexDump.intToHexString : specialinvoke $r2.<java.lang.String: void <init>(char[])>(r0)
ant.HexDump.intToHexString : specialinvoke $r2.<java.lang.String: void <init>(char[])>(r0) >>>>>>>> ant.HexDump.intToHexString : return $r2
ant.HexDump.intToHexString : $r1 = <ant.HexDump: char[] HEX_DIGITS> >>>>>>>> ant.HexDump.intToHexString : $i2 = i0 & 15
ant.HexDump.intToHexString : $i2 = i0 & 15 >>>>>>>> ant.HexDump.intToHexString : $c3 = $r1[$i2]
ant.HexDump.intToHexString : $c3 = $r1[$i2] >>>>>>>> ant.HexDump.intToHexString : r0[i1] = $c3
ant.HexDump.intToHexString : r0[i1] = $c3 >>>>>>>> ant.HexDump.intToHexString : i0 = i0 >>> 4
ant.HexDump.intToHexString : i0 = i0 >>> 4 >>>>>>>> ant.HexDump.intToHexString : i1 = i1 + -1
ant.HexDump.intToHexString : i1 = i1 + -1 >>>>>>>> ant.HexDump.intToHexString : goto [?= (branch)]
ant.HexDump.intToHexString : goto [?= (branch)] >>>>>>>> ant.HexDump.intToHexString : if i1 < 0
