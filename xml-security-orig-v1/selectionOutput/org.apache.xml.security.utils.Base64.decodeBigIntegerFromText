org.apache.xml.security.utils.Base64.decodeBigIntegerFromText : $r1 = new java.math.BigInteger >>>>>>>> org.apache.xml.security.utils.Base64.decodeBigIntegerFromText : $r2 = interfaceinvoke r0.<org.w3c.dom.Text: java.lang.String getData()>()
org.apache.xml.security.utils.Base64.decodeBigIntegerFromText : $r2 = interfaceinvoke r0.<org.w3c.dom.Text: java.lang.String getData()>() >>>>>>>> org.apache.xml.security.utils.Base64.decodeBigIntegerFromText : $r3 = staticinvoke <org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>($r2)
org.apache.xml.security.utils.Base64.decodeBigIntegerFromText : $r3 = staticinvoke <org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>($r2) >>>>>>>> org.apache.xml.security.utils.Base64.decodeBigIntegerFromText : specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(1, $r3)
org.apache.xml.security.utils.Base64.decodeBigIntegerFromText : specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(1, $r3) >>>>>>>> org.apache.xml.security.utils.Base64.decodeBigIntegerFromText : return $r1
