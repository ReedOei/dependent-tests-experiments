org.apache.xml.security.utils.XMLUtils.getXalanVersion : r0 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.String getXalan1Version()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r0 == null
org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r0 == null >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : return r0
org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r0 == null >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : r1 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.String getXalan20Version()>()
org.apache.xml.security.utils.XMLUtils.getXalanVersion : r1 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.String getXalan20Version()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r1 == null
org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r1 == null >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : return r1
org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r1 == null >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : r2 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.String getXalan2Version()>()
org.apache.xml.security.utils.XMLUtils.getXalanVersion : r2 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.String getXalan2Version()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r2 == null
org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r2 == null >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : return r2
org.apache.xml.security.utils.XMLUtils.getXalanVersion : if r2 == null >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalanVersion : return "Apache Xalan not installed"
