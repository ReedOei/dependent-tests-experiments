org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r6 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _ancestors> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : virtualinvoke $r6.<java.util.Vector: boolean add(java.lang.Object)>(r1)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : virtualinvoke $r6.<java.util.Vector: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r7 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Set _inputSet>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r7 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Set _inputSet> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $z3 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>(r1)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $z3 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $z3 == 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $z3 == 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r8 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterTypes>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $z3 == 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $s4 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $s4 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>() >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $s4 != 1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $s4 != 1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r20 = (org.w3c.dom.Element) r1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $s4 != 1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r23 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r23 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>() >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r23 == null
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r23 == null >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : specialinvoke r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: void traversal(org.w3c.dom.Node)>(r23)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r23 == null >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r24 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _ancestors>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r24 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _ancestors> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : virtualinvoke $r24.<java.util.Vector: boolean remove(java.lang.Object)>(r1)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : virtualinvoke $r24.<java.util.Vector: boolean remove(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : return
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : specialinvoke r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: void traversal(org.w3c.dom.Node)>(r23) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r23 = interfaceinvoke r23.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r23 = interfaceinvoke r23.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>() >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)]
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)] >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r23 == null
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r20 = (org.w3c.dom.Element) r1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r21 = interfaceinvoke $r20.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r21 = interfaceinvoke $r20.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>() >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i5 = interfaceinvoke r21.<org.w3c.dom.NamedNodeMap: int getLength()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i5 = interfaceinvoke r21.<org.w3c.dom.NamedNodeMap: int getLength()>() >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i6 = 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i6 = 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i6 >= i5
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i6 >= i5 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r22 = interfaceinvoke r21.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i6)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i6 >= i5 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r23 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r22 = interfaceinvoke r21.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i6) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : specialinvoke r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: void traversal(org.w3c.dom.Node)>(r22)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : specialinvoke r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: void traversal(org.w3c.dom.Node)>(r22) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i6 = i6 + 1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i6 = i6 + 1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)]
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)] >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i6 >= i5
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r8 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterTypes> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i0 = virtualinvoke $r8.<java.util.Vector: int size()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i0 = virtualinvoke $r8.<java.util.Vector: int size()>() >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z0 = 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z0 = 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i2 = i0 - 1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i2 = i0 - 1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i2 < 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i2 < 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r9 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterNodes>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i2 < 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i3 = i2
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i3 = i2 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i3 != -1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i3 != -1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i3 = 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i3 != -1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z5 = 1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z5 = 1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i1 = i3
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i1 = i3 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i1 >= i0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i1 >= i0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r14 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterNodes>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i1 >= i0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z5 == 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z5 == 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r19 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Set _F>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z5 == 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $s4 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r19 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Set _F> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $s4 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>()
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r14 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterNodes> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r15 = virtualinvoke $r14.<java.util.Vector: java.lang.Object elementAt(int)>(i1)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r15 = virtualinvoke $r14.<java.util.Vector: java.lang.Object elementAt(int)>(i1) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r4 = (org.w3c.dom.NodeList) $r15
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r4 = (org.w3c.dom.NodeList) $r15 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r16 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterTypes>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r16 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterTypes> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r17 = virtualinvoke $r16.<java.util.Vector: java.lang.Object elementAt(int)>(i1)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r17 = virtualinvoke $r16.<java.util.Vector: java.lang.Object elementAt(int)>(i1) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r5 = (java.lang.String) $r17
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r5 = (java.lang.String) $r17 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r18 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _ancestors>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r18 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _ancestors> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z1 = virtualinvoke r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: boolean rooted(org.w3c.dom.Node,java.util.Vector,org.w3c.dom.NodeList)>(r1, $r18, r4)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z1 = virtualinvoke r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: boolean rooted(org.w3c.dom.Node,java.util.Vector,org.w3c.dom.NodeList)>(r1, $r18, r4) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r5 != "intersect"
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r5 != "intersect" >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z1 != 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r5 != "intersect" >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r5 != "subtract"
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r5 != "subtract" >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z1 == 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r5 != "subtract" >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i1 = i1 + 1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i1 = i1 + 1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)]
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)] >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i1 >= i0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z1 == 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z5 = 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z1 == 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i1 = i1 + 1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z5 = 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)]
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)] >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z5 == 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z1 != 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z5 = 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z1 != 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r5 != "subtract"
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z5 = 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)]
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)] >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if z5 == 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i3 = 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : z5 = 1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r9 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterNodes> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r10 = virtualinvoke $r9.<java.util.Vector: java.lang.Object elementAt(int)>(i2)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r10 = virtualinvoke $r9.<java.util.Vector: java.lang.Object elementAt(int)>(i2) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r2 = (org.w3c.dom.NodeList) $r10
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r2 = (org.w3c.dom.NodeList) $r10 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r11 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterTypes>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r11 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _filterTypes> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r12 = virtualinvoke $r11.<java.util.Vector: java.lang.Object elementAt(int)>(i2)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r12 = virtualinvoke $r11.<java.util.Vector: java.lang.Object elementAt(int)>(i2) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r3 = (java.lang.String) $r12
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : r3 = (java.lang.String) $r12 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r3 != "union"
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r3 != "union" >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r13 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _ancestors>
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if r3 != "union" >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i2 = i2 + -1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i2 = i2 + -1 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)]
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= (branch)] >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if i2 < 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $r13 = r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: java.util.Vector _ancestors> >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $z4 = virtualinvoke r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: boolean rooted(org.w3c.dom.Node,java.util.Vector,org.w3c.dom.NodeList)>(r1, $r13, r2)
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : $z4 = virtualinvoke r0.<org.apache.xml.security.transforms.implementations.TransformXPath2Filter: boolean rooted(org.w3c.dom.Node,java.util.Vector,org.w3c.dom.NodeList)>(r1, $r13, r2) >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $z4 == 0
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $z4 == 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= i3 = i2]
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : if $z4 == 0 >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i2 = i2 + -1
org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : goto [?= i3 = i2] >>>>>>>> org.apache.xml.security.transforms.implementations.TransformXPath2Filter.traversal : i3 = i2
