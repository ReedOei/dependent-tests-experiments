org.apache.xml.security.keys.provider.ProviderTest.main : r1 = "passphrase" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r2 = "keystore.xml"
org.apache.xml.security.keys.provider.ProviderTest.main : r2 = "keystore.xml" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r11 = new org.apache.xml.security.keys.provider.ApacheXMLProvider
org.apache.xml.security.keys.provider.ProviderTest.main : $r11 = new org.apache.xml.security.keys.provider.ApacheXMLProvider >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r11.<org.apache.xml.security.keys.provider.ApacheXMLProvider: void <init>()>()
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r11.<org.apache.xml.security.keys.provider.ApacheXMLProvider: void <init>()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r11)
org.apache.xml.security.keys.provider.ProviderTest.main : staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r11) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>("ApacheXML", "ApacheXML")
org.apache.xml.security.keys.provider.ProviderTest.main : r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>("ApacheXML", "ApacheXML") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : z0 = 1
org.apache.xml.security.keys.provider.ProviderTest.main : z0 = 1 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : if z0 == 0
org.apache.xml.security.keys.provider.ProviderTest.main : if z0 == 0 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null)
org.apache.xml.security.keys.provider.ProviderTest.main : if z0 == 0 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r30 = new java.io.FileInputStream
org.apache.xml.security.keys.provider.ProviderTest.main : $r30 = new java.io.FileInputStream >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r30.<java.io.FileInputStream: void <init>(java.lang.String)>(r2)
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r30.<java.io.FileInputStream: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r31 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r31 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r30, $r31)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r30, $r31) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r32 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.keys.provider.ProviderTest.main : $r32 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r33 = new java.lang.StringBuilder
org.apache.xml.security.keys.provider.ProviderTest.main : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The keyStore contains ")
org.apache.xml.security.keys.provider.ProviderTest.main : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The keyStore contains ") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $i1 = virtualinvoke r3.<java.security.KeyStore: int size()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $i1 = virtualinvoke r3.<java.security.KeyStore: int size()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.xml.security.keys.provider.ProviderTest.main : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" keys")
org.apache.xml.security.keys.provider.ProviderTest.main : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" keys") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r37)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r37) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r38 = virtualinvoke r3.<java.security.KeyStore: java.util.Enumeration aliases()>()
org.apache.xml.security.keys.provider.ProviderTest.main : r38 = virtualinvoke r3.<java.security.KeyStore: java.util.Enumeration aliases()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $z1 = interfaceinvoke r38.<java.util.Enumeration: boolean hasMoreElements()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $z1 = interfaceinvoke r38.<java.util.Enumeration: boolean hasMoreElements()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : if $z1 == 0
org.apache.xml.security.keys.provider.ProviderTest.main : if $z1 == 0 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r39 = interfaceinvoke r38.<java.util.Enumeration: java.lang.Object nextElement()>()
org.apache.xml.security.keys.provider.ProviderTest.main : if $z1 == 0 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void deleteEntry(java.lang.String)>("alias2")
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void deleteEntry(java.lang.String)>("alias2") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r50 = new java.io.FileOutputStream
org.apache.xml.security.keys.provider.ProviderTest.main : $r50 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r50.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2)
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r50.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r51 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r51 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r50, $r51)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r50, $r51) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r52 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.keys.provider.ProviderTest.main : $r52 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r53 = "pass"
org.apache.xml.security.keys.provider.ProviderTest.main : $r53 = "pass" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r54 = virtualinvoke $r53.<java.lang.String: char[] toCharArray()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r54 = virtualinvoke $r53.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r55 = virtualinvoke r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>("alias", $r54)
org.apache.xml.security.keys.provider.ProviderTest.main : $r55 = virtualinvoke r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>("alias", $r54) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r56 = interfaceinvoke $r55.<java.security.Key: byte[] getEncoded()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r56 = interfaceinvoke $r55.<java.security.Key: byte[] getEncoded()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r57 = staticinvoke <org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>($r56)
org.apache.xml.security.keys.provider.ProviderTest.main : $r57 = staticinvoke <org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>($r56) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r57)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r57) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : return
org.apache.xml.security.keys.provider.ProviderTest.main : $r39 = interfaceinvoke r38.<java.util.Enumeration: java.lang.Object nextElement()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r40 = (java.lang.String) $r39
org.apache.xml.security.keys.provider.ProviderTest.main : r40 = (java.lang.String) $r39 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r41 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.keys.provider.ProviderTest.main : $r41 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r42 = new java.lang.StringBuilder
org.apache.xml.security.keys.provider.ProviderTest.main : $r42 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alias = \"")
org.apache.xml.security.keys.provider.ProviderTest.main : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alias = \"") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40)
org.apache.xml.security.keys.provider.ProviderTest.main : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"  ")
org.apache.xml.security.keys.provider.ProviderTest.main : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"  ") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r46 = virtualinvoke r3.<java.security.KeyStore: java.util.Date getCreationDate(java.lang.String)>(r40)
org.apache.xml.security.keys.provider.ProviderTest.main : $r46 = virtualinvoke r3.<java.security.KeyStore: java.util.Date getCreationDate(java.lang.String)>(r40) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r47 = virtualinvoke $r46.<java.util.Date: java.lang.String toString()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r47 = virtualinvoke $r46.<java.util.Date: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47)
org.apache.xml.security.keys.provider.ProviderTest.main : $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r49)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r49) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : goto [?= $z1 = interfaceinvoke r38.<java.util.Enumeration: boolean hasMoreElements()>()]
org.apache.xml.security.keys.provider.ProviderTest.main : goto [?= $z1 = interfaceinvoke r38.<java.util.Enumeration: boolean hasMoreElements()>()] >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $z1 = interfaceinvoke r38.<java.util.Enumeration: boolean hasMoreElements()>()
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r4 = "data/org/apache/xml/security/samples/input/keystore.jks"
org.apache.xml.security.keys.provider.ProviderTest.main : r4 = "data/org/apache/xml/security/samples/input/keystore.jks" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r5 = "xmlsecurity"
org.apache.xml.security.keys.provider.ProviderTest.main : r5 = "xmlsecurity" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r6 = "test"
org.apache.xml.security.keys.provider.ProviderTest.main : r6 = "test" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("JKS")
org.apache.xml.security.keys.provider.ProviderTest.main : r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("JKS") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r12 = new java.io.FileInputStream
org.apache.xml.security.keys.provider.ProviderTest.main : $r12 = new java.io.FileInputStream >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r12.<java.io.FileInputStream: void <init>(java.lang.String)>(r4)
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r12.<java.io.FileInputStream: void <init>(java.lang.String)>(r4) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r13 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r13 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r8 = virtualinvoke r7.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r6)
org.apache.xml.security.keys.provider.ProviderTest.main : r8 = virtualinvoke r7.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r6) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(r6, r8)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(r6, r8) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r14 = new javax.crypto.spec.SecretKeySpec
org.apache.xml.security.keys.provider.ProviderTest.main : $r14 = new javax.crypto.spec.SecretKeySpec >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r15 = staticinvoke <org.apache.xml.security.utils.HexDump: byte[] hexStringToByteArray(java.lang.String)>("0001020304050607 08090A0B0C0D0E0F")
org.apache.xml.security.keys.provider.ProviderTest.main : $r15 = staticinvoke <org.apache.xml.security.utils.HexDump: byte[] hexStringToByteArray(java.lang.String)>("0001020304050607 08090A0B0C0D0E0F") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r15, "AES")
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r15, "AES") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r16 = $r14
org.apache.xml.security.keys.provider.ProviderTest.main : r16 = $r14 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r17 = "pass"
org.apache.xml.security.keys.provider.ProviderTest.main : $r17 = "pass" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r18 = virtualinvoke $r17.<java.lang.String: char[] toCharArray()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r18 = virtualinvoke $r17.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>("alias", r16, $r18, null)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>("alias", r16, $r18, null) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r19 = "data/org/apache/xml/security/samples/input/keystore.jks"
org.apache.xml.security.keys.provider.ProviderTest.main : r19 = "data/org/apache/xml/security/samples/input/keystore.jks" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r20 = "xmlsecurity"
org.apache.xml.security.keys.provider.ProviderTest.main : r20 = "xmlsecurity" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r21 = "test"
org.apache.xml.security.keys.provider.ProviderTest.main : r21 = "test" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r22 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("JKS")
org.apache.xml.security.keys.provider.ProviderTest.main : r22 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("JKS") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r23 = new java.io.FileInputStream
org.apache.xml.security.keys.provider.ProviderTest.main : $r23 = new java.io.FileInputStream >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r23.<java.io.FileInputStream: void <init>(java.lang.String)>(r19)
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r23.<java.io.FileInputStream: void <init>(java.lang.String)>(r19) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r24 = virtualinvoke r20.<java.lang.String: char[] toCharArray()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r24 = virtualinvoke r20.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r22.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r23, $r24)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r22.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r23, $r24) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r25 = virtualinvoke r22.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r21)
org.apache.xml.security.keys.provider.ProviderTest.main : r25 = virtualinvoke r22.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r21) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r9 = newarray (java.security.cert.Certificate)[1]
org.apache.xml.security.keys.provider.ProviderTest.main : r9 = newarray (java.security.cert.Certificate)[1] >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r9[0] = r25
org.apache.xml.security.keys.provider.ProviderTest.main : r9[0] = r25 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r26 = new javax.crypto.spec.SecretKeySpec
org.apache.xml.security.keys.provider.ProviderTest.main : $r26 = new javax.crypto.spec.SecretKeySpec >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r27 = staticinvoke <org.apache.xml.security.utils.HexDump: byte[] hexStringToByteArray(java.lang.String)>("0001020304050607 08090A0B0C0D0E0F")
org.apache.xml.security.keys.provider.ProviderTest.main : $r27 = staticinvoke <org.apache.xml.security.utils.HexDump: byte[] hexStringToByteArray(java.lang.String)>("0001020304050607 08090A0B0C0D0E0F") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r27, "AES")
org.apache.xml.security.keys.provider.ProviderTest.main : specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r27, "AES") >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r10 = $r26
org.apache.xml.security.keys.provider.ProviderTest.main : r10 = $r26 >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r28 = "pass"
org.apache.xml.security.keys.provider.ProviderTest.main : $r28 = "pass" >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : $r29 = virtualinvoke $r28.<java.lang.String: char[] toCharArray()>()
org.apache.xml.security.keys.provider.ProviderTest.main : $r29 = virtualinvoke $r28.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>("alias2", r10, $r29, r9)
org.apache.xml.security.keys.provider.ProviderTest.main : virtualinvoke r3.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>("alias2", r10, $r29, r9) >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : goto [?= r38 = virtualinvoke r3.<java.security.KeyStore: java.util.Enumeration aliases()>()]
org.apache.xml.security.keys.provider.ProviderTest.main : goto [?= r38 = virtualinvoke r3.<java.security.KeyStore: java.util.Enumeration aliases()>()] >>>>>>>> org.apache.xml.security.keys.provider.ProviderTest.main : r38 = virtualinvoke r3.<java.security.KeyStore: java.util.Enumeration aliases()>()
