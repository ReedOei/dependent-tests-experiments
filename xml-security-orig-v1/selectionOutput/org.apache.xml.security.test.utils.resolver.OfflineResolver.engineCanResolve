org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : r3 = interfaceinvoke r1.<org.w3c.dom.Attr: java.lang.String getNodeValue()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z0 != 0
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z0 != 0 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("#")
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z0 != 0 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : return 0
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("#") >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z1 == 0
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z1 == 0 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : return 0
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z1 == 0 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r6 = new org.apache.xml.utils.URI
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z1 == 0 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : r22 = $r21 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : return 0
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r6 = new org.apache.xml.utils.URI >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r4 = new org.apache.xml.utils.URI
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r6 = new org.apache.xml.utils.URI >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r4 = new org.apache.xml.utils.URI >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r4.<org.apache.xml.utils.URI: void <init>(java.lang.String)>(r2)
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r4 = new org.apache.xml.utils.URI >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r4.<org.apache.xml.utils.URI: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r7 = interfaceinvoke r1.<org.w3c.dom.Attr: java.lang.String getNodeValue()>()
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r4.<org.apache.xml.utils.URI: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r7 = interfaceinvoke r1.<org.w3c.dom.Attr: java.lang.String getNodeValue()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r6.<org.apache.xml.utils.URI: void <init>(org.apache.xml.utils.URI,java.lang.String)>($r4, $r7)
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r7 = interfaceinvoke r1.<org.w3c.dom.Attr: java.lang.String getNodeValue()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r6.<org.apache.xml.utils.URI: void <init>(org.apache.xml.utils.URI,java.lang.String)>($r4, $r7) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : r5 = $r6
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r6.<org.apache.xml.utils.URI: void <init>(org.apache.xml.utils.URI,java.lang.String)>($r4, $r7) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : r5 = $r6 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r8 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String getScheme()>()
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : r5 = $r6 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r8 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String getScheme()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("http")
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r8 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String getScheme()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("http") >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z2 == 0
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("http") >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z2 == 0 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r9 = <org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.log4j.Category cat>
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z2 == 0 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r15 = <org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.log4j.Category cat>
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : if $z2 == 0 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r15 = <org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.log4j.Category cat> >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r16 = new java.lang.StringBuilder
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r15 = <org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.log4j.Category cat> >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I state that I can\'t resolve ")
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I state that I can\'t resolve ") >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r18 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String toString()>()
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I state that I can\'t resolve ") >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r18 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r18 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : virtualinvoke $r15.<org.apache.log4j.Category: void debug(java.lang.Object)>($r20)
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : virtualinvoke $r15.<org.apache.log4j.Category: void debug(java.lang.Object)>($r20) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : goto [?= return 0]
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : virtualinvoke $r15.<org.apache.log4j.Category: void debug(java.lang.Object)>($r20) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : goto [?= return 0] >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : return 0
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r9 = <org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.log4j.Category cat> >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r10 = new java.lang.StringBuilder
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r9 = <org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.log4j.Category cat> >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I state that I can resolve ")
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I state that I can resolve ") >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r12 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String toString()>()
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I state that I can resolve ") >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r12 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r12 = virtualinvoke r5.<org.apache.xml.utils.URI: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : virtualinvoke $r9.<org.apache.log4j.Category: void debug(java.lang.Object)>($r14)
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : virtualinvoke $r9.<org.apache.log4j.Category: void debug(java.lang.Object)>($r14) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z3 = 1
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : virtualinvoke $r9.<org.apache.log4j.Category: void debug(java.lang.Object)>($r14) >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z3 = 1 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : return $z3
org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $z3 = 1 >>>>>>>> org.apache.xml.security.test.utils.resolver.OfflineResolver.engineCanResolve : $r21 := @caughtexception
