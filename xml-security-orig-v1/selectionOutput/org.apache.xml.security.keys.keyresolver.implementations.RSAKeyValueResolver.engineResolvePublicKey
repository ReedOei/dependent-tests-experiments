org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r4 = r0.<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: org.w3c.dom.Element _rsaKeyElement> >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if $r4 != null
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if $r4 != null >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : z0 = virtualinvoke r0.<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>(r1, r2, r3)
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if $r4 != null >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r6 = new org.apache.xml.security.keys.content.keyvalues.RSAKeyValue
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if $r4 != null >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r10 := @caughtexception
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : r11 = $r10 >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r12 = <org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: org.apache.log4j.Category cat>
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r12 = <org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: org.apache.log4j.Category cat> >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : virtualinvoke $r12.<org.apache.log4j.Category: void debug(java.lang.Object,java.lang.Throwable)>("XMLSecurityException", r11)
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : virtualinvoke $r12.<org.apache.log4j.Category: void debug(java.lang.Object,java.lang.Throwable)>("XMLSecurityException", r11) >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : return null
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r6 = new org.apache.xml.security.keys.content.keyvalues.RSAKeyValue >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r7 = r0.<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: org.w3c.dom.Element _rsaKeyElement>
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r6 = new org.apache.xml.security.keys.content.keyvalues.RSAKeyValue >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r10 := @caughtexception
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r7 = r0.<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: org.w3c.dom.Element _rsaKeyElement> >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : specialinvoke $r6.<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>($r7, r2)
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r7 = r0.<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: org.w3c.dom.Element _rsaKeyElement> >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r10 := @caughtexception
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : specialinvoke $r6.<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>($r7, r2) >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : r8 = $r6
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : specialinvoke $r6.<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>($r7, r2) >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r10 := @caughtexception
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : r8 = $r6 >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r9 = virtualinvoke r8.<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>()
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : r8 = $r6 >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r10 := @caughtexception
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r9 = virtualinvoke r8.<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>() >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : return $r9
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r9 = virtualinvoke r8.<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>() >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r10 := @caughtexception
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : z0 = virtualinvoke r0.<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>(r1, r2, r3) >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if z0 == 0
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if z0 == 0 >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r5 = r0.<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: org.w3c.dom.Element _rsaKeyElement>
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if z0 == 0 >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : return null
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r5 = r0.<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: org.w3c.dom.Element _rsaKeyElement> >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if $r5 != null
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if $r5 != null >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : return null
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if $r5 != null >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r6 = new org.apache.xml.security.keys.content.keyvalues.RSAKeyValue
org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : if $r5 != null >>>>>>>> org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver.engineResolvePublicKey : $r10 := @caughtexception
