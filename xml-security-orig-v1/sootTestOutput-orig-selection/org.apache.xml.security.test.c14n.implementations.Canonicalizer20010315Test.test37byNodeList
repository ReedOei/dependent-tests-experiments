org.apache.xml.security.Init.init : $z0 = <org.apache.xml.security.Init: boolean _alreadyInitialized> >>>>>>>> org.apache.xml.security.Init.init : if $z0 != 0
org.apache.xml.security.Init.init : if $z0 != 0 >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : r0 = "org.apache.xml.security.test.resource.TestVectorResolver"
org.apache.xml.security.test.resource.TestVectorResolver.init : r0 = "org.apache.xml.security.test.resource.TestVectorResolver" >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : r1 = "testvectors.zip"
org.apache.xml.security.test.resource.TestVectorResolver.init : r1 = "testvectors.zip" >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : $z0 = <org.apache.xml.security.test.resource.TestVectorResolver: boolean alreadyInitialized>
org.apache.xml.security.test.resource.TestVectorResolver.init : $z0 = <org.apache.xml.security.test.resource.TestVectorResolver: boolean alreadyInitialized> >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : if $z0 != 0
org.apache.xml.security.test.resource.TestVectorResolver.init : if $z0 != 0 >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : <org.apache.xml.security.test.resource.TestVectorResolver: boolean alreadyInitialized> = 1
org.apache.xml.security.test.resource.TestVectorResolver.init : <org.apache.xml.security.test.resource.TestVectorResolver: boolean alreadyInitialized> = 1 >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : $r3 = new java.util.HashMap
org.apache.xml.security.test.resource.TestVectorResolver.init : $r3 = new java.util.HashMap >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : specialinvoke $r3.<java.util.HashMap: void <init>(int)>(30)
org.apache.xml.security.test.resource.TestVectorResolver.init : specialinvoke $r3.<java.util.HashMap: void <init>(int)>(30) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : <org.apache.xml.security.test.resource.TestVectorResolver: java.util.HashMap vectors> = $r3
org.apache.xml.security.test.resource.TestVectorResolver.init : <org.apache.xml.security.test.resource.TestVectorResolver: java.util.HashMap vectors> = $r3 >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : $r4 = new java.util.zip.ZipInputStream
org.apache.xml.security.test.resource.TestVectorResolver.init : $r4 = new java.util.zip.ZipInputStream >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
org.apache.xml.security.test.resource.TestVectorResolver.init : $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : $r6 = virtualinvoke $r5.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1)
org.apache.xml.security.test.resource.TestVectorResolver.init : $r6 = virtualinvoke $r5.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.init : specialinvoke $r4.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r6)
