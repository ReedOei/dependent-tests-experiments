org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r1 = new java.util.HashSet >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : specialinvoke $r1.<java.util.HashSet: void <init>()>()
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : specialinvoke $r1.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : r2 = $r1
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : r2 = $r1 >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : if r0 == null
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : if r0 == null >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $i0 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $i0 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : if $i0 != 0
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : if $i0 != 0 >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r5 = new java.util.StringTokenizer
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r5 = new java.util.StringTokenizer >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, " \t\r\n")
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, " \t\r\n") >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : r3 = $r5
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : r3 = $r5 >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>()
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : if $z0 == 0
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : if $z0 == 0 >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>()
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("#default")
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("#default") >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : if $z1 == 0
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : if $z1 == 0 >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r6 = new java.lang.StringBuilder
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:")
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:") >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9)
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : goto [?= $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : goto [?= $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>()] >>>>>>>> org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : return r2
org.apache.xml.security.transforms.params.InclusiveNamespaces.prefixStr2Set : return r2 >>>>>>>> org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : $r1 = new org.apache.xml.security.utils.HelperNodeList
org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : $r1 = new org.apache.xml.security.utils.HelperNodeList >>>>>>>> org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : specialinvoke $r1.<org.apache.xml.security.utils.HelperNodeList: void <init>()>()
org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : specialinvoke $r1.<org.apache.xml.security.utils.HelperNodeList: void <init>()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : r2 = $r1
org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : r2 = $r1 >>>>>>>> org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()
org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : if $z0 == 0
org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.convertSetToNodelist : $r5 = (org.w3c.dom.Node) $r4
