org.apache.xml.security.c14n.Canonicalizer.getInstance : $r1 = new org.apache.xml.security.c14n.Canonicalizer >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getInstance : specialinvoke $r1.<org.apache.xml.security.c14n.Canonicalizer: void <init>(java.lang.String)>(r0)
org.apache.xml.security.c14n.Canonicalizer.getInstance : specialinvoke $r1.<org.apache.xml.security.c14n.Canonicalizer: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $r1 = <org.apache.xml.security.c14n.Canonicalizer: java.util.Map _canonicalizerHash>
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $r1 = <org.apache.xml.security.c14n.Canonicalizer: java.util.Map _canonicalizerHash> >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $r4 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $r4 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : if $z0 == 0
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : if $z0 == 0 >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : r3 = (java.lang.String) $r5
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r0)
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r0) >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : if $z1 == 0
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : if $z1 == 0 >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : return null
org.apache.xml.security.c14n.Canonicalizer.getImplementingClass : return null >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r1 = <org.apache.xml.security.utils.I18n: java.util.ResourceBundle resourceBundle>
org.apache.xml.security.utils.I18n.getExceptionMessage : $r1 = <org.apache.xml.security.utils.I18n: java.util.ResourceBundle resourceBundle> >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0)
org.apache.xml.security.utils.I18n.getExceptionMessage : r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : r5 = $r4
org.apache.xml.security.utils.I18n.getExceptionMessage : r5 = $r4 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $z0 = staticinvoke <org.apache.xml.security.Init: boolean isInitialized()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $z0 = staticinvoke <org.apache.xml.security.Init: boolean isInitialized()>() >>>>>>>> org.apache.xml.security.Init.isInitialized : $z0 = <org.apache.xml.security.Init: boolean _alreadyInitialized>
org.apache.xml.security.Init.isInitialized : $z0 = <org.apache.xml.security.Init: boolean _alreadyInitialized> >>>>>>>> org.apache.xml.security.Init.isInitialized : return $z0
org.apache.xml.security.Init.isInitialized : return $z0 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : if $z0 == 0
org.apache.xml.security.utils.I18n.getExceptionMessage : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : return "You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library."
