org.apache.xml.security.utils.RFC2253Parser.xmldsigtoRFC2253 : <org.apache.xml.security.utils.RFC2253Parser: boolean _TOXML> = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.xmldsigtoRFC2253 : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String normalize(java.lang.String)>(r0)
org.apache.xml.security.utils.RFC2253Parser.xmldsigtoRFC2253 : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String normalize(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : if r0 == null
org.apache.xml.security.utils.RFC2253Parser.normalize : if r0 == null >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.xml.security.utils.RFC2253Parser.normalize : $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : if $z0 == 0
org.apache.xml.security.utils.RFC2253Parser.normalize : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String semicolonToComma(java.lang.String)>(r0)
org.apache.xml.security.utils.RFC2253Parser.normalize : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String semicolonToComma(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.semicolonToComma : $r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String removeWSandReplace(java.lang.String,java.lang.String,java.lang.String)>(r0, ";", ",")
org.apache.xml.security.utils.RFC2253Parser.semicolonToComma : $r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String removeWSandReplace(java.lang.String,java.lang.String,java.lang.String)>(r0, ";", ",") >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $r3 = new java.lang.StringBuffer
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $r3 = new java.lang.StringBuffer >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : r4 = $r3
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : r4 = $r3 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : i0 = 0
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : i0 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : i1 = 0
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : i1 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : i2 = 0
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : i2 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r1, i2)
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r1, i2) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : i3 = $i4
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : i3 = $i4 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : if $i4 < 0
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : if $i4 < 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $r13 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String trim(java.lang.String)>($r12)
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $r13 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String trim(java.lang.String)>($r12) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.xml.security.utils.RFC2253Parser.trim : r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(0)
org.apache.xml.security.utils.RFC2253Parser.trim : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>($r2)
org.apache.xml.security.utils.RFC2253Parser.trim : $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>($r2) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : $i2 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.xml.security.utils.RFC2253Parser.trim : $i2 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : i0 = $i1 + $i2
org.apache.xml.security.utils.RFC2253Parser.trim : i0 = $i1 + $i2 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : $i3 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.xml.security.utils.RFC2253Parser.trim : $i3 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : if $i3 <= i0
org.apache.xml.security.utils.RFC2253Parser.trim : if $i3 <= i0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("\\")
org.apache.xml.security.utils.RFC2253Parser.trim : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("\\") >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : if $z0 == 0
org.apache.xml.security.utils.RFC2253Parser.trim : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.trim : return r1
org.apache.xml.security.utils.RFC2253Parser.trim : return r1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13)
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $r15 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : $r15 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : return $r15
org.apache.xml.security.utils.RFC2253Parser.removeWSandReplace : return $r15 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.semicolonToComma : return $r1
org.apache.xml.security.utils.RFC2253Parser.semicolonToComma : return $r1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : $r3 = new java.lang.StringBuffer
org.apache.xml.security.utils.RFC2253Parser.normalize : $r3 = new java.lang.StringBuffer >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()
org.apache.xml.security.utils.RFC2253Parser.normalize : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : r2 = $r3
org.apache.xml.security.utils.RFC2253Parser.normalize : r2 = $r3 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : i0 = 0
org.apache.xml.security.utils.RFC2253Parser.normalize : i0 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : i1 = 0
org.apache.xml.security.utils.RFC2253Parser.normalize : i1 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : i2 = 0
org.apache.xml.security.utils.RFC2253Parser.normalize : i2 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : $i4 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(",", i2)
org.apache.xml.security.utils.RFC2253Parser.normalize : $i4 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(",", i2) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : i3 = $i4
org.apache.xml.security.utils.RFC2253Parser.normalize : i3 = $i4 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : if $i4 < 0
org.apache.xml.security.utils.RFC2253Parser.normalize : if $i4 < 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : $r12 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0)
org.apache.xml.security.utils.RFC2253Parser.normalize : $r12 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : $r13 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String trim(java.lang.String)>($r12)
org.apache.xml.security.utils.RFC2253Parser.normalize : $r13 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String trim(java.lang.String)>($r12) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : $r14 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String parseRDN(java.lang.String)>($r13)
org.apache.xml.security.utils.RFC2253Parser.normalize : $r14 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String parseRDN(java.lang.String)>($r13) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r1 = new java.lang.StringBuffer
org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r1 = new java.lang.StringBuffer >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()
org.apache.xml.security.utils.RFC2253Parser.parseRDN : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : r2 = $r1
org.apache.xml.security.utils.RFC2253Parser.parseRDN : r2 = $r1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : i0 = 0
org.apache.xml.security.utils.RFC2253Parser.parseRDN : i0 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : i1 = 0
org.apache.xml.security.utils.RFC2253Parser.parseRDN : i1 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : i2 = 0
org.apache.xml.security.utils.RFC2253Parser.parseRDN : i2 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("+", i2)
org.apache.xml.security.utils.RFC2253Parser.parseRDN : $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("+", i2) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : i3 = $i4
org.apache.xml.security.utils.RFC2253Parser.parseRDN : i3 = $i4 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : if $i4 < 0
org.apache.xml.security.utils.RFC2253Parser.parseRDN : if $i4 < 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)
org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r12 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String trim(java.lang.String)>($r11)
org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r12 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String trim(java.lang.String)>($r11) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r13 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String parseATAV(java.lang.String)>($r12)
org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r13 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String parseATAV(java.lang.String)>($r12) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("=")
org.apache.xml.security.utils.RFC2253Parser.parseATAV : i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("=") >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : if i0 == -1
org.apache.xml.security.utils.RFC2253Parser.parseATAV : if i0 == -1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : if i0 <= 0
org.apache.xml.security.utils.RFC2253Parser.parseATAV : if i0 <= 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $i1 = i0 - 1
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $i1 = i0 - 1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1)
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : if $c2 != 92
org.apache.xml.security.utils.RFC2253Parser.parseATAV : if $c2 != 92 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String normalizeAT(java.lang.String)>($r3)
org.apache.xml.security.utils.RFC2253Parser.parseATAV : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String normalizeAT(java.lang.String)>($r3) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeAT : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.xml.security.utils.RFC2253Parser.normalizeAT : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeAT : r1 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>()
org.apache.xml.security.utils.RFC2253Parser.normalizeAT : r1 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeAT : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("OID")
org.apache.xml.security.utils.RFC2253Parser.normalizeAT : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("OID") >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeAT : if $z0 == 0
org.apache.xml.security.utils.RFC2253Parser.normalizeAT : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeAT : return r1
org.apache.xml.security.utils.RFC2253Parser.normalizeAT : return r1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $i3 = i0 + 1
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $i3 = i0 + 1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : r2 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String normalizeV(java.lang.String)>($r4)
org.apache.xml.security.utils.RFC2253Parser.parseATAV : r2 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String normalizeV(java.lang.String)>($r4) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeV : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String trim(java.lang.String)>(r0)
org.apache.xml.security.utils.RFC2253Parser.normalizeV : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String trim(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeV : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\"")
org.apache.xml.security.utils.RFC2253Parser.normalizeV : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\"") >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeV : if $z1 == 0
org.apache.xml.security.utils.RFC2253Parser.normalizeV : if $z1 == 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeV : $z2 = <org.apache.xml.security.utils.RFC2253Parser: boolean _TOXML>
org.apache.xml.security.utils.RFC2253Parser.normalizeV : $z2 = <org.apache.xml.security.utils.RFC2253Parser: boolean _TOXML> >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeV : if $z2 != 1
org.apache.xml.security.utils.RFC2253Parser.normalizeV : if $z2 != 1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeV : $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\\#")
org.apache.xml.security.utils.RFC2253Parser.normalizeV : $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\\#") >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeV : if $z4 == 0
org.apache.xml.security.utils.RFC2253Parser.normalizeV : if $z4 == 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalizeV : return r1
org.apache.xml.security.utils.RFC2253Parser.normalizeV : return r1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r5 = new java.lang.StringBuilder
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.utils.RFC2253Parser.parseATAV : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.utils.RFC2253Parser.parseATAV : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseATAV : return $r9
org.apache.xml.security.utils.RFC2253Parser.parseATAV : return $r9 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13)
org.apache.xml.security.utils.RFC2253Parser.parseRDN : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r15 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.xml.security.utils.RFC2253Parser.parseRDN : $r15 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.parseRDN : return $r15
org.apache.xml.security.utils.RFC2253Parser.parseRDN : return $r15 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14)
org.apache.xml.security.utils.RFC2253Parser.normalize : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : $r16 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.xml.security.utils.RFC2253Parser.normalize : $r16 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.normalize : return $r16
org.apache.xml.security.utils.RFC2253Parser.normalize : return $r16 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.xmldsigtoRFC2253 : $r2 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String xmltoRFC(java.lang.String)>(r1)
org.apache.xml.security.utils.RFC2253Parser.xmldsigtoRFC2253 : $r2 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String xmltoRFC(java.lang.String)>(r1) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.xmltoRFC : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String changeLess32toRFC(java.lang.String)>(r0)
org.apache.xml.security.utils.RFC2253Parser.xmltoRFC : r1 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String changeLess32toRFC(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : $r1 = new java.lang.StringBuffer
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : $r1 = new java.lang.StringBuffer >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : r2 = $r1
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : r2 = $r1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : $r4 = new java.io.StringReader
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : $r4 = new java.io.StringReader >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>(r0)
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : r3 = $r4
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : r3 = $r4 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : z0 = 0
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : z0 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : $i4 = virtualinvoke r3.<java.io.StringReader: int read()>()
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : $i4 = virtualinvoke r3.<java.io.StringReader: int read()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : i5 = $i4
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : i5 = $i4 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : if $i4 <= -1
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : if $i4 <= -1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : c0 = (char) i5
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : c0 = (char) i5 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : if c0 != 92
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : if c0 != 92 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0)
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : goto [?= $i4 = virtualinvoke r3.<java.io.StringReader: int read()>()]
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : goto [?= $i4 = virtualinvoke r3.<java.io.StringReader: int read()>()] >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : $r15 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : $r15 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : return $r15
org.apache.xml.security.utils.RFC2253Parser.changeLess32toRFC : return $r15 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.xmltoRFC : $r2 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String changeWStoRFC(java.lang.String)>(r1)
org.apache.xml.security.utils.RFC2253Parser.xmltoRFC : $r2 = staticinvoke <org.apache.xml.security.utils.RFC2253Parser: java.lang.String changeWStoRFC(java.lang.String)>(r1) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : $r1 = new java.lang.StringBuffer
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : $r1 = new java.lang.StringBuffer >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : r2 = $r1
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : r2 = $r1 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : i0 = 0
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : i0 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : i1 = 0
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : i1 = 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("\\20", i1)
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("\\20", i1) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : i2 = $i3
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : i2 = $i3 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : if $i3 < 0
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : if $i3 < 0 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10)
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10) >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : $r12 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : $r12 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : return $r12
org.apache.xml.security.utils.RFC2253Parser.changeWStoRFC : return $r12 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.xmltoRFC : return $r2
org.apache.xml.security.utils.RFC2253Parser.xmltoRFC : return $r2 >>>>>>>> org.apache.xml.security.utils.RFC2253Parser.xmldsigtoRFC2253 : return $r2
