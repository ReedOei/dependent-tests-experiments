org.apache.xml.security.utils.HexDump.toBinaryString : $r0 = staticinvoke <org.apache.xml.security.utils.HexDump: byte[] toByteArray(short)>(s0) >>>>>>>> org.apache.xml.security.utils.HexDump.toByteArray : r0 = newarray (byte)[2]
org.apache.xml.security.utils.HexDump.toByteArray : r0 = newarray (byte)[2] >>>>>>>> org.apache.xml.security.utils.HexDump.toByteArray : $b1 = (byte) s0
org.apache.xml.security.utils.HexDump.toByteArray : $b1 = (byte) s0 >>>>>>>> org.apache.xml.security.utils.HexDump.toByteArray : r0[1] = $b1
org.apache.xml.security.utils.HexDump.toByteArray : r0[1] = $b1 >>>>>>>> org.apache.xml.security.utils.HexDump.toByteArray : $s2 = s0 >> 8
org.apache.xml.security.utils.HexDump.toByteArray : $s2 = s0 >> 8 >>>>>>>> org.apache.xml.security.utils.HexDump.toByteArray : $b3 = (byte) $s2
org.apache.xml.security.utils.HexDump.toByteArray : $b3 = (byte) $s2 >>>>>>>> org.apache.xml.security.utils.HexDump.toByteArray : r0[0] = $b3
org.apache.xml.security.utils.HexDump.toByteArray : r0[0] = $b3 >>>>>>>> org.apache.xml.security.utils.HexDump.toByteArray : return r0
org.apache.xml.security.utils.HexDump.toByteArray : return r0 >>>>>>>> org.apache.xml.security.utils.HexDump.toBinaryString : $r1 = staticinvoke <org.apache.xml.security.utils.HexDump: java.lang.String toBinaryString(byte[])>($r0)
org.apache.xml.security.utils.HexDump.toBinaryString : $r1 = staticinvoke <org.apache.xml.security.utils.HexDump: java.lang.String toBinaryString(byte[])>($r0) >>>>>>>> org.apache.xml.security.utils.HexDump.toBinaryString : $r1 = staticinvoke <org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r0)
org.apache.xml.security.utils.HexDump.toBinaryString : $r1 = staticinvoke <org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToBinaryString(byte[])>(r0) >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $r1 = new java.lang.StringBuffer
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $r1 = new java.lang.StringBuffer >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : r2 = $r1
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : r2 = $r1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : i0 = lengthof r0
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : i0 = lengthof r0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : i1 = 0
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : i1 = 0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : if i1 >= i0
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : if i1 >= i0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $b2 = r0[i1]
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $b2 = r0[i1] >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : staticinvoke <org.apache.xml.security.utils.HexDump: void byte2bin(byte,java.lang.StringBuffer)>($b2, r2)
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : staticinvoke <org.apache.xml.security.utils.HexDump: void byte2bin(byte,java.lang.StringBuffer)>($b2, r2) >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : i1 = 0
org.apache.xml.security.utils.HexDump.byte2bin : i1 = 0 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : if i1 >= 8
org.apache.xml.security.utils.HexDump.byte2bin : if i1 >= 8 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : $r1 = <org.apache.xml.security.utils.HexDump: byte[] COMPARE_BITS>
org.apache.xml.security.utils.HexDump.byte2bin : $r1 = <org.apache.xml.security.utils.HexDump: byte[] COMPARE_BITS> >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : $b2 = $r1[i1]
org.apache.xml.security.utils.HexDump.byte2bin : $b2 = $r1[i1] >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : $b3 = b0 & $b2
org.apache.xml.security.utils.HexDump.byte2bin : $b3 = b0 & $b2 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : if $b3 == 0
org.apache.xml.security.utils.HexDump.byte2bin : if $b3 == 0 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : $r4 = <org.apache.xml.security.utils.HexDump: char[] BIT_DIGIT>
org.apache.xml.security.utils.HexDump.byte2bin : $r4 = <org.apache.xml.security.utils.HexDump: char[] BIT_DIGIT> >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : $c5 = $r4[0]
org.apache.xml.security.utils.HexDump.byte2bin : $c5 = $r4[0] >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5)
org.apache.xml.security.utils.HexDump.byte2bin : virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5) >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : i1 = i1 + 1
org.apache.xml.security.utils.HexDump.byte2bin : i1 = i1 + 1 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2bin : goto [?= (branch)]
org.apache.xml.security.utils.HexDump.byte2bin : goto [?= (branch)] >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $i3 = i0 - 1
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $i3 = i0 - 1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : if i1 >= $i3
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : if i1 >= $i3 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $z0 = 1
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $z0 = 1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : goto [?= $z1 = <org.apache.xml.security.utils.HexDump: boolean WITH_BYTE_SEPARATOR>]
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : goto [?= $z1 = <org.apache.xml.security.utils.HexDump: boolean WITH_BYTE_SEPARATOR>] >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $z1 = <org.apache.xml.security.utils.HexDump: boolean WITH_BYTE_SEPARATOR>
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $z1 = <org.apache.xml.security.utils.HexDump: boolean WITH_BYTE_SEPARATOR> >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $z2 = $z0 & $z1
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $z2 = $z0 & $z1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : if $z2 == 0
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : if $z2 == 0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $c4 = <org.apache.xml.security.utils.HexDump: char BYTE_SEPARATOR>
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $c4 = <org.apache.xml.security.utils.HexDump: char BYTE_SEPARATOR> >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4)
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4) >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : i1 = i1 + 1
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : i1 = i1 + 1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : goto [?= (branch)]
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : goto [?= (branch)] >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $z0 = 0
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $z0 = 0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : $r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : return $r4
org.apache.xml.security.utils.HexDump.byteArrayToBinaryString : return $r4 >>>>>>>> org.apache.xml.security.utils.HexDump.toBinaryString : return $r1
