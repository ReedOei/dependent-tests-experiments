org.apache.xml.security.utils.HexDump.hexStringToByteArray : $r1 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.xml.security.utils.HexDump.hexStringToByteArray : specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : r2 = $r1
org.apache.xml.security.utils.HexDump.hexStringToByteArray : r2 = $r1 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = 0
org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = 0 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : z0 = 1
org.apache.xml.security.utils.HexDump.hexStringToByteArray : z0 = 1 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : i1 = 0
org.apache.xml.security.utils.HexDump.hexStringToByteArray : i1 = 0 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : $i3 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.xml.security.utils.HexDump.hexStringToByteArray : $i3 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : if i1 >= $i3
org.apache.xml.security.utils.HexDump.hexStringToByteArray : if i1 >= $i3 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1)
org.apache.xml.security.utils.HexDump.hexStringToByteArray : c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1) >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : $c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c2)
org.apache.xml.security.utils.HexDump.hexStringToByteArray : $c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c2) >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : tableswitch($c4) {     case 48:
org.apache.xml.security.utils.HexDump.hexStringToByteArray : tableswitch($c4) {     case 48: >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : if z0 == 0
org.apache.xml.security.utils.HexDump.hexStringToByteArray : if z0 == 0 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : z0 = 0
org.apache.xml.security.utils.HexDump.hexStringToByteArray : z0 = 0 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : goto [?= i1 = i1 + 1]
org.apache.xml.security.utils.HexDump.hexStringToByteArray : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : i1 = i1 + 1
org.apache.xml.security.utils.HexDump.hexStringToByteArray : i1 = i1 + 1 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()]
org.apache.xml.security.utils.HexDump.hexStringToByteArray : goto [?= $i3 = virtualinvoke r0.<java.lang.String: int length()>()] >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : $b5 = b0 | 0
org.apache.xml.security.utils.HexDump.hexStringToByteArray : $b5 = b0 | 0 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = (byte) $b5
org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = (byte) $b5 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(b0)
org.apache.xml.security.utils.HexDump.hexStringToByteArray : virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(b0) >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = -96
org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = -96 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : $b15 = b0 | 10
org.apache.xml.security.utils.HexDump.hexStringToByteArray : $b15 = b0 | 10 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = (byte) $b15
org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = (byte) $b15 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : $b6 = b0 | 1
org.apache.xml.security.utils.HexDump.hexStringToByteArray : $b6 = b0 | 1 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = (byte) $b6
org.apache.xml.security.utils.HexDump.hexStringToByteArray : b0 = (byte) $b6 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : if z0 != 0
org.apache.xml.security.utils.HexDump.hexStringToByteArray : if z0 != 0 >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : $r3 = new java.lang.RuntimeException
org.apache.xml.security.utils.HexDump.hexStringToByteArray : $r3 = new java.lang.RuntimeException >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("The String did not contain an equal number of hex digits")
org.apache.xml.security.utils.HexDump.hexStringToByteArray : specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("The String did not contain an equal number of hex digits") >>>>>>>> org.apache.xml.security.utils.HexDump.hexStringToByteArray : throw $r3
