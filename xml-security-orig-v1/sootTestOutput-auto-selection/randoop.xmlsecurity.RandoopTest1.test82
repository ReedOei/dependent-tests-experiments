org.apache.xml.security.utils.I18n.getExceptionMessage : $r1 = <org.apache.xml.security.utils.I18n: java.util.ResourceBundle resourceBundle> >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0)
org.apache.xml.security.utils.I18n.getExceptionMessage : r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : r5 = $r4
org.apache.xml.security.utils.I18n.getExceptionMessage : r5 = $r4 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $z0 = staticinvoke <org.apache.xml.security.Init: boolean isInitialized()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $z0 = staticinvoke <org.apache.xml.security.Init: boolean isInitialized()>() >>>>>>>> org.apache.xml.security.Init.isInitialized : $z0 = <org.apache.xml.security.Init: boolean _alreadyInitialized>
org.apache.xml.security.Init.isInitialized : $z0 = <org.apache.xml.security.Init: boolean _alreadyInitialized> >>>>>>>> org.apache.xml.security.Init.isInitialized : return $z0
org.apache.xml.security.Init.isInitialized : return $z0 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : if $z0 == 0
org.apache.xml.security.utils.I18n.getExceptionMessage : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r6 = new java.lang.StringBuilder
org.apache.xml.security.utils.I18n.getExceptionMessage : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No message with ID \"")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No message with ID \"") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.xml.security.utils.I18n.getExceptionMessage : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" found in resource bundle \"")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" found in resource bundle \"") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org/apache/xml/security/resource/xmlsecurity")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org/apache/xml/security/resource/xmlsecurity") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : return $r12
org.apache.xml.security.utils.I18n.getExceptionMessage : return $r12 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r4 = newarray (java.lang.Object)[1]
org.apache.xml.security.utils.I18n.getExceptionMessage : $r4 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r5 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $r5 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r4[0] = $r5
org.apache.xml.security.utils.I18n.getExceptionMessage : $r4[0] = $r5 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : r2 = $r4
org.apache.xml.security.utils.I18n.getExceptionMessage : r2 = $r4 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r6 = <org.apache.xml.security.utils.I18n: java.util.ResourceBundle resourceBundle>
org.apache.xml.security.utils.I18n.getExceptionMessage : $r6 = <org.apache.xml.security.utils.I18n: java.util.ResourceBundle resourceBundle> >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r7 = virtualinvoke $r6.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0)
org.apache.xml.security.utils.I18n.getExceptionMessage : $r7 = virtualinvoke $r6.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : r10 = $r9
org.apache.xml.security.utils.I18n.getExceptionMessage : r10 = $r9 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r11 = new java.lang.StringBuilder
org.apache.xml.security.utils.I18n.getExceptionMessage : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No message with ID \"")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No message with ID \"") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.xml.security.utils.I18n.getExceptionMessage : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" found in resource bundle \"")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" found in resource bundle \"") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org/apache/xml/security/resource/xmlsecurity")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org/apache/xml/security/resource/xmlsecurity") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". Original Exception was a ")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". Original Exception was a ") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r17 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $r17 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.xml.security.utils.I18n.getExceptionMessage : $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and message ")
org.apache.xml.security.utils.I18n.getExceptionMessage : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and message ") >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r21 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $r21 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.xml.security.utils.I18n.getExceptionMessage : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : return $r23
org.apache.xml.security.utils.I18n.getExceptionMessage : return $r23 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI : $r1 = r0.<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI _cxpathAPI>
org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI : $r1 = r0.<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI _cxpathAPI> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI : return $r1
org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI : return $r1 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $z0 = virtualinvoke r0.<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>()
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $z0 = virtualinvoke r0.<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>() >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $r1 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy>
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $r1 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : if $r1 == null
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : if $r1 == null >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $r2 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set _inputNodeSet>
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $r2 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set _inputNodeSet> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : if $r2 != null
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : if $r2 != null >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $z0 = 1
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $z0 = 1 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : goto [?= return $z0]
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : goto [?= return $z0] >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : return $z0
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : return $z0 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : if $z0 == 0
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : if $z0 == 0 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $r5 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy>
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $r5 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : virtualinvoke $r5.<java.io.InputStream: void reset()>()
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : virtualinvoke $r5.<java.io.InputStream: void reset()>() >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $r6 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy>
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $r6 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : return $r6
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : return $r6 >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : n0 = null
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : n0 = null >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : $r3 = new java.io.ByteArrayOutputStream
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : $r3 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r1 = $r3
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r1 = $r3 >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r2 = newarray (byte)[1024]
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r2 = newarray (byte)[1024] >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2) >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : i0 = $i1
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : i0 = $i1 >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : if $i1 <= 0
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : if $i1 <= 0 >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, i0)
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, i0) >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : goto [?= $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)]
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : goto [?= $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)] >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : return r4
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : return r4 >>>>>>>> org.apache.xml.security.c14n.helper.NonNSAttrCompare.compare : r3 = (org.w3c.dom.Attr) r1
