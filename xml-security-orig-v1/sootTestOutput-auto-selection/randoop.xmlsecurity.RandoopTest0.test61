org.apache.xml.security.utils.Constants.setSignatureSpecNSprefix : staticinvoke <org.apache.xml.security.utils.ElementProxy: void setDefaultPrefix(java.lang.String,java.lang.String)>("http://www.w3.org/2000/09/xmldsig#", r0) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r2 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings>
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r2 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r7 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r7 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z0 == 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r4 = (java.lang.String) $r8
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r4 = (java.lang.String) $r8 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r9 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings>
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r9 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r5 = (java.lang.String) $r10
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r5 = (java.lang.String) $r10 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z1 == 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z1 == 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z2 != 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z2 != 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r11 = newarray (java.lang.Object)[3]
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r11 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r11[0] = r1
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r11[0] = r1 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r11[1] = r0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r11[1] = r0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r11[2] = r4
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r11[2] = r4 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r6 = $r11
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r6 = $r11 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r12 = new org.apache.xml.security.exceptions.XMLSecurityException
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r12 = new org.apache.xml.security.exceptions.XMLSecurityException >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : specialinvoke $r12.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>("prefix.AlreadyAssigned", r6)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : specialinvoke $r12.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>("prefix.AlreadyAssigned", r6) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $r1 = <org.apache.xml.security.utils.I18n: java.util.ResourceBundle resourceBundle>
org.apache.xml.security.utils.I18n.getExceptionMessage : $r1 = <org.apache.xml.security.utils.I18n: java.util.ResourceBundle resourceBundle> >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0)
org.apache.xml.security.utils.I18n.getExceptionMessage : r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : r5 = $r4
org.apache.xml.security.utils.I18n.getExceptionMessage : r5 = $r4 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : $z0 = staticinvoke <org.apache.xml.security.Init: boolean isInitialized()>()
org.apache.xml.security.utils.I18n.getExceptionMessage : $z0 = staticinvoke <org.apache.xml.security.Init: boolean isInitialized()>() >>>>>>>> org.apache.xml.security.Init.isInitialized : $z0 = <org.apache.xml.security.Init: boolean _alreadyInitialized>
org.apache.xml.security.Init.isInitialized : $z0 = <org.apache.xml.security.Init: boolean _alreadyInitialized> >>>>>>>> org.apache.xml.security.Init.isInitialized : return $z0
org.apache.xml.security.Init.isInitialized : return $z0 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : if $z0 == 0
org.apache.xml.security.utils.I18n.getExceptionMessage : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.I18n.getExceptionMessage : return "You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library."
org.apache.xml.security.utils.I18n.getExceptionMessage : return "You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library." >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : throw $r12
