org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r2 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r7 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r7 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z0 == 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r4 = (java.lang.String) $r8
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r4 = (java.lang.String) $r8 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r9 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings>
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r9 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r5 = (java.lang.String) $r10
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r5 = (java.lang.String) $r10 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z1 == 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z1 == 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z2 != 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z2 != 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r13 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings>
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r13 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI : $r1 = r0.<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI _cxpathAPI>
org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI : $r1 = r0.<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI _cxpathAPI> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI : return $r1
org.apache.xml.security.signature.XMLSignatureInput.getCachedXPathAPI : return $r1 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $z0 = virtualinvoke r0.<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>()
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $z0 = virtualinvoke r0.<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>() >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $r1 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy>
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $r1 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : if $r1 == null
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : if $r1 == null >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $r2 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set _inputNodeSet>
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $r2 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set _inputNodeSet> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : if $r2 != null
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : if $r2 != null >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $z0 = 1
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : $z0 = 1 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : goto [?= return $z0]
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : goto [?= return $z0] >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : return $z0
org.apache.xml.security.signature.XMLSignatureInput.isOctetStream : return $z0 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : if $z0 == 0
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : if $z0 == 0 >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $r5 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy>
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $r5 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : virtualinvoke $r5.<java.io.InputStream: void reset()>()
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : virtualinvoke $r5.<java.io.InputStream: void reset()>() >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $r6 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy>
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : $r6 = r0.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream _inputOctetStreamProxy> >>>>>>>> org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : return $r6
org.apache.xml.security.signature.XMLSignatureInput.getOctetStream : return $r6 >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : n0 = null
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : n0 = null >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : $r3 = new java.io.ByteArrayOutputStream
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : $r3 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r1 = $r3
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r1 = $r3 >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r2 = newarray (byte)[1024]
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r2 = newarray (byte)[1024] >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2) >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : i0 = $i1
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : i0 = $i1 >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : if $i1 <= 0
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : if $i1 <= 0 >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, i0)
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, i0) >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : goto [?= $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)]
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : goto [?= $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)] >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.xml.security.utils.JavaUtils.getBytesFromStream : return r4
org.apache.xml.security.utils.JavaUtils.getBytesFromStream : return r4 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i1 = lengthof r0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i1 = lengthof r0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i2 = $i1 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i2 = $i1 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i3 = $i2 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i3 = $i2 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1 = newarray (byte)[$i3]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1 = newarray (byte)[$i3] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = 0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = 0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i4 = lengthof r0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i4 = lengthof r0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : if i0 == $i4
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : if i0 == $i4 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i5 = i0 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i5 = i0 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c6 = r0[i0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c6 = r0[i0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c7 = $c6 >>> 8
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c7 = $c6 >>> 8 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b8 = (byte) $c7
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b8 = (byte) $c7 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i5] = $b8
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i5] = $b8 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i9 = i0 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i9 = i0 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i10 = $i9 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i10 = $i9 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c11 = r0[i0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c11 = r0[i0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b12 = (byte) $c11
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b12 = (byte) $c11 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i10] = $b12
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i10] = $b12 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = i0 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = i0 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : goto [?= $i4 = lengthof r0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : goto [?= $i4 = lengthof r0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : return r1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : return r1 >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>()
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>() >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : virtualinvoke r3.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1)
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : virtualinvoke r3.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1) >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : r4 = virtualinvoke r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>()
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : r4 = virtualinvoke r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>() >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : if r1 != null
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : if r1 != null >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : r10 = virtualinvoke r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r1)
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : r10 = virtualinvoke r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r1) >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : r20 = $r19
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : r20 = $r19 >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : $r21 = new java.io.IOException
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : $r21 = new java.io.IOException >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : $r22 = virtualinvoke r20.<org.xml.sax.SAXException: java.lang.String getMessage()>()
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : $r22 = virtualinvoke r20.<org.xml.sax.SAXException: java.lang.String getMessage()>() >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r22)
org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r22) >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineLoad : throw $r21
