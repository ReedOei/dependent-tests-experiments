org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r2 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r7 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r7 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z0 == 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r4 = (java.lang.String) $r8
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r4 = (java.lang.String) $r8 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r9 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings>
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r9 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r5 = (java.lang.String) $r10
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r5 = (java.lang.String) $r10 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z1 == 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z1 == 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z2 != 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z2 != 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r13 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings>
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r13 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i1 = lengthof r0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i1 = lengthof r0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i2 = $i1 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i2 = $i1 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i3 = $i2 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i3 = $i2 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1 = newarray (byte)[$i3]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1 = newarray (byte)[$i3] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = 0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = 0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i4 = lengthof r0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i4 = lengthof r0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : if i0 == $i4
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : if i0 == $i4 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i5 = i0 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i5 = i0 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c6 = r0[i0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c6 = r0[i0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c7 = $c6 >>> 8
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c7 = $c6 >>> 8 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b8 = (byte) $c7
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b8 = (byte) $c7 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i5] = $b8
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i5] = $b8 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i9 = i0 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i9 = i0 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i10 = $i9 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i10 = $i9 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c11 = r0[i0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c11 = r0[i0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b12 = (byte) $c11
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b12 = (byte) $c11 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i10] = $b12
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i10] = $b12 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = i0 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = i0 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : goto [?= $i4 = lengthof r0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : goto [?= $i4 = lengthof r0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : return r1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : return r1 >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineGetKey : $r3 = r0.<org.apache.xml.security.keys.provider.ApacheKeyStore: org.apache.xml.security.keys.provider.KeyStoreElement _keyStoreElement>
org.apache.xml.security.keys.provider.ApacheKeyStore.engineGetKey : $r3 = r0.<org.apache.xml.security.keys.provider.ApacheKeyStore: org.apache.xml.security.keys.provider.KeyStoreElement _keyStoreElement> >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineGetKey : $r4 = virtualinvoke $r3.<org.apache.xml.security.keys.provider.KeyStoreElement: java.security.Key getKey(java.lang.String,char[])>(r1, r2)
