org.apache.xml.security.Init.init : $z0 = <org.apache.xml.security.Init: boolean _alreadyInitialized> >>>>>>>> org.apache.xml.security.Init.init : if $z0 != 0
org.apache.xml.security.Init.init : if $z0 != 0 >>>>>>>> org.apache.xml.security.Init.init : <org.apache.xml.security.Init: boolean _alreadyInitialized> = 1
org.apache.xml.security.Init.init : <org.apache.xml.security.Init: boolean _alreadyInitialized> = 1 >>>>>>>> org.apache.xml.security.Init.init : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.Init.init : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.Init.init : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.Init.init : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.Init.init : $r37 = new java.security.SecureRandom
org.apache.xml.security.Init.init : $r37 = new java.security.SecureRandom >>>>>>>> org.apache.xml.security.Init.init : specialinvoke $r37.<java.security.SecureRandom: void <init>()>()
org.apache.xml.security.Init.init : specialinvoke $r37.<java.security.SecureRandom: void <init>()>() >>>>>>>> org.apache.xml.security.Init.init : staticinvoke <org.apache.xml.security.utils.PRNG: void init(java.security.SecureRandom)>($r37)
org.apache.xml.security.Init.init : staticinvoke <org.apache.xml.security.utils.PRNG: void init(java.security.SecureRandom)>($r37) >>>>>>>> org.apache.xml.security.utils.PRNG.init : $r1 = <org.apache.xml.security.utils.PRNG: org.apache.xml.security.utils.PRNG _prng>
org.apache.xml.security.utils.PRNG.init : $r1 = <org.apache.xml.security.utils.PRNG: org.apache.xml.security.utils.PRNG _prng> >>>>>>>> org.apache.xml.security.utils.PRNG.init : if $r1 != null
org.apache.xml.security.utils.PRNG.init : if $r1 != null >>>>>>>> org.apache.xml.security.Init.init : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.Init.init : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.Init.init : l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.Init.init : l3 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.Init.init : r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>()
org.apache.xml.security.Init.init : r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>() >>>>>>>> org.apache.xml.security.Init.init : virtualinvoke r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1)
org.apache.xml.security.Init.init : virtualinvoke r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1) >>>>>>>> org.apache.xml.security.Init.init : virtualinvoke r0.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(0)
org.apache.xml.security.Init.init : virtualinvoke r0.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(0) >>>>>>>> org.apache.xml.security.Init.init : r1 = virtualinvoke r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>()
org.apache.xml.security.Init.init : r1 = virtualinvoke r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>() >>>>>>>> org.apache.xml.security.Init.init : $r38 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xml.security.Init")
org.apache.xml.security.Init.init : $r38 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xml.security.Init") >>>>>>>> org.apache.xml.security.Init.init : r2 = virtualinvoke $r38.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("resource/config.xml")
org.apache.xml.security.Init.init : r2 = virtualinvoke $r38.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("resource/config.xml") >>>>>>>> org.apache.xml.security.Init.init : r3 = virtualinvoke r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r2)
org.apache.xml.security.Init.init : r3 = virtualinvoke r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r2) >>>>>>>> org.apache.xml.security.Init.init : r311 = $r310
org.apache.xml.security.Init.init : r311 = $r310 >>>>>>>> org.apache.xml.security.Init.init : $r312 = <org.apache.xml.security.Init: org.apache.log4j.Category cat>
org.apache.xml.security.Init.init : $r312 = <org.apache.xml.security.Init: org.apache.log4j.Category cat> >>>>>>>> org.apache.xml.security.Init.init : virtualinvoke $r312.<org.apache.log4j.Category: void fatal(java.lang.Object,java.lang.Throwable)>("Bad: ", r311)
org.apache.xml.security.Init.init : virtualinvoke $r312.<org.apache.log4j.Category: void fatal(java.lang.Object,java.lang.Throwable)>("Bad: ", r311) >>>>>>>> org.apache.xml.security.Init.init : virtualinvoke r311.<java.lang.Exception: void printStackTrace()>()
