org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r2 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r7 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r7 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z0 == 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z0 == 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r4 = (java.lang.String) $r8
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r4 = (java.lang.String) $r8 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r9 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings>
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r9 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r5 = (java.lang.String) $r10
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : r5 = (java.lang.String) $r10 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z1 == 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z1 == 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0) >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z2 != 0
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : if $z2 != 0 >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r13 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings>
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : $r13 = <org.apache.xml.security.utils.ElementProxy: java.util.HashMap _prefixMappings> >>>>>>>> org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.xml.security.utils.ElementProxy.setDefaultPrefix : virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i1 = lengthof r0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i1 = lengthof r0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i2 = $i1 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i2 = $i1 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i3 = $i2 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i3 = $i2 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1 = newarray (byte)[$i3]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1 = newarray (byte)[$i3] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = 0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = 0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i4 = lengthof r0
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i4 = lengthof r0 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : if i0 == $i4
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : if i0 == $i4 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i5 = i0 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i5 = i0 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c6 = r0[i0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c6 = r0[i0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c7 = $c6 >>> 8
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c7 = $c6 >>> 8 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b8 = (byte) $c7
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b8 = (byte) $c7 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i5] = $b8
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i5] = $b8 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i9 = i0 * 2
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i9 = i0 * 2 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i10 = $i9 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $i10 = $i9 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c11 = r0[i0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $c11 = r0[i0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b12 = (byte) $c11
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : $b12 = (byte) $c11 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i10] = $b12
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : r1[$i10] = $b12 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = i0 + 1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : i0 = i0 + 1 >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : goto [?= $i4 = lengthof r0]
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : goto [?= $i4 = lengthof r0] >>>>>>>> org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : return r1
org.apache.xml.security.keys.provider.KeyElement.PKCS12PasswordToBytes : return r1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.utils.HexDump.byteArrayToHexString : staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : $r2 = new java.lang.StringBuffer
org.apache.xml.security.utils.HexDump.byteArrayToHexString : $r2 = new java.lang.StringBuffer >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
org.apache.xml.security.utils.HexDump.byteArrayToHexString : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : r1 = $r2
org.apache.xml.security.utils.HexDump.byteArrayToHexString : r1 = $r2 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : i1 = lengthof r0
org.apache.xml.security.utils.HexDump.byteArrayToHexString : i1 = lengthof r0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : i2 = 0
org.apache.xml.security.utils.HexDump.byteArrayToHexString : i2 = 0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : if i2 >= i1
org.apache.xml.security.utils.HexDump.byteArrayToHexString : if i2 >= i1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : $b3 = r0[i2]
org.apache.xml.security.utils.HexDump.byteArrayToHexString : $b3 = r0[i2] >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : staticinvoke <org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>($b3, r1)
org.apache.xml.security.utils.HexDump.byteArrayToHexString : staticinvoke <org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>($b3, r1) >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2 = newarray (char)[16]
org.apache.xml.security.utils.HexDump.byte2hex : $r2 = newarray (char)[16] >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[0] = 48
org.apache.xml.security.utils.HexDump.byte2hex : $r2[0] = 48 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[1] = 49
org.apache.xml.security.utils.HexDump.byte2hex : $r2[1] = 49 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[2] = 50
org.apache.xml.security.utils.HexDump.byte2hex : $r2[2] = 50 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[3] = 51
org.apache.xml.security.utils.HexDump.byte2hex : $r2[3] = 51 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[4] = 52
org.apache.xml.security.utils.HexDump.byte2hex : $r2[4] = 52 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[5] = 53
org.apache.xml.security.utils.HexDump.byte2hex : $r2[5] = 53 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[6] = 54
org.apache.xml.security.utils.HexDump.byte2hex : $r2[6] = 54 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[7] = 55
org.apache.xml.security.utils.HexDump.byte2hex : $r2[7] = 55 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[8] = 56
org.apache.xml.security.utils.HexDump.byte2hex : $r2[8] = 56 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[9] = 57
org.apache.xml.security.utils.HexDump.byte2hex : $r2[9] = 57 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[10] = 65
org.apache.xml.security.utils.HexDump.byte2hex : $r2[10] = 65 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[11] = 66
org.apache.xml.security.utils.HexDump.byte2hex : $r2[11] = 66 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[12] = 67
org.apache.xml.security.utils.HexDump.byte2hex : $r2[12] = 67 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[13] = 68
org.apache.xml.security.utils.HexDump.byte2hex : $r2[13] = 68 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[14] = 69
org.apache.xml.security.utils.HexDump.byte2hex : $r2[14] = 69 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $r2[15] = 70
org.apache.xml.security.utils.HexDump.byte2hex : $r2[15] = 70 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : r1 = $r2
org.apache.xml.security.utils.HexDump.byte2hex : r1 = $r2 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $s3 = b0 & 240
org.apache.xml.security.utils.HexDump.byte2hex : $s3 = b0 & 240 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : s1 = $s3 >> 4
org.apache.xml.security.utils.HexDump.byte2hex : s1 = $s3 >> 4 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : b2 = b0 & 15
org.apache.xml.security.utils.HexDump.byte2hex : b2 = b0 & 15 >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $c4 = r1[s1]
org.apache.xml.security.utils.HexDump.byte2hex : $c4 = r1[s1] >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4)
org.apache.xml.security.utils.HexDump.byte2hex : virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4) >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : $c5 = r1[b2]
org.apache.xml.security.utils.HexDump.byte2hex : $c5 = r1[b2] >>>>>>>> org.apache.xml.security.utils.HexDump.byte2hex : virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5)
org.apache.xml.security.utils.HexDump.byte2hex : virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5) >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : $i4 = i1 - 1
org.apache.xml.security.utils.HexDump.byteArrayToHexString : $i4 = i1 - 1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : if i2 >= $i4
org.apache.xml.security.utils.HexDump.byteArrayToHexString : if i2 >= $i4 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : $z0 = 1
org.apache.xml.security.utils.HexDump.byteArrayToHexString : $z0 = 1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : goto [?= $z1 = <org.apache.xml.security.utils.HexDump: boolean WITH_BYTE_SEPARATOR>]
org.apache.xml.security.utils.HexDump.byteArrayToHexString : goto [?= $z1 = <org.apache.xml.security.utils.HexDump: boolean WITH_BYTE_SEPARATOR>] >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : $z1 = <org.apache.xml.security.utils.HexDump: boolean WITH_BYTE_SEPARATOR>
org.apache.xml.security.utils.HexDump.byteArrayToHexString : $z1 = <org.apache.xml.security.utils.HexDump: boolean WITH_BYTE_SEPARATOR> >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : $z2 = $z0 & $z1
org.apache.xml.security.utils.HexDump.byteArrayToHexString : $z2 = $z0 & $z1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : if $z2 == 0
org.apache.xml.security.utils.HexDump.byteArrayToHexString : if $z2 == 0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : i2 = i2 + 1
org.apache.xml.security.utils.HexDump.byteArrayToHexString : i2 = i2 + 1 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : goto [?= (branch)]
org.apache.xml.security.utils.HexDump.byteArrayToHexString : goto [?= (branch)] >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : $z0 = 0
org.apache.xml.security.utils.HexDump.byteArrayToHexString : $z0 = 0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.xml.security.utils.HexDump.byteArrayToHexString : $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : return $r4
org.apache.xml.security.utils.HexDump.byteArrayToHexString : return $r4 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : i3 = lengthof r0
org.apache.xml.security.utils.HexDump.byteArrayToHexString : i3 = lengthof r0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : i5 = i1 + i0
org.apache.xml.security.utils.HexDump.byteArrayToHexString : i5 = i1 + i0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : if i3 >= i5
org.apache.xml.security.utils.HexDump.byteArrayToHexString : if i3 >= i5 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : i4 = 0 + i0
org.apache.xml.security.utils.HexDump.byteArrayToHexString : i4 = 0 + i0 >>>>>>>> org.apache.xml.security.utils.HexDump.byteArrayToHexString : if i4 >= i5
org.apache.xml.security.utils.HexDump.byteArrayToHexString : if i4 >= i5 >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineSetKeyEntry : $r4 = r0.<org.apache.xml.security.keys.provider.ApacheKeyStore: org.apache.xml.security.keys.provider.KeyStoreElement _keyStoreElement>
org.apache.xml.security.keys.provider.ApacheKeyStore.engineSetKeyEntry : $r4 = r0.<org.apache.xml.security.keys.provider.ApacheKeyStore: org.apache.xml.security.keys.provider.KeyStoreElement _keyStoreElement> >>>>>>>> org.apache.xml.security.keys.provider.ApacheKeyStore.engineSetKeyEntry : virtualinvoke $r4.<org.apache.xml.security.keys.provider.KeyStoreElement: void setKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])>(r1, r2, r3)
