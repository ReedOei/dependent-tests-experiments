org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday : $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType clockhourOfHalfday()>() >>>>>>>> org.joda.time.DateTimeFieldType.clockhourOfHalfday : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE>
org.joda.time.DateTimeFieldType.clockhourOfHalfday : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.clockhourOfHalfday : return $r0
org.joda.time.DateTimeFieldType.clockhourOfHalfday : return $r0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday : $r2 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDecimal(org.joda.time.DateTimeFieldType,int,int)>($r1, i0, 2)
org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday : $r2 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDecimal(org.joda.time.DateTimeFieldType,int,int)>($r1, i0, 2) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if r1 != null
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if r1 != null >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if i1 >= i0
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if i1 >= i0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : i1 = i0
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : i1 = i0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if i0 < 0
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if i0 < 0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if i1 > 0
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if i1 > 0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if i0 > 1
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : if i0 > 1 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : $r6 = new org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : $r6 = new org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : specialinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: void <init>(org.joda.time.DateTimeFieldType,int,boolean,int)>(r1, i1, 0, i0)
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : specialinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: void <init>(org.joda.time.DateTimeFieldType,int,boolean,int)>(r1, i1, 0, i0) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : $r7 = specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>($r6)
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : $r7 = specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>($r6) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.append0 : r0.<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object iFormatter> = null
org.joda.time.format.DateTimeFormatterBuilder.append0 : r0.<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object iFormatter> = null >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.append0 : $r2 = r0.<org.joda.time.format.DateTimeFormatterBuilder: java.util.ArrayList iElementPairs>
org.joda.time.format.DateTimeFormatterBuilder.append0 : $r2 = r0.<org.joda.time.format.DateTimeFormatterBuilder: java.util.ArrayList iElementPairs> >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.append0 : virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.joda.time.format.DateTimeFormatterBuilder.append0 : virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.append0 : $r3 = r0.<org.joda.time.format.DateTimeFormatterBuilder: java.util.ArrayList iElementPairs>
org.joda.time.format.DateTimeFormatterBuilder.append0 : $r3 = r0.<org.joda.time.format.DateTimeFormatterBuilder: java.util.ArrayList iElementPairs> >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.append0 : virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.joda.time.format.DateTimeFormatterBuilder.append0 : virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.append0 : return r0
org.joda.time.format.DateTimeFormatterBuilder.append0 : return r0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : return $r7
org.joda.time.format.DateTimeFormatterBuilder.appendDecimal : return $r7 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday : return $r2
org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday : return $r2 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek : $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>()
org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek : $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>() >>>>>>>> org.joda.time.DateTimeFieldType.dayOfWeek : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType DAY_OF_WEEK_TYPE>
org.joda.time.DateTimeFieldType.dayOfWeek : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType DAY_OF_WEEK_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.dayOfWeek : return $r0
org.joda.time.DateTimeFieldType.dayOfWeek : return $r0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek : $r2 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDecimal(org.joda.time.DateTimeFieldType,int,int)>($r1, i0, 1)
org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek : $r2 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDecimal(org.joda.time.DateTimeFieldType,int,int)>($r1, i0, 1) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek : return $r2
org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek : return $r2 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear : $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>()
org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear : $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>() >>>>>>>> org.joda.time.DateTimeFieldType.weekyear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType WEEKYEAR_TYPE>
org.joda.time.DateTimeFieldType.weekyear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType WEEKYEAR_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.weekyear : return $r0
org.joda.time.DateTimeFieldType.weekyear : return $r0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear : $r2 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)>($r1, i0, i1)
org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear : $r2 = virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)>($r1, i0, i1) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if r1 != null
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if r1 != null >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if i1 >= i0
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if i1 >= i0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : i1 = i0
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : i1 = i0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if i0 < 0
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if i0 < 0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if i1 > 0
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if i1 > 0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if i0 > 1
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : if i0 > 1 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : $r6 = new org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : $r6 = new org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : specialinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: void <init>(org.joda.time.DateTimeFieldType,int,boolean,int)>(r1, i1, 1, i0)
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : specialinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: void <init>(org.joda.time.DateTimeFieldType,int,boolean,int)>(r1, i1, 1, i0) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : $r7 = specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>($r6)
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : $r7 = specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>($r6) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : return $r7
org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal : return $r7 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear : return $r2
