org.joda.time.field.FieldUtils.getWrappedValue : $i4 = i0 + i1 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $i5 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int)>($i4, i2, i3)
org.joda.time.field.FieldUtils.getWrappedValue : $i5 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int)>($i4, i2, i3) >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : if i1 < i2
org.joda.time.field.FieldUtils.getWrappedValue : if i1 < i2 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $r0 = new java.lang.IllegalArgumentException
org.joda.time.field.FieldUtils.getWrappedValue : $r0 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MIN > MAX")
org.joda.time.field.FieldUtils.getWrappedValue : specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MIN > MAX") >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : throw $r0
