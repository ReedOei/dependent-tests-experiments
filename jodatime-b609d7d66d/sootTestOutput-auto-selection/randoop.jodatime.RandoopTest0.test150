org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks> >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : if $r0 != null
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : if $r0 != null >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r1 = new org.joda.time.format.PeriodFormatterBuilder
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r1 = new org.joda.time.format.PeriodFormatterBuilder >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> = 1
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> = 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 2
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits> = 10
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits> = 10 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues> = 0
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues> = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>
org.joda.time.format.PeriodFormatterBuilder.clear : $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : if $r1 != null
org.joda.time.format.PeriodFormatterBuilder.clear : if $r1 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : $r2 = new java.util.ArrayList
org.joda.time.format.PeriodFormatterBuilder.clear : $r2 = new java.util.ArrayList >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.joda.time.format.PeriodFormatterBuilder.clear : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> = $r2
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> = $r2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : goto [?= r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = 0]
org.joda.time.format.PeriodFormatterBuilder.clear : goto [?= r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = 0] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = 0
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> = 0
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : $r4 = newarray (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter)[10]
org.joda.time.format.PeriodFormatterBuilder.clear : $r4 = newarray (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter)[10] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r4
org.joda.time.format.PeriodFormatterBuilder.clear : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r4 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r2 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)>("P")
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r2 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)>("P") >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendLiteral : if r1 != null
org.joda.time.format.PeriodFormatterBuilder.appendLiteral : if r1 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendLiteral : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>()
org.joda.time.format.PeriodFormatterBuilder.appendLiteral : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clearPrefix : $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>
org.joda.time.format.PeriodFormatterBuilder.clearPrefix : $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clearPrefix : if $r1 == null
org.joda.time.format.PeriodFormatterBuilder.clearPrefix : if $r1 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.clearPrefix : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null
org.joda.time.format.PeriodFormatterBuilder.clearPrefix : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendLiteral : $r4 = new org.joda.time.format.PeriodFormatterBuilder$Literal
org.joda.time.format.PeriodFormatterBuilder.appendLiteral : $r4 = new org.joda.time.format.PeriodFormatterBuilder$Literal >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendLiteral : specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$Literal: void <init>(java.lang.String)>(r1)
org.joda.time.format.PeriodFormatterBuilder.appendLiteral : specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$Literal: void <init>(java.lang.String)>(r1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendLiteral : r2 = $r4
org.joda.time.format.PeriodFormatterBuilder.appendLiteral : r2 = $r4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendLiteral : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r2, r2)
org.joda.time.format.PeriodFormatterBuilder.appendLiteral : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r2, r2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>
org.joda.time.format.PeriodFormatterBuilder.append0 : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.joda.time.format.PeriodFormatterBuilder.append0 : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>
org.joda.time.format.PeriodFormatterBuilder.append0 : $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2)
org.joda.time.format.PeriodFormatterBuilder.append0 : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : $z2 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter>
org.joda.time.format.PeriodFormatterBuilder.append0 : $z2 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : if r1 != null
org.joda.time.format.PeriodFormatterBuilder.append0 : if r1 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : $z3 = 0
org.joda.time.format.PeriodFormatterBuilder.append0 : $z3 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : $z4 = $z2 | $z3
org.joda.time.format.PeriodFormatterBuilder.append0 : $z4 = $z2 | $z3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = $z4
org.joda.time.format.PeriodFormatterBuilder.append0 : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = $z4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : $z5 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser>
org.joda.time.format.PeriodFormatterBuilder.append0 : $z5 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : if r2 != null
org.joda.time.format.PeriodFormatterBuilder.append0 : if r2 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : $z6 = 0
org.joda.time.format.PeriodFormatterBuilder.append0 : $z6 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : $z7 = $z5 | $z6
org.joda.time.format.PeriodFormatterBuilder.append0 : $z7 = $z5 | $z6 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> = $z7
org.joda.time.format.PeriodFormatterBuilder.append0 : r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> = $z7 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.append0 : return r0
org.joda.time.format.PeriodFormatterBuilder.append0 : return r0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendLiteral : return r0
org.joda.time.format.PeriodFormatterBuilder.appendLiteral : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r3 = virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder printZeroAlways()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r3 = virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder printZeroAlways()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.printZeroAlways : r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 4
org.joda.time.format.PeriodFormatterBuilder.printZeroAlways : r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.printZeroAlways : return r0
org.joda.time.format.PeriodFormatterBuilder.printZeroAlways : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r4 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(4)
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r4 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(4) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits : r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> = i0
org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits : r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> = i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits : return r0
org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r5 = virtualinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r5 = virtualinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendYears : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(0)
org.joda.time.format.PeriodFormatterBuilder.appendYears : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits>
org.joda.time.format.PeriodFormatterBuilder.appendField : $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int,int)>(i0, $i1)
org.joda.time.format.PeriodFormatterBuilder.appendField : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int,int)>(i0, $i1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $r1 = new org.joda.time.format.PeriodFormatterBuilder$FieldFormatter
org.joda.time.format.PeriodFormatterBuilder.appendField : $r1 = new org.joda.time.format.PeriodFormatterBuilder$FieldFormatter >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting>
org.joda.time.format.PeriodFormatterBuilder.appendField : $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits>
org.joda.time.format.PeriodFormatterBuilder.appendField : $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues>
org.joda.time.format.PeriodFormatterBuilder.appendField : $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>
org.joda.time.format.PeriodFormatterBuilder.appendField : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>
org.joda.time.format.PeriodFormatterBuilder.appendField : $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void <init>(int,int,int,boolean,int,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[],org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>(i1, $i2, $i3, $z0, i0, $r3, $r4, null)
org.joda.time.format.PeriodFormatterBuilder.appendField : specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void <init>(int,int,int,boolean,int,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[],org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>(i1, $i2, $i3, $z0, i0, $r3, $r4, null) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : r2 = $r1
org.joda.time.format.PeriodFormatterBuilder.appendField : r2 = $r1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r2, r2)
org.joda.time.format.PeriodFormatterBuilder.appendField : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r2, r2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>
org.joda.time.format.PeriodFormatterBuilder.appendField : $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : $r6[i0] = r2
org.joda.time.format.PeriodFormatterBuilder.appendField : $r6[i0] = r2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendField : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null
org.joda.time.format.PeriodFormatterBuilder.appendField : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendYears : return r0
org.joda.time.format.PeriodFormatterBuilder.appendYears : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r6 = virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>("-")
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r6 = virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>("-") >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r1, null, 1, 1)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r1, null, 1, 1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r1 == null
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r1 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r2 != null
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r2 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i0 = interfaceinvoke r4.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i0 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i0 != 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r8 = null
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r8 = null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i1 = interfaceinvoke r4.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i1 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i2 = i1 + -1
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i2 = i1 + -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if i2 < 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if i2 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $z2 = $r14 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $z2 = $r14 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $z2 == 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $z2 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i1 = i2 + -1
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i1 = i2 + -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : goto [?= i2 = i1 + -1]
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : goto [?= i2 = i1 + -1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r8 == null
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r8 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r9 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r4)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r9 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r4) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : $i0 = interfaceinvoke r0.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.createComposite : $i0 = interfaceinvoke r0.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : lookupswitch($i0) {     case 0:
org.joda.time.format.PeriodFormatterBuilder.createComposite : lookupswitch($i0) {     case 0: >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : $r8 = new org.joda.time.format.PeriodFormatterBuilder$Composite
org.joda.time.format.PeriodFormatterBuilder.createComposite : $r8 = new org.joda.time.format.PeriodFormatterBuilder$Composite >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : specialinvoke $r8.<org.joda.time.format.PeriodFormatterBuilder$Composite: void <init>(java.util.List)>(r0)
org.joda.time.format.PeriodFormatterBuilder.createComposite : specialinvoke $r8.<org.joda.time.format.PeriodFormatterBuilder$Composite: void <init>(java.util.List)>(r0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : i1 = 0
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : i1 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if i1 >= i0
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if i1 >= i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $z0 = r4 instanceof org.joda.time.format.PeriodPrinter
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $z0 = r4 instanceof org.joda.time.format.PeriodPrinter >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if $z0 == 0
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $z1 = r4 instanceof org.joda.time.format.PeriodFormatterBuilder$Composite
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $z1 = r4 instanceof org.joda.time.format.PeriodFormatterBuilder$Composite >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if $z1 == 0
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if $z1 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4)
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $i2 = i1 + 1
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $i2 = i1 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2)
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $z3 = r7 instanceof org.joda.time.format.PeriodParser
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $z3 = r7 instanceof org.joda.time.format.PeriodParser >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if $z3 == 0
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if $z3 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $z4 = r7 instanceof org.joda.time.format.PeriodFormatterBuilder$Composite
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : $z4 = r7 instanceof org.joda.time.format.PeriodFormatterBuilder$Composite >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if $z4 == 0
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : if $z4 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7)
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : i1 = i1 + 2
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : i1 = i1 + 2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$Composite.decompose : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : r2 = $r8
org.joda.time.format.PeriodFormatterBuilder.createComposite : r2 = $r8 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : $r9 = newarray (java.lang.Object)[2]
org.joda.time.format.PeriodFormatterBuilder.createComposite : $r9 = newarray (java.lang.Object)[2] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : $r9[0] = r2
org.joda.time.format.PeriodFormatterBuilder.createComposite : $r9[0] = r2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : $r9[1] = r2
org.joda.time.format.PeriodFormatterBuilder.createComposite : $r9[1] = r2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.createComposite : return $r9
org.joda.time.format.PeriodFormatterBuilder.createComposite : return $r9 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: void clear()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: void clear()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r17 = new org.joda.time.format.PeriodFormatterBuilder$Separator
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r17 = new org.joda.time.format.PeriodFormatterBuilder$Separator >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r18 = r9[0]
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r18 = r9[0] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r19 = (org.joda.time.format.PeriodPrinter) $r18
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r19 = (org.joda.time.format.PeriodPrinter) $r18 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r20 = r9[1]
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r20 = r9[1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r21 = (org.joda.time.format.PeriodParser) $r20
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r21 = (org.joda.time.format.PeriodParser) $r20 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r17.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>(r1, r2, r3, $r19, $r21, z0, z1)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r17.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>(r1, r2, r3, $r19, $r21, z0, z1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r10 = $r17
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r10 = $r17 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : return r0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : return r0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : return $r2
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : return $r2 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r7 = virtualinvoke $r6.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(2)
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r7 = virtualinvoke $r6.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(2) >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r8 = virtualinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String)>("W")
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r8 = virtualinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String)>("W") >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : if r1 != null
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : if r1 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : $r3 = new org.joda.time.format.PeriodFormatterBuilder$SimpleAffix
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : $r3 = new org.joda.time.format.PeriodFormatterBuilder$SimpleAffix >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: void <init>(java.lang.String)>(r1)
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: void <init>(java.lang.String)>(r1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : $r4 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r3)
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : $r4 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r3) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : if $r3 == null
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : if $r3 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = r1
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = r1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : return r0
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : return r0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendPrefix : return $r4
org.joda.time.format.PeriodFormatterBuilder.appendPrefix : return $r4 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r9 = virtualinvoke $r8.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r9 = virtualinvoke $r8.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendWeeks : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(2)
org.joda.time.format.PeriodFormatterBuilder.appendWeeks : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendWeeks : return r0
org.joda.time.format.PeriodFormatterBuilder.appendWeeks : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r10 = virtualinvoke $r9.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>("-")
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r10 = virtualinvoke $r9.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>("-") >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r15 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r15 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r8 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r15
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r8 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r15 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i3 = i2 + 1
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i3 = i2 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i4 = interfaceinvoke r4.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i4 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r4 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>($i3, $i4)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r4 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>($i3, $i4) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i5 = interfaceinvoke r4.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i5 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i5 != 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i5 != 0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r11 = virtualinvoke $r10.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r11 = virtualinvoke $r10.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendDays : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(3)
org.joda.time.format.PeriodFormatterBuilder.appendDays : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(3) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendDays : return r0
org.joda.time.format.PeriodFormatterBuilder.appendDays : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r12 = virtualinvoke $r11.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)>("T")
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r12 = virtualinvoke $r11.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)>("T") >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter : $r2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r1, null, 0, 1)
org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter : $r2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r1, null, 0, 1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter : return $r2
org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter : return $r2 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r13 = virtualinvoke $r12.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r13 = virtualinvoke $r12.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendHours : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(4)
org.joda.time.format.PeriodFormatterBuilder.appendHours : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(4) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendHours : return r0
org.joda.time.format.PeriodFormatterBuilder.appendHours : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r14 = virtualinvoke $r13.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>(":")
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r14 = virtualinvoke $r13.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>(":") >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r15 = virtualinvoke $r14.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r15 = virtualinvoke $r14.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendMinutes : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(5)
org.joda.time.format.PeriodFormatterBuilder.appendMinutes : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(5) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendMinutes : return r0
org.joda.time.format.PeriodFormatterBuilder.appendMinutes : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r16 = virtualinvoke $r15.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>(":")
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r16 = virtualinvoke $r15.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>(":") >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r17 = virtualinvoke $r16.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r17 = virtualinvoke $r16.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(9)
org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(9) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis : return r0
org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r18 = virtualinvoke $r17.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>()
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r18 = virtualinvoke $r17.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter>
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser>
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : r1 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)>($r2, $z0, $z1)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : r1 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)>($r2, $z0, $z1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : if z0 == 0
org.joda.time.format.PeriodFormatterBuilder.toFormatter : if z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : i0 = interfaceinvoke r0.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.toFormatter : i0 = interfaceinvoke r0.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : if i0 < 2
org.joda.time.format.PeriodFormatterBuilder.toFormatter : if i0 < 2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $z2 = $r4 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $z2 = $r4 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : if $z2 == 0
org.joda.time.format.PeriodFormatterBuilder.toFormatter : if $z2 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : r1 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r5
org.joda.time.format.PeriodFormatterBuilder.toFormatter : r1 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r5 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r6 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser access$000(org.joda.time.format.PeriodFormatterBuilder$Separator)>(r1)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r6 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser access$000(org.joda.time.format.PeriodFormatterBuilder$Separator)>(r1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Separator.access$000 : $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iAfterParser>
org.joda.time.format.PeriodFormatterBuilder$Separator.access$000 : $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iAfterParser> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Separator.access$000 : return $r1
org.joda.time.format.PeriodFormatterBuilder$Separator.access$000 : return $r1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : if $r6 != null
org.joda.time.format.PeriodFormatterBuilder.toFormatter : if $r6 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r7 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter access$100(org.joda.time.format.PeriodFormatterBuilder$Separator)>(r1)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r7 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter access$100(org.joda.time.format.PeriodFormatterBuilder$Separator)>(r1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Separator.access$100 : $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>
org.joda.time.format.PeriodFormatterBuilder$Separator.access$100 : $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Separator.access$100 : return $r1
org.joda.time.format.PeriodFormatterBuilder$Separator.access$100 : return $r1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : if $r7 != null
org.joda.time.format.PeriodFormatterBuilder.toFormatter : if $r7 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r8 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(2, i0)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r8 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(2, i0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : r2 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)>($r8, z0, z1)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : r2 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)>($r8, z0, z1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : r13 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r0)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : r13 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : if z1 == 0
org.joda.time.format.PeriodFormatterBuilder.toFormatter : if z1 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r20 = new org.joda.time.format.PeriodFormatter
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r20 = new org.joda.time.format.PeriodFormatter >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r21 = r13[0]
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r21 = r13[0] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r22 = (org.joda.time.format.PeriodPrinter) $r21
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r22 = (org.joda.time.format.PeriodPrinter) $r21 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r23 = r13[1]
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r23 = r13[1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r24 = (org.joda.time.format.PeriodParser) $r23
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r24 = (org.joda.time.format.PeriodParser) $r23 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : specialinvoke $r20.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r22, $r24)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : specialinvoke $r20.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r22, $r24) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : return $r20
org.joda.time.format.PeriodFormatterBuilder.toFormatter : return $r20 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r9 = virtualinvoke r2.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>()
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r9 = virtualinvoke r2.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>() >>>>>>>> org.joda.time.format.PeriodFormatter.getPrinter : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>
org.joda.time.format.PeriodFormatter.getPrinter : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter> >>>>>>>> org.joda.time.format.PeriodFormatter.getPrinter : return $r1
org.joda.time.format.PeriodFormatter.getPrinter : return $r1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r10 = virtualinvoke r2.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>()
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r10 = virtualinvoke r2.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>() >>>>>>>> org.joda.time.format.PeriodFormatter.getParser : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>
org.joda.time.format.PeriodFormatter.getParser : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser> >>>>>>>> org.joda.time.format.PeriodFormatter.getParser : return $r1
org.joda.time.format.PeriodFormatter.getParser : return $r1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : r11 = virtualinvoke r1.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodFormatterBuilder$Separator finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r9, $r10)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : r11 = virtualinvoke r1.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodFormatterBuilder$Separator finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r9, $r10) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Separator.finish : r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter> = r1
org.joda.time.format.PeriodFormatterBuilder$Separator.finish : r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter> = r1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Separator.finish : r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iAfterParser> = r2
org.joda.time.format.PeriodFormatterBuilder$Separator.finish : r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iAfterParser> = r2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Separator.finish : return r0
org.joda.time.format.PeriodFormatterBuilder$Separator.finish : return r0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r12 = new org.joda.time.format.PeriodFormatter
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r12 = new org.joda.time.format.PeriodFormatter >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : specialinvoke $r12.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r11, r11)
org.joda.time.format.PeriodFormatterBuilder.toFormatter : specialinvoke $r12.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r11, r11) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : return $r12
org.joda.time.format.PeriodFormatterBuilder.toFormatter : return $r12 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>()
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r5 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) $r4
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r5 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) $r4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r6 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) $r5
org.joda.time.format.PeriodFormatterBuilder.toFormatter : $r6 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) $r5 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r6
org.joda.time.format.PeriodFormatterBuilder.toFormatter : r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r6 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toFormatter : return r1
org.joda.time.format.PeriodFormatterBuilder.toFormatter : return r1 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks> = $r18
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks> = $r18 >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r19 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks>
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : $r19 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks> >>>>>>>> org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks : return $r19
