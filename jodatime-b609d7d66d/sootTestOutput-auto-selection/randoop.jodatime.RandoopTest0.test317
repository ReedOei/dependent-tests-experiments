org.joda.time.Period.years : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.years : $r1 = newarray (int)[9]
org.joda.time.Period.years : $r1 = newarray (int)[9] >>>>>>>> org.joda.time.Period.years : $r1[0] = i0
org.joda.time.Period.years : $r1[0] = i0 >>>>>>>> org.joda.time.Period.years : $r1[1] = 0
org.joda.time.Period.years : $r1[1] = 0 >>>>>>>> org.joda.time.Period.years : $r1[2] = 0
org.joda.time.Period.years : $r1[2] = 0 >>>>>>>> org.joda.time.Period.years : $r1[3] = 0
org.joda.time.Period.years : $r1[3] = 0 >>>>>>>> org.joda.time.Period.years : $r1[4] = 0
org.joda.time.Period.years : $r1[4] = 0 >>>>>>>> org.joda.time.Period.years : $r1[5] = 0
org.joda.time.Period.years : $r1[5] = 0 >>>>>>>> org.joda.time.Period.years : $r1[6] = 0
org.joda.time.Period.years : $r1[6] = 0 >>>>>>>> org.joda.time.Period.years : $r1[7] = 0
org.joda.time.Period.years : $r1[7] = 0 >>>>>>>> org.joda.time.Period.years : $r1[8] = 0
org.joda.time.Period.years : $r1[8] = 0 >>>>>>>> org.joda.time.Period.years : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.years : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.PeriodType.standard : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard>
org.joda.time.PeriodType.standard : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard> >>>>>>>> org.joda.time.PeriodType.standard : if r0 != null
org.joda.time.PeriodType.standard : if r0 != null >>>>>>>> org.joda.time.PeriodType.standard : return r0
org.joda.time.PeriodType.standard : return r0 >>>>>>>> org.joda.time.Period.years : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.years : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.years : return $r0
org.joda.time.Period.years : return $r0 >>>>>>>> org.joda.time.Period.getSeconds : $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.Period.getSeconds : $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>() >>>>>>>> org.joda.time.base.BasePeriod.getPeriodType : $r1 = r0.<org.joda.time.base.BasePeriod: org.joda.time.PeriodType iType>
org.joda.time.base.BasePeriod.getPeriodType : $r1 = r0.<org.joda.time.base.BasePeriod: org.joda.time.PeriodType iType> >>>>>>>> org.joda.time.base.BasePeriod.getPeriodType : return $r1
org.joda.time.base.BasePeriod.getPeriodType : return $r1 >>>>>>>> org.joda.time.Period.getSeconds : $i0 = <org.joda.time.PeriodType: int SECOND_INDEX>
org.joda.time.Period.getSeconds : $i0 = <org.joda.time.PeriodType: int SECOND_INDEX> >>>>>>>> org.joda.time.Period.getSeconds : $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0)
org.joda.time.Period.getSeconds : $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0) >>>>>>>> org.joda.time.PeriodType.getIndexedField : $r2 = r0.<org.joda.time.PeriodType: int[] iIndices>
org.joda.time.PeriodType.getIndexedField : $r2 = r0.<org.joda.time.PeriodType: int[] iIndices> >>>>>>>> org.joda.time.PeriodType.getIndexedField : i1 = $r2[i0]
org.joda.time.PeriodType.getIndexedField : i1 = $r2[i0] >>>>>>>> org.joda.time.PeriodType.getIndexedField : if i1 != -1
org.joda.time.PeriodType.getIndexedField : if i1 != -1 >>>>>>>> org.joda.time.PeriodType.getIndexedField : $i2 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int getValue(int)>(i1)
org.joda.time.PeriodType.getIndexedField : $i2 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int getValue(int)>(i1) >>>>>>>> org.joda.time.base.BasePeriod.getValue : $r1 = r0.<org.joda.time.base.BasePeriod: int[] iValues>
org.joda.time.base.BasePeriod.getValue : $r1 = r0.<org.joda.time.base.BasePeriod: int[] iValues> >>>>>>>> org.joda.time.base.BasePeriod.getValue : $i1 = $r1[i0]
org.joda.time.base.BasePeriod.getValue : $i1 = $r1[i0] >>>>>>>> org.joda.time.base.BasePeriod.getValue : return $i1
org.joda.time.base.BasePeriod.getValue : return $i1 >>>>>>>> org.joda.time.PeriodType.getIndexedField : return $i2
org.joda.time.PeriodType.getIndexedField : return $i2 >>>>>>>> org.joda.time.Period.getSeconds : return $i1
