org.joda.time.Hours.hours : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Hours.hours : $r11 = new org.joda.time.Hours
org.joda.time.Hours.hours : $r11 = new org.joda.time.Hours >>>>>>>> org.joda.time.Hours.hours : specialinvoke $r11.<org.joda.time.Hours: void <init>(int)>(i0)
org.joda.time.Hours.hours : specialinvoke $r11.<org.joda.time.Hours: void <init>(int)>(i0) >>>>>>>> org.joda.time.Hours.hours : return $r11
org.joda.time.Hours.hours : return $r11 >>>>>>>> org.joda.time.Hours.negated : $i0 = virtualinvoke r0.<org.joda.time.Hours: int getValue()>()
org.joda.time.Hours.negated : $i0 = virtualinvoke r0.<org.joda.time.Hours: int getValue()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod>
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod> >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0
org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0 >>>>>>>> org.joda.time.Hours.negated : $i1 = staticinvoke <org.joda.time.field.FieldUtils: int safeNegate(int)>($i0)
org.joda.time.Hours.negated : $i1 = staticinvoke <org.joda.time.field.FieldUtils: int safeNegate(int)>($i0) >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : if i0 != -2147483648
org.joda.time.field.FieldUtils.safeNegate : if i0 != -2147483648 >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : $i1 = neg i0
org.joda.time.field.FieldUtils.safeNegate : $i1 = neg i0 >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : return $i1
org.joda.time.field.FieldUtils.safeNegate : return $i1 >>>>>>>> org.joda.time.Hours.negated : $r1 = staticinvoke <org.joda.time.Hours: org.joda.time.Hours hours(int)>($i1)
org.joda.time.Hours.negated : $r1 = staticinvoke <org.joda.time.Hours: org.joda.time.Hours hours(int)>($i1) >>>>>>>> org.joda.time.Hours.negated : return $r1
org.joda.time.Hours.negated : return $r1 >>>>>>>> org.joda.time.Hours.getHours : $i0 = virtualinvoke r0.<org.joda.time.Hours: int getValue()>()
org.joda.time.Hours.getHours : $i0 = virtualinvoke r0.<org.joda.time.Hours: int getValue()>() >>>>>>>> org.joda.time.Hours.getHours : return $i0
org.joda.time.Hours.getHours : return $i0 >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : $r0 = new java.lang.ArithmeticException
org.joda.time.field.FieldUtils.safeNegate : $r0 = new java.lang.ArithmeticException >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : specialinvoke $r0.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Integer.MIN_VALUE cannot be negated")
org.joda.time.field.FieldUtils.safeNegate : specialinvoke $r0.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Integer.MIN_VALUE cannot be negated") >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : throw $r0
