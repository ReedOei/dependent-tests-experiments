org.joda.time.Minutes.minutes : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Minutes.minutes : $r6 = new org.joda.time.Minutes
org.joda.time.Minutes.minutes : $r6 = new org.joda.time.Minutes >>>>>>>> org.joda.time.Minutes.minutes : specialinvoke $r6.<org.joda.time.Minutes: void <init>(int)>(i0)
org.joda.time.Minutes.minutes : specialinvoke $r6.<org.joda.time.Minutes: void <init>(int)>(i0) >>>>>>>> org.joda.time.Minutes.minutes : return $r6
org.joda.time.Minutes.minutes : return $r6 >>>>>>>> org.joda.time.Minutes.negated : $i0 = virtualinvoke r0.<org.joda.time.Minutes: int getValue()>()
org.joda.time.Minutes.negated : $i0 = virtualinvoke r0.<org.joda.time.Minutes: int getValue()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod>
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod> >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0
org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0 >>>>>>>> org.joda.time.Minutes.negated : $i1 = staticinvoke <org.joda.time.field.FieldUtils: int safeNegate(int)>($i0)
org.joda.time.Minutes.negated : $i1 = staticinvoke <org.joda.time.field.FieldUtils: int safeNegate(int)>($i0) >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : if i0 != -2147483648
org.joda.time.field.FieldUtils.safeNegate : if i0 != -2147483648 >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : $i1 = neg i0
org.joda.time.field.FieldUtils.safeNegate : $i1 = neg i0 >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : return $i1
org.joda.time.field.FieldUtils.safeNegate : return $i1 >>>>>>>> org.joda.time.Minutes.negated : $r1 = staticinvoke <org.joda.time.Minutes: org.joda.time.Minutes minutes(int)>($i1)
org.joda.time.Minutes.negated : $r1 = staticinvoke <org.joda.time.Minutes: org.joda.time.Minutes minutes(int)>($i1) >>>>>>>> org.joda.time.Minutes.negated : return $r1
org.joda.time.Minutes.negated : return $r1 >>>>>>>> org.joda.time.Minutes.getMinutes : $i0 = virtualinvoke r0.<org.joda.time.Minutes: int getValue()>()
org.joda.time.Minutes.getMinutes : $i0 = virtualinvoke r0.<org.joda.time.Minutes: int getValue()>() >>>>>>>> org.joda.time.Minutes.getMinutes : return $i0
org.joda.time.Minutes.getMinutes : return $i0 >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : $r0 = new java.lang.ArithmeticException
org.joda.time.field.FieldUtils.safeNegate : $r0 = new java.lang.ArithmeticException >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : specialinvoke $r0.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Integer.MIN_VALUE cannot be negated")
org.joda.time.field.FieldUtils.safeNegate : specialinvoke $r0.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Integer.MIN_VALUE cannot be negated") >>>>>>>> org.joda.time.field.FieldUtils.safeNegate : throw $r0
