org.joda.time.DateTimeUtils.setCurrentMillisSystem : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : if r0 == null
org.joda.time.DateTimeUtils.checkPermission : if r0 == null >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisSystem : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$SystemMillisProvider SYSTEM_MILLIS_PROVIDER>
org.joda.time.DateTimeUtils.setCurrentMillisSystem : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$SystemMillisProvider SYSTEM_MILLIS_PROVIDER> >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisSystem : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0
org.joda.time.DateTimeUtils.setCurrentMillisSystem : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r1 == null
org.joda.time.DateTimeZone.setDefault : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r0 != null
org.joda.time.DateTimeZone.setDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone"
org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone" >>>>>>>> org.joda.time.DateTimeZone.setDefault : r3 = $r6
org.joda.time.DateTimeZone.setDefault : r3 = $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : entermonitor $r6
org.joda.time.DateTimeZone.setDefault : entermonitor $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0
org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : exitmonitor r3
org.joda.time.DateTimeZone.setDefault : exitmonitor r3 >>>>>>>> org.joda.time.DateTimeZone.setDefault : goto [?= return]
org.joda.time.DateTimeZone.setDefault : goto [?= return] >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>()
org.joda.time.DateTimeUtils.setCurrentMillisFixed : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>() >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : $r0 = new org.joda.time.DateTimeUtils$FixedMillisProvider
org.joda.time.DateTimeUtils.setCurrentMillisFixed : $r0 = new org.joda.time.DateTimeUtils$FixedMillisProvider >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : specialinvoke $r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: void <init>(long)>(l0)
org.joda.time.DateTimeUtils.setCurrentMillisFixed : specialinvoke $r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: void <init>(long)>(l0) >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0
org.joda.time.DateTimeUtils.setCurrentMillisFixed : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0 >>>>>>>> org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault>
org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> >>>>>>>> org.joda.time.DateTimeZone.getDefault : if r0 != null
org.joda.time.DateTimeZone.getDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefault : return r0
org.joda.time.DateTimeZone.getDefault : return r0 >>>>>>>> org.joda.time.DateTimeUtils.currentTimeMillis : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider>
org.joda.time.DateTimeUtils.currentTimeMillis : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> >>>>>>>> org.joda.time.DateTimeUtils.currentTimeMillis : $l0 = interfaceinvoke $r0.<org.joda.time.DateTimeUtils$MillisProvider: long getMillis()>()
org.joda.time.DateTimeUtils.currentTimeMillis : $l0 = interfaceinvoke $r0.<org.joda.time.DateTimeUtils$MillisProvider: long getMillis()>() >>>>>>>> org.joda.time.DateTimeUtils$FixedMillisProvider.getMillis : $l0 = r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: long iMillis>
org.joda.time.DateTimeUtils$FixedMillisProvider.getMillis : $l0 = r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: long iMillis> >>>>>>>> org.joda.time.DateTimeUtils$FixedMillisProvider.getMillis : return $l0
org.joda.time.DateTimeUtils$FixedMillisProvider.getMillis : return $l0 >>>>>>>> org.joda.time.DateTimeUtils.currentTimeMillis : return $l0
org.joda.time.DateTimeUtils.currentTimeMillis : return $l0 >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : $r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
org.joda.time.chrono.ISOChronology.getInstance : $r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>() >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : $r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)>($r0)
org.joda.time.chrono.ISOChronology.getInstance : $r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)>($r0) >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : if r0 != null
org.joda.time.chrono.ISOChronology.getInstance : if r0 != null >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)
org.joda.time.chrono.ISOChronology.getInstance : $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0) >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : i0 = $i1 & 63
org.joda.time.chrono.ISOChronology.getInstance : i0 = $i1 & 63 >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : $r5 = <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology[] cFastCache>
org.joda.time.chrono.ISOChronology.getInstance : $r5 = <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology[] cFastCache> >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : r1 = $r5[i0]
org.joda.time.chrono.ISOChronology.getInstance : r1 = $r5[i0] >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : if r1 == null
org.joda.time.chrono.ISOChronology.getInstance : if r1 == null >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : $r6 = virtualinvoke r1.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.ISOChronology.getInstance : $r6 = virtualinvoke r1.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.getZone : $r2 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.Chronology iBase>
org.joda.time.chrono.AssembledChronology.getZone : $r2 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.Chronology iBase> >>>>>>>> org.joda.time.chrono.AssembledChronology.getZone : r1 = $r2
org.joda.time.chrono.AssembledChronology.getZone : r1 = $r2 >>>>>>>> org.joda.time.chrono.AssembledChronology.getZone : if $r2 == null
org.joda.time.chrono.AssembledChronology.getZone : if $r2 == null >>>>>>>> org.joda.time.chrono.AssembledChronology.getZone : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.AssembledChronology.getZone : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.ZonedChronology.getZone : $r1 = virtualinvoke r0.<org.joda.time.chrono.ZonedChronology: java.lang.Object getParam()>()
org.joda.time.chrono.ZonedChronology.getZone : $r1 = virtualinvoke r0.<org.joda.time.chrono.ZonedChronology: java.lang.Object getParam()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.getParam : $r1 = r0.<org.joda.time.chrono.AssembledChronology: java.lang.Object iParam>
org.joda.time.chrono.AssembledChronology.getParam : $r1 = r0.<org.joda.time.chrono.AssembledChronology: java.lang.Object iParam> >>>>>>>> org.joda.time.chrono.AssembledChronology.getParam : return $r1
org.joda.time.chrono.AssembledChronology.getParam : return $r1 >>>>>>>> org.joda.time.chrono.ZonedChronology.getZone : $r2 = (org.joda.time.DateTimeZone) $r1
org.joda.time.chrono.ZonedChronology.getZone : $r2 = (org.joda.time.DateTimeZone) $r1 >>>>>>>> org.joda.time.chrono.ZonedChronology.getZone : return $r2
org.joda.time.chrono.ZonedChronology.getZone : return $r2 >>>>>>>> org.joda.time.chrono.AssembledChronology.getZone : return $r3
org.joda.time.chrono.AssembledChronology.getZone : return $r3 >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : if $r6 != r0
org.joda.time.chrono.ISOChronology.getInstance : if $r6 != r0 >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : return r1
org.joda.time.chrono.ISOChronology.getInstance : return r1 >>>>>>>> org.joda.time.chrono.ISOChronology.getInstance : return $r1
org.joda.time.chrono.ISOChronology.getInstance : return $r1 >>>>>>>> org.joda.time.base.BaseDateTime.checkChronology : $r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>(r1)
org.joda.time.base.BaseDateTime.checkChronology : $r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>(r1) >>>>>>>> org.joda.time.DateTimeUtils.getChronology : if r0 != null
org.joda.time.DateTimeUtils.getChronology : if r0 != null >>>>>>>> org.joda.time.DateTimeUtils.getChronology : return r0
org.joda.time.DateTimeUtils.getChronology : return r0 >>>>>>>> org.joda.time.base.BaseDateTime.checkChronology : return $r2
org.joda.time.base.BaseDateTime.checkChronology : return $r2 >>>>>>>> org.joda.time.base.BaseDateTime.checkInstant : return l0
org.joda.time.base.BaseDateTime.checkInstant : return l0 >>>>>>>> org.joda.time.DateTimeFieldType.era : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType ERA_TYPE>
org.joda.time.DateTimeFieldType.era : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType ERA_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.era : return $r0
org.joda.time.DateTimeFieldType.era : return $r0 >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : if r1 != null
org.joda.time.base.AbstractInstant.isSupported : if r1 != null >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : $r2 = virtualinvoke r0.<org.joda.time.base.AbstractInstant: org.joda.time.Chronology getChronology()>()
org.joda.time.base.AbstractInstant.isSupported : $r2 = virtualinvoke r0.<org.joda.time.base.AbstractInstant: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.base.BaseDateTime.getChronology : $r1 = r0.<org.joda.time.base.BaseDateTime: org.joda.time.Chronology iChronology>
org.joda.time.base.BaseDateTime.getChronology : $r1 = r0.<org.joda.time.base.BaseDateTime: org.joda.time.Chronology iChronology> >>>>>>>> org.joda.time.base.BaseDateTime.getChronology : return $r1
org.joda.time.base.BaseDateTime.getChronology : return $r1 >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : $r3 = virtualinvoke r1.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r2)
org.joda.time.base.AbstractInstant.isSupported : $r3 = virtualinvoke r1.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r2) >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>(r1)
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>(r1) >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $b0 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: byte iOrdinal>
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $b0 = r0.<org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: byte iOrdinal> >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : tableswitch($b0) {     case 1:
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : tableswitch($b0) {     case 1: >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r3 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField era()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r3 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField era()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.era : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iEra>
org.joda.time.chrono.AssembledChronology.era : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iEra> >>>>>>>> org.joda.time.chrono.AssembledChronology.era : return $r1
org.joda.time.chrono.AssembledChronology.era : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r3
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r3 >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : $z0 = virtualinvoke $r3.<org.joda.time.DateTimeField: boolean isSupported()>()
org.joda.time.base.AbstractInstant.isSupported : $z0 = virtualinvoke $r3.<org.joda.time.DateTimeField: boolean isSupported()>() >>>>>>>> org.joda.time.field.BaseDateTimeField.isSupported : return 1
org.joda.time.field.BaseDateTimeField.isSupported : return 1 >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : return $z0
org.joda.time.base.AbstractInstant.isSupported : return $z0 >>>>>>>> org.joda.time.DateTimeFieldType.centuryOfEra : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType CENTURY_OF_ERA_TYPE>
org.joda.time.DateTimeFieldType.centuryOfEra : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType CENTURY_OF_ERA_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.centuryOfEra : return $r0
org.joda.time.DateTimeFieldType.centuryOfEra : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r5 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField centuryOfEra()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r5 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField centuryOfEra()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.centuryOfEra : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iCenturyOfEra>
org.joda.time.chrono.AssembledChronology.centuryOfEra : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iCenturyOfEra> >>>>>>>> org.joda.time.chrono.AssembledChronology.centuryOfEra : return $r1
org.joda.time.chrono.AssembledChronology.centuryOfEra : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r5
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r5 >>>>>>>> org.joda.time.DateTimeFieldType.yearOfCentury : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType YEAR_OF_CENTURY_TYPE>
org.joda.time.DateTimeFieldType.yearOfCentury : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType YEAR_OF_CENTURY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.yearOfCentury : return $r0
org.joda.time.DateTimeFieldType.yearOfCentury : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r6 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfCentury()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r6 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfCentury()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.yearOfCentury : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iYearOfCentury>
org.joda.time.chrono.AssembledChronology.yearOfCentury : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iYearOfCentury> >>>>>>>> org.joda.time.chrono.AssembledChronology.yearOfCentury : return $r1
org.joda.time.chrono.AssembledChronology.yearOfCentury : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r6
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r6 >>>>>>>> org.joda.time.DateTimeFieldType.yearOfEra : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType YEAR_OF_ERA_TYPE>
org.joda.time.DateTimeFieldType.yearOfEra : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType YEAR_OF_ERA_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.yearOfEra : return $r0
org.joda.time.DateTimeFieldType.yearOfEra : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r4 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfEra()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r4 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfEra()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.yearOfEra : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iYearOfEra>
org.joda.time.chrono.AssembledChronology.yearOfEra : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iYearOfEra> >>>>>>>> org.joda.time.chrono.AssembledChronology.yearOfEra : return $r1
org.joda.time.chrono.AssembledChronology.yearOfEra : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r4
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r4 >>>>>>>> org.joda.time.DateTimeFieldType.year : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType YEAR_TYPE>
org.joda.time.DateTimeFieldType.year : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType YEAR_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.year : return $r0
org.joda.time.DateTimeFieldType.year : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r7 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r7 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.year : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iYear>
org.joda.time.chrono.AssembledChronology.year : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iYear> >>>>>>>> org.joda.time.chrono.AssembledChronology.year : return $r1
org.joda.time.chrono.AssembledChronology.year : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r7
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r7 >>>>>>>> org.joda.time.DateTimeFieldType.monthOfYear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MONTH_OF_YEAR_TYPE>
org.joda.time.DateTimeFieldType.monthOfYear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MONTH_OF_YEAR_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.monthOfYear : return $r0
org.joda.time.DateTimeFieldType.monthOfYear : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r9 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r9 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.monthOfYear : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMonthOfYear>
org.joda.time.chrono.AssembledChronology.monthOfYear : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMonthOfYear> >>>>>>>> org.joda.time.chrono.AssembledChronology.monthOfYear : return $r1
org.joda.time.chrono.AssembledChronology.monthOfYear : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r9
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r9 >>>>>>>> org.joda.time.DateTimeFieldType.dayOfMonth : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType DAY_OF_MONTH_TYPE>
org.joda.time.DateTimeFieldType.dayOfMonth : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType DAY_OF_MONTH_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.dayOfMonth : return $r0
org.joda.time.DateTimeFieldType.dayOfMonth : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r10 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfMonth()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r10 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfMonth()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.dayOfMonth : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iDayOfMonth>
org.joda.time.chrono.AssembledChronology.dayOfMonth : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iDayOfMonth> >>>>>>>> org.joda.time.chrono.AssembledChronology.dayOfMonth : return $r1
org.joda.time.chrono.AssembledChronology.dayOfMonth : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r10
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r10 >>>>>>>> org.joda.time.DateTimeFieldType.weekyear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType WEEKYEAR_TYPE>
org.joda.time.DateTimeFieldType.weekyear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType WEEKYEAR_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.weekyear : return $r0
org.joda.time.DateTimeFieldType.weekyear : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r12 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyear()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r12 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyear()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.weekyear : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iWeekyear>
org.joda.time.chrono.AssembledChronology.weekyear : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iWeekyear> >>>>>>>> org.joda.time.chrono.AssembledChronology.weekyear : return $r1
org.joda.time.chrono.AssembledChronology.weekyear : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r12
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r12 >>>>>>>> org.joda.time.DateTimeFieldType.weekOfWeekyear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType WEEK_OF_WEEKYEAR_TYPE>
org.joda.time.DateTimeFieldType.weekOfWeekyear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType WEEK_OF_WEEKYEAR_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.weekOfWeekyear : return $r0
org.joda.time.DateTimeFieldType.weekOfWeekyear : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r13 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r13 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.weekOfWeekyear : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iWeekOfWeekyear>
org.joda.time.chrono.AssembledChronology.weekOfWeekyear : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iWeekOfWeekyear> >>>>>>>> org.joda.time.chrono.AssembledChronology.weekOfWeekyear : return $r1
org.joda.time.chrono.AssembledChronology.weekOfWeekyear : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r13
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r13 >>>>>>>> org.joda.time.DateTimeFieldType.dayOfWeek : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType DAY_OF_WEEK_TYPE>
org.joda.time.DateTimeFieldType.dayOfWeek : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType DAY_OF_WEEK_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.dayOfWeek : return $r0
org.joda.time.DateTimeFieldType.dayOfWeek : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r14 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r14 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.dayOfWeek : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iDayOfWeek>
org.joda.time.chrono.AssembledChronology.dayOfWeek : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iDayOfWeek> >>>>>>>> org.joda.time.chrono.AssembledChronology.dayOfWeek : return $r1
org.joda.time.chrono.AssembledChronology.dayOfWeek : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r14
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r14 >>>>>>>> org.joda.time.DateTimeFieldType.dayOfYear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType DAY_OF_YEAR_TYPE>
org.joda.time.DateTimeFieldType.dayOfYear : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType DAY_OF_YEAR_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.dayOfYear : return $r0
org.joda.time.DateTimeFieldType.dayOfYear : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r8 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfYear()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r8 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfYear()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.dayOfYear : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iDayOfYear>
org.joda.time.chrono.AssembledChronology.dayOfYear : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iDayOfYear> >>>>>>>> org.joda.time.chrono.AssembledChronology.dayOfYear : return $r1
org.joda.time.chrono.AssembledChronology.dayOfYear : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r8
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r8 >>>>>>>> org.joda.time.DateTimeFieldType.halfdayOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType HALFDAY_OF_DAY_TYPE>
org.joda.time.DateTimeFieldType.halfdayOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType HALFDAY_OF_DAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.halfdayOfDay : return $r0
org.joda.time.DateTimeFieldType.halfdayOfDay : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r15 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField halfdayOfDay()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r15 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField halfdayOfDay()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.halfdayOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iHalfdayOfDay>
org.joda.time.chrono.AssembledChronology.halfdayOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iHalfdayOfDay> >>>>>>>> org.joda.time.chrono.AssembledChronology.halfdayOfDay : return $r1
org.joda.time.chrono.AssembledChronology.halfdayOfDay : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r15
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r15 >>>>>>>> org.joda.time.DateTimeFieldType.hourOfHalfday : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType HOUR_OF_HALFDAY_TYPE>
org.joda.time.DateTimeFieldType.hourOfHalfday : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType HOUR_OF_HALFDAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.hourOfHalfday : return $r0
org.joda.time.DateTimeFieldType.hourOfHalfday : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r16 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfHalfday()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r16 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfHalfday()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.hourOfHalfday : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iHourOfHalfday>
org.joda.time.chrono.AssembledChronology.hourOfHalfday : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iHourOfHalfday> >>>>>>>> org.joda.time.chrono.AssembledChronology.hourOfHalfday : return $r1
org.joda.time.chrono.AssembledChronology.hourOfHalfday : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r16
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r16 >>>>>>>> org.joda.time.DateTimeFieldType.clockhourOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType CLOCKHOUR_OF_DAY_TYPE>
org.joda.time.DateTimeFieldType.clockhourOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType CLOCKHOUR_OF_DAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.clockhourOfDay : return $r0
org.joda.time.DateTimeFieldType.clockhourOfDay : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r18 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfDay()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r18 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfDay()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.clockhourOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iClockhourOfDay>
org.joda.time.chrono.AssembledChronology.clockhourOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iClockhourOfDay> >>>>>>>> org.joda.time.chrono.AssembledChronology.clockhourOfDay : return $r1
org.joda.time.chrono.AssembledChronology.clockhourOfDay : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r18
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r18 >>>>>>>> org.joda.time.DateTimeFieldType.clockhourOfHalfday : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE>
org.joda.time.DateTimeFieldType.clockhourOfHalfday : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.clockhourOfHalfday : return $r0
org.joda.time.DateTimeFieldType.clockhourOfHalfday : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r17 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfHalfday()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r17 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfHalfday()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.clockhourOfHalfday : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iClockhourOfHalfday>
org.joda.time.chrono.AssembledChronology.clockhourOfHalfday : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iClockhourOfHalfday> >>>>>>>> org.joda.time.chrono.AssembledChronology.clockhourOfHalfday : return $r1
org.joda.time.chrono.AssembledChronology.clockhourOfHalfday : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r17
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r17 >>>>>>>> org.joda.time.DateTimeFieldType.hourOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType HOUR_OF_DAY_TYPE>
org.joda.time.DateTimeFieldType.hourOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType HOUR_OF_DAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.hourOfDay : return $r0
org.joda.time.DateTimeFieldType.hourOfDay : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r19 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfDay()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r19 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfDay()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.hourOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iHourOfDay>
org.joda.time.chrono.AssembledChronology.hourOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iHourOfDay> >>>>>>>> org.joda.time.chrono.AssembledChronology.hourOfDay : return $r1
org.joda.time.chrono.AssembledChronology.hourOfDay : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r19
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r19 >>>>>>>> org.joda.time.DateTimeFieldType.minuteOfHour : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MINUTE_OF_HOUR_TYPE>
org.joda.time.DateTimeFieldType.minuteOfHour : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MINUTE_OF_HOUR_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.minuteOfHour : return $r0
org.joda.time.DateTimeFieldType.minuteOfHour : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r21 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfHour()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r21 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfHour()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.minuteOfHour : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMinuteOfHour>
org.joda.time.chrono.AssembledChronology.minuteOfHour : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMinuteOfHour> >>>>>>>> org.joda.time.chrono.AssembledChronology.minuteOfHour : return $r1
org.joda.time.chrono.AssembledChronology.minuteOfHour : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r21
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r21 >>>>>>>> org.joda.time.DateTimeFieldType.minuteOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MINUTE_OF_DAY_TYPE>
org.joda.time.DateTimeFieldType.minuteOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MINUTE_OF_DAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.minuteOfDay : return $r0
org.joda.time.DateTimeFieldType.minuteOfDay : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r20 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfDay()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r20 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfDay()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.minuteOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMinuteOfDay>
org.joda.time.chrono.AssembledChronology.minuteOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMinuteOfDay> >>>>>>>> org.joda.time.chrono.AssembledChronology.minuteOfDay : return $r1
org.joda.time.chrono.AssembledChronology.minuteOfDay : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r20
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r20 >>>>>>>> org.joda.time.DateTimeFieldType.secondOfMinute : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_MINUTE_TYPE>
org.joda.time.DateTimeFieldType.secondOfMinute : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_MINUTE_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.secondOfMinute : return $r0
org.joda.time.DateTimeFieldType.secondOfMinute : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r23 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfMinute()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r23 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfMinute()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.secondOfMinute : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iSecondOfMinute>
org.joda.time.chrono.AssembledChronology.secondOfMinute : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iSecondOfMinute> >>>>>>>> org.joda.time.chrono.AssembledChronology.secondOfMinute : return $r1
org.joda.time.chrono.AssembledChronology.secondOfMinute : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r23
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r23 >>>>>>>> org.joda.time.DateTimeFieldType.secondOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_DAY_TYPE>
org.joda.time.DateTimeFieldType.secondOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_DAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.secondOfDay : return $r0
org.joda.time.DateTimeFieldType.secondOfDay : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r22 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfDay()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r22 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfDay()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.secondOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iSecondOfDay>
org.joda.time.chrono.AssembledChronology.secondOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iSecondOfDay> >>>>>>>> org.joda.time.chrono.AssembledChronology.secondOfDay : return $r1
org.joda.time.chrono.AssembledChronology.secondOfDay : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r22
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r22 >>>>>>>> org.joda.time.DateTimeFieldType.millisOfSecond : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MILLIS_OF_SECOND_TYPE>
org.joda.time.DateTimeFieldType.millisOfSecond : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MILLIS_OF_SECOND_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.millisOfSecond : return $r0
org.joda.time.DateTimeFieldType.millisOfSecond : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r25 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfSecond()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r25 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfSecond()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.millisOfSecond : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMillisOfSecond>
org.joda.time.chrono.AssembledChronology.millisOfSecond : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMillisOfSecond> >>>>>>>> org.joda.time.chrono.AssembledChronology.millisOfSecond : return $r1
org.joda.time.chrono.AssembledChronology.millisOfSecond : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r25
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r25 >>>>>>>> org.joda.time.DateTimeFieldType.millisOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MILLIS_OF_DAY_TYPE>
org.joda.time.DateTimeFieldType.millisOfDay : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType MILLIS_OF_DAY_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.millisOfDay : return $r0
org.joda.time.DateTimeFieldType.millisOfDay : return $r0 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r24 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>()
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : $r24 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>() >>>>>>>> org.joda.time.chrono.AssembledChronology.millisOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMillisOfDay>
org.joda.time.chrono.AssembledChronology.millisOfDay : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField iMillisOfDay> >>>>>>>> org.joda.time.chrono.AssembledChronology.millisOfDay : return $r1
org.joda.time.chrono.AssembledChronology.millisOfDay : return $r1 >>>>>>>> org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r24
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField : return $r24 >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : return 0
