org.joda.time.convert.ConverterSet.remove : r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.remove : i1 = lengthof r2
org.joda.time.convert.ConverterSet.remove : i1 = lengthof r2 >>>>>>>> org.joda.time.convert.ConverterSet.remove : if i0 < i1
org.joda.time.convert.ConverterSet.remove : if i0 < i1 >>>>>>>> org.joda.time.convert.ConverterSet.remove : $r4 = new java.lang.IndexOutOfBoundsException
org.joda.time.convert.ConverterSet.remove : $r4 = new java.lang.IndexOutOfBoundsException >>>>>>>> org.joda.time.convert.ConverterSet.remove : specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>()
org.joda.time.convert.ConverterSet.remove : specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>() >>>>>>>> org.joda.time.convert.ConverterSet.remove : throw $r4
org.joda.time.convert.ConverterSet.remove : throw $r4 >>>>>>>> org.joda.time.convert.ConverterSet.size : $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.size : $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.size : $i0 = lengthof $r1
org.joda.time.convert.ConverterSet.size : $i0 = lengthof $r1 >>>>>>>> org.joda.time.convert.ConverterSet.size : return $i0
