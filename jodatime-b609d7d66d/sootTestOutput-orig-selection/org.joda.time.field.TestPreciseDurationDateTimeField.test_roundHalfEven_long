org.joda.time.DateTimeFieldType.secondOfMinute : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_MINUTE_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.secondOfMinute : return $r0
org.joda.time.DateTimeFieldType.secondOfMinute : return $r0 >>>>>>>> org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>
org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.seconds : return $r0
org.joda.time.DurationFieldType.seconds : return $r0 >>>>>>>> org.joda.time.field.TestPreciseDurationDateTimeField$MockCountingDurationField.isPrecise : return 1
org.joda.time.field.TestPreciseDurationDateTimeField$MockCountingDurationField.isPrecise : return 1 >>>>>>>> org.joda.time.field.TestPreciseDurationDateTimeField$MockCountingDurationField.getUnitMillis : return 60L
org.joda.time.field.TestPreciseDurationDateTimeField$MockCountingDurationField.getUnitMillis : return 60L >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : l1 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: long roundFloor(long)>(l0)
org.joda.time.field.BaseDateTimeField.roundHalfEven : l1 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: long roundFloor(long)>(l0) >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundFloor : $b1 = l0 cmp 0L
org.joda.time.field.PreciseDurationDateTimeField.roundFloor : $b1 = l0 cmp 0L >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundFloor : if $b1 < 0
org.joda.time.field.PreciseDurationDateTimeField.roundFloor : if $b1 < 0 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundFloor : $l2 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>
org.joda.time.field.PreciseDurationDateTimeField.roundFloor : $l2 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis> >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundFloor : $l3 = l0 % $l2
org.joda.time.field.PreciseDurationDateTimeField.roundFloor : $l3 = l0 % $l2 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundFloor : $l4 = l0 - $l3
org.joda.time.field.PreciseDurationDateTimeField.roundFloor : $l4 = l0 - $l3 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundFloor : return $l4
org.joda.time.field.PreciseDurationDateTimeField.roundFloor : return $l4 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : l2 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: long roundCeiling(long)>(l0)
org.joda.time.field.BaseDateTimeField.roundHalfEven : l2 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: long roundCeiling(long)>(l0) >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $b1 = l0 cmp 0L
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $b1 = l0 cmp 0L >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : if $b1 <= 0
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : if $b1 <= 0 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l8 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l8 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis> >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l9 = l0 % $l8
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l9 = l0 % $l8 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l10 = l0 - $l9
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l10 = l0 - $l9 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : return $l10
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : return $l10 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : l3 = l0 - l1
org.joda.time.field.BaseDateTimeField.roundHalfEven : l3 = l0 - l1 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : l4 = l2 - l0
org.joda.time.field.BaseDateTimeField.roundHalfEven : l4 = l2 - l0 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : $b5 = l3 cmp l4
org.joda.time.field.BaseDateTimeField.roundHalfEven : $b5 = l3 cmp l4 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : if $b5 >= 0
org.joda.time.field.BaseDateTimeField.roundHalfEven : if $b5 >= 0 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : $b6 = l4 cmp l3
org.joda.time.field.BaseDateTimeField.roundHalfEven : $b6 = l4 cmp l3 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : if $b6 >= 0
org.joda.time.field.BaseDateTimeField.roundHalfEven : if $b6 >= 0 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : $i7 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int get(long)>(l2)
org.joda.time.field.BaseDateTimeField.roundHalfEven : $i7 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int get(long)>(l2) >>>>>>>> org.joda.time.field.TestPreciseDurationDateTimeField$MockPreciseDurationDateTimeField.get : $l1 = l0 / 60L
org.joda.time.field.TestPreciseDurationDateTimeField$MockPreciseDurationDateTimeField.get : $l1 = l0 / 60L >>>>>>>> org.joda.time.field.TestPreciseDurationDateTimeField$MockPreciseDurationDateTimeField.get : $i2 = (int) $l1
org.joda.time.field.TestPreciseDurationDateTimeField$MockPreciseDurationDateTimeField.get : $i2 = (int) $l1 >>>>>>>> org.joda.time.field.TestPreciseDurationDateTimeField$MockPreciseDurationDateTimeField.get : return $i2
org.joda.time.field.TestPreciseDurationDateTimeField$MockPreciseDurationDateTimeField.get : return $i2 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : $i8 = $i7 & 1
org.joda.time.field.BaseDateTimeField.roundHalfEven : $i8 = $i7 & 1 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : if $i8 != 0
org.joda.time.field.BaseDateTimeField.roundHalfEven : if $i8 != 0 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : return l2
org.joda.time.field.BaseDateTimeField.roundHalfEven : return l2 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : l2 = l0 - 1L
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : l2 = l0 - 1L >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l3 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l3 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis> >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l4 = l2 % $l3
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l4 = l2 % $l3 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l5 = l2 - $l4
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l5 = l2 - $l4 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l6 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l6 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis> >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l7 = $l5 + $l6
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : $l7 = $l5 + $l6 >>>>>>>> org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : return $l7
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling : return $l7 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundHalfEven : return l1
