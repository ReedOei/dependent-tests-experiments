org.joda.time.Days.days : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Days.days : $r10 = new org.joda.time.Days
org.joda.time.Days.days : $r10 = new org.joda.time.Days >>>>>>>> org.joda.time.Days.days : specialinvoke $r10.<org.joda.time.Days: void <init>(int)>(i0)
org.joda.time.Days.days : specialinvoke $r10.<org.joda.time.Days: void <init>(int)>(i0) >>>>>>>> org.joda.time.Days.days : return $r10
org.joda.time.Days.days : return $r10 >>>>>>>> org.joda.time.PeriodType.days : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDays>
org.joda.time.PeriodType.days : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDays> >>>>>>>> org.joda.time.PeriodType.days : if r0 != null
org.joda.time.PeriodType.days : if r0 != null >>>>>>>> org.joda.time.PeriodType.days : return r0
org.joda.time.PeriodType.days : return r0 >>>>>>>> org.joda.time.Days.getPeriodType : $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>()
org.joda.time.Days.getPeriodType : $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>() >>>>>>>> org.joda.time.Days.getPeriodType : return $r1
org.joda.time.Days.getPeriodType : return $r1 >>>>>>>> org.joda.time.PeriodType.equals : if r0 != r1
org.joda.time.PeriodType.equals : if r0 != r1 >>>>>>>> org.joda.time.PeriodType.equals : return 1
