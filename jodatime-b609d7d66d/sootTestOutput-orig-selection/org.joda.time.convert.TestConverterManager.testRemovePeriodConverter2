org.joda.time.convert.ConverterManager.getInstance : $r0 = <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager INSTANCE> >>>>>>>> org.joda.time.convert.ConverterManager.getInstance : if $r0 != null
org.joda.time.convert.ConverterManager.getInstance : if $r0 != null >>>>>>>> org.joda.time.convert.ConverterManager.getInstance : $r2 = <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager INSTANCE>
org.joda.time.convert.ConverterManager.getInstance : $r2 = <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager INSTANCE> >>>>>>>> org.joda.time.convert.ConverterManager.getInstance : return $r2
org.joda.time.convert.ConverterManager.getInstance : return $r2 >>>>>>>> org.joda.time.convert.ConverterManager.removePeriodConverter : specialinvoke r0.<org.joda.time.convert.ConverterManager: void checkAlterPeriodConverters()>()
org.joda.time.convert.ConverterManager.removePeriodConverter : specialinvoke r0.<org.joda.time.convert.ConverterManager: void checkAlterPeriodConverters()>() >>>>>>>> org.joda.time.convert.ConverterManager.checkAlterPeriodConverters : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.convert.ConverterManager.checkAlterPeriodConverters : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.convert.ConverterManager.checkAlterPeriodConverters : if r1 == null
org.joda.time.convert.ConverterManager.checkAlterPeriodConverters : if r1 == null >>>>>>>> org.joda.time.convert.ConverterManager.removePeriodConverter : if r1 != null
org.joda.time.convert.ConverterManager.removePeriodConverter : if r1 != null >>>>>>>> org.joda.time.convert.ConverterManager.removePeriodConverter : r2 = newarray (org.joda.time.convert.PeriodConverter)[1]
org.joda.time.convert.ConverterManager.removePeriodConverter : r2 = newarray (org.joda.time.convert.PeriodConverter)[1] >>>>>>>> org.joda.time.convert.ConverterManager.removePeriodConverter : $r3 = r0.<org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterSet iPeriodConverters>
org.joda.time.convert.ConverterManager.removePeriodConverter : $r3 = r0.<org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterSet iPeriodConverters> >>>>>>>> org.joda.time.convert.ConverterManager.removePeriodConverter : $r4 = virtualinvoke $r3.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])>(r1, r2)
org.joda.time.convert.ConverterManager.removePeriodConverter : $r4 = virtualinvoke $r3.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])>(r1, r2) >>>>>>>> org.joda.time.convert.ConverterSet.remove : r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.remove : r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.remove : i0 = lengthof r3
org.joda.time.convert.ConverterSet.remove : i0 = lengthof r3 >>>>>>>> org.joda.time.convert.ConverterSet.remove : i1 = 0
org.joda.time.convert.ConverterSet.remove : i1 = 0 >>>>>>>> org.joda.time.convert.ConverterSet.remove : if i1 >= i0
org.joda.time.convert.ConverterSet.remove : if i1 >= i0 >>>>>>>> org.joda.time.convert.ConverterSet.remove : $r4 = r3[i1]
org.joda.time.convert.ConverterSet.remove : $r4 = r3[i1] >>>>>>>> org.joda.time.convert.ConverterSet.remove : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.joda.time.convert.ConverterSet.remove : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.joda.time.convert.ConverterSet.remove : if $z0 == 0
org.joda.time.convert.ConverterSet.remove : if $z0 == 0 >>>>>>>> org.joda.time.convert.ConverterSet.remove : i1 = i1 + 1
org.joda.time.convert.ConverterSet.remove : i1 = i1 + 1 >>>>>>>> org.joda.time.convert.ConverterSet.remove : goto [?= (branch)]
org.joda.time.convert.ConverterSet.remove : goto [?= (branch)] >>>>>>>> org.joda.time.convert.ConverterSet.remove : if r2 == null
org.joda.time.convert.ConverterSet.remove : if r2 == null >>>>>>>> org.joda.time.convert.ConverterSet.remove : r2[0] = null
org.joda.time.convert.ConverterSet.remove : r2[0] = null >>>>>>>> org.joda.time.convert.ConverterSet.remove : return r0
org.joda.time.convert.ConverterSet.remove : return r0 >>>>>>>> org.joda.time.convert.ConverterManager.removePeriodConverter : r0.<org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterSet iPeriodConverters> = $r4
org.joda.time.convert.ConverterManager.removePeriodConverter : r0.<org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterSet iPeriodConverters> = $r4 >>>>>>>> org.joda.time.convert.ConverterManager.removePeriodConverter : $r5 = r2[0]
org.joda.time.convert.ConverterManager.removePeriodConverter : $r5 = r2[0] >>>>>>>> org.joda.time.convert.ConverterManager.removePeriodConverter : return $r5
org.joda.time.convert.ConverterManager.removePeriodConverter : return $r5 >>>>>>>> org.joda.time.convert.ConverterManager.getPeriodConverters : r1 = r0.<org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterSet iPeriodConverters>
org.joda.time.convert.ConverterManager.getPeriodConverters : r1 = r0.<org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterSet iPeriodConverters> >>>>>>>> org.joda.time.convert.ConverterManager.getPeriodConverters : $i0 = virtualinvoke r1.<org.joda.time.convert.ConverterSet: int size()>()
org.joda.time.convert.ConverterManager.getPeriodConverters : $i0 = virtualinvoke r1.<org.joda.time.convert.ConverterSet: int size()>() >>>>>>>> org.joda.time.convert.ConverterSet.size : $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.size : $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.size : $i0 = lengthof $r1
org.joda.time.convert.ConverterSet.size : $i0 = lengthof $r1 >>>>>>>> org.joda.time.convert.ConverterSet.size : return $i0
org.joda.time.convert.ConverterSet.size : return $i0 >>>>>>>> org.joda.time.convert.ConverterManager.getPeriodConverters : r2 = newarray (org.joda.time.convert.PeriodConverter)[$i0]
org.joda.time.convert.ConverterManager.getPeriodConverters : r2 = newarray (org.joda.time.convert.PeriodConverter)[$i0] >>>>>>>> org.joda.time.convert.ConverterManager.getPeriodConverters : virtualinvoke r1.<org.joda.time.convert.ConverterSet: void copyInto(org.joda.time.convert.Converter[])>(r2)
org.joda.time.convert.ConverterManager.getPeriodConverters : virtualinvoke r1.<org.joda.time.convert.ConverterSet: void copyInto(org.joda.time.convert.Converter[])>(r2) >>>>>>>> org.joda.time.convert.ConverterSet.copyInto : $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.copyInto : $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.copyInto : $r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.copyInto : $r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.copyInto : $i0 = lengthof $r3
org.joda.time.convert.ConverterSet.copyInto : $i0 = lengthof $r3 >>>>>>>> org.joda.time.convert.ConverterSet.copyInto : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0)
org.joda.time.convert.ConverterSet.copyInto : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0) >>>>>>>> org.joda.time.convert.ConverterManager.getPeriodConverters : return r2
