org.joda.time.DateTimeUtils.setCurrentMillisSystem : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : if r0 == null
org.joda.time.DateTimeUtils.checkPermission : if r0 == null >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisSystem : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$SystemMillisProvider SYSTEM_MILLIS_PROVIDER>
org.joda.time.DateTimeUtils.setCurrentMillisSystem : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$SystemMillisProvider SYSTEM_MILLIS_PROVIDER> >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisSystem : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0
org.joda.time.DateTimeUtils.setCurrentMillisSystem : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r1 == null
org.joda.time.DateTimeZone.setDefault : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r0 != null
org.joda.time.DateTimeZone.setDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone"
org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone" >>>>>>>> org.joda.time.DateTimeZone.setDefault : r3 = $r6
org.joda.time.DateTimeZone.setDefault : r3 = $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : entermonitor $r6
org.joda.time.DateTimeZone.setDefault : entermonitor $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0
org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : exitmonitor r3
org.joda.time.DateTimeZone.setDefault : exitmonitor r3 >>>>>>>> org.joda.time.DateTimeZone.setDefault : goto [?= return]
org.joda.time.DateTimeZone.setDefault : goto [?= return] >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>()
org.joda.time.DateTimeUtils.setCurrentMillisFixed : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>() >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : $r0 = new org.joda.time.DateTimeUtils$FixedMillisProvider
org.joda.time.DateTimeUtils.setCurrentMillisFixed : $r0 = new org.joda.time.DateTimeUtils$FixedMillisProvider >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : specialinvoke $r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: void <init>(long)>(l0)
org.joda.time.DateTimeUtils.setCurrentMillisFixed : specialinvoke $r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: void <init>(long)>(l0) >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0
org.joda.time.DateTimeUtils.setCurrentMillisFixed : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0 >>>>>>>> org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault>
org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> >>>>>>>> org.joda.time.DateTimeZone.getDefault : if r0 != null
org.joda.time.DateTimeZone.getDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefault : return r0
org.joda.time.DateTimeZone.getDefault : return r0 >>>>>>>> org.joda.time.Period.years : $r0 = new org.joda.time.Period
org.joda.time.Period.years : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.years : $r1 = newarray (int)[9]
org.joda.time.Period.years : $r1 = newarray (int)[9] >>>>>>>> org.joda.time.Period.years : $r1[0] = i0
org.joda.time.Period.years : $r1[0] = i0 >>>>>>>> org.joda.time.Period.years : $r1[1] = 0
org.joda.time.Period.years : $r1[1] = 0 >>>>>>>> org.joda.time.Period.years : $r1[2] = 0
org.joda.time.Period.years : $r1[2] = 0 >>>>>>>> org.joda.time.Period.years : $r1[3] = 0
org.joda.time.Period.years : $r1[3] = 0 >>>>>>>> org.joda.time.Period.years : $r1[4] = 0
org.joda.time.Period.years : $r1[4] = 0 >>>>>>>> org.joda.time.Period.years : $r1[5] = 0
org.joda.time.Period.years : $r1[5] = 0 >>>>>>>> org.joda.time.Period.years : $r1[6] = 0
org.joda.time.Period.years : $r1[6] = 0 >>>>>>>> org.joda.time.Period.years : $r1[7] = 0
org.joda.time.Period.years : $r1[7] = 0 >>>>>>>> org.joda.time.Period.years : $r1[8] = 0
org.joda.time.Period.years : $r1[8] = 0 >>>>>>>> org.joda.time.Period.years : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.years : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.PeriodType.standard : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard>
org.joda.time.PeriodType.standard : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard> >>>>>>>> org.joda.time.PeriodType.standard : if r0 != null
org.joda.time.PeriodType.standard : if r0 != null >>>>>>>> org.joda.time.PeriodType.standard : return r0
org.joda.time.PeriodType.standard : return r0 >>>>>>>> org.joda.time.Period.years : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.years : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.years : return $r0
org.joda.time.Period.years : return $r0 >>>>>>>> org.joda.time.Period.plusYears : if i0 != 0
org.joda.time.Period.plusYears : if i0 != 0 >>>>>>>> org.joda.time.Period.plusYears : return r0
org.joda.time.Period.plusYears : return r0 >>>>>>>> org.joda.time.Period.months : $r0 = new org.joda.time.Period
org.joda.time.Period.months : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.months : $r1 = newarray (int)[8]
org.joda.time.Period.months : $r1 = newarray (int)[8] >>>>>>>> org.joda.time.Period.months : $r1[0] = 0
org.joda.time.Period.months : $r1[0] = 0 >>>>>>>> org.joda.time.Period.months : $r1[1] = i0
org.joda.time.Period.months : $r1[1] = i0 >>>>>>>> org.joda.time.Period.months : $r1[2] = 0
org.joda.time.Period.months : $r1[2] = 0 >>>>>>>> org.joda.time.Period.months : $r1[3] = 0
org.joda.time.Period.months : $r1[3] = 0 >>>>>>>> org.joda.time.Period.months : $r1[4] = 0
org.joda.time.Period.months : $r1[4] = 0 >>>>>>>> org.joda.time.Period.months : $r1[5] = 0
org.joda.time.Period.months : $r1[5] = 0 >>>>>>>> org.joda.time.Period.months : $r1[6] = 0
org.joda.time.Period.months : $r1[6] = 0 >>>>>>>> org.joda.time.Period.months : $r1[7] = 0
org.joda.time.Period.months : $r1[7] = 0 >>>>>>>> org.joda.time.Period.months : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.months : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.Period.months : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.months : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.months : return $r0
org.joda.time.Period.months : return $r0 >>>>>>>> org.joda.time.Period.plusMonths : if i0 != 0
org.joda.time.Period.plusMonths : if i0 != 0 >>>>>>>> org.joda.time.Period.plusMonths : return r0
org.joda.time.Period.plusMonths : return r0 >>>>>>>> org.joda.time.Period.weeks : $r0 = new org.joda.time.Period
org.joda.time.Period.weeks : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.weeks : $r1 = newarray (int)[8]
org.joda.time.Period.weeks : $r1 = newarray (int)[8] >>>>>>>> org.joda.time.Period.weeks : $r1[0] = 0
org.joda.time.Period.weeks : $r1[0] = 0 >>>>>>>> org.joda.time.Period.weeks : $r1[1] = 0
org.joda.time.Period.weeks : $r1[1] = 0 >>>>>>>> org.joda.time.Period.weeks : $r1[2] = i0
org.joda.time.Period.weeks : $r1[2] = i0 >>>>>>>> org.joda.time.Period.weeks : $r1[3] = 0
org.joda.time.Period.weeks : $r1[3] = 0 >>>>>>>> org.joda.time.Period.weeks : $r1[4] = 0
org.joda.time.Period.weeks : $r1[4] = 0 >>>>>>>> org.joda.time.Period.weeks : $r1[5] = 0
org.joda.time.Period.weeks : $r1[5] = 0 >>>>>>>> org.joda.time.Period.weeks : $r1[6] = 0
org.joda.time.Period.weeks : $r1[6] = 0 >>>>>>>> org.joda.time.Period.weeks : $r1[7] = 0
org.joda.time.Period.weeks : $r1[7] = 0 >>>>>>>> org.joda.time.Period.weeks : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.weeks : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.Period.weeks : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.weeks : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.weeks : return $r0
org.joda.time.Period.weeks : return $r0 >>>>>>>> org.joda.time.Period.plusWeeks : if i0 != 0
org.joda.time.Period.plusWeeks : if i0 != 0 >>>>>>>> org.joda.time.Period.plusWeeks : return r0
org.joda.time.Period.plusWeeks : return r0 >>>>>>>> org.joda.time.Period.days : $r0 = new org.joda.time.Period
org.joda.time.Period.days : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.days : $r1 = newarray (int)[8]
org.joda.time.Period.days : $r1 = newarray (int)[8] >>>>>>>> org.joda.time.Period.days : $r1[0] = 0
org.joda.time.Period.days : $r1[0] = 0 >>>>>>>> org.joda.time.Period.days : $r1[1] = 0
org.joda.time.Period.days : $r1[1] = 0 >>>>>>>> org.joda.time.Period.days : $r1[2] = 0
org.joda.time.Period.days : $r1[2] = 0 >>>>>>>> org.joda.time.Period.days : $r1[3] = i0
org.joda.time.Period.days : $r1[3] = i0 >>>>>>>> org.joda.time.Period.days : $r1[4] = 0
org.joda.time.Period.days : $r1[4] = 0 >>>>>>>> org.joda.time.Period.days : $r1[5] = 0
org.joda.time.Period.days : $r1[5] = 0 >>>>>>>> org.joda.time.Period.days : $r1[6] = 0
org.joda.time.Period.days : $r1[6] = 0 >>>>>>>> org.joda.time.Period.days : $r1[7] = 0
org.joda.time.Period.days : $r1[7] = 0 >>>>>>>> org.joda.time.Period.days : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.days : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.Period.days : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.days : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.days : return $r0
org.joda.time.Period.days : return $r0 >>>>>>>> org.joda.time.Period.plusDays : if i0 != 0
org.joda.time.Period.plusDays : if i0 != 0 >>>>>>>> org.joda.time.Period.plusDays : return r0
org.joda.time.Period.plusDays : return r0 >>>>>>>> org.joda.time.Period.hours : $r0 = new org.joda.time.Period
org.joda.time.Period.hours : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.hours : $r1 = newarray (int)[8]
org.joda.time.Period.hours : $r1 = newarray (int)[8] >>>>>>>> org.joda.time.Period.hours : $r1[0] = 0
org.joda.time.Period.hours : $r1[0] = 0 >>>>>>>> org.joda.time.Period.hours : $r1[1] = 0
org.joda.time.Period.hours : $r1[1] = 0 >>>>>>>> org.joda.time.Period.hours : $r1[2] = 0
org.joda.time.Period.hours : $r1[2] = 0 >>>>>>>> org.joda.time.Period.hours : $r1[3] = 0
org.joda.time.Period.hours : $r1[3] = 0 >>>>>>>> org.joda.time.Period.hours : $r1[4] = i0
org.joda.time.Period.hours : $r1[4] = i0 >>>>>>>> org.joda.time.Period.hours : $r1[5] = 0
org.joda.time.Period.hours : $r1[5] = 0 >>>>>>>> org.joda.time.Period.hours : $r1[6] = 0
org.joda.time.Period.hours : $r1[6] = 0 >>>>>>>> org.joda.time.Period.hours : $r1[7] = 0
org.joda.time.Period.hours : $r1[7] = 0 >>>>>>>> org.joda.time.Period.hours : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.hours : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.Period.hours : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.hours : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.hours : return $r0
org.joda.time.Period.hours : return $r0 >>>>>>>> org.joda.time.Period.plusHours : if i0 != 0
org.joda.time.Period.plusHours : if i0 != 0 >>>>>>>> org.joda.time.Period.plusHours : return r0
org.joda.time.Period.plusHours : return r0 >>>>>>>> org.joda.time.Period.minutes : $r0 = new org.joda.time.Period
org.joda.time.Period.minutes : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.minutes : $r1 = newarray (int)[8]
org.joda.time.Period.minutes : $r1 = newarray (int)[8] >>>>>>>> org.joda.time.Period.minutes : $r1[0] = 0
org.joda.time.Period.minutes : $r1[0] = 0 >>>>>>>> org.joda.time.Period.minutes : $r1[1] = 0
org.joda.time.Period.minutes : $r1[1] = 0 >>>>>>>> org.joda.time.Period.minutes : $r1[2] = 0
org.joda.time.Period.minutes : $r1[2] = 0 >>>>>>>> org.joda.time.Period.minutes : $r1[3] = 0
org.joda.time.Period.minutes : $r1[3] = 0 >>>>>>>> org.joda.time.Period.minutes : $r1[4] = 0
org.joda.time.Period.minutes : $r1[4] = 0 >>>>>>>> org.joda.time.Period.minutes : $r1[5] = i0
org.joda.time.Period.minutes : $r1[5] = i0 >>>>>>>> org.joda.time.Period.minutes : $r1[6] = 0
org.joda.time.Period.minutes : $r1[6] = 0 >>>>>>>> org.joda.time.Period.minutes : $r1[7] = 0
org.joda.time.Period.minutes : $r1[7] = 0 >>>>>>>> org.joda.time.Period.minutes : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.minutes : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.Period.minutes : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.minutes : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.minutes : return $r0
org.joda.time.Period.minutes : return $r0 >>>>>>>> org.joda.time.Period.plusMinutes : if i0 != 0
org.joda.time.Period.plusMinutes : if i0 != 0 >>>>>>>> org.joda.time.Period.plusMinutes : return r0
org.joda.time.Period.plusMinutes : return r0 >>>>>>>> org.joda.time.Period.seconds : $r0 = new org.joda.time.Period
org.joda.time.Period.seconds : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.seconds : $r1 = newarray (int)[8]
org.joda.time.Period.seconds : $r1 = newarray (int)[8] >>>>>>>> org.joda.time.Period.seconds : $r1[0] = 0
org.joda.time.Period.seconds : $r1[0] = 0 >>>>>>>> org.joda.time.Period.seconds : $r1[1] = 0
org.joda.time.Period.seconds : $r1[1] = 0 >>>>>>>> org.joda.time.Period.seconds : $r1[2] = 0
org.joda.time.Period.seconds : $r1[2] = 0 >>>>>>>> org.joda.time.Period.seconds : $r1[3] = 0
org.joda.time.Period.seconds : $r1[3] = 0 >>>>>>>> org.joda.time.Period.seconds : $r1[4] = 0
org.joda.time.Period.seconds : $r1[4] = 0 >>>>>>>> org.joda.time.Period.seconds : $r1[5] = 0
org.joda.time.Period.seconds : $r1[5] = 0 >>>>>>>> org.joda.time.Period.seconds : $r1[6] = i0
org.joda.time.Period.seconds : $r1[6] = i0 >>>>>>>> org.joda.time.Period.seconds : $r1[7] = 0
org.joda.time.Period.seconds : $r1[7] = 0 >>>>>>>> org.joda.time.Period.seconds : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.seconds : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.Period.seconds : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.seconds : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.seconds : return $r0
org.joda.time.Period.seconds : return $r0 >>>>>>>> org.joda.time.Period.plusSeconds : if i0 != 0
org.joda.time.Period.plusSeconds : if i0 != 0 >>>>>>>> org.joda.time.Period.plusSeconds : return r0
org.joda.time.Period.plusSeconds : return r0 >>>>>>>> org.joda.time.Period.millis : $r0 = new org.joda.time.Period
org.joda.time.Period.millis : $r0 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.millis : $r1 = newarray (int)[8]
org.joda.time.Period.millis : $r1 = newarray (int)[8] >>>>>>>> org.joda.time.Period.millis : $r1[0] = 0
org.joda.time.Period.millis : $r1[0] = 0 >>>>>>>> org.joda.time.Period.millis : $r1[1] = 0
org.joda.time.Period.millis : $r1[1] = 0 >>>>>>>> org.joda.time.Period.millis : $r1[2] = 0
org.joda.time.Period.millis : $r1[2] = 0 >>>>>>>> org.joda.time.Period.millis : $r1[3] = 0
org.joda.time.Period.millis : $r1[3] = 0 >>>>>>>> org.joda.time.Period.millis : $r1[4] = 0
org.joda.time.Period.millis : $r1[4] = 0 >>>>>>>> org.joda.time.Period.millis : $r1[5] = 0
org.joda.time.Period.millis : $r1[5] = 0 >>>>>>>> org.joda.time.Period.millis : $r1[6] = 0
org.joda.time.Period.millis : $r1[6] = 0 >>>>>>>> org.joda.time.Period.millis : $r1[7] = i0
org.joda.time.Period.millis : $r1[7] = i0 >>>>>>>> org.joda.time.Period.millis : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.Period.millis : $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.Period.millis : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2)
org.joda.time.Period.millis : specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2) >>>>>>>> org.joda.time.Period.millis : return $r0
org.joda.time.Period.millis : return $r0 >>>>>>>> org.joda.time.Period.plusMillis : if i0 != 0
org.joda.time.Period.plusMillis : if i0 != 0 >>>>>>>> org.joda.time.Period.plusMillis : return r0
