org.joda.time.DurationFieldType.months : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.months : return $r0
org.joda.time.DurationFieldType.months : return $r0 >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.equals : if r0 != r1
org.joda.time.DurationFieldType$StandardDurationFieldType.equals : if r0 != r1 >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.equals : return 1
org.joda.time.DurationFieldType$StandardDurationFieldType.equals : return 1 >>>>>>>> org.joda.time.DurationFieldType.getName : $r1 = r0.<org.joda.time.DurationFieldType: java.lang.String iName>
org.joda.time.DurationFieldType.getName : $r1 = r0.<org.joda.time.DurationFieldType: java.lang.String iName> >>>>>>>> org.joda.time.DurationFieldType.getName : return $r1
org.joda.time.DurationFieldType.getName : return $r1 >>>>>>>> org.joda.time.chrono.CopticChronology.getInstanceUTC : $r0 = <org.joda.time.chrono.CopticChronology: org.joda.time.chrono.CopticChronology INSTANCE_UTC>
org.joda.time.chrono.CopticChronology.getInstanceUTC : $r0 = <org.joda.time.chrono.CopticChronology: org.joda.time.chrono.CopticChronology INSTANCE_UTC> >>>>>>>> org.joda.time.chrono.CopticChronology.getInstanceUTC : return $r0
org.joda.time.chrono.CopticChronology.getInstanceUTC : return $r0 >>>>>>>> org.joda.time.chrono.AssembledChronology.months : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DurationField iMonths>
org.joda.time.chrono.AssembledChronology.months : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DurationField iMonths> >>>>>>>> org.joda.time.chrono.AssembledChronology.months : return $r1
org.joda.time.chrono.AssembledChronology.months : return $r1 >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.getField : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>(r1)
org.joda.time.DurationFieldType$StandardDurationFieldType.getField : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>(r1) >>>>>>>> org.joda.time.DateTimeUtils.getChronology : if r0 != null
org.joda.time.DateTimeUtils.getChronology : if r0 != null >>>>>>>> org.joda.time.DateTimeUtils.getChronology : return r0
org.joda.time.DateTimeUtils.getChronology : return r0 >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.getField : $b0 = r0.<org.joda.time.DurationFieldType$StandardDurationFieldType: byte iOrdinal>
org.joda.time.DurationFieldType$StandardDurationFieldType.getField : $b0 = r0.<org.joda.time.DurationFieldType$StandardDurationFieldType: byte iOrdinal> >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.getField : tableswitch($b0) {     case 1:
org.joda.time.DurationFieldType$StandardDurationFieldType.getField : tableswitch($b0) {     case 1: >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.getField : $r7 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DurationField months()>()
org.joda.time.DurationFieldType$StandardDurationFieldType.getField : $r7 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DurationField months()>() >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.getField : return $r7
org.joda.time.DurationFieldType$StandardDurationFieldType.getField : return $r7 >>>>>>>> org.joda.time.field.BaseDurationField.isSupported : return 1
org.joda.time.field.BaseDurationField.isSupported : return 1 >>>>>>>> org.joda.time.DurationFieldType.isSupported : $r2 = virtualinvoke r0.<org.joda.time.DurationFieldType: org.joda.time.DurationField getField(org.joda.time.Chronology)>(r1)
org.joda.time.DurationFieldType.isSupported : $r2 = virtualinvoke r0.<org.joda.time.DurationFieldType: org.joda.time.DurationField getField(org.joda.time.Chronology)>(r1) >>>>>>>> org.joda.time.DurationFieldType.isSupported : $z0 = virtualinvoke $r2.<org.joda.time.DurationField: boolean isSupported()>()
org.joda.time.DurationFieldType.isSupported : $z0 = virtualinvoke $r2.<org.joda.time.DurationField: boolean isSupported()>() >>>>>>>> org.joda.time.DurationFieldType.isSupported : return $z0
org.joda.time.DurationFieldType.isSupported : return $z0 >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.readResolve : $b0 = r0.<org.joda.time.DurationFieldType$StandardDurationFieldType: byte iOrdinal>
org.joda.time.DurationFieldType$StandardDurationFieldType.readResolve : $b0 = r0.<org.joda.time.DurationFieldType$StandardDurationFieldType: byte iOrdinal> >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.readResolve : tableswitch($b0) {     case 1:
org.joda.time.DurationFieldType$StandardDurationFieldType.readResolve : tableswitch($b0) {     case 1: >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.readResolve : $r5 = <org.joda.time.DurationFieldType$StandardDurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE>
org.joda.time.DurationFieldType$StandardDurationFieldType.readResolve : $r5 = <org.joda.time.DurationFieldType$StandardDurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE> >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.readResolve : return $r5
