org.joda.time.DateTimeUtils.setCurrentMillisSystem : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : if r0 == null
org.joda.time.DateTimeUtils.checkPermission : if r0 == null >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisSystem : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$SystemMillisProvider SYSTEM_MILLIS_PROVIDER>
org.joda.time.DateTimeUtils.setCurrentMillisSystem : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$SystemMillisProvider SYSTEM_MILLIS_PROVIDER> >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisSystem : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0
org.joda.time.DateTimeUtils.setCurrentMillisSystem : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r1 == null
org.joda.time.DateTimeZone.setDefault : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r0 != null
org.joda.time.DateTimeZone.setDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone"
org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone" >>>>>>>> org.joda.time.DateTimeZone.setDefault : r3 = $r6
org.joda.time.DateTimeZone.setDefault : r3 = $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : entermonitor $r6
org.joda.time.DateTimeZone.setDefault : entermonitor $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0
org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : exitmonitor r3
org.joda.time.DateTimeZone.setDefault : exitmonitor r3 >>>>>>>> org.joda.time.DateTimeZone.setDefault : goto [?= return]
org.joda.time.DateTimeZone.setDefault : goto [?= return] >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>()
org.joda.time.DateTimeUtils.setCurrentMillisFixed : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>() >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : $r0 = new org.joda.time.DateTimeUtils$FixedMillisProvider
org.joda.time.DateTimeUtils.setCurrentMillisFixed : $r0 = new org.joda.time.DateTimeUtils$FixedMillisProvider >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : specialinvoke $r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: void <init>(long)>(l0)
org.joda.time.DateTimeUtils.setCurrentMillisFixed : specialinvoke $r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: void <init>(long)>(l0) >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0
org.joda.time.DateTimeUtils.setCurrentMillisFixed : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0 >>>>>>>> org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault>
org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> >>>>>>>> org.joda.time.DateTimeZone.getDefault : if r0 != null
org.joda.time.DateTimeZone.getDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefault : return r0
org.joda.time.DateTimeZone.getDefault : return r0 >>>>>>>> org.joda.time.DurationFieldType.years : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType YEARS_TYPE>
org.joda.time.DurationFieldType.years : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType YEARS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.years : return $r0
org.joda.time.DurationFieldType.years : return $r0 >>>>>>>> org.joda.time.PeriodType.forFields : if r0 == null
org.joda.time.PeriodType.forFields : if r0 == null >>>>>>>> org.joda.time.PeriodType.forFields : $i1 = lengthof r0
org.joda.time.PeriodType.forFields : $i1 = lengthof r0 >>>>>>>> org.joda.time.PeriodType.forFields : if $i1 != 0
org.joda.time.PeriodType.forFields : if $i1 != 0 >>>>>>>> org.joda.time.PeriodType.forFields : i0 = 0
org.joda.time.PeriodType.forFields : i0 = 0 >>>>>>>> org.joda.time.PeriodType.forFields : $i2 = lengthof r0
org.joda.time.PeriodType.forFields : $i2 = lengthof r0 >>>>>>>> org.joda.time.PeriodType.forFields : if i0 >= $i2
org.joda.time.PeriodType.forFields : if i0 >= $i2 >>>>>>>> org.joda.time.PeriodType.forFields : $r8 = r0[i0]
org.joda.time.PeriodType.forFields : $r8 = r0[i0] >>>>>>>> org.joda.time.PeriodType.forFields : if $r8 != null
org.joda.time.PeriodType.forFields : if $r8 != null >>>>>>>> org.joda.time.PeriodType.forFields : i0 = i0 + 1
org.joda.time.PeriodType.forFields : i0 = i0 + 1 >>>>>>>> org.joda.time.PeriodType.forFields : goto [?= $i2 = lengthof r0]
org.joda.time.PeriodType.forFields : goto [?= $i2 = lengthof r0] >>>>>>>> org.joda.time.PeriodType.forFields : r10 = <org.joda.time.PeriodType: java.util.Map cTypes>
org.joda.time.PeriodType.forFields : r10 = <org.joda.time.PeriodType: java.util.Map cTypes> >>>>>>>> org.joda.time.PeriodType.forFields : $z0 = interfaceinvoke r10.<java.util.Map: boolean isEmpty()>()
org.joda.time.PeriodType.forFields : $z0 = interfaceinvoke r10.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.joda.time.PeriodType.forFields : if $z0 == 0
org.joda.time.PeriodType.forFields : if $z0 == 0 >>>>>>>> org.joda.time.PeriodType.forFields : $r11 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.PeriodType.forFields : $r11 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.PeriodType.standard : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard>
org.joda.time.PeriodType.standard : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard> >>>>>>>> org.joda.time.PeriodType.standard : if r0 != null
org.joda.time.PeriodType.standard : if r0 != null >>>>>>>> org.joda.time.PeriodType.standard : return r0
org.joda.time.PeriodType.standard : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r12 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.PeriodType.forFields : $r12 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.joda.time.PeriodType.hashCode : i0 = 0
org.joda.time.PeriodType.hashCode : i0 = 0 >>>>>>>> org.joda.time.PeriodType.hashCode : i1 = 0
org.joda.time.PeriodType.hashCode : i1 = 0 >>>>>>>> org.joda.time.PeriodType.hashCode : $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.hashCode : $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes> >>>>>>>> org.joda.time.PeriodType.hashCode : $i2 = lengthof $r1
org.joda.time.PeriodType.hashCode : $i2 = lengthof $r1 >>>>>>>> org.joda.time.PeriodType.hashCode : if i1 >= $i2
org.joda.time.PeriodType.hashCode : if i1 >= $i2 >>>>>>>> org.joda.time.PeriodType.hashCode : $r2 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.hashCode : $r2 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes> >>>>>>>> org.joda.time.PeriodType.hashCode : $r3 = $r2[i1]
org.joda.time.PeriodType.hashCode : $r3 = $r2[i1] >>>>>>>> org.joda.time.PeriodType.hashCode : $i3 = virtualinvoke $r3.<java.lang.Object: int hashCode()>()
org.joda.time.PeriodType.hashCode : $i3 = virtualinvoke $r3.<java.lang.Object: int hashCode()>() >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.hashCode : $b0 = r0.<org.joda.time.DurationFieldType$StandardDurationFieldType: byte iOrdinal>
org.joda.time.DurationFieldType$StandardDurationFieldType.hashCode : $b0 = r0.<org.joda.time.DurationFieldType$StandardDurationFieldType: byte iOrdinal> >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.hashCode : return $b0
org.joda.time.DurationFieldType$StandardDurationFieldType.hashCode : return $b0 >>>>>>>> org.joda.time.PeriodType.hashCode : i0 = i0 + $i3
org.joda.time.PeriodType.hashCode : i0 = i0 + $i3 >>>>>>>> org.joda.time.PeriodType.hashCode : i1 = i1 + 1
org.joda.time.PeriodType.hashCode : i1 = i1 + 1 >>>>>>>> org.joda.time.PeriodType.hashCode : goto [?= $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>]
org.joda.time.PeriodType.hashCode : goto [?= $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>] >>>>>>>> org.joda.time.PeriodType.hashCode : return i0
org.joda.time.PeriodType.hashCode : return i0 >>>>>>>> org.joda.time.PeriodType.forFields : $r14 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDayTime()>()
org.joda.time.PeriodType.forFields : $r14 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDayTime()>() >>>>>>>> org.joda.time.PeriodType.yearMonthDayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYMDTime>
org.joda.time.PeriodType.yearMonthDayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYMDTime> >>>>>>>> org.joda.time.PeriodType.yearMonthDayTime : if r0 != null
org.joda.time.PeriodType.yearMonthDayTime : if r0 != null >>>>>>>> org.joda.time.PeriodType.yearMonthDayTime : return r0
org.joda.time.PeriodType.yearMonthDayTime : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r15 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDayTime()>()
org.joda.time.PeriodType.forFields : $r15 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDayTime()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15) >>>>>>>> org.joda.time.PeriodType.forFields : $r17 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDay()>()
org.joda.time.PeriodType.forFields : $r17 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDay()>() >>>>>>>> org.joda.time.PeriodType.yearMonthDay : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYMD>
org.joda.time.PeriodType.yearMonthDay : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYMD> >>>>>>>> org.joda.time.PeriodType.yearMonthDay : if r0 != null
org.joda.time.PeriodType.yearMonthDay : if r0 != null >>>>>>>> org.joda.time.PeriodType.yearMonthDay : return r0
org.joda.time.PeriodType.yearMonthDay : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r18 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDay()>()
org.joda.time.PeriodType.forFields : $r18 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDay()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18) >>>>>>>> org.joda.time.PeriodType.forFields : $r20 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDayTime()>()
org.joda.time.PeriodType.forFields : $r20 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDayTime()>() >>>>>>>> org.joda.time.PeriodType.yearWeekDayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYWDTime>
org.joda.time.PeriodType.yearWeekDayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYWDTime> >>>>>>>> org.joda.time.PeriodType.yearWeekDayTime : if r0 != null
org.joda.time.PeriodType.yearWeekDayTime : if r0 != null >>>>>>>> org.joda.time.PeriodType.yearWeekDayTime : return r0
org.joda.time.PeriodType.yearWeekDayTime : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r21 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDayTime()>()
org.joda.time.PeriodType.forFields : $r21 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDayTime()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21) >>>>>>>> org.joda.time.PeriodType.forFields : $r23 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDay()>()
org.joda.time.PeriodType.forFields : $r23 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDay()>() >>>>>>>> org.joda.time.PeriodType.yearWeekDay : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYWD>
org.joda.time.PeriodType.yearWeekDay : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYWD> >>>>>>>> org.joda.time.PeriodType.yearWeekDay : if r0 != null
org.joda.time.PeriodType.yearWeekDay : if r0 != null >>>>>>>> org.joda.time.PeriodType.yearWeekDay : return r0
org.joda.time.PeriodType.yearWeekDay : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r24 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDay()>()
org.joda.time.PeriodType.forFields : $r24 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDay()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r24)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r24) >>>>>>>> org.joda.time.PeriodType.forFields : $r26 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDayTime()>()
org.joda.time.PeriodType.forFields : $r26 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDayTime()>() >>>>>>>> org.joda.time.PeriodType.yearDayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYDTime>
org.joda.time.PeriodType.yearDayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYDTime> >>>>>>>> org.joda.time.PeriodType.yearDayTime : if r0 != null
org.joda.time.PeriodType.yearDayTime : if r0 != null >>>>>>>> org.joda.time.PeriodType.yearDayTime : return r0
org.joda.time.PeriodType.yearDayTime : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r27 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDayTime()>()
org.joda.time.PeriodType.forFields : $r27 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDayTime()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27) >>>>>>>> org.joda.time.PeriodType.forFields : $r29 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDay()>()
org.joda.time.PeriodType.forFields : $r29 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDay()>() >>>>>>>> org.joda.time.PeriodType.yearDay : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYD>
org.joda.time.PeriodType.yearDay : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYD> >>>>>>>> org.joda.time.PeriodType.yearDay : if r0 != null
org.joda.time.PeriodType.yearDay : if r0 != null >>>>>>>> org.joda.time.PeriodType.yearDay : return r0
org.joda.time.PeriodType.yearDay : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r30 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDay()>()
org.joda.time.PeriodType.forFields : $r30 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDay()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.joda.time.PeriodType.forFields : $r32 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType dayTime()>()
org.joda.time.PeriodType.forFields : $r32 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType dayTime()>() >>>>>>>> org.joda.time.PeriodType.dayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDTime>
org.joda.time.PeriodType.dayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDTime> >>>>>>>> org.joda.time.PeriodType.dayTime : if r0 != null
org.joda.time.PeriodType.dayTime : if r0 != null >>>>>>>> org.joda.time.PeriodType.dayTime : return r0
org.joda.time.PeriodType.dayTime : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r33 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType dayTime()>()
org.joda.time.PeriodType.forFields : $r33 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType dayTime()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33) >>>>>>>> org.joda.time.PeriodType.forFields : $r35 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType time()>()
org.joda.time.PeriodType.forFields : $r35 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType time()>() >>>>>>>> org.joda.time.PeriodType.time : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cTime>
org.joda.time.PeriodType.time : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cTime> >>>>>>>> org.joda.time.PeriodType.time : if r0 != null
org.joda.time.PeriodType.time : if r0 != null >>>>>>>> org.joda.time.PeriodType.time : return r0
org.joda.time.PeriodType.time : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r36 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType time()>()
org.joda.time.PeriodType.forFields : $r36 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType time()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, $r36)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, $r36) >>>>>>>> org.joda.time.PeriodType.forFields : $r38 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType years()>()
org.joda.time.PeriodType.forFields : $r38 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType years()>() >>>>>>>> org.joda.time.PeriodType.years : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYears>
org.joda.time.PeriodType.years : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYears> >>>>>>>> org.joda.time.PeriodType.years : if r0 != null
org.joda.time.PeriodType.years : if r0 != null >>>>>>>> org.joda.time.PeriodType.years : return r0
org.joda.time.PeriodType.years : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r39 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType years()>()
org.joda.time.PeriodType.forFields : $r39 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType years()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r39)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r39) >>>>>>>> org.joda.time.PeriodType.forFields : $r41 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType months()>()
org.joda.time.PeriodType.forFields : $r41 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType months()>() >>>>>>>> org.joda.time.PeriodType.months : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMonths>
org.joda.time.PeriodType.months : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMonths> >>>>>>>> org.joda.time.PeriodType.months : if r0 != null
org.joda.time.PeriodType.months : if r0 != null >>>>>>>> org.joda.time.PeriodType.months : return r0
org.joda.time.PeriodType.months : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r42 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType months()>()
org.joda.time.PeriodType.forFields : $r42 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType months()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r42)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r42) >>>>>>>> org.joda.time.PeriodType.forFields : $r44 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType weeks()>()
org.joda.time.PeriodType.forFields : $r44 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType weeks()>() >>>>>>>> org.joda.time.PeriodType.weeks : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cWeeks>
org.joda.time.PeriodType.weeks : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cWeeks> >>>>>>>> org.joda.time.PeriodType.weeks : if r0 != null
org.joda.time.PeriodType.weeks : if r0 != null >>>>>>>> org.joda.time.PeriodType.weeks : return r0
org.joda.time.PeriodType.weeks : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r45 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType weeks()>()
org.joda.time.PeriodType.forFields : $r45 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType weeks()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r45)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r45) >>>>>>>> org.joda.time.PeriodType.forFields : $r47 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>()
org.joda.time.PeriodType.forFields : $r47 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>() >>>>>>>> org.joda.time.PeriodType.days : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDays>
org.joda.time.PeriodType.days : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDays> >>>>>>>> org.joda.time.PeriodType.days : if r0 != null
org.joda.time.PeriodType.days : if r0 != null >>>>>>>> org.joda.time.PeriodType.days : return r0
org.joda.time.PeriodType.days : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r48 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>()
org.joda.time.PeriodType.forFields : $r48 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, $r48)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, $r48) >>>>>>>> org.joda.time.PeriodType.forFields : $r50 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType hours()>()
org.joda.time.PeriodType.forFields : $r50 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType hours()>() >>>>>>>> org.joda.time.PeriodType.hours : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cHours>
org.joda.time.PeriodType.hours : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cHours> >>>>>>>> org.joda.time.PeriodType.hours : if r0 != null
org.joda.time.PeriodType.hours : if r0 != null >>>>>>>> org.joda.time.PeriodType.hours : return r0
org.joda.time.PeriodType.hours : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r51 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType hours()>()
org.joda.time.PeriodType.forFields : $r51 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType hours()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, $r51)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, $r51) >>>>>>>> org.joda.time.PeriodType.forFields : $r53 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType minutes()>()
org.joda.time.PeriodType.forFields : $r53 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType minutes()>() >>>>>>>> org.joda.time.PeriodType.minutes : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMinutes>
org.joda.time.PeriodType.minutes : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMinutes> >>>>>>>> org.joda.time.PeriodType.minutes : if r0 != null
org.joda.time.PeriodType.minutes : if r0 != null >>>>>>>> org.joda.time.PeriodType.minutes : return r0
org.joda.time.PeriodType.minutes : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r54 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType minutes()>()
org.joda.time.PeriodType.forFields : $r54 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType minutes()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, $r54)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, $r54) >>>>>>>> org.joda.time.PeriodType.forFields : $r56 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType seconds()>()
org.joda.time.PeriodType.forFields : $r56 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType seconds()>() >>>>>>>> org.joda.time.PeriodType.seconds : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cSeconds>
org.joda.time.PeriodType.seconds : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cSeconds> >>>>>>>> org.joda.time.PeriodType.seconds : if r0 != null
org.joda.time.PeriodType.seconds : if r0 != null >>>>>>>> org.joda.time.PeriodType.seconds : return r0
org.joda.time.PeriodType.seconds : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r57 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType seconds()>()
org.joda.time.PeriodType.forFields : $r57 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType seconds()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, $r57)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, $r57) >>>>>>>> org.joda.time.PeriodType.equals : if r0 != r1
org.joda.time.PeriodType.equals : if r0 != r1 >>>>>>>> org.joda.time.PeriodType.equals : $z0 = r1 instanceof org.joda.time.PeriodType
org.joda.time.PeriodType.equals : $z0 = r1 instanceof org.joda.time.PeriodType >>>>>>>> org.joda.time.PeriodType.equals : if $z0 != 0
org.joda.time.PeriodType.equals : if $z0 != 0 >>>>>>>> org.joda.time.PeriodType.equals : r2 = (org.joda.time.PeriodType) r1
org.joda.time.PeriodType.equals : r2 = (org.joda.time.PeriodType) r1 >>>>>>>> org.joda.time.PeriodType.equals : $r3 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.equals : $r3 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes> >>>>>>>> org.joda.time.PeriodType.equals : $r4 = r2.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.equals : $r4 = r2.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes> >>>>>>>> org.joda.time.PeriodType.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4)
org.joda.time.PeriodType.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4) >>>>>>>> org.joda.time.PeriodType.equals : return $z1
org.joda.time.PeriodType.equals : return $z1 >>>>>>>> org.joda.time.PeriodType.forFields : $r59 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType millis()>()
org.joda.time.PeriodType.forFields : $r59 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType millis()>() >>>>>>>> org.joda.time.PeriodType.millis : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMillis>
org.joda.time.PeriodType.millis : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMillis> >>>>>>>> org.joda.time.PeriodType.millis : if r0 != null
org.joda.time.PeriodType.millis : if r0 != null >>>>>>>> org.joda.time.PeriodType.millis : return r0
org.joda.time.PeriodType.millis : return r0 >>>>>>>> org.joda.time.PeriodType.forFields : $r60 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType millis()>()
org.joda.time.PeriodType.forFields : $r60 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType millis()>() >>>>>>>> org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r59, $r60)
org.joda.time.PeriodType.forFields : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r59, $r60) >>>>>>>> org.joda.time.PeriodType.forFields : $r62 = new org.joda.time.PeriodType
org.joda.time.PeriodType.forFields : $r62 = new org.joda.time.PeriodType >>>>>>>> org.joda.time.PeriodType.forFields : specialinvoke $r62.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>(null, r0, null)
org.joda.time.PeriodType.forFields : specialinvoke $r62.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>(null, r0, null) >>>>>>>> org.joda.time.PeriodType.forFields : r1 = $r62
org.joda.time.PeriodType.forFields : r1 = $r62 >>>>>>>> org.joda.time.PeriodType.forFields : r2 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.joda.time.PeriodType.forFields : r2 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.equals : if r0 != r1
org.joda.time.DurationFieldType$StandardDurationFieldType.equals : if r0 != r1 >>>>>>>> org.joda.time.DurationFieldType$StandardDurationFieldType.equals : return 1
org.joda.time.DurationFieldType$StandardDurationFieldType.equals : return 1 >>>>>>>> org.joda.time.PeriodType.forFields : $z1 = r2 instanceof org.joda.time.PeriodType
org.joda.time.PeriodType.forFields : $z1 = r2 instanceof org.joda.time.PeriodType >>>>>>>> org.joda.time.PeriodType.forFields : if $z1 == 0
org.joda.time.PeriodType.forFields : if $z1 == 0 >>>>>>>> org.joda.time.PeriodType.forFields : $r63 = (org.joda.time.PeriodType) r2
org.joda.time.PeriodType.forFields : $r63 = (org.joda.time.PeriodType) r2 >>>>>>>> org.joda.time.PeriodType.forFields : return $r63
org.joda.time.PeriodType.forFields : return $r63 >>>>>>>> org.joda.time.DurationFieldType.months : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE>
org.joda.time.DurationFieldType.months : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.months : return $r0
org.joda.time.DurationFieldType.months : return $r0 >>>>>>>> org.joda.time.DurationFieldType.weeks : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType WEEKS_TYPE>
org.joda.time.DurationFieldType.weeks : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType WEEKS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.weeks : return $r0
org.joda.time.DurationFieldType.weeks : return $r0 >>>>>>>> org.joda.time.DurationFieldType.days : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType DAYS_TYPE>
org.joda.time.DurationFieldType.days : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType DAYS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.days : return $r0
org.joda.time.DurationFieldType.days : return $r0 >>>>>>>> org.joda.time.DurationFieldType.hours : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType HOURS_TYPE>
org.joda.time.DurationFieldType.hours : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType HOURS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.hours : return $r0
org.joda.time.DurationFieldType.hours : return $r0 >>>>>>>> org.joda.time.DurationFieldType.minutes : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MINUTES_TYPE>
org.joda.time.DurationFieldType.minutes : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MINUTES_TYPE> >>>>>>>> org.joda.time.DurationFieldType.minutes : return $r0
org.joda.time.DurationFieldType.minutes : return $r0 >>>>>>>> org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>
org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.seconds : return $r0
org.joda.time.DurationFieldType.seconds : return $r0 >>>>>>>> org.joda.time.DurationFieldType.millis : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MILLIS_TYPE>
org.joda.time.DurationFieldType.millis : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MILLIS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.millis : return $r0
