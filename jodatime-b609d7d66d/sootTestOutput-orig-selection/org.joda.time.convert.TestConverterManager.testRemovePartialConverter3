org.joda.time.convert.ConverterManager.getInstance : $r0 = <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager INSTANCE> >>>>>>>> org.joda.time.convert.ConverterManager.getInstance : if $r0 != null
org.joda.time.convert.ConverterManager.getInstance : if $r0 != null >>>>>>>> org.joda.time.convert.ConverterManager.getInstance : $r2 = <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager INSTANCE>
org.joda.time.convert.ConverterManager.getInstance : $r2 = <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager INSTANCE> >>>>>>>> org.joda.time.convert.ConverterManager.getInstance : return $r2
org.joda.time.convert.ConverterManager.getInstance : return $r2 >>>>>>>> org.joda.time.convert.ConverterManager.removePartialConverter : specialinvoke r0.<org.joda.time.convert.ConverterManager: void checkAlterPartialConverters()>()
org.joda.time.convert.ConverterManager.removePartialConverter : specialinvoke r0.<org.joda.time.convert.ConverterManager: void checkAlterPartialConverters()>() >>>>>>>> org.joda.time.convert.ConverterManager.checkAlterPartialConverters : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.convert.ConverterManager.checkAlterPartialConverters : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.convert.ConverterManager.checkAlterPartialConverters : if r1 == null
org.joda.time.convert.ConverterManager.checkAlterPartialConverters : if r1 == null >>>>>>>> org.joda.time.convert.ConverterManager.removePartialConverter : if r1 != null
org.joda.time.convert.ConverterManager.removePartialConverter : if r1 != null >>>>>>>> org.joda.time.convert.ConverterManager.removePartialConverter : return null
org.joda.time.convert.ConverterManager.removePartialConverter : return null >>>>>>>> org.joda.time.convert.ConverterManager.getPartialConverters : r1 = r0.<org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterSet iPartialConverters>
org.joda.time.convert.ConverterManager.getPartialConverters : r1 = r0.<org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterSet iPartialConverters> >>>>>>>> org.joda.time.convert.ConverterManager.getPartialConverters : $i0 = virtualinvoke r1.<org.joda.time.convert.ConverterSet: int size()>()
org.joda.time.convert.ConverterManager.getPartialConverters : $i0 = virtualinvoke r1.<org.joda.time.convert.ConverterSet: int size()>() >>>>>>>> org.joda.time.convert.ConverterSet.size : $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.size : $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.size : $i0 = lengthof $r1
org.joda.time.convert.ConverterSet.size : $i0 = lengthof $r1 >>>>>>>> org.joda.time.convert.ConverterSet.size : return $i0
org.joda.time.convert.ConverterSet.size : return $i0 >>>>>>>> org.joda.time.convert.ConverterManager.getPartialConverters : r2 = newarray (org.joda.time.convert.PartialConverter)[$i0]
org.joda.time.convert.ConverterManager.getPartialConverters : r2 = newarray (org.joda.time.convert.PartialConverter)[$i0] >>>>>>>> org.joda.time.convert.ConverterManager.getPartialConverters : virtualinvoke r1.<org.joda.time.convert.ConverterSet: void copyInto(org.joda.time.convert.Converter[])>(r2)
org.joda.time.convert.ConverterManager.getPartialConverters : virtualinvoke r1.<org.joda.time.convert.ConverterSet: void copyInto(org.joda.time.convert.Converter[])>(r2) >>>>>>>> org.joda.time.convert.ConverterSet.copyInto : $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.copyInto : $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.copyInto : $r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.copyInto : $r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> >>>>>>>> org.joda.time.convert.ConverterSet.copyInto : $i0 = lengthof $r3
org.joda.time.convert.ConverterSet.copyInto : $i0 = lengthof $r3 >>>>>>>> org.joda.time.convert.ConverterSet.copyInto : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0)
org.joda.time.convert.ConverterSet.copyInto : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0) >>>>>>>> org.joda.time.convert.ConverterManager.getPartialConverters : return r2
