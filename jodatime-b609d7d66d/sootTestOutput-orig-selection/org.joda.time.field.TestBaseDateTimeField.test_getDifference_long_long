org.joda.time.DateTimeFieldType.secondOfMinute : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_MINUTE_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.secondOfMinute : return $r0
org.joda.time.DateTimeFieldType.secondOfMinute : return $r0 >>>>>>>> org.joda.time.field.BaseDateTimeField.getDifference : $r1 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: org.joda.time.DurationField getDurationField()>()
org.joda.time.field.BaseDateTimeField.getDifference : $r1 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: org.joda.time.DurationField getDurationField()>() >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : $r1 = new org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : $r1 = new org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>()
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>() >>>>>>>> org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>
org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.seconds : return $r0
org.joda.time.DurationFieldType.seconds : return $r0 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : specialinvoke $r1.<org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: void <init>(org.joda.time.DurationFieldType)>($r2)
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : specialinvoke $r1.<org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: void <init>(org.joda.time.DurationFieldType)>($r2) >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : return $r1
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : return $r1 >>>>>>>> org.joda.time.field.BaseDateTimeField.getDifference : $i2 = virtualinvoke $r1.<org.joda.time.DurationField: int getDifference(long,long)>(l0, l1)
org.joda.time.field.BaseDateTimeField.getDifference : $i2 = virtualinvoke $r1.<org.joda.time.DurationField: int getDifference(long,long)>(l0, l1) >>>>>>>> org.joda.time.field.BaseDurationField.getDifference : $l2 = virtualinvoke r0.<org.joda.time.field.BaseDurationField: long getDifferenceAsLong(long,long)>(l0, l1)
org.joda.time.field.BaseDurationField.getDifference : $l2 = virtualinvoke r0.<org.joda.time.field.BaseDurationField: long getDifferenceAsLong(long,long)>(l0, l1) >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.getDifferenceAsLong : $i2 = <org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: int difference_long>
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.getDifferenceAsLong : $i2 = <org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: int difference_long> >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.getDifferenceAsLong : $i3 = $i2 + 1
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.getDifferenceAsLong : $i3 = $i2 + 1 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.getDifferenceAsLong : <org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: int difference_long> = $i3
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.getDifferenceAsLong : <org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: int difference_long> = $i3 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.getDifferenceAsLong : return 30L
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.getDifferenceAsLong : return 30L >>>>>>>> org.joda.time.field.BaseDurationField.getDifference : $i3 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>($l2)
org.joda.time.field.BaseDurationField.getDifference : $i3 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>($l2) >>>>>>>> org.joda.time.field.FieldUtils.safeToInt : $b1 = -2147483648L cmp l0
org.joda.time.field.FieldUtils.safeToInt : $b1 = -2147483648L cmp l0 >>>>>>>> org.joda.time.field.FieldUtils.safeToInt : if $b1 > 0
org.joda.time.field.FieldUtils.safeToInt : if $b1 > 0 >>>>>>>> org.joda.time.field.FieldUtils.safeToInt : $b2 = l0 cmp 2147483647L
org.joda.time.field.FieldUtils.safeToInt : $b2 = l0 cmp 2147483647L >>>>>>>> org.joda.time.field.FieldUtils.safeToInt : if $b2 > 0
org.joda.time.field.FieldUtils.safeToInt : if $b2 > 0 >>>>>>>> org.joda.time.field.FieldUtils.safeToInt : $i3 = (int) l0
org.joda.time.field.FieldUtils.safeToInt : $i3 = (int) l0 >>>>>>>> org.joda.time.field.FieldUtils.safeToInt : return $i3
org.joda.time.field.FieldUtils.safeToInt : return $i3 >>>>>>>> org.joda.time.field.BaseDurationField.getDifference : return $i3
org.joda.time.field.BaseDurationField.getDifference : return $i3 >>>>>>>> org.joda.time.field.BaseDateTimeField.getDifference : return $i2
