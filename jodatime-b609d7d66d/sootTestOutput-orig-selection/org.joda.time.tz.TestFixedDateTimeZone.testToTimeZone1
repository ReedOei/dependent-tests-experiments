org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r1 == null
org.joda.time.DateTimeZone.setDefault : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r0 != null
org.joda.time.DateTimeZone.setDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone"
org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone" >>>>>>>> org.joda.time.DateTimeZone.setDefault : r3 = $r6
org.joda.time.DateTimeZone.setDefault : r3 = $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : entermonitor $r6
org.joda.time.DateTimeZone.setDefault : entermonitor $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0
org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : exitmonitor r3
org.joda.time.DateTimeZone.setDefault : exitmonitor r3 >>>>>>>> org.joda.time.DateTimeZone.setDefault : goto [?= return]
org.joda.time.DateTimeZone.setDefault : goto [?= return] >>>>>>>> org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault>
org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> >>>>>>>> org.joda.time.DateTimeZone.getDefault : if r0 != null
org.joda.time.DateTimeZone.getDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefault : return r0
org.joda.time.DateTimeZone.getDefault : return r0 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>() >>>>>>>> org.joda.time.DateTimeZone.getID : $r1 = r0.<org.joda.time.DateTimeZone: java.lang.String iID>
org.joda.time.DateTimeZone.getID : $r1 = r0.<org.joda.time.DateTimeZone: java.lang.String iID> >>>>>>>> org.joda.time.DateTimeZone.getID : return $r1
org.joda.time.DateTimeZone.getID : return $r1 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $i0 != 6
org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $i0 != 6 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("+")
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("+") >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $z0 != 0
org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $z0 != 0 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r2 = new java.lang.StringBuilder
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r2 = new java.lang.StringBuilder >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT")
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT") >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r4 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r4 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r6)
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r6) >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : return $r7
