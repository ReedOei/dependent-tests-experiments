org.joda.time.DateTimeUtils.setCurrentMillisSystem : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : if r0 == null
org.joda.time.DateTimeUtils.checkPermission : if r0 == null >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisSystem : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$SystemMillisProvider SYSTEM_MILLIS_PROVIDER>
org.joda.time.DateTimeUtils.setCurrentMillisSystem : $r0 = <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$SystemMillisProvider SYSTEM_MILLIS_PROVIDER> >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisSystem : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0
org.joda.time.DateTimeUtils.setCurrentMillisSystem : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r1 == null
org.joda.time.DateTimeZone.setDefault : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.setDefault : if r0 != null
org.joda.time.DateTimeZone.setDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone"
org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone" >>>>>>>> org.joda.time.DateTimeZone.setDefault : r3 = $r6
org.joda.time.DateTimeZone.setDefault : r3 = $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : entermonitor $r6
org.joda.time.DateTimeZone.setDefault : entermonitor $r6 >>>>>>>> org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0
org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0 >>>>>>>> org.joda.time.DateTimeZone.setDefault : exitmonitor r3
org.joda.time.DateTimeZone.setDefault : exitmonitor r3 >>>>>>>> org.joda.time.DateTimeZone.setDefault : goto [?= return]
org.joda.time.DateTimeZone.setDefault : goto [?= return] >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>()
org.joda.time.DateTimeUtils.setCurrentMillisFixed : staticinvoke <org.joda.time.DateTimeUtils: void checkPermission()>() >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : $r0 = new org.joda.time.DateTimeUtils$FixedMillisProvider
org.joda.time.DateTimeUtils.setCurrentMillisFixed : $r0 = new org.joda.time.DateTimeUtils$FixedMillisProvider >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : specialinvoke $r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: void <init>(long)>(l0)
org.joda.time.DateTimeUtils.setCurrentMillisFixed : specialinvoke $r0.<org.joda.time.DateTimeUtils$FixedMillisProvider: void <init>(long)>(l0) >>>>>>>> org.joda.time.DateTimeUtils.setCurrentMillisFixed : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0
org.joda.time.DateTimeUtils.setCurrentMillisFixed : <org.joda.time.DateTimeUtils: org.joda.time.DateTimeUtils$MillisProvider cMillisProvider> = $r0 >>>>>>>> org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault>
org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> >>>>>>>> org.joda.time.DateTimeZone.getDefault : if r0 != null
org.joda.time.DateTimeZone.getDefault : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefault : return r0
org.joda.time.DateTimeZone.getDefault : return r0 >>>>>>>> org.joda.time.format.ISOPeriodFormat.standard : $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard>
org.joda.time.format.ISOPeriodFormat.standard : $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard> >>>>>>>> org.joda.time.format.ISOPeriodFormat.standard : if $r0 != null
org.joda.time.format.ISOPeriodFormat.standard : if $r0 != null >>>>>>>> org.joda.time.format.ISOPeriodFormat.standard : $r19 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard>
org.joda.time.format.ISOPeriodFormat.standard : $r19 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard> >>>>>>>> org.joda.time.format.ISOPeriodFormat.standard : return $r19
org.joda.time.format.ISOPeriodFormat.standard : return $r19 >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: java.util.Locale getLocale()>()
org.joda.time.format.PeriodFormatter.withLocale : $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: java.util.Locale getLocale()>() >>>>>>>> org.joda.time.format.PeriodFormatter.getLocale : $r1 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>
org.joda.time.format.PeriodFormatter.getLocale : $r1 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale> >>>>>>>> org.joda.time.format.PeriodFormatter.getLocale : return $r1
org.joda.time.format.PeriodFormatter.getLocale : return $r1 >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : if r1 == $r2
org.joda.time.format.PeriodFormatter.withLocale : if r1 == $r2 >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : if r1 == null
org.joda.time.format.PeriodFormatter.withLocale : if r1 == null >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : $r3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: java.util.Locale getLocale()>()
org.joda.time.format.PeriodFormatter.withLocale : $r3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: java.util.Locale getLocale()>() >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : $z0 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>($r3)
org.joda.time.format.PeriodFormatter.withLocale : $z0 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : if $z0 == 0
org.joda.time.format.PeriodFormatter.withLocale : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : $r4 = new org.joda.time.format.PeriodFormatter
org.joda.time.format.PeriodFormatter.withLocale : $r4 = new org.joda.time.format.PeriodFormatter >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : $r5 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>
org.joda.time.format.PeriodFormatter.withLocale : $r5 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter> >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : $r6 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>
org.joda.time.format.PeriodFormatter.withLocale : $r6 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser> >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : $r7 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>
org.joda.time.format.PeriodFormatter.withLocale : $r7 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType> >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : specialinvoke $r4.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r5, $r6, r1, $r7)
org.joda.time.format.PeriodFormatter.withLocale : specialinvoke $r4.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r5, $r6, r1, $r7) >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : return $r4
org.joda.time.format.PeriodFormatter.withLocale : return $r4 >>>>>>>> org.joda.time.format.PeriodFormatter.withLocale : return r0
