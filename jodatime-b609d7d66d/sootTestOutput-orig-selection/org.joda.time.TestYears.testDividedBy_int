org.joda.time.Years.years : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Years.years : $r6 = new org.joda.time.Years
org.joda.time.Years.years : $r6 = new org.joda.time.Years >>>>>>>> org.joda.time.Years.years : specialinvoke $r6.<org.joda.time.Years: void <init>(int)>(i0)
org.joda.time.Years.years : specialinvoke $r6.<org.joda.time.Years: void <init>(int)>(i0) >>>>>>>> org.joda.time.Years.years : return $r6
org.joda.time.Years.years : return $r6 >>>>>>>> org.joda.time.Years.dividedBy : if i0 != 1
org.joda.time.Years.dividedBy : if i0 != 1 >>>>>>>> org.joda.time.Years.dividedBy : $i1 = virtualinvoke r0.<org.joda.time.Years: int getValue()>()
org.joda.time.Years.dividedBy : $i1 = virtualinvoke r0.<org.joda.time.Years: int getValue()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod>
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod> >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0
org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0 >>>>>>>> org.joda.time.Years.dividedBy : $i2 = $i1 / i0
org.joda.time.Years.dividedBy : $i2 = $i1 / i0 >>>>>>>> org.joda.time.Years.dividedBy : $r1 = staticinvoke <org.joda.time.Years: org.joda.time.Years years(int)>($i2)
org.joda.time.Years.dividedBy : $r1 = staticinvoke <org.joda.time.Years: org.joda.time.Years years(int)>($i2) >>>>>>>> org.joda.time.Years.dividedBy : return $r1
org.joda.time.Years.dividedBy : return $r1 >>>>>>>> org.joda.time.Years.getYears : $i0 = virtualinvoke r0.<org.joda.time.Years: int getValue()>()
org.joda.time.Years.getYears : $i0 = virtualinvoke r0.<org.joda.time.Years: int getValue()>() >>>>>>>> org.joda.time.Years.getYears : return $i0
org.joda.time.Years.getYears : return $i0 >>>>>>>> org.joda.time.Years.years : $r3 = <org.joda.time.Years: org.joda.time.Years THREE>
org.joda.time.Years.years : $r3 = <org.joda.time.Years: org.joda.time.Years THREE> >>>>>>>> org.joda.time.Years.years : return $r3
org.joda.time.Years.years : return $r3 >>>>>>>> org.joda.time.Years.years : $r2 = <org.joda.time.Years: org.joda.time.Years TWO>
org.joda.time.Years.years : $r2 = <org.joda.time.Years: org.joda.time.Years TWO> >>>>>>>> org.joda.time.Years.years : return $r2
org.joda.time.Years.years : return $r2 >>>>>>>> org.joda.time.Years.dividedBy : return r0
