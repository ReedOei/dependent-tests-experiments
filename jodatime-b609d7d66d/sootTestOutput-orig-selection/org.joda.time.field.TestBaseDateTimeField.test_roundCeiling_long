org.joda.time.DateTimeFieldType.secondOfMinute : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_MINUTE_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.secondOfMinute : return $r0
org.joda.time.DateTimeFieldType.secondOfMinute : return $r0 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundCeiling : l1 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: long roundFloor(long)>(l0)
org.joda.time.field.BaseDateTimeField.roundCeiling : l1 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: long roundFloor(long)>(l0) >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.roundFloor : $l1 = l0 / 60L
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.roundFloor : $l1 = l0 / 60L >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.roundFloor : $l2 = $l1 * 60L
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.roundFloor : $l2 = $l1 * 60L >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.roundFloor : return $l2
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.roundFloor : return $l2 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundCeiling : $b2 = l1 cmp l0
org.joda.time.field.BaseDateTimeField.roundCeiling : $b2 = l1 cmp l0 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundCeiling : if $b2 == 0
org.joda.time.field.BaseDateTimeField.roundCeiling : if $b2 == 0 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundCeiling : return l0
org.joda.time.field.BaseDateTimeField.roundCeiling : return l0 >>>>>>>> org.joda.time.field.BaseDateTimeField.roundCeiling : l0 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: long add(long,int)>(l1, 1)
org.joda.time.field.BaseDateTimeField.roundCeiling : l0 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: long add(long,int)>(l1, 1) >>>>>>>> org.joda.time.field.BaseDateTimeField.add : $r1 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: org.joda.time.DurationField getDurationField()>()
org.joda.time.field.BaseDateTimeField.add : $r1 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: org.joda.time.DurationField getDurationField()>() >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : $r1 = new org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : $r1 = new org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>()
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>() >>>>>>>> org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>
org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.seconds : return $r0
org.joda.time.DurationFieldType.seconds : return $r0 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : specialinvoke $r1.<org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: void <init>(org.joda.time.DurationFieldType)>($r2)
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : specialinvoke $r1.<org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: void <init>(org.joda.time.DurationFieldType)>($r2) >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : return $r1
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getDurationField : return $r1 >>>>>>>> org.joda.time.field.BaseDateTimeField.add : $l2 = virtualinvoke $r1.<org.joda.time.DurationField: long add(long,int)>(l0, i1)
org.joda.time.field.BaseDateTimeField.add : $l2 = virtualinvoke $r1.<org.joda.time.DurationField: long add(long,int)>(l0, i1) >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $i2 = <org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: int add_int>
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $i2 = <org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: int add_int> >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $i3 = $i2 + 1
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $i3 = $i2 + 1 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : <org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: int add_int> = $i3
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : <org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField: int add_int> = $i3 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $l4 = (long) i1
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $l4 = (long) i1 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $l5 = $l4 * 60L
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $l5 = $l4 * 60L >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $l6 = l0 + $l5
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : $l6 = l0 + $l5 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : return $l6
org.joda.time.field.TestBaseDateTimeField$MockCountingDurationField.add : return $l6 >>>>>>>> org.joda.time.field.BaseDateTimeField.add : return $l2
