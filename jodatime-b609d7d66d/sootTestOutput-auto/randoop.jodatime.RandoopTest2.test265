org.joda.time.DurationFieldType$StandardDurationFieldType.getField : $r8 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DurationField weeks()>()
org.joda.time.DurationFieldType$StandardDurationFieldType.getField : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>(r1)
org.joda.time.DurationFieldType$StandardDurationFieldType.getField : $b0 = r0.<org.joda.time.DurationFieldType$StandardDurationFieldType: byte iOrdinal>
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : $r4 = interfaceinvoke r0.<org.joda.time.ReadablePeriod: org.joda.time.DurationFieldType getFieldType(int)>(i2)
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : if r0 != null goto r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : if i3 == 0 goto i2 = i2 + 1
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : i3 = interfaceinvoke r0.<org.joda.time.ReadablePeriod: int getValue(int)>(i2)
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : l1 = 0L
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : $l7 = l1 / l0
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : i2 = 0
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : $z0 = virtualinvoke r2.<org.joda.time.DurationField: boolean isPrecise()>()
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn : $l5 = virtualinvoke r2.<org.joda.time.DurationField: long getUnitMillis()>()
org.joda.time.chrono.BaseChronology.get : return r2
org.joda.time.chrono.BaseChronology.get : r2 = newarray (int)[i1]
org.joda.time.chrono.BaseChronology.get : i1 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int size()>()
org.joda.time.chrono.BaseChronology.get : $b5 = l0 cmp 0L
org.joda.time.base.BasePeriod.getPeriodType : $r1 = r0.<org.joda.time.base.BasePeriod: org.joda.time.PeriodType iType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint : return 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint : return 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint : $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint : if i0 > 0 goto $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>
org.joda.time.format.FormatUtils.calculateDigitCount : $b2 = l0 cmp -9223372036854775808L
org.joda.time.format.FormatUtils.calculateDigitCount : $b1 = l0 cmp 0L
org.joda.time.format.FormatUtils.calculateDigitCount : $l3 = neg l0
org.joda.time.format.FormatUtils.calculateDigitCount : $b6 = l0 cmp 10L
org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint : $r4 = r3[i2]
org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint : i1 = 0
org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint : i2 = lengthof r3
org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint : r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters>
org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint : return i1
org.joda.time.format.FormatUtils.appendUnpaddedInteger : if i0 >= 10 goto (branch)
org.joda.time.format.FormatUtils.appendUnpaddedInteger : if i0 == -2147483648 goto virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("2147483648")
org.joda.time.format.FormatUtils.appendUnpaddedInteger : virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45)
org.joda.time.format.FormatUtils.appendUnpaddedInteger : i0 = neg i0
org.joda.time.format.FormatUtils.appendUnpaddedInteger : $i2 = i0 + 48
org.joda.time.format.FormatUtils.appendUnpaddedInteger : if i0 >= 0 goto (branch)
org.joda.time.base.BaseSingleFieldPeriod.size : return 1
org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>
org.joda.time.field.PreciseDurationField.isPrecise : return 1
org.joda.time.base.BasePeriod.setField : $r2 = r0.<org.joda.time.base.BasePeriod: int[] iValues>
org.joda.time.chrono.ISOChronology.getInstance : if r0 != null goto $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)
org.joda.time.chrono.ISOChronology.getInstance : $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)
org.joda.time.chrono.ISOChronology.getInstance : $r5 = <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology[] cFastCache>
org.joda.time.chrono.ISOChronology.getInstance : return r1
org.joda.time.chrono.ISOChronology.getInstance : if r1 == null goto $r7 = <org.joda.time.chrono.ISOChronology: java.util.Map cCache>
org.joda.time.chrono.ISOChronology.getInstance : $r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : $i4 = staticinvoke <org.joda.time.format.FormatUtils: int calculateDigitCount(long)>(l0)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : i2 = (int) l0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : $b3 = l0 cmp 9223372036854775807L
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : $i6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : return 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r1)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : return i1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength : $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>
org.joda.time.format.PeriodFormat.wordBased : return r2
org.joda.time.format.PeriodFormat.wordBased : if r2 != null goto return r2
org.joda.time.format.PeriodFormat.wordBased : $r1 = <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS>
org.joda.time.MutablePeriod.getMonths : $r1 = virtualinvoke r0.<org.joda.time.MutablePeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.base.BasePeriod.addPeriodInto : r3 = interfaceinvoke r2.<org.joda.time.ReadablePeriod: org.joda.time.DurationFieldType getFieldType(int)>(i0)
org.joda.time.base.BasePeriod.addPeriodInto : if i3 != -1 goto $i4 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int getValue(int)>(i3)
org.joda.time.base.BasePeriod.addPeriodInto : i0 = 0
org.joda.time.base.BasePeriod.addPeriodInto : if i2 == 0 goto i0 = i0 + 1
org.joda.time.base.BasePeriod.addPeriodInto : i3 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int indexOf(org.joda.time.DurationFieldType)>(r3)
org.joda.time.base.BasePeriod.addPeriodInto : i2 = interfaceinvoke r2.<org.joda.time.ReadablePeriod: int getValue(int)>(i0)
org.joda.time.base.BasePeriod.addPeriodInto : return r1
org.joda.time.base.BasePeriod.addPeriodInto : $i4 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int getValue(int)>(i3)
org.joda.time.DurationFieldType.millis : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MILLIS_TYPE>
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : i1 = 0
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : $r5 = r4[i1]
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : i0 = lengthof r4
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters>
org.joda.time.base.AbstractPeriod.getFieldType : $r1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.chrono.ZonedChronology.getZone : $r1 = virtualinvoke r0.<org.joda.time.chrono.ZonedChronology: java.lang.Object getParam()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : $r4 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : $r6 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : $r8 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : $r5 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : tableswitch(i0) {     case 0: goto $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();     case 1: goto $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();     case 2: goto $r4 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();     case 3: goto $r5 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();     case 4: goto $r6 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();     case 5: goto $r7 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();     case 6: goto $r8 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();     case 7: goto $r9 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();     case 8: goto $r10 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();     case 9: goto $r10 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();     default: goto return 0; }
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : $r9 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported : $r7 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>()
org.joda.time.DateTimeUtils.getChronology : if r0 != null goto return r0
org.joda.time.DateTimeUtils.getChronology : return r0
org.joda.time.DateTimeUtils.getChronology : $r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance()>()
org.joda.time.base.BasePeriod.setValues : $r2 = r0.<org.joda.time.base.BasePeriod: int[] iValues>
org.joda.time.format.PeriodFormat.getDefault : $r0 = <java.util.Locale: java.util.Locale ENGLISH>
org.joda.time.base.AbstractPeriod.indexOf : $r2 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.printTo : if i0 != 1 goto $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>
org.joda.time.base.BasePeriod.setFieldInto : if i1 != -1 goto r1[i1] = i0
org.joda.time.base.BasePeriod.setFieldInto : i1 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int indexOf(org.joda.time.DurationFieldType)>(r2)
org.joda.time.base.BasePeriod.setFieldInto : r1[i1] = i0
org.joda.time.DateTimeUtils.getPeriodType : if r0 != null goto return r0
org.joda.time.DateTimeUtils.getPeriodType : $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>()
org.joda.time.DateTimeUtils.getPeriodType : return r0
org.joda.time.base.BasePeriod.getValue : $r1 = r0.<org.joda.time.base.BasePeriod: int[] iValues>
org.joda.time.Months.getFieldType : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : return 9223372036854775807L
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : $r4 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : r2 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : if r2 == null goto $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : return l0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : $b17 = l0 cmp 0L
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : goto [?= $b17 = l0 cmp 0L]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue : $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.DurationFieldType.hours : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType HOURS_TYPE>
org.joda.time.Months.months : lookupswitch(i0) {     case -2147483648: goto $r14 = <org.joda.time.Months: org.joda.time.Months MIN_VALUE>;     case 0: goto $r0 = <org.joda.time.Months: org.joda.time.Months ZERO>;     case 1: goto $r1 = <org.joda.time.Months: org.joda.time.Months ONE>;     case 2: goto $r2 = <org.joda.time.Months: org.joda.time.Months TWO>;     case 3: goto $r3 = <org.joda.time.Months: org.joda.time.Months THREE>;     case 4: goto $r4 = <org.joda.time.Months: org.joda.time.Months FOUR>;     case 5: goto $r5 = <org.joda.time.Months: org.joda.time.Months FIVE>;     case 6: goto $r6 = <org.joda.time.Months: org.joda.time.Months SIX>;     case 7: goto $r7 = <org.joda.time.Months: org.joda.time.Months SEVEN>;     case 8: goto $r8 = <org.joda.time.Months: org.joda.time.Months EIGHT>;     case 9: goto $r9 = <org.joda.time.Months: org.joda.time.Months NINE>;     case 10: goto $r10 = <org.joda.time.Months: org.joda.time.Months TEN>;     case 11: goto $r11 = <org.joda.time.Months: org.joda.time.Months ELEVEN>;     case 12: goto $r12 = <org.joda.time.Months: org.joda.time.Months TWELVE>;     case 2147483647: goto $r13 = <org.joda.time.Months: org.joda.time.Months MAX_VALUE>;     default: goto $r15 = new org.joda.time.Months; }
org.joda.time.Months.months : $r15 = new org.joda.time.Months
org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto : return i0
org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto : $r6 = r4[i2]
org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto : if r4 != null goto i1 = lengthof r4
org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto : i2 = 0
org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodParser[] iParsers>
org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto : i1 = lengthof r4
org.joda.time.format.PeriodFormatterBuilder$Separator.countFieldsToPrint : if i1 >= i0 goto return i1
org.joda.time.format.PeriodFormatterBuilder$Separator.countFieldsToPrint : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iBeforePrinter>
org.joda.time.format.PeriodFormatterBuilder$Separator.countFieldsToPrint : $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>
org.joda.time.format.PeriodFormatterBuilder$Separator.countFieldsToPrint : return i1
org.joda.time.PeriodType.yearWeekDayTime : if r0 != null goto return r0
org.joda.time.PeriodType.yearWeekDayTime : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYWDTime>
org.joda.time.PeriodType.yearWeekDayTime : return r0
org.joda.time.field.PreciseDurationField.getUnitMillis : $l0 = r0.<org.joda.time.field.PreciseDurationField: long iUnitMillis>
org.joda.time.chrono.AssembledChronology.getZone : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.AssembledChronology.getZone : $r2 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.Chronology iBase>
org.joda.time.Months.plus : $i1 = virtualinvoke r0.<org.joda.time.Months: int getValue()>()
org.joda.time.Months.plus : if i0 != 0 goto $i1 = virtualinvoke r0.<org.joda.time.Months: int getValue()>()
org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength : return i0
org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength : i0 = 0
org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength : $r4 = r3[i1]
org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength : r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters>
org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength : i1 = lengthof r3
org.joda.time.DurationFieldType.days : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType DAYS_TYPE>
org.joda.time.Months.getPeriodType : $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType months()>()
org.joda.time.base.BaseSingleFieldPeriod.get : $r2 = virtualinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: org.joda.time.DurationFieldType getFieldType()>()
org.joda.time.base.BaseSingleFieldPeriod.get : $i0 = virtualinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: int getValue()>()
org.joda.time.format.PeriodFormatter.checkParser : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>
org.joda.time.base.BasePeriod.addPeriod : $r2 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int[] getValues()>()
org.joda.time.base.BasePeriod.addPeriod : if r1 == null goto return
org.joda.time.format.PeriodFormatter.parseInto : specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>(r1)
org.joda.time.format.PeriodFormatter.parseInto : $r3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>()
org.joda.time.format.PeriodFormatter.parseInto : specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkParser()>()
org.joda.time.PeriodType.size : $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.getIndexedField : $r2 = r0.<org.joda.time.PeriodType: int[] iIndices>
org.joda.time.PeriodType.getIndexedField : if i1 != -1 goto $i2 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int getValue(int)>(i1)
org.joda.time.DateTimeZone.getDefault : if r0 != null goto return r0
org.joda.time.DateTimeZone.getDefault : r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault>
org.joda.time.DateTimeZone.getDefault : return r0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i8 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 == 0 goto $i9 = i0
org.joda.time.Weeks.toStandardMinutes : $i0 = virtualinvoke r0.<org.joda.time.Weeks: int getValue()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.calculatePrintedLength : if i0 != 1 goto $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>
org.joda.time.base.BaseSingleFieldPeriod.getFieldType : if i0 == 0 goto $r3 = virtualinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: org.joda.time.DurationFieldType getFieldType()>()
org.joda.time.base.BaseSingleFieldPeriod.getFieldType : $r3 = virtualinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: org.joda.time.DurationFieldType getFieldType()>()
org.joda.time.format.PeriodFormatter.getParseType : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>
org.joda.time.DurationFieldType.minutes : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MINUTES_TYPE>
org.joda.time.Weeks.standardWeeksIn : $r1 = staticinvoke <org.joda.time.Weeks: org.joda.time.Weeks weeks(int)>(i0)
org.joda.time.Weeks.standardWeeksIn : i0 = staticinvoke <org.joda.time.base.BaseSingleFieldPeriod: int standardPeriodIn(org.joda.time.ReadablePeriod,long)>(r0, 604800000L)
org.joda.time.PeriodType.isSupported : $i0 = virtualinvoke r0.<org.joda.time.PeriodType: int indexOf(org.joda.time.DurationFieldType)>(r1)
org.joda.time.PeriodType.standard : if r0 != null goto return r0
org.joda.time.PeriodType.standard : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard>
org.joda.time.PeriodType.standard : return r0
org.joda.time.Minutes.minutes : lookupswitch(i0) {     case -2147483648: goto $r5 = <org.joda.time.Minutes: org.joda.time.Minutes MIN_VALUE>;     case 0: goto $r0 = <org.joda.time.Minutes: org.joda.time.Minutes ZERO>;     case 1: goto $r1 = <org.joda.time.Minutes: org.joda.time.Minutes ONE>;     case 2: goto $r2 = <org.joda.time.Minutes: org.joda.time.Minutes TWO>;     case 3: goto $r3 = <org.joda.time.Minutes: org.joda.time.Minutes THREE>;     case 2147483647: goto $r4 = <org.joda.time.Minutes: org.joda.time.Minutes MAX_VALUE>;     default: goto $r6 = new org.joda.time.Minutes; }
org.joda.time.Minutes.minutes : $r6 = new org.joda.time.Minutes
org.joda.time.MutablePeriod.getSeconds : $r1 = virtualinvoke r0.<org.joda.time.MutablePeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.PeriodType.months : if r0 != null goto return r0
org.joda.time.PeriodType.months : return r0
org.joda.time.PeriodType.months : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMonths>
org.joda.time.chrono.AssembledChronology.getParam : $r1 = r0.<org.joda.time.chrono.AssembledChronology: java.lang.Object iParam>
org.joda.time.format.PeriodFormatter.getParser : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>
org.joda.time.format.PeriodFormatter.print : r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>()
org.joda.time.format.PeriodFormatter.print : $r4 = new java.lang.StringBuffer
org.joda.time.format.PeriodFormatter.print : specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>(r1)
org.joda.time.format.PeriodFormatter.print : $r6 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>
org.joda.time.format.PeriodFormatter.print : $r7 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
org.joda.time.format.PeriodFormatter.print : specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPrinter()>()
org.joda.time.base.BasePeriod.checkPeriodType : $r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.PeriodType getPeriodType(org.joda.time.PeriodType)>(r1)
org.joda.time.base.BaseSingleFieldPeriod.toMutablePeriod : return r2
org.joda.time.base.BaseSingleFieldPeriod.toMutablePeriod : $r1 = new org.joda.time.MutablePeriod
org.joda.time.base.BaseSingleFieldPeriod.toMutablePeriod : virtualinvoke r2.<org.joda.time.MutablePeriod: void add(org.joda.time.ReadablePeriod)>(r0)
org.joda.time.DurationFieldType.months : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE>
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : goto [?= return i0]
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : return i0
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : $i4 = interfaceinvoke r3.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r1, 1, r2)
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : $i3 = interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2)
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter>
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : i1 = interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r1, 2, r2)
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : $i2 = interfaceinvoke r3.<org.joda.time.format.PeriodPrinter: int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2)
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseBefore>
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iBeforePrinter>
org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength : if i1 <= 0 goto (branch)
org.joda.time.field.FieldUtils.safeAdd : l2 = l0 + l1
org.joda.time.field.FieldUtils.safeAdd : $l3 = l0 ^ l2
org.joda.time.field.FieldUtils.safeAdd : return l2
org.joda.time.field.FieldUtils.safeAdd : return i2
org.joda.time.field.FieldUtils.safeAdd : $i3 = i0 ^ i2
org.joda.time.field.FieldUtils.safeAdd : i2 = i0 + i1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : $r8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : $i7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : i1 = (int) l0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : $b4 = l0 cmp 9223372036854775807L
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r2)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : staticinvoke <org.joda.time.format.FormatUtils: void appendUnpaddedInteger(java.lang.StringBuffer,int)>(r1, i1)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : if i2 > 1 goto staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>(r1, i1, i2)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo : $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.field.FieldUtils.safeToInt : $i3 = (int) l0
org.joda.time.field.FieldUtils.safeToInt : $b1 = -2147483648L cmp l0
org.joda.time.field.FieldUtils.safeMultiply : $l3 = (long) i0
org.joda.time.field.FieldUtils.safeMultiply : tableswitch(i1) {     case -1: goto $l3 = neg l0;     case 0: goto return 0L;     case 1: goto return l0;     default: goto $l4 = (long) i1; }
org.joda.time.field.FieldUtils.safeMultiply : $b5 = l2 cmp -2147483648L
org.joda.time.field.FieldUtils.safeMultiply : $l3 = neg l0
org.joda.time.field.FieldUtils.safeMultiply : $i7 = (int) l2
org.joda.time.format.PeriodFormatter.checkPrinter : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : if i0 <= 0 goto (branch)
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3)
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter>
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iBeforePrinter>
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : goto [?= interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3)]
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : $i1 = interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r2, 1, r3)
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseBefore>
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : i0 = interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r2, 2, r3)
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3)
org.joda.time.format.PeriodFormatterBuilder$Separator.printTo : r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>
org.joda.time.DurationFieldType.years : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType YEARS_TYPE>
org.joda.time.DurationFieldType.weeks : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType WEEKS_TYPE>
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : if z0 == 0 goto (branch)
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : if i4 >= 0 goto z0 = 0
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iAfterParser>
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : i9 = i4
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : z0 = 0
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : if i10 <= i9 goto return i10
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : if i4 <= i1 goto i9 = i4
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iBeforeParser>
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : if i10 >= 0 goto (branch)
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : i1 = i0
org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto : return i10
org.joda.time.base.AbstractPeriod.getValues : $i3 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int getValue(int)>(i0)
org.joda.time.base.AbstractPeriod.getValues : i0 = 0
org.joda.time.base.AbstractPeriod.getValues : $i1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int size()>()
org.joda.time.base.AbstractPeriod.getValues : return r1
org.joda.time.MutablePeriod.setWeeks : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>()
org.joda.time.base.AbstractPeriod.size : $r1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.format.PeriodFormatter.checkPeriod : if r1 != null goto return
org.joda.time.MutablePeriod.add : specialinvoke r0.<org.joda.time.base.BasePeriod: void addPeriod(org.joda.time.ReadablePeriod)>(r1)
org.joda.time.chrono.AssembledChronology.weeks : $r1 = r0.<org.joda.time.chrono.AssembledChronology: org.joda.time.DurationField iWeeks>
org.joda.time.Weeks.weeks : lookupswitch(i0) {     case -2147483648: goto $r5 = <org.joda.time.Weeks: org.joda.time.Weeks MIN_VALUE>;     case 0: goto $r0 = <org.joda.time.Weeks: org.joda.time.Weeks ZERO>;     case 1: goto $r1 = <org.joda.time.Weeks: org.joda.time.Weeks ONE>;     case 2: goto $r2 = <org.joda.time.Weeks: org.joda.time.Weeks TWO>;     case 3: goto $r3 = <org.joda.time.Weeks: org.joda.time.Weeks THREE>;     case 2147483647: goto $r4 = <org.joda.time.Weeks: org.joda.time.Weeks MAX_VALUE>;     default: goto $r6 = new org.joda.time.Weeks; }
org.joda.time.Weeks.weeks : $r6 = new org.joda.time.Weeks
org.joda.time.PeriodType.getFieldType : $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.indexOf : return -1
org.joda.time.PeriodType.indexOf : return i0
org.joda.time.PeriodType.indexOf : $r2 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.indexOf : i0 = 0
org.joda.time.chrono.ISOChronology.getInstanceUTC : $r0 = <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology INSTANCE_UTC>
org.joda.time.Weeks.getFieldType : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>()
org.joda.time.format.PeriodFormatter.getPrinter : $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>
org.joda.time.base.BaseSingleFieldPeriod.getValue : if i0 == 0 goto $i1 = virtualinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: int getValue()>()
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i1 = virtualinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: int getValue()>()
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod>
