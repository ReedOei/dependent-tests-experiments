org.joda.time.base.BasePeriod.getPeriodType : $r1 = r0.<org.joda.time.base.BasePeriod: org.joda.time.PeriodType iType>
org.joda.time.format.PeriodFormatter.withParseType : $r3 = new org.joda.time.format.PeriodFormatter
org.joda.time.format.PeriodFormatter.withParseType : $r2 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>
org.joda.time.Period.days : $r0 = new org.joda.time.Period
org.joda.time.TestBaseSingleFieldPeriod$Single.getValue : $i0 = specialinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: int getValue()>()
org.joda.time.TestBaseSingleFieldPeriod$Single.getFieldType : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>()
org.joda.time.TestBaseSingleFieldPeriod$Single.getPeriodType : $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>()
org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>
org.joda.time.Days.getPeriodType : $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>()
org.joda.time.DurationFieldType.millis : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MILLIS_TYPE>
org.joda.time.base.BaseSingleFieldPeriod.hashCode : $i1 = 27 * b0
org.joda.time.base.BaseSingleFieldPeriod.hashCode : b0 = 17
org.joda.time.base.BaseSingleFieldPeriod.hashCode : return i6
org.joda.time.base.BaseSingleFieldPeriod.hashCode : $i4 = 27 * i3
org.joda.time.format.ISOPeriodFormat.standard : $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard>
org.joda.time.format.ISOPeriodFormat.standard : $r19 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard>
org.joda.time.base.AbstractPeriod.indexOf : $r2 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.DateTimeUtils.getPeriodType : if r0 != null goto return r0
org.joda.time.DateTimeUtils.getPeriodType : return r0
org.joda.time.base.BasePeriod.getValue : $r1 = r0.<org.joda.time.base.BasePeriod: int[] iValues>
org.joda.time.DurationFieldType.hours : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType HOURS_TYPE>
org.joda.time.Hours.getPeriodType : $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType hours()>()
org.joda.time.Days.days : $r10 = new org.joda.time.Days
org.joda.time.Days.days : lookupswitch(i0) {     case -2147483648: goto $r9 = <org.joda.time.Days: org.joda.time.Days MIN_VALUE>;     case 0: goto $r0 = <org.joda.time.Days: org.joda.time.Days ZERO>;     case 1: goto $r1 = <org.joda.time.Days: org.joda.time.Days ONE>;     case 2: goto $r2 = <org.joda.time.Days: org.joda.time.Days TWO>;     case 3: goto $r3 = <org.joda.time.Days: org.joda.time.Days THREE>;     case 4: goto $r4 = <org.joda.time.Days: org.joda.time.Days FOUR>;     case 5: goto $r5 = <org.joda.time.Days: org.joda.time.Days FIVE>;     case 6: goto $r6 = <org.joda.time.Days: org.joda.time.Days SIX>;     case 7: goto $r7 = <org.joda.time.Days: org.joda.time.Days SEVEN>;     case 2147483647: goto $r8 = <org.joda.time.Days: org.joda.time.Days MAX_VALUE>;     default: goto $r10 = new org.joda.time.Days; }
org.joda.time.DurationFieldType.days : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType DAYS_TYPE>
org.joda.time.PeriodType.size : $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.hours : if r0 != null goto return r0
org.joda.time.PeriodType.hours : $r2 = new org.joda.time.PeriodType
org.joda.time.PeriodType.hours : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cHours>
org.joda.time.PeriodType.hours : <org.joda.time.PeriodType: org.joda.time.PeriodType cHours> = r0
org.joda.time.PeriodType.hours : return r0
org.joda.time.PeriodType.hours : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>()
org.joda.time.base.BaseSingleFieldPeriod.equals : if r0 != r1 goto $z0 = r1 instanceof org.joda.time.ReadablePeriod
org.joda.time.base.BaseSingleFieldPeriod.equals : $r3 = interfaceinvoke r2.<org.joda.time.ReadablePeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.base.BaseSingleFieldPeriod.equals : return 1
org.joda.time.base.BaseSingleFieldPeriod.equals : return 0
org.joda.time.base.BaseSingleFieldPeriod.equals : r2 = (org.joda.time.ReadablePeriod) r1
org.joda.time.base.BaseSingleFieldPeriod.equals : $z0 = r1 instanceof org.joda.time.ReadablePeriod
org.joda.time.PeriodType.days : if r0 != null goto return r0
org.joda.time.PeriodType.days : $r2 = new org.joda.time.PeriodType
org.joda.time.PeriodType.days : <org.joda.time.PeriodType: org.joda.time.PeriodType cDays> = r0
org.joda.time.PeriodType.days : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDays>
org.joda.time.PeriodType.days : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>()
org.joda.time.PeriodType.days : return r0
org.joda.time.DurationFieldType.minutes : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MINUTES_TYPE>
org.joda.time.PeriodType.standard : if r0 != null goto return r0
org.joda.time.PeriodType.standard : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard>
org.joda.time.PeriodType.standard : return r0
org.joda.time.base.BasePeriod.checkPeriodType : $r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.PeriodType getPeriodType(org.joda.time.PeriodType)>(r1)
org.joda.time.DurationFieldType.months : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE>
org.joda.time.base.BasePeriod.checkAndUpdate : r2[i1] = i0
org.joda.time.base.BasePeriod.checkAndUpdate : i1 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int indexOf(org.joda.time.DurationFieldType)>(r1)
org.joda.time.base.BasePeriod.checkAndUpdate : if i0 == 0 goto return
org.joda.time.base.BasePeriod.checkAndUpdate : if i1 != -1 goto r2[i1] = i0
org.joda.time.Hours.hours : lookupswitch(i0) {     case -2147483648: goto $r10 = <org.joda.time.Hours: org.joda.time.Hours MIN_VALUE>;     case 0: goto $r0 = <org.joda.time.Hours: org.joda.time.Hours ZERO>;     case 1: goto $r1 = <org.joda.time.Hours: org.joda.time.Hours ONE>;     case 2: goto $r2 = <org.joda.time.Hours: org.joda.time.Hours TWO>;     case 3: goto $r3 = <org.joda.time.Hours: org.joda.time.Hours THREE>;     case 4: goto $r4 = <org.joda.time.Hours: org.joda.time.Hours FOUR>;     case 5: goto $r5 = <org.joda.time.Hours: org.joda.time.Hours FIVE>;     case 6: goto $r6 = <org.joda.time.Hours: org.joda.time.Hours SIX>;     case 7: goto $r7 = <org.joda.time.Hours: org.joda.time.Hours SEVEN>;     case 8: goto $r8 = <org.joda.time.Hours: org.joda.time.Hours EIGHT>;     case 2147483647: goto $r9 = <org.joda.time.Hours: org.joda.time.Hours MAX_VALUE>;     default: goto $r11 = new org.joda.time.Hours; }
org.joda.time.Hours.hours : $r2 = <org.joda.time.Hours: org.joda.time.Hours TWO>
org.joda.time.DurationFieldType$StandardDurationFieldType.hashCode : $b0 = r0.<org.joda.time.DurationFieldType$StandardDurationFieldType: byte iOrdinal>
org.joda.time.base.BasePeriod.setPeriodInternal : $r4 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>()
org.joda.time.base.BasePeriod.setPeriodInternal : $r6 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>()
org.joda.time.base.BasePeriod.setPeriodInternal : $i8 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int size()>()
org.joda.time.base.BasePeriod.setPeriodInternal : $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>()
org.joda.time.base.BasePeriod.setPeriodInternal : $r8 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>()
org.joda.time.base.BasePeriod.setPeriodInternal : $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>()
org.joda.time.base.BasePeriod.setPeriodInternal : $r5 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>()
org.joda.time.base.BasePeriod.setPeriodInternal : return r1
org.joda.time.base.BasePeriod.setPeriodInternal : $r9 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>()
org.joda.time.base.BasePeriod.setPeriodInternal : $r7 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>()
org.joda.time.DurationFieldType.years : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType YEARS_TYPE>
org.joda.time.DurationFieldType.weeks : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType WEEKS_TYPE>
org.joda.time.base.AbstractPeriod.size : $r1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.PeriodType.indexOf : return -1
org.joda.time.PeriodType.indexOf : return i0
org.joda.time.PeriodType.indexOf : $r2 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>
org.joda.time.PeriodType.indexOf : i0 = 0
org.joda.time.base.BaseSingleFieldPeriod.getValue : if i0 == 0 goto $i1 = virtualinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: int getValue()>()
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i1 = virtualinvoke r0.<org.joda.time.base.BaseSingleFieldPeriod: int getValue()>()
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod>
