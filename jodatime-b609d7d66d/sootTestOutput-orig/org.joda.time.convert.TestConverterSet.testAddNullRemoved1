org.joda.time.convert.TestConverterSet$4.getSupportedType : return class "java/lang/Short"
org.joda.time.convert.TestConverterSet$1.getSupportedType : return class "java/lang/Boolean"
org.joda.time.convert.ConverterSet.add : $r6 = interfaceinvoke r1.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>()
org.joda.time.convert.ConverterSet.add : i1 = 0
org.joda.time.convert.ConverterSet.add : if r2 == null goto $r11 = new org.joda.time.convert.ConverterSet
org.joda.time.convert.ConverterSet.add : $r11 = new org.joda.time.convert.ConverterSet
org.joda.time.convert.ConverterSet.add : r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
org.joda.time.convert.ConverterSet.add : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r4)
org.joda.time.convert.ConverterSet.add : r4 = r3[i1]
org.joda.time.convert.ConverterSet.add : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r10, 0, i0)
org.joda.time.convert.ConverterSet.add : i0 = lengthof r3
org.joda.time.convert.ConverterSet.add : $i3 = i0 + 1
org.joda.time.convert.ConverterSet.add : r10[i0] = r1
org.joda.time.convert.TestConverterSet$6.getSupportedType : return class "java/lang/Integer"
org.joda.time.convert.TestConverterSet$3.getSupportedType : return class "java/lang/Byte"
org.joda.time.convert.TestConverterSet$2.getSupportedType : return class "java/lang/Character"
org.joda.time.convert.ConverterSet.size : $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>
