org.joda.time.field.TestBaseDateTimeField$1.getMaximumValue : return 5
org.joda.time.DateTimeFieldType.secondOfMinute : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_MINUTE_TYPE>
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 10 goto (branch)
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 < 0 goto $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 1000 goto $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : i0 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int getMaximumValue()>()
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 3
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 2
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 100 goto (branch)
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 1
org.joda.time.field.TestBaseDateTimeField$3.getMaximumValue : return 5555
org.joda.time.DateTimeZone.setDefault : exitmonitor r3
org.joda.time.DateTimeZone.setDefault : $r6 = class "org/joda/time/DateTimeZone"
org.joda.time.DateTimeZone.setDefault : <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone cDefault> = r0
org.joda.time.DateTimeZone.setDefault : if r1 == null goto (branch)
org.joda.time.DateTimeZone.setDefault : if r0 != null goto $r6 = class "org/joda/time/DateTimeZone"
org.joda.time.DateTimeZone.setDefault : r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>()
org.joda.time.field.TestBaseDateTimeField$4.getMaximumValue : return -1
org.joda.time.field.TestBaseDateTimeField$2.getMaximumValue : return 555
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getMaximumValue : return 59
