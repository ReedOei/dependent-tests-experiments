org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $i4 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $i4 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $i5 = virtualinvoke r3.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $i5 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $i4 >= $i5
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $i4 >= $i5 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r4 = r2
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $i4 >= $i5 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i6 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i6 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i1 = virtualinvoke r3.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i1 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i2 = virtualinvoke r1.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i2 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i3 = i0
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i3 = i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if i3 >= i2
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if i3 >= i2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i3, r2, 0, i6)
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if i3 >= i2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $i7 = i0 ^ -1
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $i7 = i0 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : return $i7
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i3, r2, 0, i6) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $z0 == 0
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : return i3
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $z1 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i3, r3, 0, i1)
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : $z1 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i3, r3, 0, i1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $z1 == 0
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $z1 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : return i3
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if $z1 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i3 = i3 + 1
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i3 = i3 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : if i3 >= i2
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r4 = r2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r2 = r3
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r2 = r3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r3 = r4
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : r3 = r4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan : i6 = virtualinvoke r2.<java.lang.String: int length()>()
