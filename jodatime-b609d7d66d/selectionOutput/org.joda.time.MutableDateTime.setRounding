org.joda.time.MutableDateTime.setRounding : if r1 == null >>>>>>>> org.joda.time.MutableDateTime.setRounding : if i0 < 0
org.joda.time.MutableDateTime.setRounding : if r1 == null >>>>>>>> org.joda.time.MutableDateTime.setRounding : if i0 != 0
org.joda.time.MutableDateTime.setRounding : if i0 != 0 >>>>>>>> org.joda.time.MutableDateTime.setRounding : $r8 = null
org.joda.time.MutableDateTime.setRounding : if i0 != 0 >>>>>>>> org.joda.time.MutableDateTime.setRounding : $r8 = r1
org.joda.time.MutableDateTime.setRounding : $r8 = r1 >>>>>>>> org.joda.time.MutableDateTime.setRounding : r0.<org.joda.time.MutableDateTime: org.joda.time.DateTimeField iRoundingField> = $r8
org.joda.time.MutableDateTime.setRounding : r0.<org.joda.time.MutableDateTime: org.joda.time.DateTimeField iRoundingField> = $r8 >>>>>>>> org.joda.time.MutableDateTime.setRounding : if r1 != null
org.joda.time.MutableDateTime.setRounding : if r1 != null >>>>>>>> org.joda.time.MutableDateTime.setRounding : $i1 = 0
org.joda.time.MutableDateTime.setRounding : if r1 != null >>>>>>>> org.joda.time.MutableDateTime.setRounding : $i1 = i0
org.joda.time.MutableDateTime.setRounding : $i1 = i0 >>>>>>>> org.joda.time.MutableDateTime.setRounding : r0.<org.joda.time.MutableDateTime: int iRoundingMode> = $i1
org.joda.time.MutableDateTime.setRounding : r0.<org.joda.time.MutableDateTime: int iRoundingMode> = $i1 >>>>>>>> org.joda.time.MutableDateTime.setRounding : $l2 = virtualinvoke r0.<org.joda.time.MutableDateTime: long getMillis()>()
org.joda.time.MutableDateTime.setRounding : $l2 = virtualinvoke r0.<org.joda.time.MutableDateTime: long getMillis()>() >>>>>>>> org.joda.time.MutableDateTime.setRounding : virtualinvoke r0.<org.joda.time.MutableDateTime: void setMillis(long)>($l2)
org.joda.time.MutableDateTime.setRounding : virtualinvoke r0.<org.joda.time.MutableDateTime: void setMillis(long)>($l2) >>>>>>>> org.joda.time.MutableDateTime.setRounding : return
org.joda.time.MutableDateTime.setRounding : $i1 = 0 >>>>>>>> org.joda.time.MutableDateTime.setRounding : goto [?= r0.<org.joda.time.MutableDateTime: int iRoundingMode> = $i1]
org.joda.time.MutableDateTime.setRounding : goto [?= r0.<org.joda.time.MutableDateTime: int iRoundingMode> = $i1] >>>>>>>> org.joda.time.MutableDateTime.setRounding : r0.<org.joda.time.MutableDateTime: int iRoundingMode> = $i1
org.joda.time.MutableDateTime.setRounding : $r8 = null >>>>>>>> org.joda.time.MutableDateTime.setRounding : goto [?= r0.<org.joda.time.MutableDateTime: org.joda.time.DateTimeField iRoundingField> = $r8]
org.joda.time.MutableDateTime.setRounding : goto [?= r0.<org.joda.time.MutableDateTime: org.joda.time.DateTimeField iRoundingField> = $r8] >>>>>>>> org.joda.time.MutableDateTime.setRounding : r0.<org.joda.time.MutableDateTime: org.joda.time.DateTimeField iRoundingField> = $r8
org.joda.time.MutableDateTime.setRounding : if i0 < 0 >>>>>>>> org.joda.time.MutableDateTime.setRounding : if i0 <= 5
org.joda.time.MutableDateTime.setRounding : if i0 < 0 >>>>>>>> org.joda.time.MutableDateTime.setRounding : $r3 = new java.lang.IllegalArgumentException
org.joda.time.MutableDateTime.setRounding : $r3 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.MutableDateTime.setRounding : $r2 = new java.lang.StringBuilder
org.joda.time.MutableDateTime.setRounding : $r2 = new java.lang.StringBuilder >>>>>>>> org.joda.time.MutableDateTime.setRounding : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.joda.time.MutableDateTime.setRounding : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.MutableDateTime.setRounding : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal rounding mode: ")
org.joda.time.MutableDateTime.setRounding : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal rounding mode: ") >>>>>>>> org.joda.time.MutableDateTime.setRounding : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.joda.time.MutableDateTime.setRounding : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.joda.time.MutableDateTime.setRounding : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.MutableDateTime.setRounding : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.MutableDateTime.setRounding : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6)
org.joda.time.MutableDateTime.setRounding : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6) >>>>>>>> org.joda.time.MutableDateTime.setRounding : throw $r3
org.joda.time.MutableDateTime.setRounding : if i0 <= 5 >>>>>>>> org.joda.time.MutableDateTime.setRounding : $r3 = new java.lang.IllegalArgumentException
org.joda.time.MutableDateTime.setRounding : if i0 <= 5 >>>>>>>> org.joda.time.MutableDateTime.setRounding : if i0 != 0
