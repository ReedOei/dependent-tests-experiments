org.joda.time.YearMonth.withYear : r1 = virtualinvoke r0.<org.joda.time.YearMonth: int[] getValues()>() >>>>>>>> org.joda.time.YearMonth.withYear : $r2 = virtualinvoke r0.<org.joda.time.YearMonth: org.joda.time.Chronology getChronology()>()
org.joda.time.YearMonth.withYear : $r2 = virtualinvoke r0.<org.joda.time.YearMonth: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.YearMonth.withYear : $r3 = virtualinvoke $r2.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>()
org.joda.time.YearMonth.withYear : $r3 = virtualinvoke $r2.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.YearMonth.withYear : r4 = virtualinvoke $r3.<org.joda.time.DateTimeField: int[] set(org.joda.time.ReadablePartial,int,int[],int)>(r0, 0, r1, i0)
org.joda.time.YearMonth.withYear : r4 = virtualinvoke $r3.<org.joda.time.DateTimeField: int[] set(org.joda.time.ReadablePartial,int,int[],int)>(r0, 0, r1, i0) >>>>>>>> org.joda.time.YearMonth.withYear : $r5 = new org.joda.time.YearMonth
org.joda.time.YearMonth.withYear : $r5 = new org.joda.time.YearMonth >>>>>>>> org.joda.time.YearMonth.withYear : specialinvoke $r5.<org.joda.time.YearMonth: void <init>(org.joda.time.YearMonth,int[])>(r0, r4)
org.joda.time.YearMonth.withYear : specialinvoke $r5.<org.joda.time.YearMonth: void <init>(org.joda.time.YearMonth,int[])>(r0, r4) >>>>>>>> org.joda.time.YearMonth.withYear : return $r5
