org.joda.time.DateTimeComparator.equals : $z0 = r1 instanceof org.joda.time.DateTimeComparator >>>>>>>> org.joda.time.DateTimeComparator.equals : if $z0 == 0
org.joda.time.DateTimeComparator.equals : if $z0 == 0 >>>>>>>> org.joda.time.DateTimeComparator.equals : r2 = (org.joda.time.DateTimeComparator) r1
org.joda.time.DateTimeComparator.equals : if $z0 == 0 >>>>>>>> org.joda.time.DateTimeComparator.equals : return 0
org.joda.time.DateTimeComparator.equals : r2 = (org.joda.time.DateTimeComparator) r1 >>>>>>>> org.joda.time.DateTimeComparator.equals : $r3 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit>
org.joda.time.DateTimeComparator.equals : $r3 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit> >>>>>>>> org.joda.time.DateTimeComparator.equals : $r4 = virtualinvoke r2.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType getLowerLimit()>()
org.joda.time.DateTimeComparator.equals : $r4 = virtualinvoke r2.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType getLowerLimit()>() >>>>>>>> org.joda.time.DateTimeComparator.equals : if $r3 == $r4
org.joda.time.DateTimeComparator.equals : if $r3 == $r4 >>>>>>>> org.joda.time.DateTimeComparator.equals : $r5 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit>
org.joda.time.DateTimeComparator.equals : if $r3 == $r4 >>>>>>>> org.joda.time.DateTimeComparator.equals : $r8 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit>
org.joda.time.DateTimeComparator.equals : $r8 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit> >>>>>>>> org.joda.time.DateTimeComparator.equals : $r9 = virtualinvoke r2.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType getUpperLimit()>()
org.joda.time.DateTimeComparator.equals : $r9 = virtualinvoke r2.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType getUpperLimit()>() >>>>>>>> org.joda.time.DateTimeComparator.equals : if $r8 == $r9
org.joda.time.DateTimeComparator.equals : if $r8 == $r9 >>>>>>>> org.joda.time.DateTimeComparator.equals : $r10 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit>
org.joda.time.DateTimeComparator.equals : if $r8 == $r9 >>>>>>>> org.joda.time.DateTimeComparator.equals : $z3 = 1
org.joda.time.DateTimeComparator.equals : $z3 = 1 >>>>>>>> org.joda.time.DateTimeComparator.equals : goto [?= return $z3]
org.joda.time.DateTimeComparator.equals : goto [?= return $z3] >>>>>>>> org.joda.time.DateTimeComparator.equals : return $z3
org.joda.time.DateTimeComparator.equals : $r10 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit> >>>>>>>> org.joda.time.DateTimeComparator.equals : if $r10 == null
org.joda.time.DateTimeComparator.equals : if $r10 == null >>>>>>>> org.joda.time.DateTimeComparator.equals : $r11 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit>
org.joda.time.DateTimeComparator.equals : if $r10 == null >>>>>>>> org.joda.time.DateTimeComparator.equals : $z3 = 0
org.joda.time.DateTimeComparator.equals : $z3 = 0 >>>>>>>> org.joda.time.DateTimeComparator.equals : return $z3
org.joda.time.DateTimeComparator.equals : $r11 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit> >>>>>>>> org.joda.time.DateTimeComparator.equals : $r12 = virtualinvoke r2.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType getUpperLimit()>()
org.joda.time.DateTimeComparator.equals : $r12 = virtualinvoke r2.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType getUpperLimit()>() >>>>>>>> org.joda.time.DateTimeComparator.equals : $z2 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12)
org.joda.time.DateTimeComparator.equals : $z2 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.joda.time.DateTimeComparator.equals : if $z2 == 0
org.joda.time.DateTimeComparator.equals : if $z2 == 0 >>>>>>>> org.joda.time.DateTimeComparator.equals : $z3 = 1
org.joda.time.DateTimeComparator.equals : if $z2 == 0 >>>>>>>> org.joda.time.DateTimeComparator.equals : $z3 = 0
org.joda.time.DateTimeComparator.equals : $r5 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit> >>>>>>>> org.joda.time.DateTimeComparator.equals : if $r5 == null
org.joda.time.DateTimeComparator.equals : if $r5 == null >>>>>>>> org.joda.time.DateTimeComparator.equals : $r6 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit>
org.joda.time.DateTimeComparator.equals : if $r5 == null >>>>>>>> org.joda.time.DateTimeComparator.equals : $z3 = 0
org.joda.time.DateTimeComparator.equals : $r6 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit> >>>>>>>> org.joda.time.DateTimeComparator.equals : $r7 = virtualinvoke r2.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType getLowerLimit()>()
org.joda.time.DateTimeComparator.equals : $r7 = virtualinvoke r2.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType getLowerLimit()>() >>>>>>>> org.joda.time.DateTimeComparator.equals : $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7)
org.joda.time.DateTimeComparator.equals : $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.joda.time.DateTimeComparator.equals : if $z1 == 0
org.joda.time.DateTimeComparator.equals : if $z1 == 0 >>>>>>>> org.joda.time.DateTimeComparator.equals : $r8 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit>
org.joda.time.DateTimeComparator.equals : if $z1 == 0 >>>>>>>> org.joda.time.DateTimeComparator.equals : $z3 = 0
