org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $c5 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: char iMode> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $c5 != 119
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $c5 != 119 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : i3 = i1 + i2
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $c5 != 119 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $c6 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: char iMode>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $c6 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: char iMode> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $c6 != 115
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $c6 != 115 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : i3 = i1
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $c6 != 115 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : i3 = 0
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : i3 = 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $r2 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $r2 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l4 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>(0L, i0)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l4 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>(0L, i0) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $i7 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMonthOfYear>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $i7 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMonthOfYear> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l8 = virtualinvoke $r3.<org.joda.time.DateTimeField: long set(long,int)>(l4, $i7)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l8 = virtualinvoke $r3.<org.joda.time.DateTimeField: long set(long,int)>(l4, $i7) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $r4 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $r4 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $i9 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMillisOfDay>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $i9 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMillisOfDay> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l10 = virtualinvoke $r4.<org.joda.time.DateTimeField: long set(long,int)>(l8, $i9)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l10 = virtualinvoke $r4.<org.joda.time.DateTimeField: long set(long,int)>(l8, $i9) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l11 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfMonth(org.joda.time.Chronology,long)>(r1, l10)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l11 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfMonth(org.joda.time.Chronology,long)>(r1, l10) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $i12 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iDayOfWeek>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $i12 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iDayOfWeek> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $i12 == 0
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $i12 == 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l11 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfWeek(org.joda.time.Chronology,long)>(r1, l11)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : if $i12 == 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $l13 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $l13 = (long) i3 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $l14 = l11 - $l13
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $l14 = l11 - $l13 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : return $l14
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : l11 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfWeek(org.joda.time.Chronology,long)>(r1, l11) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : $l13 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : i3 = i1 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : goto [?= r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()]
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : goto [?= r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : i3 = i1 + i2 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : goto [?= r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()]
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : goto [?= r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant : r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
