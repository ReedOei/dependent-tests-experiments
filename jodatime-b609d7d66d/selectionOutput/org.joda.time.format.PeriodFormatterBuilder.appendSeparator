org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r1 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r2 != null
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r1 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r11 = new java.lang.IllegalArgumentException
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r11 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : throw $r11
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r2 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r11 = new java.lang.IllegalArgumentException
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r2 != null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i0 = interfaceinvoke r4.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i0 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i0 != 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if z1 == 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r8 = null
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r8 = null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i1 = interfaceinvoke r4.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i1 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i2 = i1 + -1
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i2 = i1 + -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if i2 < 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if i2 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if i2 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r8 == null
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r8 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i5 = interfaceinvoke r4.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r8 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r9 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r4)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r9 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r4) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: void clear()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: void clear()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r17 = new org.joda.time.format.PeriodFormatterBuilder$Separator
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r17 = new org.joda.time.format.PeriodFormatterBuilder$Separator >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r18 = r9[0]
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r18 = r9[0] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r19 = (org.joda.time.format.PeriodPrinter) $r18
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r19 = (org.joda.time.format.PeriodPrinter) $r18 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r20 = r9[1]
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r20 = r9[1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r21 = (org.joda.time.format.PeriodParser) $r20
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r21 = (org.joda.time.format.PeriodParser) $r20 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r17.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>(r1, r2, r3, $r19, $r21, z0, z1)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r17.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>(r1, r2, r3, $r19, $r21, z0, z1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r10 = $r17
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r10 = $r17 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : return r0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i5 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i5 != 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i5 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r16 = new java.lang.IllegalStateException
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $i5 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r9 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r4)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r16 = new java.lang.IllegalStateException >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot have two adjacent separators")
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot have two adjacent separators") >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : throw $r16
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $z2 = $r14 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $z2 = $r14 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $z2 == 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $z2 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r15 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if $z2 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i1 = i2 + -1
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i1 = i2 + -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : goto [?= i2 = i1 + -1]
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : goto [?= i2 = i1 + -1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : i2 = i1 + -1
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r15 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r8 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r15
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r8 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r15 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i3 = i2 + 1
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i3 = i2 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i4 = interfaceinvoke r4.<java.util.List: int size()>()
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $i4 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r4 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>($i3, $i4)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r4 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>($i3, $i4) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if r8 == null
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if z1 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if z0 != 0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if z1 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : return r0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r12 = new org.joda.time.format.PeriodFormatterBuilder$Separator
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : return r0
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r12 = new org.joda.time.format.PeriodFormatterBuilder$Separator >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r5 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r5 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r6 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : $r6 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r12.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>(r1, r2, r3, $r5, $r6, z0, z1)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke $r12.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>(r1, r2, r3, $r5, $r6, z0, z1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r7 = $r12
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : r7 = $r12 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r7, r7)
org.joda.time.format.PeriodFormatterBuilder.appendSeparator : specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r7, r7) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.appendSeparator : return r0
