org.joda.time.MutableInterval.setDurationBeforeEnd : l0 = staticinvoke <org.joda.time.DateTimeUtils: long getDurationMillis(org.joda.time.ReadableDuration)>(r1) >>>>>>>> org.joda.time.MutableInterval.setDurationBeforeEnd : $l1 = virtualinvoke r0.<org.joda.time.MutableInterval: long getEndMillis()>()
org.joda.time.MutableInterval.setDurationBeforeEnd : $l1 = virtualinvoke r0.<org.joda.time.MutableInterval: long getEndMillis()>() >>>>>>>> org.joda.time.MutableInterval.setDurationBeforeEnd : $l2 = neg l0
org.joda.time.MutableInterval.setDurationBeforeEnd : $l2 = neg l0 >>>>>>>> org.joda.time.MutableInterval.setDurationBeforeEnd : $l3 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>($l1, $l2)
org.joda.time.MutableInterval.setDurationBeforeEnd : $l3 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>($l1, $l2) >>>>>>>> org.joda.time.MutableInterval.setDurationBeforeEnd : virtualinvoke r0.<org.joda.time.MutableInterval: void setStartMillis(long)>($l3)
org.joda.time.MutableInterval.setDurationBeforeEnd : virtualinvoke r0.<org.joda.time.MutableInterval: void setStartMillis(long)>($l3) >>>>>>>> org.joda.time.MutableInterval.setDurationBeforeEnd : return
