org.joda.time.field.LenientDateTimeField.set : $r1 = r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase> >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.field.LenientDateTimeField.set : $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.field.LenientDateTimeField.set : l2 = virtualinvoke $r2.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>(l0)
org.joda.time.field.LenientDateTimeField.set : l2 = virtualinvoke $r2.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>(l0) >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $l4 = (long) i1
org.joda.time.field.LenientDateTimeField.set : $l4 = (long) i1 >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $i5 = virtualinvoke r0.<org.joda.time.field.LenientDateTimeField: int get(long)>(l0)
org.joda.time.field.LenientDateTimeField.set : $i5 = virtualinvoke r0.<org.joda.time.field.LenientDateTimeField: int get(long)>(l0) >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $l6 = (long) $i5
org.joda.time.field.LenientDateTimeField.set : $l6 = (long) $i5 >>>>>>>> org.joda.time.field.LenientDateTimeField.set : l3 = staticinvoke <org.joda.time.field.FieldUtils: long safeSubtract(long,long)>($l4, $l6)
org.joda.time.field.LenientDateTimeField.set : l3 = staticinvoke <org.joda.time.field.FieldUtils: long safeSubtract(long,long)>($l4, $l6) >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $r3 = virtualinvoke r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.DateTimeFieldType getType()>()
org.joda.time.field.LenientDateTimeField.set : $r3 = virtualinvoke r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.DateTimeFieldType getType()>() >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $r4 = r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase>
org.joda.time.field.LenientDateTimeField.set : $r4 = r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase> >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $r5 = virtualinvoke $r4.<org.joda.time.Chronology: org.joda.time.Chronology withUTC()>()
org.joda.time.field.LenientDateTimeField.set : $r5 = virtualinvoke $r4.<org.joda.time.Chronology: org.joda.time.Chronology withUTC()>() >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $r6 = virtualinvoke $r3.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r5)
org.joda.time.field.LenientDateTimeField.set : $r6 = virtualinvoke $r3.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r5) >>>>>>>> org.joda.time.field.LenientDateTimeField.set : l7 = virtualinvoke $r6.<org.joda.time.DateTimeField: long add(long,long)>(l2, l3)
org.joda.time.field.LenientDateTimeField.set : l7 = virtualinvoke $r6.<org.joda.time.DateTimeField: long add(long,long)>(l2, l3) >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $r7 = r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase>
org.joda.time.field.LenientDateTimeField.set : $r7 = r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase> >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $r8 = virtualinvoke $r7.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.field.LenientDateTimeField.set : $r8 = virtualinvoke $r7.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.field.LenientDateTimeField.set : $l8 = virtualinvoke $r8.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)>(l7, 0, l0)
org.joda.time.field.LenientDateTimeField.set : $l8 = virtualinvoke $r8.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)>(l7, 0, l0) >>>>>>>> org.joda.time.field.LenientDateTimeField.set : return $l8
