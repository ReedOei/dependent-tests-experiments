org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r1 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology> >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r2 = virtualinvoke $r1.<org.joda.time.chrono.gj.TestGJChronology: org.joda.time.DateTimeField year()>()
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r2 = virtualinvoke $r1.<org.joda.time.chrono.gj.TestGJChronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i2 = virtualinvoke $r2.<org.joda.time.DateTimeField: int get(long)>(l0)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i2 = virtualinvoke $r2.<org.joda.time.DateTimeField: int get(long)>(l0) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $l6 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long div(long,long)>(l1, 12L)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $l6 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long div(long,long)>(l1, 12L) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i7 = (int) $l6
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i7 = (int) $l6 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = i2 + $i7
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = i2 + $i7 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i2 >= 0
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i2 >= 0 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 < 0
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i2 >= 0 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 > 0
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 > 0 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = i3 + -1
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 > 0 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l0)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l0) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $l9 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long mod(long,long)>(l1, 12L)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $l9 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long mod(long,long)>(l1, 12L) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i10 = (int) $l9
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i10 = (int) $l9 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i4 = $i8 + $i10
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i4 = $i8 + $i10 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i4 <= 12
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i4 <= 12 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 != -1
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i4 <= 12 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r3 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology>
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r3 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology> >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r4 = virtualinvoke $r3.<org.joda.time.chrono.gj.TestGJChronology: org.joda.time.DateTimeField dayOfMonth()>()
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r4 = virtualinvoke $r3.<org.joda.time.chrono.gj.TestGJChronology: org.joda.time.DateTimeField dayOfMonth()>() >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i5 = virtualinvoke $r4.<org.joda.time.DateTimeField: int get(long)>(l0)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i5 = virtualinvoke $r4.<org.joda.time.DateTimeField: int get(long)>(l0) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r5 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology>
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r5 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology> >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $l11 = virtualinvoke $r5.<org.joda.time.chrono.gj.TestGJChronology: long getTimeOnlyMillis(long)>(l0)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $l11 = virtualinvoke $r5.<org.joda.time.chrono.gj.TestGJChronology: long getTimeOnlyMillis(long)>(l0) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r6 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology>
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r6 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology> >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $l12 = virtualinvoke $r6.<org.joda.time.chrono.gj.TestGJChronology: long millisFromGJ(int,int,int)>(i3, i4, i5)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $l12 = virtualinvoke $r6.<org.joda.time.chrono.gj.TestGJChronology: long millisFromGJ(int,int,int)>(i3, i4, i5) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : l13 = $l11 + $l12
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : l13 = $l11 + $l12 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i14 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l13)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i14 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l13) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if $i14 == i4
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if $i14 == i4 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r7 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology>
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if $i14 == i4 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : return l13
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r7 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology> >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r8 = virtualinvoke $r7.<org.joda.time.chrono.gj.TestGJChronology: org.joda.time.DateTimeField dayOfYear()>()
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r8 = virtualinvoke $r7.<org.joda.time.chrono.gj.TestGJChronology: org.joda.time.DateTimeField dayOfYear()>() >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : l13 = virtualinvoke $r8.<org.joda.time.DateTimeField: long add(long,int)>(l13, -1)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : l13 = virtualinvoke $r8.<org.joda.time.DateTimeField: long add(long,int)>(l13, -1) >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : goto [?= $i14 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l13)]
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : goto [?= $i14 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l13)] >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i14 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l13)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 != -1 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = 1
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 != -1 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = i3 + 1
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = i3 + 1 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i4 = i4 + -12
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i4 = i4 + -12 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $r3 = r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: org.joda.time.chrono.gj.TestGJChronology iChronology>
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = 1 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : goto [?= i4 = i4 + -12]
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : goto [?= i4 = i4 + -12] >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i4 = i4 + -12
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = i3 + -1 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l0)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 < 0 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = i3 + 1
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : if i3 < 0 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l0)
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : i3 = i3 + 1 >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : goto [?= $i8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l0)]
org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : goto [?= $i8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l0)] >>>>>>>> org.joda.time.chrono.gj.TestJulianMonthOfYearField.add : $i8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianMonthOfYearField: int get(long)>(l0)
