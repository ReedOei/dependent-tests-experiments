org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : $r0 = <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear cStartOfYear> >>>>>>>> org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : if $r0 != null
org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : if $r0 != null >>>>>>>> org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : $r1 = new org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear
org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : if $r0 != null >>>>>>>> org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : $r2 = <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear cStartOfYear>
org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : $r2 = <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear cStartOfYear> >>>>>>>> org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : return $r2
org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : $r1 = new org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear >>>>>>>> org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : specialinvoke $r1.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()>()
org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : specialinvoke $r1.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()>() >>>>>>>> org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear cStartOfYear> = $r1
org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear cStartOfYear> = $r1 >>>>>>>> org.joda.time.tz.ZoneInfoCompiler.getStartOfYear : $r2 = <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear cStartOfYear>
