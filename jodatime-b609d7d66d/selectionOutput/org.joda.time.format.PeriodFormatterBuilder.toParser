org.joda.time.format.PeriodFormatterBuilder.toParser : $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toParser : if $z0 == 0
org.joda.time.format.PeriodFormatterBuilder.toParser : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toParser : return null
org.joda.time.format.PeriodFormatterBuilder.toParser : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toParser : $r1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>()
org.joda.time.format.PeriodFormatterBuilder.toParser : $r1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toParser : $r2 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>()
org.joda.time.format.PeriodFormatterBuilder.toParser : $r2 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder.toParser : return $r2
