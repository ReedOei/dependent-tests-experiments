org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : i0 = interfaceinvoke r1.<org.joda.time.ReadablePartial: int size()>() >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : i1 = 0
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : i1 = 0 >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : if i1 >= i0
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : if i1 >= i0 >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : $r3 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i1)
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : if i1 >= i0 >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : return 53
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : $r3 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i1) >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>()
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>() >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : if $r3 != $r4
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : if $r3 != $r4 >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : i2 = r2[i1]
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : if $r3 != $r4 >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : i1 = i1 + 1
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : i1 = i1 + 1 >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : goto [?= (branch)]
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : goto [?= (branch)] >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : if i1 >= i0
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : i2 = r2[i1] >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : $r5 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : $r5 = r0.<org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology> >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : $i3 = virtualinvoke $r5.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>(i2)
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : $i3 = virtualinvoke $r5.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>(i2) >>>>>>>> org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue : return $i3
