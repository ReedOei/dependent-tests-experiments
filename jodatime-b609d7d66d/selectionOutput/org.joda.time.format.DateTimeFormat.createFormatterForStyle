org.joda.time.format.DateTimeFormat.createFormatterForStyle : if r0 == null >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.joda.time.format.DateTimeFormat.createFormatterForStyle : if r0 == null >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r2 = new java.lang.IllegalArgumentException
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r1 = new java.lang.StringBuilder
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r1 = new java.lang.StringBuilder >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.joda.time.format.DateTimeFormat.createFormatterForStyle : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid style specification: ")
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid style specification: ") >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)
org.joda.time.format.DateTimeFormat.createFormatterForStyle : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5) >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : throw $r2
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $i2 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : if $i2 == 2
org.joda.time.format.DateTimeFormat.createFormatterForStyle : if $i2 == 2 >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r2 = new java.lang.IllegalArgumentException
org.joda.time.format.DateTimeFormat.createFormatterForStyle : if $i2 == 2 >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0) >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : i0 = staticinvoke <org.joda.time.format.DateTimeFormat: int selectStyle(char)>($c3)
org.joda.time.format.DateTimeFormat.createFormatterForStyle : i0 = staticinvoke <org.joda.time.format.DateTimeFormat: int selectStyle(char)>($c3) >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1)
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1) >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : i1 = staticinvoke <org.joda.time.format.DateTimeFormat: int selectStyle(char)>($c4)
org.joda.time.format.DateTimeFormat.createFormatterForStyle : i1 = staticinvoke <org.joda.time.format.DateTimeFormat: int selectStyle(char)>($c4) >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : if i0 != 4
org.joda.time.format.DateTimeFormat.createFormatterForStyle : if i0 != 4 >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : if i1 != 4
org.joda.time.format.DateTimeFormat.createFormatterForStyle : if i0 != 4 >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r7 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter createFormatterForStyleIndex(int,int)>(i0, i1)
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r7 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter createFormatterForStyleIndex(int,int)>(i0, i1) >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : return $r7
org.joda.time.format.DateTimeFormat.createFormatterForStyle : if i1 != 4 >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r6 = new java.lang.IllegalArgumentException
org.joda.time.format.DateTimeFormat.createFormatterForStyle : if i1 != 4 >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r7 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter createFormatterForStyleIndex(int,int)>(i0, i1)
org.joda.time.format.DateTimeFormat.createFormatterForStyle : $r6 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Style \'--\' is invalid")
org.joda.time.format.DateTimeFormat.createFormatterForStyle : specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Style \'--\' is invalid") >>>>>>>> org.joda.time.format.DateTimeFormat.createFormatterForStyle : throw $r6
