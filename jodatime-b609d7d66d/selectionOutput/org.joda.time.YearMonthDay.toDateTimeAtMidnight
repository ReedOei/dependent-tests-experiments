org.joda.time.YearMonthDay.toDateTimeAtMidnight : $r3 = virtualinvoke r0.<org.joda.time.YearMonthDay: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.YearMonthDay.toDateTimeAtMidnight : r2 = virtualinvoke $r3.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r1)
org.joda.time.YearMonthDay.toDateTimeAtMidnight : r2 = virtualinvoke $r3.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r1) >>>>>>>> org.joda.time.YearMonthDay.toDateTimeAtMidnight : $r4 = new org.joda.time.DateTime
org.joda.time.YearMonthDay.toDateTimeAtMidnight : $r4 = new org.joda.time.DateTime >>>>>>>> org.joda.time.YearMonthDay.toDateTimeAtMidnight : $i0 = virtualinvoke r0.<org.joda.time.YearMonthDay: int getYear()>()
org.joda.time.YearMonthDay.toDateTimeAtMidnight : $i0 = virtualinvoke r0.<org.joda.time.YearMonthDay: int getYear()>() >>>>>>>> org.joda.time.YearMonthDay.toDateTimeAtMidnight : $i1 = virtualinvoke r0.<org.joda.time.YearMonthDay: int getMonthOfYear()>()
org.joda.time.YearMonthDay.toDateTimeAtMidnight : $i1 = virtualinvoke r0.<org.joda.time.YearMonthDay: int getMonthOfYear()>() >>>>>>>> org.joda.time.YearMonthDay.toDateTimeAtMidnight : $i2 = virtualinvoke r0.<org.joda.time.YearMonthDay: int getDayOfMonth()>()
org.joda.time.YearMonthDay.toDateTimeAtMidnight : $i2 = virtualinvoke r0.<org.joda.time.YearMonthDay: int getDayOfMonth()>() >>>>>>>> org.joda.time.YearMonthDay.toDateTimeAtMidnight : specialinvoke $r4.<org.joda.time.DateTime: void <init>(int,int,int,int,int,int,int,org.joda.time.Chronology)>($i0, $i1, $i2, 0, 0, 0, 0, r2)
org.joda.time.YearMonthDay.toDateTimeAtMidnight : specialinvoke $r4.<org.joda.time.DateTime: void <init>(int,int,int,int,int,int,int,org.joda.time.Chronology)>($i0, $i1, $i2, 0, 0, 0, 0, r2) >>>>>>>> org.joda.time.YearMonthDay.toDateTimeAtMidnight : return $r4
