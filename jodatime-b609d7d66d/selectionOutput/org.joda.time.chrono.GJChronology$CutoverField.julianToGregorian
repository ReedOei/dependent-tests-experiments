org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $z0 = r0.<org.joda.time.chrono.GJChronology$CutoverField: boolean iConvertByWeekyear> >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : if $z0 == 0
org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : if $z0 == 0 >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $r1 = r0.<org.joda.time.chrono.GJChronology$CutoverField: org.joda.time.chrono.GJChronology this$0>
org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : if $z0 == 0 >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $r2 = r0.<org.joda.time.chrono.GJChronology$CutoverField: org.joda.time.chrono.GJChronology this$0>
org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $r2 = r0.<org.joda.time.chrono.GJChronology$CutoverField: org.joda.time.chrono.GJChronology this$0> >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $l2 = virtualinvoke $r2.<org.joda.time.chrono.GJChronology: long julianToGregorianByYear(long)>(l0)
org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $l2 = virtualinvoke $r2.<org.joda.time.chrono.GJChronology: long julianToGregorianByYear(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : return $l2
org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $r1 = r0.<org.joda.time.chrono.GJChronology$CutoverField: org.joda.time.chrono.GJChronology this$0> >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $l1 = virtualinvoke $r1.<org.joda.time.chrono.GJChronology: long julianToGregorianByWeekyear(long)>(l0)
org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : $l1 = virtualinvoke $r1.<org.joda.time.chrono.GJChronology: long julianToGregorianByWeekyear(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian : return $l1
