org.joda.time.DateTimeComparator.compare : $r3 = staticinvoke <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager getInstance()>() >>>>>>>> org.joda.time.DateTimeComparator.compare : r4 = virtualinvoke $r3.<org.joda.time.convert.ConverterManager: org.joda.time.convert.InstantConverter getInstantConverter(java.lang.Object)>(r1)
org.joda.time.DateTimeComparator.compare : r4 = virtualinvoke $r3.<org.joda.time.convert.ConverterManager: org.joda.time.convert.InstantConverter getInstantConverter(java.lang.Object)>(r1) >>>>>>>> org.joda.time.DateTimeComparator.compare : $r7 = (org.joda.time.Chronology) null
org.joda.time.DateTimeComparator.compare : $r7 = (org.joda.time.Chronology) null >>>>>>>> org.joda.time.DateTimeComparator.compare : r5 = interfaceinvoke r4.<org.joda.time.convert.InstantConverter: org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)>(r1, $r7)
org.joda.time.DateTimeComparator.compare : r5 = interfaceinvoke r4.<org.joda.time.convert.InstantConverter: org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)>(r1, $r7) >>>>>>>> org.joda.time.DateTimeComparator.compare : l0 = interfaceinvoke r4.<org.joda.time.convert.InstantConverter: long getInstantMillis(java.lang.Object,org.joda.time.Chronology)>(r1, r5)
org.joda.time.DateTimeComparator.compare : l0 = interfaceinvoke r4.<org.joda.time.convert.InstantConverter: long getInstantMillis(java.lang.Object,org.joda.time.Chronology)>(r1, r5) >>>>>>>> org.joda.time.DateTimeComparator.compare : $r8 = staticinvoke <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager getInstance()>()
org.joda.time.DateTimeComparator.compare : $r8 = staticinvoke <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager getInstance()>() >>>>>>>> org.joda.time.DateTimeComparator.compare : r9 = virtualinvoke $r8.<org.joda.time.convert.ConverterManager: org.joda.time.convert.InstantConverter getInstantConverter(java.lang.Object)>(r2)
org.joda.time.DateTimeComparator.compare : r9 = virtualinvoke $r8.<org.joda.time.convert.ConverterManager: org.joda.time.convert.InstantConverter getInstantConverter(java.lang.Object)>(r2) >>>>>>>> org.joda.time.DateTimeComparator.compare : $r10 = (org.joda.time.Chronology) null
org.joda.time.DateTimeComparator.compare : $r10 = (org.joda.time.Chronology) null >>>>>>>> org.joda.time.DateTimeComparator.compare : r6 = interfaceinvoke r9.<org.joda.time.convert.InstantConverter: org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)>(r2, $r10)
org.joda.time.DateTimeComparator.compare : r6 = interfaceinvoke r9.<org.joda.time.convert.InstantConverter: org.joda.time.Chronology getChronology(java.lang.Object,org.joda.time.Chronology)>(r2, $r10) >>>>>>>> org.joda.time.DateTimeComparator.compare : l1 = interfaceinvoke r9.<org.joda.time.convert.InstantConverter: long getInstantMillis(java.lang.Object,org.joda.time.Chronology)>(r2, r6)
org.joda.time.DateTimeComparator.compare : l1 = interfaceinvoke r9.<org.joda.time.convert.InstantConverter: long getInstantMillis(java.lang.Object,org.joda.time.Chronology)>(r2, r6) >>>>>>>> org.joda.time.DateTimeComparator.compare : $r11 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit>
org.joda.time.DateTimeComparator.compare : $r11 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit> >>>>>>>> org.joda.time.DateTimeComparator.compare : if $r11 == null
org.joda.time.DateTimeComparator.compare : if $r11 == null >>>>>>>> org.joda.time.DateTimeComparator.compare : $r12 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit>
org.joda.time.DateTimeComparator.compare : if $r11 == null >>>>>>>> org.joda.time.DateTimeComparator.compare : $r16 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit>
org.joda.time.DateTimeComparator.compare : $r16 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit> >>>>>>>> org.joda.time.DateTimeComparator.compare : if $r16 == null
org.joda.time.DateTimeComparator.compare : if $r16 == null >>>>>>>> org.joda.time.DateTimeComparator.compare : $r17 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit>
org.joda.time.DateTimeComparator.compare : if $r16 == null >>>>>>>> org.joda.time.DateTimeComparator.compare : $b2 = l0 cmp l1
org.joda.time.DateTimeComparator.compare : $b2 = l0 cmp l1 >>>>>>>> org.joda.time.DateTimeComparator.compare : if $b2 >= 0
org.joda.time.DateTimeComparator.compare : if $b2 >= 0 >>>>>>>> org.joda.time.DateTimeComparator.compare : return -1
org.joda.time.DateTimeComparator.compare : if $b2 >= 0 >>>>>>>> org.joda.time.DateTimeComparator.compare : $b3 = l0 cmp l1
org.joda.time.DateTimeComparator.compare : $b3 = l0 cmp l1 >>>>>>>> org.joda.time.DateTimeComparator.compare : if $b3 <= 0
org.joda.time.DateTimeComparator.compare : if $b3 <= 0 >>>>>>>> org.joda.time.DateTimeComparator.compare : return 1
org.joda.time.DateTimeComparator.compare : if $b3 <= 0 >>>>>>>> org.joda.time.DateTimeComparator.compare : return 0
org.joda.time.DateTimeComparator.compare : $r17 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit> >>>>>>>> org.joda.time.DateTimeComparator.compare : $r18 = virtualinvoke $r17.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r5)
org.joda.time.DateTimeComparator.compare : $r18 = virtualinvoke $r17.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r5) >>>>>>>> org.joda.time.DateTimeComparator.compare : l0 = virtualinvoke $r18.<org.joda.time.DateTimeField: long remainder(long)>(l0)
org.joda.time.DateTimeComparator.compare : l0 = virtualinvoke $r18.<org.joda.time.DateTimeField: long remainder(long)>(l0) >>>>>>>> org.joda.time.DateTimeComparator.compare : $r19 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit>
org.joda.time.DateTimeComparator.compare : $r19 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit> >>>>>>>> org.joda.time.DateTimeComparator.compare : $r20 = virtualinvoke $r19.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r6)
org.joda.time.DateTimeComparator.compare : $r20 = virtualinvoke $r19.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r6) >>>>>>>> org.joda.time.DateTimeComparator.compare : l1 = virtualinvoke $r20.<org.joda.time.DateTimeField: long remainder(long)>(l1)
org.joda.time.DateTimeComparator.compare : l1 = virtualinvoke $r20.<org.joda.time.DateTimeField: long remainder(long)>(l1) >>>>>>>> org.joda.time.DateTimeComparator.compare : $b2 = l0 cmp l1
org.joda.time.DateTimeComparator.compare : $r12 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit> >>>>>>>> org.joda.time.DateTimeComparator.compare : $r13 = virtualinvoke $r12.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r5)
org.joda.time.DateTimeComparator.compare : $r13 = virtualinvoke $r12.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r5) >>>>>>>> org.joda.time.DateTimeComparator.compare : l0 = virtualinvoke $r13.<org.joda.time.DateTimeField: long roundFloor(long)>(l0)
org.joda.time.DateTimeComparator.compare : l0 = virtualinvoke $r13.<org.joda.time.DateTimeField: long roundFloor(long)>(l0) >>>>>>>> org.joda.time.DateTimeComparator.compare : $r14 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit>
org.joda.time.DateTimeComparator.compare : $r14 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iLowerLimit> >>>>>>>> org.joda.time.DateTimeComparator.compare : $r15 = virtualinvoke $r14.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r6)
org.joda.time.DateTimeComparator.compare : $r15 = virtualinvoke $r14.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r6) >>>>>>>> org.joda.time.DateTimeComparator.compare : l1 = virtualinvoke $r15.<org.joda.time.DateTimeField: long roundFloor(long)>(l1)
org.joda.time.DateTimeComparator.compare : l1 = virtualinvoke $r15.<org.joda.time.DateTimeField: long roundFloor(long)>(l1) >>>>>>>> org.joda.time.DateTimeComparator.compare : $r16 = r0.<org.joda.time.DateTimeComparator: org.joda.time.DateTimeFieldType iUpperLimit>
