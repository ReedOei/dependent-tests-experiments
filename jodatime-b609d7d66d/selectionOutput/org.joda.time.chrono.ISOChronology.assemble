org.joda.time.chrono.ISOChronology.assemble : $r5 = virtualinvoke r0.<org.joda.time.chrono.ISOChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r6 = virtualinvoke $r5.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.ISOChronology.assemble : $r6 = virtualinvoke $r5.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r2 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>
org.joda.time.chrono.ISOChronology.assemble : $r2 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC> >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : if $r6 != $r2
org.joda.time.chrono.ISOChronology.assemble : if $r6 != $r2 >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r7 = new org.joda.time.field.DividedDateTimeField
org.joda.time.chrono.ISOChronology.assemble : if $r6 != $r2 >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : return
org.joda.time.chrono.ISOChronology.assemble : $r7 = new org.joda.time.field.DividedDateTimeField >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r3 = <org.joda.time.chrono.ISOYearOfEraDateTimeField: org.joda.time.DateTimeField INSTANCE>
org.joda.time.chrono.ISOChronology.assemble : $r3 = <org.joda.time.chrono.ISOYearOfEraDateTimeField: org.joda.time.DateTimeField INSTANCE> >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType centuryOfEra()>()
org.joda.time.chrono.ISOChronology.assemble : $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType centuryOfEra()>() >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : specialinvoke $r7.<org.joda.time.field.DividedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>($r3, $r4, 100)
org.joda.time.chrono.ISOChronology.assemble : specialinvoke $r7.<org.joda.time.field.DividedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>($r3, $r4, 100) >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> = $r7
org.joda.time.chrono.ISOChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> = $r7 >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r8 = new org.joda.time.field.RemainderDateTimeField
org.joda.time.chrono.ISOChronology.assemble : $r8 = new org.joda.time.field.RemainderDateTimeField >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r9 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra>
org.joda.time.chrono.ISOChronology.assemble : $r9 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r10 = (org.joda.time.field.DividedDateTimeField) $r9
org.joda.time.chrono.ISOChronology.assemble : $r10 = (org.joda.time.field.DividedDateTimeField) $r9 >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r11 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType yearOfCentury()>()
org.joda.time.chrono.ISOChronology.assemble : $r11 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType yearOfCentury()>() >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : specialinvoke $r8.<org.joda.time.field.RemainderDateTimeField: void <init>(org.joda.time.field.DividedDateTimeField,org.joda.time.DateTimeFieldType)>($r10, $r11)
org.joda.time.chrono.ISOChronology.assemble : specialinvoke $r8.<org.joda.time.field.RemainderDateTimeField: void <init>(org.joda.time.field.DividedDateTimeField,org.joda.time.DateTimeFieldType)>($r10, $r11) >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury> = $r8
org.joda.time.chrono.ISOChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury> = $r8 >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r12 = new org.joda.time.field.RemainderDateTimeField
org.joda.time.chrono.ISOChronology.assemble : $r12 = new org.joda.time.field.RemainderDateTimeField >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r13 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra>
org.joda.time.chrono.ISOChronology.assemble : $r13 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r14 = (org.joda.time.field.DividedDateTimeField) $r13
org.joda.time.chrono.ISOChronology.assemble : $r14 = (org.joda.time.field.DividedDateTimeField) $r13 >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r15 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyearOfCentury()>()
org.joda.time.chrono.ISOChronology.assemble : $r15 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyearOfCentury()>() >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : specialinvoke $r12.<org.joda.time.field.RemainderDateTimeField: void <init>(org.joda.time.field.DividedDateTimeField,org.joda.time.DateTimeFieldType)>($r14, $r15)
org.joda.time.chrono.ISOChronology.assemble : specialinvoke $r12.<org.joda.time.field.RemainderDateTimeField: void <init>(org.joda.time.field.DividedDateTimeField,org.joda.time.DateTimeFieldType)>($r14, $r15) >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury> = $r12
org.joda.time.chrono.ISOChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury> = $r12 >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r16 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra>
org.joda.time.chrono.ISOChronology.assemble : $r16 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : $r17 = virtualinvoke $r16.<org.joda.time.DateTimeField: org.joda.time.DurationField getDurationField()>()
org.joda.time.chrono.ISOChronology.assemble : $r17 = virtualinvoke $r16.<org.joda.time.DateTimeField: org.joda.time.DurationField getDurationField()>() >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField centuries> = $r17
org.joda.time.chrono.ISOChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField centuries> = $r17 >>>>>>>> org.joda.time.chrono.ISOChronology.assemble : return
