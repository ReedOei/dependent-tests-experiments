org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $r1 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: org.joda.time.tz.CachedDateTimeZone$Info iNextInfo> >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $r1 == null
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $r1 == null >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $r2 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: org.joda.time.tz.CachedDateTimeZone$Info iNextInfo>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $r1 == null >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i3 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: int iStandardOffset>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i3 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: int iStandardOffset> >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $i3 != -2147483648
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $i3 != -2147483648 >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $r3 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: org.joda.time.DateTimeZone iZoneRef>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $i3 != -2147483648 >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i6 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: int iStandardOffset>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i6 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: int iStandardOffset> >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : return $i6
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $r3 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: org.joda.time.DateTimeZone iZoneRef> >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $l4 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: long iPeriodStart>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $l4 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: long iPeriodStart> >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i5 = virtualinvoke $r3.<org.joda.time.DateTimeZone: int getStandardOffset(long)>($l4)
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i5 = virtualinvoke $r3.<org.joda.time.DateTimeZone: int getStandardOffset(long)>($l4) >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : r0.<org.joda.time.tz.CachedDateTimeZone$Info: int iStandardOffset> = $i5
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : r0.<org.joda.time.tz.CachedDateTimeZone$Info: int iStandardOffset> = $i5 >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i6 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: int iStandardOffset>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $r2 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: org.joda.time.tz.CachedDateTimeZone$Info iNextInfo> >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $l1 = $r2.<org.joda.time.tz.CachedDateTimeZone$Info: long iPeriodStart>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $l1 = $r2.<org.joda.time.tz.CachedDateTimeZone$Info: long iPeriodStart> >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $b2 = l0 cmp $l1
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $b2 = l0 cmp $l1 >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $b2 >= 0
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $b2 >= 0 >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i3 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: int iStandardOffset>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : if $b2 >= 0 >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $r4 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: org.joda.time.tz.CachedDateTimeZone$Info iNextInfo>
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $r4 = r0.<org.joda.time.tz.CachedDateTimeZone$Info: org.joda.time.tz.CachedDateTimeZone$Info iNextInfo> >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i7 = virtualinvoke $r4.<org.joda.time.tz.CachedDateTimeZone$Info: int getStandardOffset(long)>(l0)
org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : $i7 = virtualinvoke $r4.<org.joda.time.tz.CachedDateTimeZone$Info: int getStandardOffset(long)>(l0) >>>>>>>> org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset : return $i7
