org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: long[] iTransitions> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : i1 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>(r1, l0)
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : i1 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>(r1, l0) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i1 < 0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i1 < 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r2 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String[] iNameKeys>
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i1 < 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : i2 = i1 ^ -1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : i2 = i1 ^ -1 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $i3 = lengthof r1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $i3 = lengthof r1 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i2 >= $i3
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i2 >= $i3 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i2 <= 0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i2 >= $i3 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r6 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: org.joda.time.tz.DateTimeZoneBuilder$DSTZone iTailZone>
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r6 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: org.joda.time.tz.DateTimeZoneBuilder$DSTZone iTailZone> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if $r6 != null
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if $r6 != null >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r7 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String[] iNameKeys>
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if $r6 != null >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r9 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: org.joda.time.tz.DateTimeZoneBuilder$DSTZone iTailZone>
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r9 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: org.joda.time.tz.DateTimeZoneBuilder$DSTZone iTailZone> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r10 = virtualinvoke $r9.<org.joda.time.tz.DateTimeZoneBuilder$DSTZone: java.lang.String getNameKey(long)>(l0)
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r10 = virtualinvoke $r9.<org.joda.time.tz.DateTimeZoneBuilder$DSTZone: java.lang.String getNameKey(long)>(l0) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : return $r10
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r7 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String[] iNameKeys> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $i5 = i2 - 1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $i5 = i2 - 1 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r8 = $r7[$i5]
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r8 = $r7[$i5] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : return $r8
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i2 <= 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r4 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String[] iNameKeys>
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : if i2 <= 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : return "UTC"
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r4 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String[] iNameKeys> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $i4 = i2 - 1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $i4 = i2 - 1 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r5 = $r4[$i4]
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r5 = $r4[$i4] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : return $r5
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r2 = r0.<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String[] iNameKeys> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r3 = $r2[i1]
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : $r3 = $r2[i1] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey : return $r3
