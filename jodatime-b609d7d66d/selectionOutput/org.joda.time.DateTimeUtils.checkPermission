org.joda.time.DateTimeUtils.checkPermission : r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>() >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : if r0 == null
org.joda.time.DateTimeUtils.checkPermission : if r0 == null >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : $r1 = new org.joda.time.JodaTimePermission
org.joda.time.DateTimeUtils.checkPermission : if r0 == null >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : return
org.joda.time.DateTimeUtils.checkPermission : $r1 = new org.joda.time.JodaTimePermission >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : specialinvoke $r1.<org.joda.time.JodaTimePermission: void <init>(java.lang.String)>("CurrentTime.setProvider")
org.joda.time.DateTimeUtils.checkPermission : specialinvoke $r1.<org.joda.time.JodaTimePermission: void <init>(java.lang.String)>("CurrentTime.setProvider") >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1)
org.joda.time.DateTimeUtils.checkPermission : virtualinvoke r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r1) >>>>>>>> org.joda.time.DateTimeUtils.checkPermission : return
