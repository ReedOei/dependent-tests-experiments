org.joda.time.format.PeriodFormat.wordBased : $r1 = <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS> >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r5 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r0)
org.joda.time.format.PeriodFormat.wordBased : $r5 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : r2 = (org.joda.time.format.PeriodFormatter) $r5
org.joda.time.format.PeriodFormat.wordBased : r2 = (org.joda.time.format.PeriodFormatter) $r5 >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : if r2 != null
org.joda.time.format.PeriodFormat.wordBased : if r2 != null >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : r3 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.joda.time.format.messages", r0)
org.joda.time.format.PeriodFormat.wordBased : if r2 != null >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : return r2
org.joda.time.format.PeriodFormat.wordBased : r3 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.joda.time.format.messages", r0) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r6 = newarray (java.lang.String)[4]
org.joda.time.format.PeriodFormat.wordBased : $r6 = newarray (java.lang.String)[4] >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r7 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.space")
org.joda.time.format.PeriodFormat.wordBased : $r7 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.space") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r6[0] = $r7
org.joda.time.format.PeriodFormat.wordBased : $r6[0] = $r7 >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r8 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.comma")
org.joda.time.format.PeriodFormat.wordBased : $r8 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.comma") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r6[1] = $r8
org.joda.time.format.PeriodFormat.wordBased : $r6[1] = $r8 >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r9 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commandand")
org.joda.time.format.PeriodFormat.wordBased : $r9 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commandand") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r6[2] = $r9
org.joda.time.format.PeriodFormat.wordBased : $r6[2] = $r9 >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r10 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspaceand")
org.joda.time.format.PeriodFormat.wordBased : $r10 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspaceand") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r6[3] = $r10
org.joda.time.format.PeriodFormat.wordBased : $r6[3] = $r10 >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : r4 = $r6
org.joda.time.format.PeriodFormat.wordBased : r4 = $r6 >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r11 = new org.joda.time.format.PeriodFormatterBuilder
org.joda.time.format.PeriodFormat.wordBased : $r11 = new org.joda.time.format.PeriodFormatterBuilder >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : specialinvoke $r11.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>()
org.joda.time.format.PeriodFormat.wordBased : specialinvoke $r11.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r12 = virtualinvoke $r11.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>()
org.joda.time.format.PeriodFormat.wordBased : $r12 = virtualinvoke $r11.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r13 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.year")
org.joda.time.format.PeriodFormat.wordBased : $r13 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.year") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r14 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years")
org.joda.time.format.PeriodFormat.wordBased : $r14 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r15 = virtualinvoke $r12.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r13, $r14)
org.joda.time.format.PeriodFormat.wordBased : $r15 = virtualinvoke $r12.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r13, $r14) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r16 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace")
org.joda.time.format.PeriodFormat.wordBased : $r16 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r17 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace")
org.joda.time.format.PeriodFormat.wordBased : $r17 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r18 = virtualinvoke $r15.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r16, $r17, r4)
org.joda.time.format.PeriodFormat.wordBased : $r18 = virtualinvoke $r15.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r16, $r17, r4) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r19 = virtualinvoke $r18.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>()
org.joda.time.format.PeriodFormat.wordBased : $r19 = virtualinvoke $r18.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r20 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.month")
org.joda.time.format.PeriodFormat.wordBased : $r20 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.month") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r21 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months")
org.joda.time.format.PeriodFormat.wordBased : $r21 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r22 = virtualinvoke $r19.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r20, $r21)
org.joda.time.format.PeriodFormat.wordBased : $r22 = virtualinvoke $r19.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r20, $r21) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r23 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace")
org.joda.time.format.PeriodFormat.wordBased : $r23 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r24 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace")
org.joda.time.format.PeriodFormat.wordBased : $r24 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r25 = virtualinvoke $r22.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r23, $r24, r4)
org.joda.time.format.PeriodFormat.wordBased : $r25 = virtualinvoke $r22.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r23, $r24, r4) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r26 = virtualinvoke $r25.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>()
org.joda.time.format.PeriodFormat.wordBased : $r26 = virtualinvoke $r25.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r27 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.week")
org.joda.time.format.PeriodFormat.wordBased : $r27 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.week") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r28 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks")
org.joda.time.format.PeriodFormat.wordBased : $r28 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r29 = virtualinvoke $r26.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r27, $r28)
org.joda.time.format.PeriodFormat.wordBased : $r29 = virtualinvoke $r26.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r27, $r28) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r30 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace")
org.joda.time.format.PeriodFormat.wordBased : $r30 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r31 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace")
org.joda.time.format.PeriodFormat.wordBased : $r31 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r32 = virtualinvoke $r29.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r30, $r31, r4)
org.joda.time.format.PeriodFormat.wordBased : $r32 = virtualinvoke $r29.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r30, $r31, r4) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r33 = virtualinvoke $r32.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>()
org.joda.time.format.PeriodFormat.wordBased : $r33 = virtualinvoke $r32.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r34 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.day")
org.joda.time.format.PeriodFormat.wordBased : $r34 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.day") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r35 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days")
org.joda.time.format.PeriodFormat.wordBased : $r35 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r36 = virtualinvoke $r33.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r34, $r35)
org.joda.time.format.PeriodFormat.wordBased : $r36 = virtualinvoke $r33.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r34, $r35) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r37 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace")
org.joda.time.format.PeriodFormat.wordBased : $r37 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r38 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace")
org.joda.time.format.PeriodFormat.wordBased : $r38 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r39 = virtualinvoke $r36.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r37, $r38, r4)
org.joda.time.format.PeriodFormat.wordBased : $r39 = virtualinvoke $r36.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r37, $r38, r4) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r40 = virtualinvoke $r39.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>()
org.joda.time.format.PeriodFormat.wordBased : $r40 = virtualinvoke $r39.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r41 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hour")
org.joda.time.format.PeriodFormat.wordBased : $r41 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hour") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r42 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours")
org.joda.time.format.PeriodFormat.wordBased : $r42 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r43 = virtualinvoke $r40.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r41, $r42)
org.joda.time.format.PeriodFormat.wordBased : $r43 = virtualinvoke $r40.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r41, $r42) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r44 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace")
org.joda.time.format.PeriodFormat.wordBased : $r44 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r45 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace")
org.joda.time.format.PeriodFormat.wordBased : $r45 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r46 = virtualinvoke $r43.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r44, $r45, r4)
org.joda.time.format.PeriodFormat.wordBased : $r46 = virtualinvoke $r43.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r44, $r45, r4) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r47 = virtualinvoke $r46.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>()
org.joda.time.format.PeriodFormat.wordBased : $r47 = virtualinvoke $r46.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r48 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minute")
org.joda.time.format.PeriodFormat.wordBased : $r48 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minute") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r49 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes")
org.joda.time.format.PeriodFormat.wordBased : $r49 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r50 = virtualinvoke $r47.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r48, $r49)
org.joda.time.format.PeriodFormat.wordBased : $r50 = virtualinvoke $r47.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r48, $r49) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r51 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace")
org.joda.time.format.PeriodFormat.wordBased : $r51 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r52 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace")
org.joda.time.format.PeriodFormat.wordBased : $r52 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r53 = virtualinvoke $r50.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r51, $r52, r4)
org.joda.time.format.PeriodFormat.wordBased : $r53 = virtualinvoke $r50.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r51, $r52, r4) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r54 = virtualinvoke $r53.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeconds()>()
org.joda.time.format.PeriodFormat.wordBased : $r54 = virtualinvoke $r53.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeconds()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r55 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.second")
org.joda.time.format.PeriodFormat.wordBased : $r55 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.second") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r56 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds")
org.joda.time.format.PeriodFormat.wordBased : $r56 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r57 = virtualinvoke $r54.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r55, $r56)
org.joda.time.format.PeriodFormat.wordBased : $r57 = virtualinvoke $r54.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r55, $r56) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r58 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace")
org.joda.time.format.PeriodFormat.wordBased : $r58 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r59 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace")
org.joda.time.format.PeriodFormat.wordBased : $r59 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r60 = virtualinvoke $r57.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r58, $r59, r4)
org.joda.time.format.PeriodFormat.wordBased : $r60 = virtualinvoke $r57.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r58, $r59, r4) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r61 = virtualinvoke $r60.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMillis()>()
org.joda.time.format.PeriodFormat.wordBased : $r61 = virtualinvoke $r60.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMillis()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r62 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.millisecond")
org.joda.time.format.PeriodFormat.wordBased : $r62 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.millisecond") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r63 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds")
org.joda.time.format.PeriodFormat.wordBased : $r63 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds") >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r64 = virtualinvoke $r61.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r62, $r63)
org.joda.time.format.PeriodFormat.wordBased : $r64 = virtualinvoke $r61.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r62, $r63) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : r2 = virtualinvoke $r64.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>()
org.joda.time.format.PeriodFormat.wordBased : r2 = virtualinvoke $r64.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>() >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : $r65 = <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS>
org.joda.time.format.PeriodFormat.wordBased : $r65 = <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS> >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : interfaceinvoke $r65.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r0, r2)
org.joda.time.format.PeriodFormat.wordBased : interfaceinvoke $r65.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r0, r2) >>>>>>>> org.joda.time.format.PeriodFormat.wordBased : return r2
