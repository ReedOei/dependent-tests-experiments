org.joda.time.Days.daysIn : if r0 != null >>>>>>>> org.joda.time.Days.daysIn : $r2 = <org.joda.time.Days: org.joda.time.Days ZERO>
org.joda.time.Days.daysIn : if r0 != null >>>>>>>> org.joda.time.Days.daysIn : $r3 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.DateTime getStart()>()
org.joda.time.Days.daysIn : $r3 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.DateTime getStart()>() >>>>>>>> org.joda.time.Days.daysIn : $r4 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.DateTime getEnd()>()
org.joda.time.Days.daysIn : $r4 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.DateTime getEnd()>() >>>>>>>> org.joda.time.Days.daysIn : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>()
org.joda.time.Days.daysIn : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>() >>>>>>>> org.joda.time.Days.daysIn : i0 = staticinvoke <org.joda.time.base.BaseSingleFieldPeriod: int between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)>($r3, $r4, $r1)
org.joda.time.Days.daysIn : i0 = staticinvoke <org.joda.time.base.BaseSingleFieldPeriod: int between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)>($r3, $r4, $r1) >>>>>>>> org.joda.time.Days.daysIn : $r5 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>(i0)
org.joda.time.Days.daysIn : $r5 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>(i0) >>>>>>>> org.joda.time.Days.daysIn : return $r5
org.joda.time.Days.daysIn : $r2 = <org.joda.time.Days: org.joda.time.Days ZERO> >>>>>>>> org.joda.time.Days.daysIn : return $r2
