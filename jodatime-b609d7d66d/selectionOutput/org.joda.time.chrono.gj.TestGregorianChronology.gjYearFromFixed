org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l1 = l0 - 1L >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l2 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long div(long,long)>(l1, 146097L)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l2 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long div(long,long)>(l1, 146097L) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l3 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long mod(long,long)>(l1, 146097L)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l3 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long mod(long,long)>(l1, 146097L) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l4 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long div(long,long)>(l3, 36524L)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l4 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long div(long,long)>(l3, 36524L) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l5 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long mod(long,long)>(l3, 36524L)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l5 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long mod(long,long)>(l3, 36524L) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l6 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long div(long,long)>(l5, 1461L)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l6 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long div(long,long)>(l5, 1461L) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l7 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long mod(long,long)>(l5, 1461L)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l7 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long mod(long,long)>(l5, 1461L) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l8 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long div(long,long)>(l7, 365L)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l8 = staticinvoke <org.joda.time.chrono.gj.TestGregorianChronology: long div(long,long)>(l7, 365L) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l11 = 400L * l2
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l11 = 400L * l2 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l12 = 100L * l4
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l12 = 100L * l4 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l13 = $l11 + $l12
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l13 = $l11 + $l12 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l14 = 4L * l6
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l14 = 4L * l6 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l15 = $l13 + $l14
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l15 = $l13 + $l14 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l9 = $l15 + l8
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l9 = $l15 + l8 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $b16 = l4 cmp 4L
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $b16 = l4 cmp 4L >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b16 == 0
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b16 == 0 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $b17 = l8 cmp 4L
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b16 == 0 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : i10 = (int) l9
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : i10 = (int) l9 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l18 = (long) i10
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $l18 = (long) i10 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $b19 = $l18 cmp l9
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $b19 = $l18 cmp l9 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b19 != 0
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b19 != 0 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : return i10
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b19 != 0 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r1 = new java.lang.RuntimeException
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r1 = new java.lang.RuntimeException >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r2 = new java.lang.StringBuilder
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r2 = new java.lang.StringBuilder >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("year cannot be cast to an int: ")
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("year cannot be cast to an int: ") >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5)
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5) >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : throw $r1
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : $b17 = l8 cmp 4L >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b17 == 0
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b17 == 0 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l9 = l9 + 1L
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : if $b17 == 0 >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : i10 = (int) l9
org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : l9 = l9 + 1L >>>>>>>> org.joda.time.chrono.gj.TestGregorianChronology.gjYearFromFixed : i10 = (int) l9
