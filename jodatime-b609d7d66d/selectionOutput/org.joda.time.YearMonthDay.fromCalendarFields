org.joda.time.YearMonthDay.fromCalendarFields : if r0 != null >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : $r1 = new java.lang.IllegalArgumentException
org.joda.time.YearMonthDay.fromCalendarFields : if r0 != null >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : $r2 = new org.joda.time.YearMonthDay
org.joda.time.YearMonthDay.fromCalendarFields : $r2 = new org.joda.time.YearMonthDay >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1)
org.joda.time.YearMonthDay.fromCalendarFields : $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1) >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2)
org.joda.time.YearMonthDay.fromCalendarFields : $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2) >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : $i2 = $i1 + 1
org.joda.time.YearMonthDay.fromCalendarFields : $i2 = $i1 + 1 >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : $i3 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5)
org.joda.time.YearMonthDay.fromCalendarFields : $i3 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5) >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : specialinvoke $r2.<org.joda.time.YearMonthDay: void <init>(int,int,int)>($i0, $i2, $i3)
org.joda.time.YearMonthDay.fromCalendarFields : specialinvoke $r2.<org.joda.time.YearMonthDay: void <init>(int,int,int)>($i0, $i2, $i3) >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : return $r2
org.joda.time.YearMonthDay.fromCalendarFields : $r1 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The calendar must not be null")
org.joda.time.YearMonthDay.fromCalendarFields : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The calendar must not be null") >>>>>>>> org.joda.time.YearMonthDay.fromCalendarFields : throw $r1
