org.joda.time.chrono.StrictChronology.equals : if r0 != r1 >>>>>>>> org.joda.time.chrono.StrictChronology.equals : return 1
org.joda.time.chrono.StrictChronology.equals : if r0 != r1 >>>>>>>> org.joda.time.chrono.StrictChronology.equals : $z0 = r1 instanceof org.joda.time.chrono.StrictChronology
org.joda.time.chrono.StrictChronology.equals : $z0 = r1 instanceof org.joda.time.chrono.StrictChronology >>>>>>>> org.joda.time.chrono.StrictChronology.equals : if $z0 != 0
org.joda.time.chrono.StrictChronology.equals : if $z0 != 0 >>>>>>>> org.joda.time.chrono.StrictChronology.equals : return 0
org.joda.time.chrono.StrictChronology.equals : if $z0 != 0 >>>>>>>> org.joda.time.chrono.StrictChronology.equals : r2 = (org.joda.time.chrono.StrictChronology) r1
org.joda.time.chrono.StrictChronology.equals : r2 = (org.joda.time.chrono.StrictChronology) r1 >>>>>>>> org.joda.time.chrono.StrictChronology.equals : $r3 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>()
org.joda.time.chrono.StrictChronology.equals : $r3 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.StrictChronology.equals : $r4 = virtualinvoke r2.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>()
org.joda.time.chrono.StrictChronology.equals : $r4 = virtualinvoke r2.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.StrictChronology.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.joda.time.chrono.StrictChronology.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.joda.time.chrono.StrictChronology.equals : return $z1
