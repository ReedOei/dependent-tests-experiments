org.joda.time.chrono.gj.TestJulianYearField.addWrapField : i2 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianYearField: int get(long)>(l0) >>>>>>>> org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $i4 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianYearField: int getMinimumValue()>()
org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $i4 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianYearField: int getMinimumValue()>() >>>>>>>> org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $i5 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianYearField: int getMaximumValue()>()
org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $i5 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianYearField: int getMaximumValue()>() >>>>>>>> org.joda.time.chrono.gj.TestJulianYearField.addWrapField : i3 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int,int)>(i2, i1, $i4, $i5)
org.joda.time.chrono.gj.TestJulianYearField.addWrapField : i3 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int,int)>(i2, i1, $i4, $i5) >>>>>>>> org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $l6 = (long) i3
org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $l6 = (long) i3 >>>>>>>> org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $l7 = (long) i2
org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $l7 = (long) i2 >>>>>>>> org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $l8 = $l6 - $l7
org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $l8 = $l6 - $l7 >>>>>>>> org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $l9 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianYearField: long add(long,long)>(l0, $l8)
org.joda.time.chrono.gj.TestJulianYearField.addWrapField : $l9 = virtualinvoke r0.<org.joda.time.chrono.gj.TestJulianYearField: long add(long,long)>(l0, $l8) >>>>>>>> org.joda.time.chrono.gj.TestJulianYearField.addWrapField : return $l9
