org.joda.time.tz.FixedDateTimeZone.toTimeZone : r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $i0 != 6
org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $i0 != 6 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("+")
org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $i0 != 6 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r8 = new java.util.SimpleTimeZone
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r8 = new java.util.SimpleTimeZone >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset> >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r9 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r9 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : specialinvoke $r8.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i1, $r9)
org.joda.time.tz.FixedDateTimeZone.toTimeZone : specialinvoke $r8.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i1, $r9) >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : return $r8
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("+") >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $z0 != 0
org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $z0 != 0 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-")
org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $z0 != 0 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r2 = new java.lang.StringBuilder
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r2 = new java.lang.StringBuilder >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT")
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT") >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r4 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r4 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r6)
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r6) >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : return $r7
org.joda.time.tz.FixedDateTimeZone.toTimeZone : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-") >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $z1 == 0
org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $z1 == 0 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r2 = new java.lang.StringBuilder
org.joda.time.tz.FixedDateTimeZone.toTimeZone : if $z1 == 0 >>>>>>>> org.joda.time.tz.FixedDateTimeZone.toTimeZone : $r8 = new java.util.SimpleTimeZone
