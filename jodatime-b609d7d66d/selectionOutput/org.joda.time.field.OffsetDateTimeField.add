org.joda.time.field.OffsetDateTimeField.add : l2 = specialinvoke r0.<org.joda.time.field.DecoratedDateTimeField: long add(long,long)>(l0, l1) >>>>>>>> org.joda.time.field.OffsetDateTimeField.add : $i3 = virtualinvoke r0.<org.joda.time.field.OffsetDateTimeField: int get(long)>(l2)
org.joda.time.field.OffsetDateTimeField.add : $i3 = virtualinvoke r0.<org.joda.time.field.OffsetDateTimeField: int get(long)>(l2) >>>>>>>> org.joda.time.field.OffsetDateTimeField.add : $i4 = r0.<org.joda.time.field.OffsetDateTimeField: int iMin>
org.joda.time.field.OffsetDateTimeField.add : $i4 = r0.<org.joda.time.field.OffsetDateTimeField: int iMin> >>>>>>>> org.joda.time.field.OffsetDateTimeField.add : $i5 = r0.<org.joda.time.field.OffsetDateTimeField: int iMax>
org.joda.time.field.OffsetDateTimeField.add : $i5 = r0.<org.joda.time.field.OffsetDateTimeField: int iMax> >>>>>>>> org.joda.time.field.OffsetDateTimeField.add : staticinvoke <org.joda.time.field.FieldUtils: void verifyValueBounds(org.joda.time.DateTimeField,int,int,int)>(r0, $i3, $i4, $i5)
org.joda.time.field.OffsetDateTimeField.add : staticinvoke <org.joda.time.field.FieldUtils: void verifyValueBounds(org.joda.time.DateTimeField,int,int,int)>(r0, $i3, $i4, $i5) >>>>>>>> org.joda.time.field.OffsetDateTimeField.add : return l2
