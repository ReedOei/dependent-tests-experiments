org.joda.time.chrono.GJChronology.convertByWeekyear : $r2 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyear()>() >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $r3 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyear()>()
org.joda.time.chrono.GJChronology.convertByWeekyear : $r3 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyear()>() >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $i2 = virtualinvoke $r3.<org.joda.time.DateTimeField: int get(long)>(l0)
org.joda.time.chrono.GJChronology.convertByWeekyear : $i2 = virtualinvoke $r3.<org.joda.time.DateTimeField: int get(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : l1 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>(0L, $i2)
org.joda.time.chrono.GJChronology.convertByWeekyear : l1 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>(0L, $i2) >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $r4 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>()
org.joda.time.chrono.GJChronology.convertByWeekyear : $r4 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>() >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $r5 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>()
org.joda.time.chrono.GJChronology.convertByWeekyear : $r5 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>() >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $i3 = virtualinvoke $r5.<org.joda.time.DateTimeField: int get(long)>(l0)
org.joda.time.chrono.GJChronology.convertByWeekyear : $i3 = virtualinvoke $r5.<org.joda.time.DateTimeField: int get(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : l4 = virtualinvoke $r4.<org.joda.time.DateTimeField: long set(long,int)>(l1, $i3)
org.joda.time.chrono.GJChronology.convertByWeekyear : l4 = virtualinvoke $r4.<org.joda.time.DateTimeField: long set(long,int)>(l1, $i3) >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $r6 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>()
org.joda.time.chrono.GJChronology.convertByWeekyear : $r6 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>() >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $r7 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>()
org.joda.time.chrono.GJChronology.convertByWeekyear : $r7 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>() >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $i5 = virtualinvoke $r7.<org.joda.time.DateTimeField: int get(long)>(l0)
org.joda.time.chrono.GJChronology.convertByWeekyear : $i5 = virtualinvoke $r7.<org.joda.time.DateTimeField: int get(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : l6 = virtualinvoke $r6.<org.joda.time.DateTimeField: long set(long,int)>(l4, $i5)
org.joda.time.chrono.GJChronology.convertByWeekyear : l6 = virtualinvoke $r6.<org.joda.time.DateTimeField: long set(long,int)>(l4, $i5) >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $r8 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>()
org.joda.time.chrono.GJChronology.convertByWeekyear : $r8 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>() >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $r9 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>()
org.joda.time.chrono.GJChronology.convertByWeekyear : $r9 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>() >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : $i7 = virtualinvoke $r9.<org.joda.time.DateTimeField: int get(long)>(l0)
org.joda.time.chrono.GJChronology.convertByWeekyear : $i7 = virtualinvoke $r9.<org.joda.time.DateTimeField: int get(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : l8 = virtualinvoke $r8.<org.joda.time.DateTimeField: long set(long,int)>(l6, $i7)
org.joda.time.chrono.GJChronology.convertByWeekyear : l8 = virtualinvoke $r8.<org.joda.time.DateTimeField: long set(long,int)>(l6, $i7) >>>>>>>> org.joda.time.chrono.GJChronology.convertByWeekyear : return l8
