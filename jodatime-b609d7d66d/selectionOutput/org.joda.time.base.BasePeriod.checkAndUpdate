org.joda.time.base.BasePeriod.checkAndUpdate : i1 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int indexOf(org.joda.time.DurationFieldType)>(r1) >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : if i1 != -1
org.joda.time.base.BasePeriod.checkAndUpdate : if i1 != -1 >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : if i0 == 0
org.joda.time.base.BasePeriod.checkAndUpdate : if i1 != -1 >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : r2[i1] = i0
org.joda.time.base.BasePeriod.checkAndUpdate : r2[i1] = i0 >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : return
org.joda.time.base.BasePeriod.checkAndUpdate : if i0 == 0 >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : $r4 = new java.lang.IllegalArgumentException
org.joda.time.base.BasePeriod.checkAndUpdate : if i0 == 0 >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : return
org.joda.time.base.BasePeriod.checkAndUpdate : $r4 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : $r3 = new java.lang.StringBuilder
org.joda.time.base.BasePeriod.checkAndUpdate : $r3 = new java.lang.StringBuilder >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.joda.time.base.BasePeriod.checkAndUpdate : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Period does not support field \'")
org.joda.time.base.BasePeriod.checkAndUpdate : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Period does not support field \'") >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : $r6 = virtualinvoke r1.<org.joda.time.DurationFieldType: java.lang.String getName()>()
org.joda.time.base.BasePeriod.checkAndUpdate : $r6 = virtualinvoke r1.<org.joda.time.DurationFieldType: java.lang.String getName()>() >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.joda.time.base.BasePeriod.checkAndUpdate : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.joda.time.base.BasePeriod.checkAndUpdate : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.base.BasePeriod.checkAndUpdate : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9)
org.joda.time.base.BasePeriod.checkAndUpdate : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9) >>>>>>>> org.joda.time.base.BasePeriod.checkAndUpdate : throw $r4
