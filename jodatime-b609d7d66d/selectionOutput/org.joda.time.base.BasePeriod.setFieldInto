org.joda.time.base.BasePeriod.setFieldInto : i1 = virtualinvoke r0.<org.joda.time.base.BasePeriod: int indexOf(org.joda.time.DurationFieldType)>(r2) >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : if i1 != -1
org.joda.time.base.BasePeriod.setFieldInto : if i1 != -1 >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : if i0 != 0
org.joda.time.base.BasePeriod.setFieldInto : if i1 != -1 >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : r1[i1] = i0
org.joda.time.base.BasePeriod.setFieldInto : r1[i1] = i0 >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : return
org.joda.time.base.BasePeriod.setFieldInto : if i0 != 0 >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : if r2 != null
org.joda.time.base.BasePeriod.setFieldInto : if i0 != 0 >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : $r4 = new java.lang.IllegalArgumentException
org.joda.time.base.BasePeriod.setFieldInto : $r4 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : $r3 = new java.lang.StringBuilder
org.joda.time.base.BasePeriod.setFieldInto : $r3 = new java.lang.StringBuilder >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.joda.time.base.BasePeriod.setFieldInto : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Period does not support field \'")
org.joda.time.base.BasePeriod.setFieldInto : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Period does not support field \'") >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
org.joda.time.base.BasePeriod.setFieldInto : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.joda.time.base.BasePeriod.setFieldInto : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.base.BasePeriod.setFieldInto : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8)
org.joda.time.base.BasePeriod.setFieldInto : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8) >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : throw $r4
org.joda.time.base.BasePeriod.setFieldInto : if r2 != null >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : $r4 = new java.lang.IllegalArgumentException
org.joda.time.base.BasePeriod.setFieldInto : if r2 != null >>>>>>>> org.joda.time.base.BasePeriod.setFieldInto : return
