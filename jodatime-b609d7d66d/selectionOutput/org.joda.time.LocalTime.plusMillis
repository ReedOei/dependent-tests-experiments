org.joda.time.LocalTime.plusMillis : if i0 != 0 >>>>>>>> org.joda.time.LocalTime.plusMillis : return r0
org.joda.time.LocalTime.plusMillis : if i0 != 0 >>>>>>>> org.joda.time.LocalTime.plusMillis : $r1 = virtualinvoke r0.<org.joda.time.LocalTime: org.joda.time.Chronology getChronology()>()
org.joda.time.LocalTime.plusMillis : $r1 = virtualinvoke r0.<org.joda.time.LocalTime: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.LocalTime.plusMillis : $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField millis()>()
org.joda.time.LocalTime.plusMillis : $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField millis()>() >>>>>>>> org.joda.time.LocalTime.plusMillis : $l2 = virtualinvoke r0.<org.joda.time.LocalTime: long getLocalMillis()>()
org.joda.time.LocalTime.plusMillis : $l2 = virtualinvoke r0.<org.joda.time.LocalTime: long getLocalMillis()>() >>>>>>>> org.joda.time.LocalTime.plusMillis : l1 = virtualinvoke $r2.<org.joda.time.DurationField: long add(long,int)>($l2, i0)
org.joda.time.LocalTime.plusMillis : l1 = virtualinvoke $r2.<org.joda.time.DurationField: long add(long,int)>($l2, i0) >>>>>>>> org.joda.time.LocalTime.plusMillis : $r3 = virtualinvoke r0.<org.joda.time.LocalTime: org.joda.time.LocalTime withLocalMillis(long)>(l1)
org.joda.time.LocalTime.plusMillis : $r3 = virtualinvoke r0.<org.joda.time.LocalTime: org.joda.time.LocalTime withLocalMillis(long)>(l1) >>>>>>>> org.joda.time.LocalTime.plusMillis : return $r3
