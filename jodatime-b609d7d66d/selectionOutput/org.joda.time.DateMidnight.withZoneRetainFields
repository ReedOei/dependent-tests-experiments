org.joda.time.DateMidnight.withZoneRetainFields : r3 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.DateTimeZone getZone(org.joda.time.DateTimeZone)>(r1) >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : $r4 = virtualinvoke r0.<org.joda.time.DateMidnight: org.joda.time.DateTimeZone getZone()>()
org.joda.time.DateMidnight.withZoneRetainFields : $r4 = virtualinvoke r0.<org.joda.time.DateMidnight: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.DateTimeZone getZone(org.joda.time.DateTimeZone)>($r4)
org.joda.time.DateMidnight.withZoneRetainFields : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.DateTimeZone getZone(org.joda.time.DateTimeZone)>($r4) >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : if r3 != r2
org.joda.time.DateMidnight.withZoneRetainFields : if r3 != r2 >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : return r0
org.joda.time.DateMidnight.withZoneRetainFields : if r3 != r2 >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : $l1 = virtualinvoke r0.<org.joda.time.DateMidnight: long getMillis()>()
org.joda.time.DateMidnight.withZoneRetainFields : $l1 = virtualinvoke r0.<org.joda.time.DateMidnight: long getMillis()>() >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : l0 = virtualinvoke r2.<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)>(r3, $l1)
org.joda.time.DateMidnight.withZoneRetainFields : l0 = virtualinvoke r2.<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)>(r3, $l1) >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : $r5 = new org.joda.time.DateMidnight
org.joda.time.DateMidnight.withZoneRetainFields : $r5 = new org.joda.time.DateMidnight >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : $r6 = virtualinvoke r0.<org.joda.time.DateMidnight: org.joda.time.Chronology getChronology()>()
org.joda.time.DateMidnight.withZoneRetainFields : $r6 = virtualinvoke r0.<org.joda.time.DateMidnight: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : $r7 = virtualinvoke $r6.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r3)
org.joda.time.DateMidnight.withZoneRetainFields : $r7 = virtualinvoke $r6.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r3) >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : specialinvoke $r5.<org.joda.time.DateMidnight: void <init>(long,org.joda.time.Chronology)>(l0, $r7)
org.joda.time.DateMidnight.withZoneRetainFields : specialinvoke $r5.<org.joda.time.DateMidnight: void <init>(long,org.joda.time.Chronology)>(l0, $r7) >>>>>>>> org.joda.time.DateMidnight.withZoneRetainFields : return $r5
