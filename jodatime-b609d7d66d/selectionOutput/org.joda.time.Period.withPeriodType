org.joda.time.Period.withPeriodType : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.PeriodType getPeriodType(org.joda.time.PeriodType)>(r1) >>>>>>>> org.joda.time.Period.withPeriodType : $r3 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.Period.withPeriodType : $r3 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>() >>>>>>>> org.joda.time.Period.withPeriodType : $z0 = virtualinvoke r2.<org.joda.time.PeriodType: boolean equals(java.lang.Object)>($r3)
org.joda.time.Period.withPeriodType : $z0 = virtualinvoke r2.<org.joda.time.PeriodType: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.joda.time.Period.withPeriodType : if $z0 == 0
org.joda.time.Period.withPeriodType : if $z0 == 0 >>>>>>>> org.joda.time.Period.withPeriodType : return r0
org.joda.time.Period.withPeriodType : if $z0 == 0 >>>>>>>> org.joda.time.Period.withPeriodType : $r4 = new org.joda.time.Period
org.joda.time.Period.withPeriodType : $r4 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.withPeriodType : specialinvoke $r4.<org.joda.time.Period: void <init>(java.lang.Object,org.joda.time.PeriodType)>(r0, r2)
org.joda.time.Period.withPeriodType : specialinvoke $r4.<org.joda.time.Period: void <init>(java.lang.Object,org.joda.time.PeriodType)>(r0, r2) >>>>>>>> org.joda.time.Period.withPeriodType : return $r4
