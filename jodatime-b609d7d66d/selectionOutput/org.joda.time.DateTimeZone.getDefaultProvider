org.joda.time.DateTimeZone.getDefaultProvider : r0 = null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.Provider")
org.joda.time.DateTimeZone.getDefaultProvider : r0 = null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : r9 = $r8 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null
org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r10 = new org.joda.time.tz.ZoneInfoProvider
org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null
org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r11 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : r12 = $r11 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.joda.time.DateTimeZone.getDefaultProvider : r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r14 = virtualinvoke r13.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>()
org.joda.time.DateTimeZone.getDefaultProvider : $r14 = virtualinvoke r13.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : virtualinvoke $r14.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r13, r12)
org.joda.time.DateTimeZone.getDefaultProvider : virtualinvoke $r14.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r13, r12) >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null
org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r15 = new org.joda.time.tz.UTCProvider
org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : return r0
org.joda.time.DateTimeZone.getDefaultProvider : $r15 = new org.joda.time.tz.UTCProvider >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : specialinvoke $r15.<org.joda.time.tz.UTCProvider: void <init>()>()
org.joda.time.DateTimeZone.getDefaultProvider : specialinvoke $r15.<org.joda.time.tz.UTCProvider: void <init>()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : r0 = $r15
org.joda.time.DateTimeZone.getDefaultProvider : r0 = $r15 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : return r0
org.joda.time.DateTimeZone.getDefaultProvider : $r10 = new org.joda.time.tz.ZoneInfoProvider >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : specialinvoke $r10.<org.joda.time.tz.ZoneInfoProvider: void <init>(java.lang.String)>("org/joda/time/tz/data")
org.joda.time.DateTimeZone.getDefaultProvider : $r10 = new org.joda.time.tz.ZoneInfoProvider >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r11 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : specialinvoke $r10.<org.joda.time.tz.ZoneInfoProvider: void <init>(java.lang.String)>("org/joda/time/tz/data") >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : r0 = $r10
org.joda.time.DateTimeZone.getDefaultProvider : specialinvoke $r10.<org.joda.time.tz.ZoneInfoProvider: void <init>(java.lang.String)>("org/joda/time/tz/data") >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r11 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : r0 = $r10 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)]
org.joda.time.DateTimeZone.getDefaultProvider : r0 = $r10 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r11 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)] >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null
org.joda.time.DateTimeZone.getDefaultProvider : r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.Provider") >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : if r1 == null
org.joda.time.DateTimeZone.getDefaultProvider : r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.Provider") >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1)
org.joda.time.DateTimeZone.getDefaultProvider : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)]
org.joda.time.DateTimeZone.getDefaultProvider : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : if r1 == null >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r6 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : r2 = $r6 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.joda.time.DateTimeZone.getDefaultProvider : r2 = $r6 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r7 = virtualinvoke r3.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>()
org.joda.time.DateTimeZone.getDefaultProvider : r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : $r7 = virtualinvoke r3.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : virtualinvoke $r7.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2)
org.joda.time.DateTimeZone.getDefaultProvider : $r7 = virtualinvoke r3.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : virtualinvoke $r7.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2) >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)]
org.joda.time.DateTimeZone.getDefaultProvider : virtualinvoke $r7.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2) >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)] >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : if r0 != null
org.joda.time.DateTimeZone.getDefaultProvider : $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1) >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r6 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1) >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1) >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>()
org.joda.time.DateTimeZone.getDefaultProvider : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r6 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : r0 = (org.joda.time.tz.Provider) $r5
org.joda.time.DateTimeZone.getDefaultProvider : r0 = (org.joda.time.tz.Provider) $r5 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r6 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : r0 = (org.joda.time.tz.Provider) $r5 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
org.joda.time.DateTimeZone.getDefaultProvider : r0 = (org.joda.time.tz.Provider) $r5 >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)]
org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)] >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)]
org.joda.time.DateTimeZone.getDefaultProvider : goto [?= (branch)] >>>>>>>> org.joda.time.DateTimeZone.getDefaultProvider : $r8 := @caughtexception
