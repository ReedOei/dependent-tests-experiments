org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $c5 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: char iMode> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $c5 != 119
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $c5 != 119 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : i3 = i1 + i2
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $c5 != 119 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $c6 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: char iMode>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $c6 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: char iMode> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $c6 != 115
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $c6 != 115 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : i3 = i1
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $c6 != 115 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : i3 = 0
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : i3 = 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l7 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l7 = (long) i3 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l8 = l0 + $l7
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l8 = l0 + $l7 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r2 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r2 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $i9 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMonthOfYear>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $i9 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMonthOfYear> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l4 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>(l8, $i9)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l4 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>(l8, $i9) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l10 = virtualinvoke $r3.<org.joda.time.DateTimeField: long set(long,int)>(l4, 0)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l10 = virtualinvoke $r3.<org.joda.time.DateTimeField: long set(long,int)>(l4, 0) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r4 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r4 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $i11 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMillisOfDay>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $i11 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMillisOfDay> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l12 = virtualinvoke $r4.<org.joda.time.DateTimeField: long add(long,int)>(l10, $i11)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l12 = virtualinvoke $r4.<org.joda.time.DateTimeField: long add(long,int)>(l10, $i11) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l13 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfMonthPrevious(org.joda.time.Chronology,long)>(r1, l12)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l13 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfMonthPrevious(org.joda.time.Chronology,long)>(r1, l12) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $i14 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iDayOfWeek>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $i14 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iDayOfWeek> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $i14 != 0
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $i14 != 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $b15 = l13 cmp l8
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $i14 != 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l13 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfWeek(org.joda.time.Chronology,long)>(r1, l13)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l13 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfWeek(org.joda.time.Chronology,long)>(r1, l13) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $b17 = l13 cmp l8
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $b17 = l13 cmp l8 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $b17 < 0
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $b17 < 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r6 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $b17 < 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l22 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l22 = (long) i3 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l23 = l13 - $l22
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l23 = l13 - $l22 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : return $l23
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r6 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l18 = virtualinvoke $r6.<org.joda.time.DateTimeField: long add(long,int)>(l13, -1)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l18 = virtualinvoke $r6.<org.joda.time.DateTimeField: long add(long,int)>(l13, -1) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r7 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r7 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $i19 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMonthOfYear>
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $i19 = r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: int iMonthOfYear> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l20 = virtualinvoke $r7.<org.joda.time.DateTimeField: long set(long,int)>(l18, $i19)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l20 = virtualinvoke $r7.<org.joda.time.DateTimeField: long set(long,int)>(l18, $i19) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l21 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfMonthPrevious(org.joda.time.Chronology,long)>(r1, l20)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l21 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfMonthPrevious(org.joda.time.Chronology,long)>(r1, l20) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l13 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfWeek(org.joda.time.Chronology,long)>(r1, l21)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l13 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfWeek(org.joda.time.Chronology,long)>(r1, l21) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l22 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $b15 = l13 cmp l8 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $b15 < 0
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $b15 < 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r5 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>()
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : if $b15 < 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l22 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $r5 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l16 = virtualinvoke $r5.<org.joda.time.DateTimeField: long add(long,int)>(l13, -1)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l16 = virtualinvoke $r5.<org.joda.time.DateTimeField: long add(long,int)>(l13, -1) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l13 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfMonthPrevious(org.joda.time.Chronology,long)>(r1, l16)
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : l13 = specialinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long setDayOfMonthPrevious(org.joda.time.Chronology,long)>(r1, l16) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : goto [?= $l22 = (long) i3]
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : goto [?= $l22 = (long) i3] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l22 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : i3 = i1 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : goto [?= $l7 = (long) i3]
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : goto [?= $l7 = (long) i3] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l7 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : i3 = i1 + i2 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : goto [?= $l7 = (long) i3]
org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : goto [?= $l7 = (long) i3] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous : $l7 = (long) i3
