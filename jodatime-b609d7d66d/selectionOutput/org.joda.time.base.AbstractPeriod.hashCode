org.joda.time.base.AbstractPeriod.hashCode : i0 = 17 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : i1 = 0
org.joda.time.base.AbstractPeriod.hashCode : i1 = 0 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : i2 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int size()>()
org.joda.time.base.AbstractPeriod.hashCode : i2 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int size()>() >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : if i1 >= i2
org.joda.time.base.AbstractPeriod.hashCode : if i1 >= i2 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : $i3 = 27 * i0
org.joda.time.base.AbstractPeriod.hashCode : if i1 >= i2 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : return i0
org.joda.time.base.AbstractPeriod.hashCode : $i3 = 27 * i0 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : $i4 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int getValue(int)>(i1)
org.joda.time.base.AbstractPeriod.hashCode : $i4 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: int getValue(int)>(i1) >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : i5 = $i3 + $i4
org.joda.time.base.AbstractPeriod.hashCode : i5 = $i3 + $i4 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : $i6 = 27 * i5
org.joda.time.base.AbstractPeriod.hashCode : $i6 = 27 * i5 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : $r1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.DurationFieldType getFieldType(int)>(i1)
org.joda.time.base.AbstractPeriod.hashCode : $r1 = virtualinvoke r0.<org.joda.time.base.AbstractPeriod: org.joda.time.DurationFieldType getFieldType(int)>(i1) >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : $i7 = virtualinvoke $r1.<java.lang.Object: int hashCode()>()
org.joda.time.base.AbstractPeriod.hashCode : $i7 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : i0 = $i6 + $i7
org.joda.time.base.AbstractPeriod.hashCode : i0 = $i6 + $i7 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : i1 = i1 + 1
org.joda.time.base.AbstractPeriod.hashCode : i1 = i1 + 1 >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : goto [?= (branch)]
org.joda.time.base.AbstractPeriod.hashCode : goto [?= (branch)] >>>>>>>> org.joda.time.base.AbstractPeriod.hashCode : if i1 >= i2
