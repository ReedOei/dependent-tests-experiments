org.joda.time.base.AbstractInterval.toDuration : l0 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long toDurationMillis()>() >>>>>>>> org.joda.time.base.AbstractInterval.toDuration : $b1 = l0 cmp 0L
org.joda.time.base.AbstractInterval.toDuration : $b1 = l0 cmp 0L >>>>>>>> org.joda.time.base.AbstractInterval.toDuration : if $b1 != 0
org.joda.time.base.AbstractInterval.toDuration : if $b1 != 0 >>>>>>>> org.joda.time.base.AbstractInterval.toDuration : $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>
org.joda.time.base.AbstractInterval.toDuration : if $b1 != 0 >>>>>>>> org.joda.time.base.AbstractInterval.toDuration : $r2 = new org.joda.time.Duration
org.joda.time.base.AbstractInterval.toDuration : $r2 = new org.joda.time.Duration >>>>>>>> org.joda.time.base.AbstractInterval.toDuration : specialinvoke $r2.<org.joda.time.Duration: void <init>(long)>(l0)
org.joda.time.base.AbstractInterval.toDuration : specialinvoke $r2.<org.joda.time.Duration: void <init>(long)>(l0) >>>>>>>> org.joda.time.base.AbstractInterval.toDuration : return $r2
org.joda.time.base.AbstractInterval.toDuration : $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO> >>>>>>>> org.joda.time.base.AbstractInterval.toDuration : return $r1
