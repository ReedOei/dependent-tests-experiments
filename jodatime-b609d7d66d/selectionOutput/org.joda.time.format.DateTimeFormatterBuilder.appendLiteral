org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : if r1 != null >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r2 = new java.lang.IllegalArgumentException
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : if r1 != null >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : lookupswitch($i0) {     case 0:
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : lookupswitch($i0) {     case 0: >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : return r0
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : lookupswitch($i0) {     case 0: >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r3 = new org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : lookupswitch($i0) {     case 0: >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r5 = new org.joda.time.format.DateTimeFormatterBuilder$StringLiteral
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r5 = new org.joda.time.format.DateTimeFormatterBuilder$StringLiteral >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : specialinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: void <init>(java.lang.String)>(r1)
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : specialinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: void <init>(java.lang.String)>(r1) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r6 = specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>($r5)
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r6 = specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>($r5) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : return $r6
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r3 = new org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0)
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : specialinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral: void <init>(char)>($c1)
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : specialinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral: void <init>(char)>($c1) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r4 = specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>($r3)
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r4 = specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>($r3) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : return $r4
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Literal must not be null")
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Literal must not be null") >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder.appendLiteral : throw $r2
