org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r4 = r0.<org.joda.time.format.DateTimeFormatterBuilder$TextField: org.joda.time.DateTimeFieldType iFieldType> >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $z0 = interfaceinvoke r1.<org.joda.time.ReadablePartial: boolean isSupported(org.joda.time.DateTimeFieldType)>($r4)
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $z0 = interfaceinvoke r1.<org.joda.time.ReadablePartial: boolean isSupported(org.joda.time.DateTimeFieldType)>($r4) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : if $z0 == 0
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : if $z0 == 0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r5 = r0.<org.joda.time.format.DateTimeFormatterBuilder$TextField: org.joda.time.DateTimeFieldType iFieldType>
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : if $z0 == 0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : return "\ufffd"
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r5 = r0.<org.joda.time.format.DateTimeFormatterBuilder$TextField: org.joda.time.DateTimeFieldType iFieldType> >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r6 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.Chronology getChronology()>()
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r6 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : r3 = virtualinvoke $r5.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r6)
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : r3 = virtualinvoke $r5.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r6) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $z1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$TextField: boolean iShort>
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $z1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$TextField: boolean iShort> >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : if $z1 == 0
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : if $z1 == 0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r7 = virtualinvoke r3.<org.joda.time.DateTimeField: java.lang.String getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)>(r1, r2)
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : if $z1 == 0 >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r8 = virtualinvoke r3.<org.joda.time.DateTimeField: java.lang.String getAsText(org.joda.time.ReadablePartial,java.util.Locale)>(r1, r2)
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r8 = virtualinvoke r3.<org.joda.time.DateTimeField: java.lang.String getAsText(org.joda.time.ReadablePartial,java.util.Locale)>(r1, r2) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : return $r8
org.joda.time.format.DateTimeFormatterBuilder$TextField.print : $r7 = virtualinvoke r3.<org.joda.time.DateTimeField: java.lang.String getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)>(r1, r2) >>>>>>>> org.joda.time.format.DateTimeFormatterBuilder$TextField.print : return $r7
