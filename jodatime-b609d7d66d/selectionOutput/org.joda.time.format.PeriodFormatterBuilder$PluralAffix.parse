org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i2 = virtualinvoke r3.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i2 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $i1 >= $i2
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $i1 >= $i2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r4 = r2
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $i1 >= $i2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i3 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i3 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r2, 0, $i3)
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r2, 0, $i3) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $z0 == 0
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i4 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i6 = virtualinvoke r3.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i6 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $z1 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r3, 0, $i6)
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $z1 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r3, 0, $i6) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $z1 == 0
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $z1 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i7 = virtualinvoke r3.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : if $z1 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i9 = i0 ^ -1
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i9 = i0 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : return $i9
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i7 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i8 = i0 + $i7
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i8 = i0 + $i7 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : return $i8
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i4 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i5 = i0 + $i4
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i5 = i0 + $i4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : return $i5
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r4 = r2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r2 = r3
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r2 = r3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r3 = r4
org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : r3 = r4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse : $i3 = virtualinvoke r2.<java.lang.String: int length()>()
