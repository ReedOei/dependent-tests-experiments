org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l2 = (long) i1 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l3 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long mod(long,long)>($l2, 7L)
org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l3 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long mod(long,long)>($l2, 7L) >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l4 = l0 - $l3
org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l4 = l0 - $l3 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l5 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long mod(long,long)>($l4, 7L)
org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l5 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long mod(long,long)>($l4, 7L) >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l6 = l0 - $l5
org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : $l6 = l0 - $l5 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.weekdayOnOrBefore : return $l6
