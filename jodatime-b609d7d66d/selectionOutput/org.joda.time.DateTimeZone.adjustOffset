org.joda.time.DateTimeZone.adjustOffset : $l4 = l0 - 10800000L >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : l1 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>($l4)
org.joda.time.DateTimeZone.adjustOffset : l1 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>($l4) >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : $l5 = l0 + 10800000L
org.joda.time.DateTimeZone.adjustOffset : $l5 = l0 + 10800000L >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : l2 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>($l5)
org.joda.time.DateTimeZone.adjustOffset : l2 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>($l5) >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : $b6 = l1 cmp l2
org.joda.time.DateTimeZone.adjustOffset : $b6 = l1 cmp l2 >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : if $b6 != 0
org.joda.time.DateTimeZone.adjustOffset : if $b6 != 0 >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : return l0
org.joda.time.DateTimeZone.adjustOffset : if $b6 != 0 >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : l3 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>(l0)
org.joda.time.DateTimeZone.adjustOffset : l3 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>(l0) >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : $z1 = 0
org.joda.time.DateTimeZone.adjustOffset : $z1 = 0 >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : if z0 == 0
org.joda.time.DateTimeZone.adjustOffset : if z0 == 0 >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : $l8 = l2
org.joda.time.DateTimeZone.adjustOffset : if z0 == 0 >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : $l8 = l1
org.joda.time.DateTimeZone.adjustOffset : $l8 = l1 >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : $l9 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)>(l3, $z1, $l8)
org.joda.time.DateTimeZone.adjustOffset : $l9 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)>(l3, $z1, $l8) >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : return $l9
org.joda.time.DateTimeZone.adjustOffset : $l8 = l2 >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : goto [?= $l9 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)>(l3, $z1, $l8)]
org.joda.time.DateTimeZone.adjustOffset : goto [?= $l9 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)>(l3, $z1, $l8)] >>>>>>>> org.joda.time.DateTimeZone.adjustOffset : $l9 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)>(l3, $z1, $l8)
