org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong : $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0> >>>>>>>> org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong : virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, null)
org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong : virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, null) >>>>>>>> org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong : $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>()
org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong : $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>() >>>>>>>> org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong : $l2 = virtualinvoke $r2.<org.joda.time.DurationField: long getValueAsLong(long,long)>(l0, l1)
org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong : $l2 = virtualinvoke $r2.<org.joda.time.DurationField: long getValueAsLong(long,long)>(l0, l1) >>>>>>>> org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong : return $l2
