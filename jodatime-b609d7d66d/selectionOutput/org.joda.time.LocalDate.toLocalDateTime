org.joda.time.LocalDate.toLocalDateTime : if r1 != null >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : $r2 = new java.lang.IllegalArgumentException
org.joda.time.LocalDate.toLocalDateTime : if r1 != null >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : $r3 = virtualinvoke r0.<org.joda.time.LocalDate: org.joda.time.Chronology getChronology()>()
org.joda.time.LocalDate.toLocalDateTime : $r3 = virtualinvoke r0.<org.joda.time.LocalDate: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : $r4 = virtualinvoke r1.<org.joda.time.LocalTime: org.joda.time.Chronology getChronology()>()
org.joda.time.LocalDate.toLocalDateTime : $r4 = virtualinvoke r1.<org.joda.time.LocalTime: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : if $r3 == $r4
org.joda.time.LocalDate.toLocalDateTime : if $r3 == $r4 >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : $r5 = new java.lang.IllegalArgumentException
org.joda.time.LocalDate.toLocalDateTime : if $r3 == $r4 >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : $l1 = virtualinvoke r0.<org.joda.time.LocalDate: long getLocalMillis()>()
org.joda.time.LocalDate.toLocalDateTime : $l1 = virtualinvoke r0.<org.joda.time.LocalDate: long getLocalMillis()>() >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : $l2 = virtualinvoke r1.<org.joda.time.LocalTime: long getLocalMillis()>()
org.joda.time.LocalDate.toLocalDateTime : $l2 = virtualinvoke r1.<org.joda.time.LocalTime: long getLocalMillis()>() >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : l0 = $l1 + $l2
org.joda.time.LocalDate.toLocalDateTime : l0 = $l1 + $l2 >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : $r6 = new org.joda.time.LocalDateTime
org.joda.time.LocalDate.toLocalDateTime : $r6 = new org.joda.time.LocalDateTime >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : $r7 = virtualinvoke r0.<org.joda.time.LocalDate: org.joda.time.Chronology getChronology()>()
org.joda.time.LocalDate.toLocalDateTime : $r7 = virtualinvoke r0.<org.joda.time.LocalDate: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : specialinvoke $r6.<org.joda.time.LocalDateTime: void <init>(long,org.joda.time.Chronology)>(l0, $r7)
org.joda.time.LocalDate.toLocalDateTime : specialinvoke $r6.<org.joda.time.LocalDateTime: void <init>(long,org.joda.time.Chronology)>(l0, $r7) >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : return $r6
org.joda.time.LocalDate.toLocalDateTime : $r5 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The chronology of the time does not match")
org.joda.time.LocalDate.toLocalDateTime : specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The chronology of the time does not match") >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : throw $r5
org.joda.time.LocalDate.toLocalDateTime : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The time must not be null")
org.joda.time.LocalDate.toLocalDateTime : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The time must not be null") >>>>>>>> org.joda.time.LocalDate.toLocalDateTime : throw $r2
