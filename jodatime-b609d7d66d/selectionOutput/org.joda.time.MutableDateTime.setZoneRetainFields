org.joda.time.MutableDateTime.setZoneRetainFields : r3 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.DateTimeZone getZone(org.joda.time.DateTimeZone)>(r1) >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : $r4 = virtualinvoke r0.<org.joda.time.MutableDateTime: org.joda.time.DateTimeZone getZone()>()
org.joda.time.MutableDateTime.setZoneRetainFields : $r4 = virtualinvoke r0.<org.joda.time.MutableDateTime: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.DateTimeZone getZone(org.joda.time.DateTimeZone)>($r4)
org.joda.time.MutableDateTime.setZoneRetainFields : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.DateTimeZone getZone(org.joda.time.DateTimeZone)>($r4) >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : if r3 != r2
org.joda.time.MutableDateTime.setZoneRetainFields : if r3 != r2 >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : return
org.joda.time.MutableDateTime.setZoneRetainFields : if r3 != r2 >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : $l1 = virtualinvoke r0.<org.joda.time.MutableDateTime: long getMillis()>()
org.joda.time.MutableDateTime.setZoneRetainFields : $l1 = virtualinvoke r0.<org.joda.time.MutableDateTime: long getMillis()>() >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : l0 = virtualinvoke r2.<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)>(r3, $l1)
org.joda.time.MutableDateTime.setZoneRetainFields : l0 = virtualinvoke r2.<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)>(r3, $l1) >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : $r5 = virtualinvoke r0.<org.joda.time.MutableDateTime: org.joda.time.Chronology getChronology()>()
org.joda.time.MutableDateTime.setZoneRetainFields : $r5 = virtualinvoke r0.<org.joda.time.MutableDateTime: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : $r6 = virtualinvoke $r5.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r3)
org.joda.time.MutableDateTime.setZoneRetainFields : $r6 = virtualinvoke $r5.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r3) >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : virtualinvoke r0.<org.joda.time.MutableDateTime: void setChronology(org.joda.time.Chronology)>($r6)
org.joda.time.MutableDateTime.setZoneRetainFields : virtualinvoke r0.<org.joda.time.MutableDateTime: void setChronology(org.joda.time.Chronology)>($r6) >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : virtualinvoke r0.<org.joda.time.MutableDateTime: void setMillis(long)>(l0)
org.joda.time.MutableDateTime.setZoneRetainFields : virtualinvoke r0.<org.joda.time.MutableDateTime: void setMillis(long)>(l0) >>>>>>>> org.joda.time.MutableDateTime.setZoneRetainFields : return
