org.joda.time.field.AbstractPartialFieldProperty.equals : if r0 != r1 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : return 1
org.joda.time.field.AbstractPartialFieldProperty.equals : if r0 != r1 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $z0 = r1 instanceof org.joda.time.field.AbstractPartialFieldProperty
org.joda.time.field.AbstractPartialFieldProperty.equals : $z0 = r1 instanceof org.joda.time.field.AbstractPartialFieldProperty >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : if $z0 != 0
org.joda.time.field.AbstractPartialFieldProperty.equals : if $z0 != 0 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : return 0
org.joda.time.field.AbstractPartialFieldProperty.equals : if $z0 != 0 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : r2 = (org.joda.time.field.AbstractPartialFieldProperty) r1
org.joda.time.field.AbstractPartialFieldProperty.equals : r2 = (org.joda.time.field.AbstractPartialFieldProperty) r1 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $i0 = virtualinvoke r0.<org.joda.time.field.AbstractPartialFieldProperty: int get()>()
org.joda.time.field.AbstractPartialFieldProperty.equals : $i0 = virtualinvoke r0.<org.joda.time.field.AbstractPartialFieldProperty: int get()>() >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $i1 = virtualinvoke r2.<org.joda.time.field.AbstractPartialFieldProperty: int get()>()
org.joda.time.field.AbstractPartialFieldProperty.equals : $i1 = virtualinvoke r2.<org.joda.time.field.AbstractPartialFieldProperty: int get()>() >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : if $i0 != $i1
org.joda.time.field.AbstractPartialFieldProperty.equals : if $i0 != $i1 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $r3 = virtualinvoke r0.<org.joda.time.field.AbstractPartialFieldProperty: org.joda.time.DateTimeFieldType getFieldType()>()
org.joda.time.field.AbstractPartialFieldProperty.equals : if $i0 != $i1 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $z2 = 0
org.joda.time.field.AbstractPartialFieldProperty.equals : $z2 = 0 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : return $z2
org.joda.time.field.AbstractPartialFieldProperty.equals : $r3 = virtualinvoke r0.<org.joda.time.field.AbstractPartialFieldProperty: org.joda.time.DateTimeFieldType getFieldType()>() >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $r4 = virtualinvoke r2.<org.joda.time.field.AbstractPartialFieldProperty: org.joda.time.DateTimeFieldType getFieldType()>()
org.joda.time.field.AbstractPartialFieldProperty.equals : $r4 = virtualinvoke r2.<org.joda.time.field.AbstractPartialFieldProperty: org.joda.time.DateTimeFieldType getFieldType()>() >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : if $r3 != $r4
org.joda.time.field.AbstractPartialFieldProperty.equals : if $r3 != $r4 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $r5 = virtualinvoke r0.<org.joda.time.field.AbstractPartialFieldProperty: org.joda.time.ReadablePartial getReadablePartial()>()
org.joda.time.field.AbstractPartialFieldProperty.equals : if $r3 != $r4 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $z2 = 0
org.joda.time.field.AbstractPartialFieldProperty.equals : $r5 = virtualinvoke r0.<org.joda.time.field.AbstractPartialFieldProperty: org.joda.time.ReadablePartial getReadablePartial()>() >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $r6 = interfaceinvoke $r5.<org.joda.time.ReadablePartial: org.joda.time.Chronology getChronology()>()
org.joda.time.field.AbstractPartialFieldProperty.equals : $r6 = interfaceinvoke $r5.<org.joda.time.ReadablePartial: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $r7 = virtualinvoke r2.<org.joda.time.field.AbstractPartialFieldProperty: org.joda.time.ReadablePartial getReadablePartial()>()
org.joda.time.field.AbstractPartialFieldProperty.equals : $r7 = virtualinvoke r2.<org.joda.time.field.AbstractPartialFieldProperty: org.joda.time.ReadablePartial getReadablePartial()>() >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $r8 = interfaceinvoke $r7.<org.joda.time.ReadablePartial: org.joda.time.Chronology getChronology()>()
org.joda.time.field.AbstractPartialFieldProperty.equals : $r8 = interfaceinvoke $r7.<org.joda.time.ReadablePartial: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $z1 = staticinvoke <org.joda.time.field.FieldUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r8)
org.joda.time.field.AbstractPartialFieldProperty.equals : $z1 = staticinvoke <org.joda.time.field.FieldUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r8) >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : if $z1 == 0
org.joda.time.field.AbstractPartialFieldProperty.equals : if $z1 == 0 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $z2 = 1
org.joda.time.field.AbstractPartialFieldProperty.equals : if $z1 == 0 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : $z2 = 0
org.joda.time.field.AbstractPartialFieldProperty.equals : $z2 = 1 >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : goto [?= return $z2]
org.joda.time.field.AbstractPartialFieldProperty.equals : goto [?= return $z2] >>>>>>>> org.joda.time.field.AbstractPartialFieldProperty.equals : return $z2
