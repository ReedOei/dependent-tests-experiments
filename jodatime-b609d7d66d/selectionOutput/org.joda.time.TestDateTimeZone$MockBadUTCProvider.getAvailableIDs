org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : $r1 = new java.util.HashSet >>>>>>>> org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : specialinvoke $r1.<java.util.HashSet: void <init>()>()
org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : specialinvoke $r1.<java.util.HashSet: void <init>()>() >>>>>>>> org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : r2 = $r1
org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : r2 = $r1 >>>>>>>> org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("UTC")
org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("UTC") >>>>>>>> org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("Europe/London")
org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("Europe/London") >>>>>>>> org.joda.time.TestDateTimeZone$MockBadUTCProvider.getAvailableIDs : return r2
