org.joda.time.chrono.ZonedChronology.localToUTC : r1 = virtualinvoke r0.<org.joda.time.chrono.ZonedChronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : i1 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)>(l0)
org.joda.time.chrono.ZonedChronology.localToUTC : i1 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)>(l0) >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $l2 = (long) i1
org.joda.time.chrono.ZonedChronology.localToUTC : $l2 = (long) i1 >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : l3 = l0 - $l2
org.joda.time.chrono.ZonedChronology.localToUTC : l3 = l0 - $l2 >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $i4 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>(l3)
org.joda.time.chrono.ZonedChronology.localToUTC : $i4 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>(l3) >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : if i1 == $i4
org.joda.time.chrono.ZonedChronology.localToUTC : if i1 == $i4 >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $r3 = new java.lang.IllegalArgumentException
org.joda.time.chrono.ZonedChronology.localToUTC : if i1 == $i4 >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : return l3
org.joda.time.chrono.ZonedChronology.localToUTC : $r3 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $r4 = new java.lang.StringBuilder
org.joda.time.chrono.ZonedChronology.localToUTC : $r4 = new java.lang.StringBuilder >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.joda.time.chrono.ZonedChronology.localToUTC : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal instant due to time zone offset transition: ")
org.joda.time.chrono.ZonedChronology.localToUTC : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal instant due to time zone offset transition: ") >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $r6 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss.SSS")
org.joda.time.chrono.ZonedChronology.localToUTC : $r6 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss.SSS") >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $r2 = new org.joda.time.Instant
org.joda.time.chrono.ZonedChronology.localToUTC : $r2 = new org.joda.time.Instant >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : specialinvoke $r2.<org.joda.time.Instant: void <init>(long)>(l3)
org.joda.time.chrono.ZonedChronology.localToUTC : specialinvoke $r2.<org.joda.time.Instant: void <init>(long)>(l3) >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadableInstant)>($r2)
org.joda.time.chrono.ZonedChronology.localToUTC : $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadableInstant)>($r2) >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.joda.time.chrono.ZonedChronology.localToUTC : $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.chrono.ZonedChronology.localToUTC : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9)
org.joda.time.chrono.ZonedChronology.localToUTC : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9) >>>>>>>> org.joda.time.chrono.ZonedChronology.localToUTC : throw $r3
