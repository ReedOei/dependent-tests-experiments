org.joda.time.format.PeriodFormatter.parseMutablePeriod : specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkParser()>() >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r3 = new org.joda.time.MutablePeriod
org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r3 = new org.joda.time.MutablePeriod >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r4 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>
org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r4 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType> >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : specialinvoke $r3.<org.joda.time.MutablePeriod: void <init>(long,org.joda.time.PeriodType)>(0L, $r4)
org.joda.time.format.PeriodFormatter.parseMutablePeriod : specialinvoke $r3.<org.joda.time.MutablePeriod: void <init>(long,org.joda.time.PeriodType)>(0L, $r4) >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : r2 = $r3
org.joda.time.format.PeriodFormatter.parseMutablePeriod : r2 = $r3 >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r5 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>()
org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r5 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>() >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r6 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>
org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r6 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale> >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : i0 = interfaceinvoke $r5.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>(r2, r1, 0, $r6)
org.joda.time.format.PeriodFormatter.parseMutablePeriod : i0 = interfaceinvoke $r5.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>(r2, r1, 0, $r6) >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : if i0 < 0
org.joda.time.format.PeriodFormatter.parseMutablePeriod : if i0 < 0 >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatter.parseMutablePeriod : if i0 < 0 >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : i0 = i0 ^ -1
org.joda.time.format.PeriodFormatter.parseMutablePeriod : i0 = i0 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r7 = new java.lang.IllegalArgumentException
org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r7 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r8 = staticinvoke <org.joda.time.format.FormatUtils: java.lang.String createErrorMessage(java.lang.String,int)>(r1, i0)
org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r8 = staticinvoke <org.joda.time.format.FormatUtils: java.lang.String createErrorMessage(java.lang.String,int)>(r1, i0) >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8)
org.joda.time.format.PeriodFormatter.parseMutablePeriod : specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8) >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : throw $r7
org.joda.time.format.PeriodFormatter.parseMutablePeriod : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : if i0 < $i1
org.joda.time.format.PeriodFormatter.parseMutablePeriod : if i0 < $i1 >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : return r2
org.joda.time.format.PeriodFormatter.parseMutablePeriod : if i0 < $i1 >>>>>>>> org.joda.time.format.PeriodFormatter.parseMutablePeriod : $r7 = new java.lang.IllegalArgumentException
