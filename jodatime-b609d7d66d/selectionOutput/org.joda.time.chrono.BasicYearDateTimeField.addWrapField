org.joda.time.chrono.BasicYearDateTimeField.addWrapField : if i1 != 0 >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : return l0
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : if i1 != 0 >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $r1 = r0.<org.joda.time.chrono.BasicYearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $r1 = r0.<org.joda.time.chrono.BasicYearDateTimeField: org.joda.time.chrono.BasicChronology iChronology> >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : i2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getYear(long)>(l0)
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : i2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getYear(long)>(l0) >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $r2 = r0.<org.joda.time.chrono.BasicYearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $r2 = r0.<org.joda.time.chrono.BasicYearDateTimeField: org.joda.time.chrono.BasicChronology iChronology> >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $i4 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: int getMinYear()>()
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $i4 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: int getMinYear()>() >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $r3 = r0.<org.joda.time.chrono.BasicYearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $r3 = r0.<org.joda.time.chrono.BasicYearDateTimeField: org.joda.time.chrono.BasicChronology iChronology> >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $i5 = virtualinvoke $r3.<org.joda.time.chrono.BasicChronology: int getMaxYear()>()
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $i5 = virtualinvoke $r3.<org.joda.time.chrono.BasicChronology: int getMaxYear()>() >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : i3 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int,int)>(i2, i1, $i4, $i5)
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : i3 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int,int)>(i2, i1, $i4, $i5) >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $l6 = virtualinvoke r0.<org.joda.time.chrono.BasicYearDateTimeField: long set(long,int)>(l0, i3)
org.joda.time.chrono.BasicYearDateTimeField.addWrapField : $l6 = virtualinvoke r0.<org.joda.time.chrono.BasicYearDateTimeField: long set(long,int)>(l0, i3) >>>>>>>> org.joda.time.chrono.BasicYearDateTimeField.addWrapField : return $l6
