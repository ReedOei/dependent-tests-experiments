org.joda.time.MockZone.getOffset : $l1 = r0.<org.joda.time.MockZone: long transition> >>>>>>>> org.joda.time.MockZone.getOffset : $b2 = l0 cmp $l1
org.joda.time.MockZone.getOffset : $b2 = l0 cmp $l1 >>>>>>>> org.joda.time.MockZone.getOffset : if $b2 >= 0
org.joda.time.MockZone.getOffset : if $b2 >= 0 >>>>>>>> org.joda.time.MockZone.getOffset : $i3 = r0.<org.joda.time.MockZone: int winterOffset>
org.joda.time.MockZone.getOffset : if $b2 >= 0 >>>>>>>> org.joda.time.MockZone.getOffset : $i4 = r0.<org.joda.time.MockZone: int winterOffset>
org.joda.time.MockZone.getOffset : $i4 = r0.<org.joda.time.MockZone: int winterOffset> >>>>>>>> org.joda.time.MockZone.getOffset : $i5 = r0.<org.joda.time.MockZone: int sizeMillis>
org.joda.time.MockZone.getOffset : $i5 = r0.<org.joda.time.MockZone: int sizeMillis> >>>>>>>> org.joda.time.MockZone.getOffset : $i3 = $i4 + $i5
org.joda.time.MockZone.getOffset : $i3 = $i4 + $i5 >>>>>>>> org.joda.time.MockZone.getOffset : return $i3
org.joda.time.MockZone.getOffset : $i3 = r0.<org.joda.time.MockZone: int winterOffset> >>>>>>>> org.joda.time.MockZone.getOffset : goto [?= return $i3]
org.joda.time.MockZone.getOffset : goto [?= return $i3] >>>>>>>> org.joda.time.MockZone.getOffset : return $i3
