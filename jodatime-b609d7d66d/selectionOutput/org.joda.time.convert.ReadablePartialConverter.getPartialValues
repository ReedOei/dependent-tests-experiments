org.joda.time.convert.ReadablePartialConverter.getPartialValues : r4 = (org.joda.time.ReadablePartial) r2 >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : i0 = interfaceinvoke r1.<org.joda.time.ReadablePartial: int size()>()
org.joda.time.convert.ReadablePartialConverter.getPartialValues : i0 = interfaceinvoke r1.<org.joda.time.ReadablePartial: int size()>() >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : r5 = newarray (int)[i0]
org.joda.time.convert.ReadablePartialConverter.getPartialValues : r5 = newarray (int)[i0] >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : i1 = 0
org.joda.time.convert.ReadablePartialConverter.getPartialValues : i1 = 0 >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : if i1 >= i0
org.joda.time.convert.ReadablePartialConverter.getPartialValues : if i1 >= i0 >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : $r6 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i1)
org.joda.time.convert.ReadablePartialConverter.getPartialValues : if i1 >= i0 >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : virtualinvoke r3.<org.joda.time.Chronology: void validate(org.joda.time.ReadablePartial,int[])>(r1, r5)
org.joda.time.convert.ReadablePartialConverter.getPartialValues : virtualinvoke r3.<org.joda.time.Chronology: void validate(org.joda.time.ReadablePartial,int[])>(r1, r5) >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : return r5
org.joda.time.convert.ReadablePartialConverter.getPartialValues : $r6 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i1) >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : $i2 = interfaceinvoke r4.<org.joda.time.ReadablePartial: int get(org.joda.time.DateTimeFieldType)>($r6)
org.joda.time.convert.ReadablePartialConverter.getPartialValues : $i2 = interfaceinvoke r4.<org.joda.time.ReadablePartial: int get(org.joda.time.DateTimeFieldType)>($r6) >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : r5[i1] = $i2
org.joda.time.convert.ReadablePartialConverter.getPartialValues : r5[i1] = $i2 >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : i1 = i1 + 1
org.joda.time.convert.ReadablePartialConverter.getPartialValues : i1 = i1 + 1 >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : goto [?= (branch)]
org.joda.time.convert.ReadablePartialConverter.getPartialValues : goto [?= (branch)] >>>>>>>> org.joda.time.convert.ReadablePartialConverter.getPartialValues : if i1 >= i0
