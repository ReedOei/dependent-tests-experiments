org.joda.time.chrono.gj.TestGJChronology.nthWeekday : if i0 <= 0 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $i5 = 7 * i0
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : if i0 <= 0 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $i10 = 7 * i0
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $i10 = 7 * i0 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l11 = (long) $i10
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l11 = (long) $i10 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l12 = virtualinvoke r0.<org.joda.time.chrono.gj.TestGJChronology: long fixedFromGJ(int,int,int)>(i2, i3, i4)
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l12 = virtualinvoke r0.<org.joda.time.chrono.gj.TestGJChronology: long fixedFromGJ(int,int,int)>(i2, i3, i4) >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l13 = virtualinvoke r0.<org.joda.time.chrono.gj.TestGJChronology: long weekdayAfter(long,int)>($l12, i1)
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l13 = virtualinvoke r0.<org.joda.time.chrono.gj.TestGJChronology: long weekdayAfter(long,int)>($l12, i1) >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l14 = $l11 + $l13
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l14 = $l11 + $l13 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : return $l14
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $i5 = 7 * i0 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l6 = (long) $i5
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l6 = (long) $i5 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l7 = virtualinvoke r0.<org.joda.time.chrono.gj.TestGJChronology: long fixedFromGJ(int,int,int)>(i2, i3, i4)
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l7 = virtualinvoke r0.<org.joda.time.chrono.gj.TestGJChronology: long fixedFromGJ(int,int,int)>(i2, i3, i4) >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestGJChronology: long weekdayBefore(long,int)>($l7, i1)
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l8 = virtualinvoke r0.<org.joda.time.chrono.gj.TestGJChronology: long weekdayBefore(long,int)>($l7, i1) >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l9 = $l6 + $l8
org.joda.time.chrono.gj.TestGJChronology.nthWeekday : $l9 = $l6 + $l8 >>>>>>>> org.joda.time.chrono.gj.TestGJChronology.nthWeekday : return $l9
