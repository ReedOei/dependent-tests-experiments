crystal.client.ConflictClient$8.mousePressed : $z0 = virtualinvoke r1.<java.awt.event.MouseEvent: boolean isPopupTrigger()>() >>>>>>>> crystal.client.ConflictClient$8.mousePressed : if $z0 == 0
crystal.client.ConflictClient$8.mousePressed : if $z0 == 0 >>>>>>>> crystal.client.ConflictClient$8.mousePressed : $r2 = r0.<crystal.client.ConflictClient$8: javax.swing.JPopupMenu val$projectMenu>
crystal.client.ConflictClient$8.mousePressed : if $z0 == 0 >>>>>>>> crystal.client.ConflictClient$8.mousePressed : return
crystal.client.ConflictClient$8.mousePressed : $r2 = r0.<crystal.client.ConflictClient$8: javax.swing.JPopupMenu val$projectMenu> >>>>>>>> crystal.client.ConflictClient$8.mousePressed : $r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.awt.Component getComponent()>()
crystal.client.ConflictClient$8.mousePressed : $r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.awt.Component getComponent()>() >>>>>>>> crystal.client.ConflictClient$8.mousePressed : $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>()
crystal.client.ConflictClient$8.mousePressed : $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>() >>>>>>>> crystal.client.ConflictClient$8.mousePressed : $i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>()
crystal.client.ConflictClient$8.mousePressed : $i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>() >>>>>>>> crystal.client.ConflictClient$8.mousePressed : virtualinvoke $r2.<javax.swing.JPopupMenu: void show(java.awt.Component,int,int)>($r3, $i0, $i1)
crystal.client.ConflictClient$8.mousePressed : virtualinvoke $r2.<javax.swing.JPopupMenu: void show(java.awt.Component,int,int)>($r3, $i0, $i1) >>>>>>>> crystal.client.ConflictClient$8.mousePressed : return
