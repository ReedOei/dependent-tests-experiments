crystal.client.ProjectPanel$11.keyReleased : $r2 = r0.<crystal.client.ProjectPanel$11: crystal.model.DataSource val$copySource> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r3 = r0.<crystal.client.ProjectPanel$11: javax.swing.JTextField val$parent>
crystal.client.ProjectPanel$11.keyReleased : $r3 = r0.<crystal.client.ProjectPanel$11: javax.swing.JTextField val$parent> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r4 = virtualinvoke $r3.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel$11.keyReleased : $r4 = virtualinvoke $r3.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : virtualinvoke $r2.<crystal.model.DataSource: void setParent(java.lang.String)>($r4)
crystal.client.ProjectPanel$11.keyReleased : virtualinvoke $r2.<crystal.model.DataSource: void setParent(java.lang.String)>($r4) >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r5 = r0.<crystal.client.ProjectPanel$11: crystal.model.DataSource val$source>
crystal.client.ProjectPanel$11.keyReleased : $r5 = r0.<crystal.client.ProjectPanel$11: crystal.model.DataSource val$source> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : if $r5 == null
crystal.client.ProjectPanel$11.keyReleased : if $r5 == null >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r6 = r0.<crystal.client.ProjectPanel$11: java.util.Map val$changedComponents>
crystal.client.ProjectPanel$11.keyReleased : if $r5 == null >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r14 = r0.<crystal.client.ProjectPanel$11: javax.swing.JPanel val$panel>
crystal.client.ProjectPanel$11.keyReleased : $r14 = r0.<crystal.client.ProjectPanel$11: javax.swing.JPanel val$panel> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : virtualinvoke $r14.<javax.swing.JPanel: void validate()>()
crystal.client.ProjectPanel$11.keyReleased : virtualinvoke $r14.<javax.swing.JPanel: void validate()>() >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r15 = r0.<crystal.client.ProjectPanel$11: javax.swing.JFrame val$mainFrame>
crystal.client.ProjectPanel$11.keyReleased : $r15 = r0.<crystal.client.ProjectPanel$11: javax.swing.JFrame val$mainFrame> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : virtualinvoke $r15.<javax.swing.JFrame: void pack()>()
crystal.client.ProjectPanel$11.keyReleased : virtualinvoke $r15.<javax.swing.JFrame: void pack()>() >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : return
crystal.client.ProjectPanel$11.keyReleased : $r6 = r0.<crystal.client.ProjectPanel$11: java.util.Map val$changedComponents> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r7 = r0.<crystal.client.ProjectPanel$11: javax.swing.JTextField val$parent>
crystal.client.ProjectPanel$11.keyReleased : $r7 = r0.<crystal.client.ProjectPanel$11: javax.swing.JTextField val$parent> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r8 = r0.<crystal.client.ProjectPanel$11: javax.swing.JTextField val$parent>
crystal.client.ProjectPanel$11.keyReleased : $r8 = r0.<crystal.client.ProjectPanel$11: javax.swing.JTextField val$parent> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r9 = virtualinvoke $r8.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel$11.keyReleased : $r9 = virtualinvoke $r8.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r10 = r0.<crystal.client.ProjectPanel$11: crystal.model.DataSource val$source>
crystal.client.ProjectPanel$11.keyReleased : $r10 = r0.<crystal.client.ProjectPanel$11: crystal.model.DataSource val$source> >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r11 = virtualinvoke $r10.<crystal.model.DataSource: java.lang.String getParent()>()
crystal.client.ProjectPanel$11.keyReleased : $r11 = virtualinvoke $r10.<crystal.model.DataSource: java.lang.String getParent()>() >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11)
crystal.client.ProjectPanel$11.keyReleased : $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11) >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : if $z0 != 0
crystal.client.ProjectPanel$11.keyReleased : if $z0 != 0 >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $z1 = 1
crystal.client.ProjectPanel$11.keyReleased : if $z0 != 0 >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $z1 = 0
crystal.client.ProjectPanel$11.keyReleased : $z1 = 0 >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
crystal.client.ProjectPanel$11.keyReleased : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r12)
crystal.client.ProjectPanel$11.keyReleased : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r12) >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r14 = r0.<crystal.client.ProjectPanel$11: javax.swing.JPanel val$panel>
crystal.client.ProjectPanel$11.keyReleased : $z1 = 1 >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : goto [?= $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)]
crystal.client.ProjectPanel$11.keyReleased : goto [?= $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)] >>>>>>>> crystal.client.ProjectPanel$11.keyReleased : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
