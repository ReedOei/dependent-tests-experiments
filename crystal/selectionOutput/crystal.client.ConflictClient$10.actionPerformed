crystal.client.ConflictClient$10.actionPerformed : $r2 = new java.lang.StringBuilder >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
crystal.client.ConflictClient$10.actionPerformed : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do you want to delete the ")
crystal.client.ConflictClient$10.actionPerformed : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do you want to delete the ") >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r5 = r0.<crystal.client.ConflictClient$10: crystal.model.DataSource val$source>
crystal.client.ConflictClient$10.actionPerformed : $r5 = r0.<crystal.client.ConflictClient$10: crystal.model.DataSource val$source> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r6 = virtualinvoke $r5.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ConflictClient$10.actionPerformed : $r6 = virtualinvoke $r5.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
crystal.client.ConflictClient$10.actionPerformed : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'s repository?")
crystal.client.ConflictClient$10.actionPerformed : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'s repository?") >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ConflictClient$10.actionPerformed : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, $r9, "Delete repository?", 0)
crystal.client.ConflictClient$10.actionPerformed : i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, $r9, "Delete repository?", 0) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : if i0 != 0
crystal.client.ConflictClient$10.actionPerformed : if i0 != 0 >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r10 = r0.<crystal.client.ConflictClient$10: crystal.client.ProjectPreferences val$projPref>
crystal.client.ConflictClient$10.actionPerformed : if i0 != 0 >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : return
crystal.client.ConflictClient$10.actionPerformed : $r10 = r0.<crystal.client.ConflictClient$10: crystal.client.ProjectPreferences val$projPref> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r11 = virtualinvoke $r10.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()
crystal.client.ConflictClient$10.actionPerformed : $r11 = virtualinvoke $r10.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>() >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r12 = r0.<crystal.client.ConflictClient$10: crystal.model.DataSource val$source>
crystal.client.ConflictClient$10.actionPerformed : $r12 = r0.<crystal.client.ConflictClient$10: crystal.model.DataSource val$source> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : interfaceinvoke $r11.<java.util.Collection: boolean remove(java.lang.Object)>($r12)
crystal.client.ConflictClient$10.actionPerformed : interfaceinvoke $r11.<java.util.Collection: boolean remove(java.lang.Object)>($r12) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r13 = r0.<crystal.client.ConflictClient$10: crystal.client.ConflictClient this$0>
crystal.client.ConflictClient$10.actionPerformed : $r13 = r0.<crystal.client.ConflictClient$10: crystal.client.ConflictClient this$0> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r14 = staticinvoke <crystal.client.ConflictClient: java.util.HashMap access$300(crystal.client.ConflictClient)>($r13)
crystal.client.ConflictClient$10.actionPerformed : $r14 = staticinvoke <crystal.client.ConflictClient: java.util.HashMap access$300(crystal.client.ConflictClient)>($r13) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r15 = r0.<crystal.client.ConflictClient$10: crystal.model.DataSource val$source>
crystal.client.ConflictClient$10.actionPerformed : $r15 = r0.<crystal.client.ConflictClient$10: crystal.model.DataSource val$source> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : virtualinvoke $r14.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r15)
crystal.client.ConflictClient$10.actionPerformed : virtualinvoke $r14.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r15) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r17 = r0.<crystal.client.ConflictClient$10: javax.swing.JPanel val$iconGrid>
crystal.client.ConflictClient$10.actionPerformed : $r17 = r0.<crystal.client.ConflictClient$10: javax.swing.JPanel val$iconGrid> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r18 = r0.<crystal.client.ConflictClient$10: javax.swing.JLabel val$imageLabel>
crystal.client.ConflictClient$10.actionPerformed : $r18 = r0.<crystal.client.ConflictClient$10: javax.swing.JLabel val$imageLabel> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : virtualinvoke $r17.<javax.swing.JPanel: void remove(java.awt.Component)>($r18)
crystal.client.ConflictClient$10.actionPerformed : virtualinvoke $r17.<javax.swing.JPanel: void remove(java.awt.Component)>($r18) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r19 = r0.<crystal.client.ConflictClient$10: crystal.client.ClientPreferences val$prefs>
crystal.client.ConflictClient$10.actionPerformed : virtualinvoke $r17.<javax.swing.JPanel: void remove(java.awt.Component)>($r18) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r20 := @caughtexception
crystal.client.ConflictClient$10.actionPerformed : r3 = $r20 >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r21 = r0.<crystal.client.ConflictClient$10: crystal.client.ConflictClient this$0>
crystal.client.ConflictClient$10.actionPerformed : $r21 = r0.<crystal.client.ConflictClient$10: crystal.client.ConflictClient this$0> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r22 = staticinvoke <crystal.client.ConflictClient: org.apache.log4j.Logger access$000(crystal.client.ConflictClient)>($r21)
crystal.client.ConflictClient$10.actionPerformed : $r22 = staticinvoke <crystal.client.ConflictClient: org.apache.log4j.Logger access$000(crystal.client.ConflictClient)>($r21) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r23 = new java.lang.StringBuilder
crystal.client.ConflictClient$10.actionPerformed : $r23 = new java.lang.StringBuilder >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
crystal.client.ConflictClient$10.actionPerformed : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not write to the configuration file. ")
crystal.client.ConflictClient$10.actionPerformed : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not write to the configuration file. ") >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
crystal.client.ConflictClient$10.actionPerformed : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ConflictClient$10.actionPerformed : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : virtualinvoke $r22.<org.apache.log4j.Logger: void error(java.lang.Object)>($r26)
crystal.client.ConflictClient$10.actionPerformed : virtualinvoke $r22.<org.apache.log4j.Logger: void error(java.lang.Object)>($r26) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : return
crystal.client.ConflictClient$10.actionPerformed : $r19 = r0.<crystal.client.ConflictClient$10: crystal.client.ClientPreferences val$prefs> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : staticinvoke <crystal.client.ClientPreferences: void savePreferencesToDefaultXML(crystal.client.ClientPreferences)>($r19)
crystal.client.ConflictClient$10.actionPerformed : $r19 = r0.<crystal.client.ConflictClient$10: crystal.client.ClientPreferences val$prefs> >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r20 := @caughtexception
crystal.client.ConflictClient$10.actionPerformed : staticinvoke <crystal.client.ClientPreferences: void savePreferencesToDefaultXML(crystal.client.ClientPreferences)>($r19) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : goto [?= return]
crystal.client.ConflictClient$10.actionPerformed : staticinvoke <crystal.client.ClientPreferences: void savePreferencesToDefaultXML(crystal.client.ClientPreferences)>($r19) >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : $r20 := @caughtexception
crystal.client.ConflictClient$10.actionPerformed : goto [?= return] >>>>>>>> crystal.client.ConflictClient$10.actionPerformed : return
