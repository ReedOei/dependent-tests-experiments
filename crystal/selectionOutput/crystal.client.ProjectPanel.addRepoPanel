crystal.client.ProjectPanel.addRepoPanel : $r10 = new javax.swing.JLabel >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r10.<javax.swing.JLabel: void <init>()>()
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r10.<javax.swing.JLabel: void <init>()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r11 = $r10
crystal.client.ProjectPanel.addRepoPanel : r11 = $r10 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r12 = newarray (boolean)[3]
crystal.client.ProjectPanel.addRepoPanel : r12 = newarray (boolean)[3] >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r20 = new javax.swing.JTextField
crystal.client.ProjectPanel.addRepoPanel : $r20 = new javax.swing.JTextField >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r21 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ProjectPanel.addRepoPanel : $r21 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r20.<javax.swing.JTextField: void <init>(java.lang.String)>($r21)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r20.<javax.swing.JTextField: void <init>(java.lang.String)>($r21) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r13 = $r20
crystal.client.ProjectPanel.addRepoPanel : r13 = $r20 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
crystal.client.ProjectPanel.addRepoPanel : $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r22)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r22) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
crystal.client.ProjectPanel.addRepoPanel : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r24)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r24) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r12[0] = 1
crystal.client.ProjectPanel.addRepoPanel : r12[0] = 1 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r26 = new crystal.client.ProjectPanel$9
crystal.client.ProjectPanel.addRepoPanel : $r26 = new crystal.client.ProjectPanel$9 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r26.<crystal.client.ProjectPanel$9: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,crystal.client.ProjectPreferences,java.util.Map,boolean[],javax.swing.JLabel)>(r0, r1, r13, r8, r7, r2, r9, r12, r11)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r26.<crystal.client.ProjectPanel$9: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,crystal.client.ProjectPreferences,java.util.Map,boolean[],javax.swing.JLabel)>(r0, r1, r13, r8, r7, r2, r9, r12, r11) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r13.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r26)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r13.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r26) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r27 = new javax.swing.JCheckBox
crystal.client.ProjectPanel.addRepoPanel : $r27 = new javax.swing.JCheckBox >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r27.<javax.swing.JCheckBox: void <init>()>()
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r27.<javax.swing.JCheckBox: void <init>()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r14 = $r27
crystal.client.ProjectPanel.addRepoPanel : r14 = $r27 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isHidden()>()
crystal.client.ProjectPanel.addRepoPanel : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isHidden()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : if $z1 == 0
crystal.client.ProjectPanel.addRepoPanel : if $z1 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r14.<javax.swing.JCheckBox: void setSelected(boolean)>(1)
crystal.client.ProjectPanel.addRepoPanel : if $z1 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
crystal.client.ProjectPanel.addRepoPanel : $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r28)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r28) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r30 = new crystal.client.ProjectPanel$10
crystal.client.ProjectPanel.addRepoPanel : $r30 = new crystal.client.ProjectPanel$10 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r30.<crystal.client.ProjectPanel$10: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JCheckBox,crystal.model.DataSource,java.util.Map)>(r0, r1, r14, r8, r7)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r30.<crystal.client.ProjectPanel$10: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JCheckBox,crystal.model.DataSource,java.util.Map)>(r0, r1, r14, r8, r7) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r14.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r30)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r14.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r30) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r31 = new javax.swing.JTextField
crystal.client.ProjectPanel.addRepoPanel : $r31 = new javax.swing.JTextField >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r32 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getParent()>()
crystal.client.ProjectPanel.addRepoPanel : $r32 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getParent()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r31.<javax.swing.JTextField: void <init>(java.lang.String)>($r32)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r31.<javax.swing.JTextField: void <init>(java.lang.String)>($r32) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r15 = $r31
crystal.client.ProjectPanel.addRepoPanel : r15 = $r31 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
crystal.client.ProjectPanel.addRepoPanel : $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r33)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r33) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
crystal.client.ProjectPanel.addRepoPanel : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r35)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r35) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r12[1] = 1
crystal.client.ProjectPanel.addRepoPanel : r12[1] = 1 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r37 = new crystal.client.ProjectPanel$11
crystal.client.ProjectPanel.addRepoPanel : $r37 = new crystal.client.ProjectPanel$11 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r37.<crystal.client.ProjectPanel$11: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,javax.swing.JPanel,javax.swing.JFrame)>(r0, r1, r15, r8, r7, r4, r5)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r37.<crystal.client.ProjectPanel$11: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,javax.swing.JPanel,javax.swing.JFrame)>(r0, r1, r15, r8, r7, r4, r5) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r15.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r37)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r15.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r37) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r38 = new javax.swing.JTextField
crystal.client.ProjectPanel.addRepoPanel : $r38 = new javax.swing.JTextField >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r39 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getCloneString()>()
crystal.client.ProjectPanel.addRepoPanel : $r39 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getCloneString()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r38.<javax.swing.JTextField: void <init>(java.lang.String)>($r39)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r38.<javax.swing.JTextField: void <init>(java.lang.String)>($r39) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r16 = $r38
crystal.client.ProjectPanel.addRepoPanel : r16 = $r38 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r40 = new javax.swing.JPanel
crystal.client.ProjectPanel.addRepoPanel : $r40 = new javax.swing.JPanel >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r40.<javax.swing.JPanel: void <init>()>()
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r40.<javax.swing.JPanel: void <init>()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r17 = $r40
crystal.client.ProjectPanel.addRepoPanel : r17 = $r40 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r41 = new javax.swing.BoxLayout
crystal.client.ProjectPanel.addRepoPanel : $r41 = new javax.swing.BoxLayout >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r41.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>(r17, 0)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r41.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>(r17, 0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r41)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r41) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r16)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r16) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r43 = new javax.swing.JButton
crystal.client.ProjectPanel.addRepoPanel : $r43 = new javax.swing.JButton >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r43.<javax.swing.JButton: void <init>(java.lang.String)>("find")
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r43.<javax.swing.JButton: void <init>(java.lang.String)>("find") >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r18 = $r43
crystal.client.ProjectPanel.addRepoPanel : r18 = $r43 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r18)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r18) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
crystal.client.ProjectPanel.addRepoPanel : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r45)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r45) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r47 = virtualinvoke r16.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel.addRepoPanel : $r47 = virtualinvoke r16.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z2 = staticinvoke <crystal.util.ValidInputChecker: boolean checkDirectoryPath(java.lang.String)>($r47)
crystal.client.ProjectPanel.addRepoPanel : $z2 = staticinvoke <crystal.util.ValidInputChecker: boolean checkDirectoryPath(java.lang.String)>($r47) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : if $z2 != 0
crystal.client.ProjectPanel.addRepoPanel : if $z2 != 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r48 = virtualinvoke r16.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel.addRepoPanel : if $z2 != 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z4 = 1
crystal.client.ProjectPanel.addRepoPanel : $z4 = 1 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : goto [?= z0 = $z4]
crystal.client.ProjectPanel.addRepoPanel : goto [?= z0 = $z4] >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : z0 = $z4
crystal.client.ProjectPanel.addRepoPanel : z0 = $z4 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
crystal.client.ProjectPanel.addRepoPanel : $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r49)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r49) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r12[2] = z0
crystal.client.ProjectPanel.addRepoPanel : r12[2] = z0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r51 = new crystal.client.ProjectPanel$12
crystal.client.ProjectPanel.addRepoPanel : $r51 = new crystal.client.ProjectPanel$12 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r51.<crystal.client.ProjectPanel$12: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,java.util.Map,boolean[],javax.swing.JLabel,javax.swing.JPanel,javax.swing.JFrame)>(r0, r1, r16, r8, r7, r9, r12, r11, r4, r5)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r51.<crystal.client.ProjectPanel$12: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,java.util.Map,boolean[],javax.swing.JLabel,javax.swing.JPanel,javax.swing.JFrame)>(r0, r1, r16, r8, r7, r9, r12, r11, r4, r5) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r16.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r51)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r16.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r51) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r52 = new crystal.client.ProjectPanel$13
crystal.client.ProjectPanel.addRepoPanel : $r52 = new crystal.client.ProjectPanel$13 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r52.<crystal.client.ProjectPanel$13: void <init>(crystal.client.ProjectPanel,javax.swing.JTextField)>(r0, r16)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r52.<crystal.client.ProjectPanel$13: void <init>(crystal.client.ProjectPanel,javax.swing.JTextField)>(r0, r16) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r18.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r52)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r18.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r52) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r53 = new javax.swing.JButton
crystal.client.ProjectPanel.addRepoPanel : $r53 = new javax.swing.JButton >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r53.<javax.swing.JButton: void <init>(java.lang.String)>("Delete")
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r53.<javax.swing.JButton: void <init>(java.lang.String)>("Delete") >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r19 = $r53
crystal.client.ProjectPanel.addRepoPanel : r19 = $r53 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r54 = new crystal.client.ProjectPanel$14
crystal.client.ProjectPanel.addRepoPanel : $r54 = new crystal.client.ProjectPanel$14 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r54.<crystal.client.ProjectPanel$14: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,crystal.client.ProjectPreferences,javax.swing.JPanel,javax.swing.JTextField,javax.swing.JCheckBox,javax.swing.JTextField,javax.swing.JPanel,javax.swing.JButton,java.util.Map,javax.swing.JTextField,crystal.client.ClientPreferences,javax.swing.JFrame)>(r0, r1, r2, r6, r13, r14, r15, r17, r19, r9, r16, r3, r5)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r54.<crystal.client.ProjectPanel$14: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,crystal.client.ProjectPreferences,javax.swing.JPanel,javax.swing.JTextField,javax.swing.JCheckBox,javax.swing.JTextField,javax.swing.JPanel,javax.swing.JButton,java.util.Map,javax.swing.JTextField,crystal.client.ClientPreferences,javax.swing.JFrame)>(r0, r1, r2, r6, r13, r14, r15, r17, r19, r9, r16, r3, r5) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r19.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r54)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r19.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r54) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r13)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r13) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r14)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r14) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r15)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r15) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r17)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r17) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r19)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r19) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r60 = specialinvoke r0.<crystal.client.ProjectPanel: java.lang.String getState(boolean[])>(r12)
crystal.client.ProjectPanel.addRepoPanel : $r60 = specialinvoke r0.<crystal.client.ProjectPanel: java.lang.String getState(boolean[])>(r12) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setText(java.lang.String)>($r60)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setText(java.lang.String)>($r60) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r61 = specialinvoke r0.<crystal.client.ProjectPanel: java.lang.String getState(boolean[])>(r12)
crystal.client.ProjectPanel.addRepoPanel : $r61 = specialinvoke r0.<crystal.client.ProjectPanel: java.lang.String getState(boolean[])>(r12) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z5 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>("valid")
crystal.client.ProjectPanel.addRepoPanel : $z5 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>("valid") >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : if $z5 == 0
crystal.client.ProjectPanel.addRepoPanel : if $z5 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r62 = <java.awt.Color: java.awt.Color GREEN>
crystal.client.ProjectPanel.addRepoPanel : if $z5 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r64 = <java.awt.Color: java.awt.Color RED>
crystal.client.ProjectPanel.addRepoPanel : $r64 = <java.awt.Color: java.awt.Color RED> >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r65 = virtualinvoke $r64.<java.awt.Color: java.awt.Color darker()>()
crystal.client.ProjectPanel.addRepoPanel : $r65 = virtualinvoke $r64.<java.awt.Color: java.awt.Color darker()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r65)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r65) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : return
crystal.client.ProjectPanel.addRepoPanel : $r62 = <java.awt.Color: java.awt.Color GREEN> >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r63 = virtualinvoke $r62.<java.awt.Color: java.awt.Color darker()>()
crystal.client.ProjectPanel.addRepoPanel : $r63 = virtualinvoke $r62.<java.awt.Color: java.awt.Color darker()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r63)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r63) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : goto [?= virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11)]
crystal.client.ProjectPanel.addRepoPanel : goto [?= virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11)] >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11)
crystal.client.ProjectPanel.addRepoPanel : $r48 = virtualinvoke r16.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z3 = staticinvoke <crystal.util.ValidInputChecker: boolean checkUrl(java.lang.String)>($r48)
crystal.client.ProjectPanel.addRepoPanel : $z3 = staticinvoke <crystal.util.ValidInputChecker: boolean checkUrl(java.lang.String)>($r48) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : if $z3 == 0
crystal.client.ProjectPanel.addRepoPanel : if $z3 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z4 = 1
crystal.client.ProjectPanel.addRepoPanel : if $z3 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z4 = 0
crystal.client.ProjectPanel.addRepoPanel : $z4 = 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : z0 = $z4
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r14.<javax.swing.JCheckBox: void setSelected(boolean)>(1) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
