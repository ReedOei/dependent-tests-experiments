crystal.util.ValidInputChecker.checkValidPath : $r1 = new java.io.File >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0)
crystal.util.ValidInputChecker.checkValidPath : specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : r2 = $r1
crystal.util.ValidInputChecker.checkValidPath : r2 = $r1 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r3 = <crystal.util.ValidInputChecker: org.apache.log4j.Logger _log>
crystal.util.ValidInputChecker.checkValidPath : $r3 = <crystal.util.ValidInputChecker: org.apache.log4j.Logger _log> >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r4 = new java.lang.StringBuilder
crystal.util.ValidInputChecker.checkValidPath : $r4 = new java.lang.StringBuilder >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
crystal.util.ValidInputChecker.checkValidPath : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ValidInputChecker::checkValidFilePath( ")
crystal.util.ValidInputChecker.checkValidPath : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ValidInputChecker::checkValidFilePath( ") >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.util.ValidInputChecker.checkValidPath : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ")
crystal.util.ValidInputChecker.checkValidPath : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)
crystal.util.ValidInputChecker.checkValidPath : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0) >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ) - ")
crystal.util.ValidInputChecker.checkValidPath : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ) - ") >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $z1 = virtualinvoke r2.<java.io.File: boolean exists()>()
crystal.util.ValidInputChecker.checkValidPath : $z1 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1)
crystal.util.ValidInputChecker.checkValidPath : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1) >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.ValidInputChecker.checkValidPath : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : virtualinvoke $r3.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r11)
crystal.util.ValidInputChecker.checkValidPath : virtualinvoke $r3.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r11) >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : if z0 == 0
crystal.util.ValidInputChecker.checkValidPath : if z0 == 0 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $z2 = virtualinvoke r2.<java.io.File: boolean isFile()>()
crystal.util.ValidInputChecker.checkValidPath : if z0 == 0 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : if z0 != 0
crystal.util.ValidInputChecker.checkValidPath : if z0 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $z3 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()
crystal.util.ValidInputChecker.checkValidPath : if z0 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : return
crystal.util.ValidInputChecker.checkValidPath : $z3 = virtualinvoke r2.<java.io.File: boolean isDirectory()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : if $z3 != 0
crystal.util.ValidInputChecker.checkValidPath : if $z3 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r13 = new java.lang.IllegalArgumentException
crystal.util.ValidInputChecker.checkValidPath : if $z3 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : return
crystal.util.ValidInputChecker.checkValidPath : $r13 = new java.lang.IllegalArgumentException >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given path is not path to directory.")
crystal.util.ValidInputChecker.checkValidPath : specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given path is not path to directory.") >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : throw $r13
crystal.util.ValidInputChecker.checkValidPath : $z2 = virtualinvoke r2.<java.io.File: boolean isFile()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : if $z2 != 0
crystal.util.ValidInputChecker.checkValidPath : if $z2 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : $r12 = new java.lang.IllegalArgumentException
crystal.util.ValidInputChecker.checkValidPath : if $z2 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : if z0 != 0
crystal.util.ValidInputChecker.checkValidPath : $r12 = new java.lang.IllegalArgumentException >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given path is not path to file.")
crystal.util.ValidInputChecker.checkValidPath : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given path is not path to file.") >>>>>>>> crystal.util.ValidInputChecker.checkValidPath : throw $r12
