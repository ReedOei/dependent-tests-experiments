crystal.server.GitLogParser.parseLog : $r1 = <crystal.server.GitLogParser: java.util.Map gitCheckpoint> >>>>>>>> crystal.server.GitLogParser.parseLog : r2 = staticinvoke <crystal.server.GitLogParser: java.util.HashMap abstractParseLog(java.lang.String,java.util.Map)>(r0, $r1)
crystal.server.GitLogParser.parseLog : r2 = staticinvoke <crystal.server.GitLogParser: java.util.HashMap abstractParseLog(java.lang.String,java.util.Map)>(r0, $r1) >>>>>>>> crystal.server.GitLogParser.parseLog : $r5 = <crystal.server.GitLogParser: org.apache.log4j.Logger _log>
crystal.server.GitLogParser.parseLog : $r5 = <crystal.server.GitLogParser: org.apache.log4j.Logger _log> >>>>>>>> crystal.server.GitLogParser.parseLog : $r6 = new java.lang.StringBuilder
crystal.server.GitLogParser.parseLog : $r6 = new java.lang.StringBuilder >>>>>>>> crystal.server.GitLogParser.parseLog : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
crystal.server.GitLogParser.parseLog : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.GitLogParser.parseLog : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ncheck points with log:\n")
crystal.server.GitLogParser.parseLog : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ncheck points with log:\n") >>>>>>>> crystal.server.GitLogParser.parseLog : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.server.GitLogParser.parseLog : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.server.GitLogParser.parseLog : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.GitLogParser.parseLog : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.GitLogParser.parseLog : virtualinvoke $r5.<org.apache.log4j.Logger: void info(java.lang.Object)>($r9)
crystal.server.GitLogParser.parseLog : virtualinvoke $r5.<org.apache.log4j.Logger: void info(java.lang.Object)>($r9) >>>>>>>> crystal.server.GitLogParser.parseLog : $r10 = virtualinvoke r2.<java.util.HashMap: java.util.Set keySet()>()
crystal.server.GitLogParser.parseLog : $r10 = virtualinvoke r2.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> crystal.server.GitLogParser.parseLog : r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
crystal.server.GitLogParser.parseLog : r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> crystal.server.GitLogParser.parseLog : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
crystal.server.GitLogParser.parseLog : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.server.GitLogParser.parseLog : if $z0 == 0
crystal.server.GitLogParser.parseLog : if $z0 == 0 >>>>>>>> crystal.server.GitLogParser.parseLog : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
crystal.server.GitLogParser.parseLog : if $z0 == 0 >>>>>>>> crystal.server.GitLogParser.parseLog : return r2
crystal.server.GitLogParser.parseLog : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.server.GitLogParser.parseLog : r4 = (java.lang.String) $r11
crystal.server.GitLogParser.parseLog : r4 = (java.lang.String) $r11 >>>>>>>> crystal.server.GitLogParser.parseLog : $r12 = <crystal.server.GitLogParser: org.apache.log4j.Logger _log>
crystal.server.GitLogParser.parseLog : $r12 = <crystal.server.GitLogParser: org.apache.log4j.Logger _log> >>>>>>>> crystal.server.GitLogParser.parseLog : $r13 = new java.lang.StringBuilder
crystal.server.GitLogParser.parseLog : $r13 = new java.lang.StringBuilder >>>>>>>> crystal.server.GitLogParser.parseLog : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
crystal.server.GitLogParser.parseLog : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.GitLogParser.parseLog : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nlog:\n")
crystal.server.GitLogParser.parseLog : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nlog:\n") >>>>>>>> crystal.server.GitLogParser.parseLog : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
crystal.server.GitLogParser.parseLog : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> crystal.server.GitLogParser.parseLog : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ncheck points:\n")
crystal.server.GitLogParser.parseLog : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ncheck points:\n") >>>>>>>> crystal.server.GitLogParser.parseLog : $r17 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4)
crystal.server.GitLogParser.parseLog : $r17 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> crystal.server.GitLogParser.parseLog : $r18 = (crystal.server.AbstractLogParser$Checkpoint) $r17
crystal.server.GitLogParser.parseLog : $r18 = (crystal.server.AbstractLogParser$Checkpoint) $r17 >>>>>>>> crystal.server.GitLogParser.parseLog : $r19 = virtualinvoke $r18.<crystal.server.AbstractLogParser$Checkpoint: java.lang.String toString()>()
crystal.server.GitLogParser.parseLog : $r19 = virtualinvoke $r18.<crystal.server.AbstractLogParser$Checkpoint: java.lang.String toString()>() >>>>>>>> crystal.server.GitLogParser.parseLog : $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
crystal.server.GitLogParser.parseLog : $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) >>>>>>>> crystal.server.GitLogParser.parseLog : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.GitLogParser.parseLog : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.GitLogParser.parseLog : virtualinvoke $r12.<org.apache.log4j.Logger: void info(java.lang.Object)>($r21)
crystal.server.GitLogParser.parseLog : virtualinvoke $r12.<org.apache.log4j.Logger: void info(java.lang.Object)>($r21) >>>>>>>> crystal.server.GitLogParser.parseLog : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
crystal.server.GitLogParser.parseLog : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.server.GitLogParser.parseLog : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
