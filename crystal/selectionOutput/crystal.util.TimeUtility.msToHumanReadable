crystal.util.TimeUtility.msToHumanReadable : $b3 = l0 cmp 1000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : if $b3 >= 0
crystal.util.TimeUtility.msToHumanReadable : if $b3 >= 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r0 = new java.lang.StringBuilder
crystal.util.TimeUtility.msToHumanReadable : if $b3 >= 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $b4 = l0 cmp 1000L
crystal.util.TimeUtility.msToHumanReadable : $b4 = l0 cmp 1000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : if $b4 < 0
crystal.util.TimeUtility.msToHumanReadable : if $b4 < 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $b5 = l0 cmp 60000L
crystal.util.TimeUtility.msToHumanReadable : if $b4 < 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $b6 = l0 cmp 60000L
crystal.util.TimeUtility.msToHumanReadable : $b6 = l0 cmp 60000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : if $b6 < 0
crystal.util.TimeUtility.msToHumanReadable : if $b6 < 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $b7 = l0 cmp 3600000L
crystal.util.TimeUtility.msToHumanReadable : if $b6 < 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $b11 = l0 cmp 3600000L
crystal.util.TimeUtility.msToHumanReadable : $b11 = l0 cmp 3600000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : if $b11 < 0
crystal.util.TimeUtility.msToHumanReadable : if $b11 < 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l12 = l0 / 1000L
crystal.util.TimeUtility.msToHumanReadable : if $b11 < 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : return ""
crystal.util.TimeUtility.msToHumanReadable : $l12 = l0 / 1000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l13 = $l12 / 60L
crystal.util.TimeUtility.msToHumanReadable : $l13 = $l12 / 60L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : l14 = $l13 / 60L
crystal.util.TimeUtility.msToHumanReadable : l14 = $l13 / 60L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l15 = l14 * 60000L
crystal.util.TimeUtility.msToHumanReadable : $l15 = l14 * 60000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l16 = $l15 * 60L
crystal.util.TimeUtility.msToHumanReadable : $l16 = $l15 * 60L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l17 = l0 - $l16
crystal.util.TimeUtility.msToHumanReadable : $l17 = l0 - $l16 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l18 = $l17 / 1000L
crystal.util.TimeUtility.msToHumanReadable : $l18 = $l17 / 1000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : l19 = $l18 / 60L
crystal.util.TimeUtility.msToHumanReadable : l19 = $l18 / 60L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $b20 = l14 cmp 1L
crystal.util.TimeUtility.msToHumanReadable : $b20 = l14 cmp 1L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : if $b20 <= 0
crystal.util.TimeUtility.msToHumanReadable : if $b20 <= 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r18 = new java.lang.StringBuilder
crystal.util.TimeUtility.msToHumanReadable : if $b20 <= 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r24 = new java.lang.StringBuilder
crystal.util.TimeUtility.msToHumanReadable : $r24 = new java.lang.StringBuilder >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l14)
crystal.util.TimeUtility.msToHumanReadable : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l14) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hour ")
crystal.util.TimeUtility.msToHumanReadable : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hour ") >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l19)
crystal.util.TimeUtility.msToHumanReadable : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l19) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min")
crystal.util.TimeUtility.msToHumanReadable : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min") >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.TimeUtility.msToHumanReadable : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : return $r29
crystal.util.TimeUtility.msToHumanReadable : $r18 = new java.lang.StringBuilder >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l14)
crystal.util.TimeUtility.msToHumanReadable : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l14) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hours ")
crystal.util.TimeUtility.msToHumanReadable : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hours ") >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l19)
crystal.util.TimeUtility.msToHumanReadable : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l19) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min")
crystal.util.TimeUtility.msToHumanReadable : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min") >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.TimeUtility.msToHumanReadable : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : return $r23
crystal.util.TimeUtility.msToHumanReadable : $b7 = l0 cmp 3600000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : if $b7 >= 0
crystal.util.TimeUtility.msToHumanReadable : if $b7 >= 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l8 = l0 / 1000L
crystal.util.TimeUtility.msToHumanReadable : if $b7 >= 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $b11 = l0 cmp 3600000L
crystal.util.TimeUtility.msToHumanReadable : $l8 = l0 / 1000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : l1 = $l8 / 60L
crystal.util.TimeUtility.msToHumanReadable : l1 = $l8 / 60L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l9 = l1 * 60000L
crystal.util.TimeUtility.msToHumanReadable : $l9 = l1 * 60000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $l10 = l0 - $l9
crystal.util.TimeUtility.msToHumanReadable : $l10 = l0 - $l9 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : l2 = $l10 / 1000L
crystal.util.TimeUtility.msToHumanReadable : l2 = $l10 / 1000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r12 = new java.lang.StringBuilder
crystal.util.TimeUtility.msToHumanReadable : $r12 = new java.lang.StringBuilder >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
crystal.util.TimeUtility.msToHumanReadable : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min ")
crystal.util.TimeUtility.msToHumanReadable : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min ") >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2)
crystal.util.TimeUtility.msToHumanReadable : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sec")
crystal.util.TimeUtility.msToHumanReadable : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sec") >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.TimeUtility.msToHumanReadable : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : return $r17
crystal.util.TimeUtility.msToHumanReadable : $b5 = l0 cmp 60000L >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : if $b5 >= 0
crystal.util.TimeUtility.msToHumanReadable : if $b5 >= 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r4 = new java.lang.StringBuilder
crystal.util.TimeUtility.msToHumanReadable : if $b5 >= 0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $b6 = l0 cmp 60000L
crystal.util.TimeUtility.msToHumanReadable : $r4 = new java.lang.StringBuilder >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r5 = new java.util.Formatter
crystal.util.TimeUtility.msToHumanReadable : $r5 = new java.util.Formatter >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r5.<java.util.Formatter: void <init>()>()
crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r5.<java.util.Formatter: void <init>()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r6 = newarray (java.lang.Object)[1]
crystal.util.TimeUtility.msToHumanReadable : $r6 = newarray (java.lang.Object)[1] >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $f0 = (float) l0
crystal.util.TimeUtility.msToHumanReadable : $f0 = (float) l0 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $f1 = $f0 / 1000.0F
crystal.util.TimeUtility.msToHumanReadable : $f1 = $f0 / 1000.0F >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1)
crystal.util.TimeUtility.msToHumanReadable : $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r6[0] = $r7
crystal.util.TimeUtility.msToHumanReadable : $r6[0] = $r7 >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r8 = virtualinvoke $r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%.2f", $r6)
crystal.util.TimeUtility.msToHumanReadable : $r8 = virtualinvoke $r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%.2f", $r6) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)
crystal.util.TimeUtility.msToHumanReadable : $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sec")
crystal.util.TimeUtility.msToHumanReadable : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sec") >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.TimeUtility.msToHumanReadable : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : return $r11
crystal.util.TimeUtility.msToHumanReadable : $r0 = new java.lang.StringBuilder >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
crystal.util.TimeUtility.msToHumanReadable : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
crystal.util.TimeUtility.msToHumanReadable : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms")
crystal.util.TimeUtility.msToHumanReadable : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms") >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.TimeUtility.msToHumanReadable : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.TimeUtility.msToHumanReadable : return $r3
