crystal.util.SpringLayoutUtility.formGridInColumn : if r0 == null >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r6 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>()
crystal.util.SpringLayoutUtility.formGridInColumn : if r0 == null >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r8 = new java.lang.IllegalArgumentException
crystal.util.SpringLayoutUtility.formGridInColumn : $r8 = new java.lang.IllegalArgumentException >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid input for panel.")
crystal.util.SpringLayoutUtility.formGridInColumn : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid input for panel.") >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : throw $r8
crystal.util.SpringLayoutUtility.formGridInColumn : $r6 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if $r7 == class "javax/swing/SpringLayout"
crystal.util.SpringLayoutUtility.formGridInColumn : if $r7 == class "javax/swing/SpringLayout" >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r8 = new java.lang.IllegalArgumentException
crystal.util.SpringLayoutUtility.formGridInColumn : if $r7 == class "javax/swing/SpringLayout" >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r9 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r9 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r1 = (javax.swing.SpringLayout) $r9
crystal.util.SpringLayoutUtility.formGridInColumn : r1 = (javax.swing.SpringLayout) $r9 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r2 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3)
crystal.util.SpringLayoutUtility.formGridInColumn : r2 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i2 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i2 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i2 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : if i2 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r3 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(0)
crystal.util.SpringLayoutUtility.formGridInColumn : if i2 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r14 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3)
crystal.util.SpringLayoutUtility.formGridInColumn : r14 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i5 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i5 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i5 >= i0
crystal.util.SpringLayoutUtility.formGridInColumn : if i5 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r15 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(0)
crystal.util.SpringLayoutUtility.formGridInColumn : if i5 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r20 = virtualinvoke r1.<javax.swing.SpringLayout: javax.swing.SpringLayout$Constraints getConstraints(java.awt.Component)>(r0)
crystal.util.SpringLayoutUtility.formGridInColumn : r20 = virtualinvoke r1.<javax.swing.SpringLayout: javax.swing.SpringLayout$Constraints getConstraints(java.awt.Component)>(r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r20.<javax.swing.SpringLayout$Constraints: void setConstraint(java.lang.String,javax.swing.Spring)>("South", r14)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r20.<javax.swing.SpringLayout$Constraints: void setConstraint(java.lang.String,javax.swing.Spring)>("South", r14) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r20.<javax.swing.SpringLayout$Constraints: void setConstraint(java.lang.String,javax.swing.Spring)>("East", r2)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r20.<javax.swing.SpringLayout$Constraints: void setConstraint(java.lang.String,javax.swing.Spring)>("East", r2) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : return
crystal.util.SpringLayoutUtility.formGridInColumn : r15 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i6 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i6 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i6 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : if i6 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r16 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i5, i6, i1, r0)
crystal.util.SpringLayoutUtility.formGridInColumn : if i6 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i7 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i7 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i7 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : if i7 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r5 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i5, i7, i1, r0)
crystal.util.SpringLayoutUtility.formGridInColumn : if i7 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r18 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3)
crystal.util.SpringLayoutUtility.formGridInColumn : $r18 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r19 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r15, $r18)
crystal.util.SpringLayoutUtility.formGridInColumn : $r19 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r15, $r18) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r14 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r14, $r19)
crystal.util.SpringLayoutUtility.formGridInColumn : r14 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r14, $r19) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i5 = i5 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i5 = i5 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)]
crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)] >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i5 >= i0
crystal.util.SpringLayoutUtility.formGridInColumn : r5 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i5, i7, i1, r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r5.<javax.swing.SpringLayout$Constraints: void setY(javax.swing.Spring)>(r14)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r5.<javax.swing.SpringLayout$Constraints: void setY(javax.swing.Spring)>(r14) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r5.<javax.swing.SpringLayout$Constraints: void setHeight(javax.swing.Spring)>(r15)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r5.<javax.swing.SpringLayout$Constraints: void setHeight(javax.swing.Spring)>(r15) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i7 = i7 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i7 = i7 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)]
crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)] >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i7 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : $r16 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i5, i6, i1, r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r17 = virtualinvoke $r16.<javax.swing.SpringLayout$Constraints: javax.swing.Spring getHeight()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r17 = virtualinvoke $r16.<javax.swing.SpringLayout$Constraints: javax.swing.Spring getHeight()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r15 = staticinvoke <javax.swing.Spring: javax.swing.Spring max(javax.swing.Spring,javax.swing.Spring)>(r15, $r17)
crystal.util.SpringLayoutUtility.formGridInColumn : r15 = staticinvoke <javax.swing.Spring: javax.swing.Spring max(javax.swing.Spring,javax.swing.Spring)>(r15, $r17) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i6 = i6 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i6 = i6 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)]
crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)] >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i6 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : r3 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i3 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i3 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i3 >= i0
crystal.util.SpringLayoutUtility.formGridInColumn : if i3 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r10 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i3, i2, i1, r0)
crystal.util.SpringLayoutUtility.formGridInColumn : if i3 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i4 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i4 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i4 >= i0
crystal.util.SpringLayoutUtility.formGridInColumn : if i4 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r4 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i4, i2, i1, r0)
crystal.util.SpringLayoutUtility.formGridInColumn : if i4 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r12 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3)
crystal.util.SpringLayoutUtility.formGridInColumn : $r12 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r13 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r3, $r12)
crystal.util.SpringLayoutUtility.formGridInColumn : $r13 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r3, $r12) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r2 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r2, $r13)
crystal.util.SpringLayoutUtility.formGridInColumn : r2 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r2, $r13) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i2 = i2 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i2 = i2 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)]
crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)] >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i2 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : r4 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i4, i2, i1, r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r4.<javax.swing.SpringLayout$Constraints: void setX(javax.swing.Spring)>(r2)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r4.<javax.swing.SpringLayout$Constraints: void setX(javax.swing.Spring)>(r2) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r4.<javax.swing.SpringLayout$Constraints: void setWidth(javax.swing.Spring)>(r3)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r4.<javax.swing.SpringLayout$Constraints: void setWidth(javax.swing.Spring)>(r3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i4 = i4 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i4 = i4 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)]
crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)] >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i4 >= i0
crystal.util.SpringLayoutUtility.formGridInColumn : $r10 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i3, i2, i1, r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r11 = virtualinvoke $r10.<javax.swing.SpringLayout$Constraints: javax.swing.Spring getWidth()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r11 = virtualinvoke $r10.<javax.swing.SpringLayout$Constraints: javax.swing.Spring getWidth()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r3 = staticinvoke <javax.swing.Spring: javax.swing.Spring max(javax.swing.Spring,javax.swing.Spring)>(r3, $r11)
crystal.util.SpringLayoutUtility.formGridInColumn : r3 = staticinvoke <javax.swing.Spring: javax.swing.Spring max(javax.swing.Spring,javax.swing.Spring)>(r3, $r11) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i3 = i3 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i3 = i3 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)]
crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)] >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i3 >= i0
