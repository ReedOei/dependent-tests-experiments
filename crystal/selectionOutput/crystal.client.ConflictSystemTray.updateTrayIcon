crystal.client.ConflictSystemTray.updateTrayIcon : $z0 = <crystal.client.ConflictSystemTray: boolean TRAY_SUPPORTED> >>>>>>>> crystal.client.ConflictSystemTray.updateTrayIcon : if $z0 != 0
crystal.client.ConflictSystemTray.updateTrayIcon : if $z0 != 0 >>>>>>>> crystal.client.ConflictSystemTray.updateTrayIcon : return
crystal.client.ConflictSystemTray.updateTrayIcon : if $z0 != 0 >>>>>>>> crystal.client.ConflictSystemTray.updateTrayIcon : $r2 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>()
crystal.client.ConflictSystemTray.updateTrayIcon : $r2 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>() >>>>>>>> crystal.client.ConflictSystemTray.updateTrayIcon : $r3 = virtualinvoke $r2.<crystal.client.ConflictDaemon: java.util.Collection getRelationships()>()
crystal.client.ConflictSystemTray.updateTrayIcon : $r3 = virtualinvoke $r2.<crystal.client.ConflictDaemon: java.util.Collection getRelationships()>() >>>>>>>> crystal.client.ConflictSystemTray.updateTrayIcon : r1 = staticinvoke <crystal.model.Relationship: java.awt.Image getDominant(java.util.Collection)>($r3)
crystal.client.ConflictSystemTray.updateTrayIcon : r1 = staticinvoke <crystal.model.Relationship: java.awt.Image getDominant(java.util.Collection)>($r3) >>>>>>>> crystal.client.ConflictSystemTray.updateTrayIcon : $r4 = r0.<crystal.client.ConflictSystemTray: java.awt.TrayIcon _trayIcon>
crystal.client.ConflictSystemTray.updateTrayIcon : $r4 = r0.<crystal.client.ConflictSystemTray: java.awt.TrayIcon _trayIcon> >>>>>>>> crystal.client.ConflictSystemTray.updateTrayIcon : virtualinvoke $r4.<java.awt.TrayIcon: void setImage(java.awt.Image)>(r1)
crystal.client.ConflictSystemTray.updateTrayIcon : virtualinvoke $r4.<java.awt.TrayIcon: void setImage(java.awt.Image)>(r1) >>>>>>>> crystal.client.ConflictSystemTray.updateTrayIcon : return
