crystal.server.GuidanceChecker.getWhen : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r3) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r5 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r5 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r4 = <crystal.model.Relationship: java.lang.String SAME>
crystal.server.GuidanceChecker.getWhen : $r4 = <crystal.model.Relationship: java.lang.String SAME> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
crystal.server.GuidanceChecker.getWhen : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z0 != 0
crystal.server.GuidanceChecker.getWhen : if $z0 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r6 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : if $z0 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r14 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r14 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r14
crystal.server.GuidanceChecker.getWhen : $r6 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r7 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.GuidanceChecker.getWhen : $r7 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)
crystal.server.GuidanceChecker.getWhen : $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z1 != 0
crystal.server.GuidanceChecker.getWhen : if $z1 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r8 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : if $z1 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r14 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r8 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r9 = <crystal.model.Relationship: java.lang.String MERGECONFLICT>
crystal.server.GuidanceChecker.getWhen : $r9 = <crystal.model.Relationship: java.lang.String MERGECONFLICT> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9)
crystal.server.GuidanceChecker.getWhen : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z2 != 0
crystal.server.GuidanceChecker.getWhen : if $z2 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r10 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : if $z2 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r14 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r10 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r11 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT>
crystal.server.GuidanceChecker.getWhen : $r11 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11)
crystal.server.GuidanceChecker.getWhen : $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z3 != 0
crystal.server.GuidanceChecker.getWhen : if $z3 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r12 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : if $z3 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r14 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r12 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r13 = <crystal.model.Relationship: java.lang.String TESTCONFLICT>
crystal.server.GuidanceChecker.getWhen : $r13 = <crystal.model.Relationship: java.lang.String TESTCONFLICT> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13)
crystal.server.GuidanceChecker.getWhen : $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z4 == 0
crystal.server.GuidanceChecker.getWhen : if $z4 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r14 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : if $z4 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r15 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r15 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r16 = <crystal.model.Relationship: java.lang.String BEHIND>
crystal.server.GuidanceChecker.getWhen : $r16 = <crystal.model.Relationship: java.lang.String BEHIND> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16)
crystal.server.GuidanceChecker.getWhen : $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z5 == 0
crystal.server.GuidanceChecker.getWhen : if $z5 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r17 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0)
crystal.server.GuidanceChecker.getWhen : if $z5 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r21 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r21 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r22 = <crystal.model.Relationship: java.lang.String AHEAD>
crystal.server.GuidanceChecker.getWhen : $r22 = <crystal.model.Relationship: java.lang.String AHEAD> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z7 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22)
crystal.server.GuidanceChecker.getWhen : $z7 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z7 == 0
crystal.server.GuidanceChecker.getWhen : if $z7 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r23 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r2)
crystal.server.GuidanceChecker.getWhen : if $z7 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r26 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r26 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r26
crystal.server.GuidanceChecker.getWhen : $r23 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r2) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z8 = interfaceinvoke $r23.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getWhen : $z8 = interfaceinvoke $r23.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z8 != 0
crystal.server.GuidanceChecker.getWhen : if $z8 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r24 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW>
crystal.server.GuidanceChecker.getWhen : if $z8 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r25 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When LATER>
crystal.server.GuidanceChecker.getWhen : $r25 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When LATER> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r25
crystal.server.GuidanceChecker.getWhen : $r24 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r24
crystal.server.GuidanceChecker.getWhen : $r17 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r18 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r1, $r17)
crystal.server.GuidanceChecker.getWhen : $r18 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r1, $r17) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z6 = interfaceinvoke $r18.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getWhen : $z6 = interfaceinvoke $r18.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z6 != 0
crystal.server.GuidanceChecker.getWhen : if $z6 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r19 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW>
crystal.server.GuidanceChecker.getWhen : if $z6 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r20 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When LATER>
crystal.server.GuidanceChecker.getWhen : $r20 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When LATER> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r20
crystal.server.GuidanceChecker.getWhen : $r19 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r19
