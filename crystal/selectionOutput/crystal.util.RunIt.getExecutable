crystal.util.RunIt.getExecutable : if r0 != null >>>>>>>> crystal.util.RunIt.getExecutable : return null
crystal.util.RunIt.getExecutable : if r0 != null >>>>>>>> crystal.util.RunIt.getExecutable : $r8 = new java.io.File
crystal.util.RunIt.getExecutable : $r8 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r0)
crystal.util.RunIt.getExecutable : specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.util.RunIt.getExecutable : $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z0 == 0
crystal.util.RunIt.getExecutable : if $z0 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : return r0
crystal.util.RunIt.getExecutable : if $z0 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r9 = new java.util.StringTokenizer
crystal.util.RunIt.getExecutable : $r9 = new java.util.StringTokenizer >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0)
crystal.util.RunIt.getExecutable : specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.util.RunIt.getExecutable : r1 = $r9
crystal.util.RunIt.getExecutable : r1 = $r9 >>>>>>>> crystal.util.RunIt.getExecutable : $z1 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.util.RunIt.getExecutable : $z1 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z1 != 0
crystal.util.RunIt.getExecutable : if $z1 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : return null
crystal.util.RunIt.getExecutable : if $z1 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : r2 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.util.RunIt.getExecutable : r2 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.util.RunIt.getExecutable : r3 = ""
crystal.util.RunIt.getExecutable : r3 = "" >>>>>>>> crystal.util.RunIt.getExecutable : $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.util.RunIt.getExecutable : $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z2 == 0
crystal.util.RunIt.getExecutable : if $z2 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r10 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : if $z2 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r15 = new java.io.File
crystal.util.RunIt.getExecutable : $r15 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $z3 = virtualinvoke $r15.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z3 = virtualinvoke $r15.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z3 == 0
crystal.util.RunIt.getExecutable : if $z3 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : return r0
crystal.util.RunIt.getExecutable : if $z3 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("PATH")
crystal.util.RunIt.getExecutable : r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("PATH") >>>>>>>> crystal.util.RunIt.getExecutable : $r16 = new java.util.StringTokenizer
crystal.util.RunIt.getExecutable : $r16 = new java.util.StringTokenizer >>>>>>>> crystal.util.RunIt.getExecutable : $r5 = <java.io.File: java.lang.String pathSeparator>
crystal.util.RunIt.getExecutable : $r5 = <java.io.File: java.lang.String pathSeparator> >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r16.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r4, $r5)
crystal.util.RunIt.getExecutable : specialinvoke $r16.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r4, $r5) >>>>>>>> crystal.util.RunIt.getExecutable : r6 = $r16
crystal.util.RunIt.getExecutable : r6 = $r16 >>>>>>>> crystal.util.RunIt.getExecutable : $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.util.RunIt.getExecutable : $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z4 == 0
crystal.util.RunIt.getExecutable : if $z4 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : r7 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.util.RunIt.getExecutable : if $z4 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : return null
crystal.util.RunIt.getExecutable : r7 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r17 = new java.io.File
crystal.util.RunIt.getExecutable : $r17 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : $r18 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r18 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r20 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r20 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
crystal.util.RunIt.getExecutable : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> crystal.util.RunIt.getExecutable : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r23)
crystal.util.RunIt.getExecutable : specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r23) >>>>>>>> crystal.util.RunIt.getExecutable : $z5 = virtualinvoke $r17.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z5 = virtualinvoke $r17.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z5 == 0
crystal.util.RunIt.getExecutable : if $z5 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r24 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : if $z5 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r33 = new java.io.File
crystal.util.RunIt.getExecutable : $r33 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : $r34 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r34 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r36 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r36 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
crystal.util.RunIt.getExecutable : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> crystal.util.RunIt.getExecutable : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe")
crystal.util.RunIt.getExecutable : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe") >>>>>>>> crystal.util.RunIt.getExecutable : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r33.<java.io.File: void <init>(java.lang.String)>($r40)
crystal.util.RunIt.getExecutable : specialinvoke $r33.<java.io.File: void <init>(java.lang.String)>($r40) >>>>>>>> crystal.util.RunIt.getExecutable : $z7 = virtualinvoke $r33.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z7 = virtualinvoke $r33.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z7 == 0
crystal.util.RunIt.getExecutable : if $z7 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r41 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : if $z7 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $z9 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>("cmd")
crystal.util.RunIt.getExecutable : $z9 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>("cmd") >>>>>>>> crystal.util.RunIt.getExecutable : if $z9 != 0
crystal.util.RunIt.getExecutable : if $z9 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r54 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : if $z9 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : r59 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cmd", "bin")
crystal.util.RunIt.getExecutable : r59 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cmd", "bin") >>>>>>>> crystal.util.RunIt.getExecutable : $r60 = new java.io.File
crystal.util.RunIt.getExecutable : $r60 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : $r61 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r61 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59)
crystal.util.RunIt.getExecutable : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59) >>>>>>>> crystal.util.RunIt.getExecutable : $r63 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r63 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63)
crystal.util.RunIt.getExecutable : $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63) >>>>>>>> crystal.util.RunIt.getExecutable : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe")
crystal.util.RunIt.getExecutable : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe") >>>>>>>> crystal.util.RunIt.getExecutable : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r60.<java.io.File: void <init>(java.lang.String)>($r67)
crystal.util.RunIt.getExecutable : specialinvoke $r60.<java.io.File: void <init>(java.lang.String)>($r67) >>>>>>>> crystal.util.RunIt.getExecutable : $z11 = virtualinvoke $r60.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z11 = virtualinvoke $r60.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z11 == 0
crystal.util.RunIt.getExecutable : if $z11 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r68 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : if $z11 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : goto [?= $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
crystal.util.RunIt.getExecutable : goto [?= $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>()] >>>>>>>> crystal.util.RunIt.getExecutable : $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.util.RunIt.getExecutable : $r68 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $z12 = virtualinvoke r59.<java.lang.String: boolean endsWith(java.lang.String)>($r68)
crystal.util.RunIt.getExecutable : $z12 = virtualinvoke r59.<java.lang.String: boolean endsWith(java.lang.String)>($r68) >>>>>>>> crystal.util.RunIt.getExecutable : if $z12 != 0
crystal.util.RunIt.getExecutable : if $z12 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r69 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : if $z12 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r73 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r73 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r73.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r73.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59)
crystal.util.RunIt.getExecutable : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59) >>>>>>>> crystal.util.RunIt.getExecutable : $r75 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r75 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75)
crystal.util.RunIt.getExecutable : $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75) >>>>>>>> crystal.util.RunIt.getExecutable : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe")
crystal.util.RunIt.getExecutable : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe") >>>>>>>> crystal.util.RunIt.getExecutable : $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
crystal.util.RunIt.getExecutable : $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> crystal.util.RunIt.getExecutable : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : return $r80
crystal.util.RunIt.getExecutable : $r69 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r69.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59)
crystal.util.RunIt.getExecutable : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59) >>>>>>>> crystal.util.RunIt.getExecutable : $r71 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r71 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71)
crystal.util.RunIt.getExecutable : $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71) >>>>>>>> crystal.util.RunIt.getExecutable : r59 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : r59 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r73 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r54 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd")
crystal.util.RunIt.getExecutable : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd") >>>>>>>> crystal.util.RunIt.getExecutable : $r56 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r56 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)
crystal.util.RunIt.getExecutable : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56) >>>>>>>> crystal.util.RunIt.getExecutable : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : $z10 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>($r58)
crystal.util.RunIt.getExecutable : $z10 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>($r58) >>>>>>>> crystal.util.RunIt.getExecutable : if $z10 == 0
crystal.util.RunIt.getExecutable : if $z10 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : r59 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cmd", "bin")
crystal.util.RunIt.getExecutable : if $z10 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : goto [?= $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
crystal.util.RunIt.getExecutable : $r41 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $z8 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>($r41)
crystal.util.RunIt.getExecutable : $z8 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>($r41) >>>>>>>> crystal.util.RunIt.getExecutable : if $z8 != 0
crystal.util.RunIt.getExecutable : if $z8 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r42 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : if $z8 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r46 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r46 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r48 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r48 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)
crystal.util.RunIt.getExecutable : $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48) >>>>>>>> crystal.util.RunIt.getExecutable : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe")
crystal.util.RunIt.getExecutable : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe") >>>>>>>> crystal.util.RunIt.getExecutable : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
crystal.util.RunIt.getExecutable : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> crystal.util.RunIt.getExecutable : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : return $r53
crystal.util.RunIt.getExecutable : $r42 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r44 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r44 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)
crystal.util.RunIt.getExecutable : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) >>>>>>>> crystal.util.RunIt.getExecutable : r7 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : r7 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r46 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r24 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $z6 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>($r24)
crystal.util.RunIt.getExecutable : $z6 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>($r24) >>>>>>>> crystal.util.RunIt.getExecutable : if $z6 != 0
crystal.util.RunIt.getExecutable : if $z6 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r25 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : if $z6 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r29 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r29 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.util.RunIt.getExecutable : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.util.RunIt.getExecutable : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : return $r32
crystal.util.RunIt.getExecutable : $r25 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r27 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r27 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)
crystal.util.RunIt.getExecutable : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27) >>>>>>>> crystal.util.RunIt.getExecutable : r7 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : r7 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r29 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r10 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
crystal.util.RunIt.getExecutable : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> crystal.util.RunIt.getExecutable : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.util.RunIt.getExecutable : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.util.RunIt.getExecutable : $r13 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.util.RunIt.getExecutable : $r13 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
crystal.util.RunIt.getExecutable : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> crystal.util.RunIt.getExecutable : r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : goto [?= $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
crystal.util.RunIt.getExecutable : goto [?= $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()] >>>>>>>> crystal.util.RunIt.getExecutable : $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()
