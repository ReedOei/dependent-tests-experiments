crystal.util.SetOperations.xor : $r2 = new java.util.HashSet >>>>>>>> crystal.util.SetOperations.xor : specialinvoke $r2.<java.util.HashSet: void <init>()>()
crystal.util.SetOperations.xor : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> crystal.util.SetOperations.xor : r3 = $r2
crystal.util.SetOperations.xor : r3 = $r2 >>>>>>>> crystal.util.SetOperations.xor : $r4 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r1)
crystal.util.SetOperations.xor : $r4 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r1) >>>>>>>> crystal.util.SetOperations.xor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r4)
crystal.util.SetOperations.xor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r4) >>>>>>>> crystal.util.SetOperations.xor : $r5 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r1, r0)
crystal.util.SetOperations.xor : $r5 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r1, r0) >>>>>>>> crystal.util.SetOperations.xor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5)
crystal.util.SetOperations.xor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5) >>>>>>>> crystal.util.SetOperations.xor : return r3
