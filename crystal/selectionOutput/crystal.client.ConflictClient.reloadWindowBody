crystal.client.ConflictClient.reloadWindowBody : r0.<crystal.client.ConflictClient: crystal.client.ClientPreferences _preferences> = r1 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r19 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame>
crystal.client.ConflictClient.reloadWindowBody : $r19 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame> >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r20 = virtualinvoke $r19.<javax.swing.JFrame: java.awt.Container getContentPane()>()
crystal.client.ConflictClient.reloadWindowBody : $r20 = virtualinvoke $r19.<javax.swing.JFrame: java.awt.Container getContentPane()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r20.<java.awt.Container: void removeAll()>()
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r20.<java.awt.Container: void removeAll()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r21 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame>
crystal.client.ConflictClient.reloadWindowBody : $r21 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame> >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r22 = virtualinvoke $r21.<javax.swing.JFrame: java.awt.Container getContentPane()>()
crystal.client.ConflictClient.reloadWindowBody : $r22 = virtualinvoke $r21.<javax.swing.JFrame: java.awt.Container getContentPane()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r23 = new javax.swing.BoxLayout
crystal.client.ConflictClient.reloadWindowBody : $r23 = new javax.swing.BoxLayout >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r24 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame>
crystal.client.ConflictClient.reloadWindowBody : $r24 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame> >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r25 = virtualinvoke $r24.<javax.swing.JFrame: java.awt.Container getContentPane()>()
crystal.client.ConflictClient.reloadWindowBody : $r25 = virtualinvoke $r24.<javax.swing.JFrame: java.awt.Container getContentPane()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r23.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>($r25, 1)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r23.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>($r25, 1) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r22.<java.awt.Container: void setLayout(java.awt.LayoutManager)>($r23)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r22.<java.awt.Container: void setLayout(java.awt.LayoutManager)>($r23) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : i0 = 0
crystal.client.ConflictClient.reloadWindowBody : i0 = 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r26 = virtualinvoke r1.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>()
crystal.client.ConflictClient.reloadWindowBody : $r26 = virtualinvoke r1.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r2 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictClient.reloadWindowBody : r2 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.reloadWindowBody : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : if $z0 == 0
crystal.client.ConflictClient.reloadWindowBody : if $z0 == 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r27 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictClient.reloadWindowBody : if $z0 == 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r28 = new javax.swing.JPanel
crystal.client.ConflictClient.reloadWindowBody : $r28 = new javax.swing.JPanel >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r29 = new javax.swing.SpringLayout
crystal.client.ConflictClient.reloadWindowBody : $r29 = new javax.swing.SpringLayout >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r29.<javax.swing.SpringLayout: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r29.<javax.swing.SpringLayout: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r28.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r29)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r28.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r29) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r30 = $r28
crystal.client.ConflictClient.reloadWindowBody : r30 = $r28 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r31 = new java.util.HashMap
crystal.client.ConflictClient.reloadWindowBody : $r31 = new java.util.HashMap >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r31.<java.util.HashMap: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r31.<java.util.HashMap: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap> = $r31
crystal.client.ConflictClient.reloadWindowBody : r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap> = $r31 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r32 = virtualinvoke r1.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>()
crystal.client.ConflictClient.reloadWindowBody : $r32 = virtualinvoke r1.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r33 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictClient.reloadWindowBody : r33 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $z1 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.reloadWindowBody : $z1 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : if $z1 == 0
crystal.client.ConflictClient.reloadWindowBody : if $z1 == 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictClient.reloadWindowBody : if $z1 == 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r98 = virtualinvoke r1.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>()
crystal.client.ConflictClient.reloadWindowBody : $r98 = virtualinvoke r1.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $i4 = interfaceinvoke $r98.<java.util.Collection: int size()>()
crystal.client.ConflictClient.reloadWindowBody : $i4 = interfaceinvoke $r98.<java.util.Collection: int size()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : staticinvoke <crystal.util.SpringLayoutUtility: void formGridInColumn(javax.swing.JPanel,int,int)>(r30, $i4, 1)
crystal.client.ConflictClient.reloadWindowBody : staticinvoke <crystal.util.SpringLayoutUtility: void formGridInColumn(javax.swing.JPanel,int,int)>(r30, $i4, 1) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r99 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame>
crystal.client.ConflictClient.reloadWindowBody : $r99 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame> >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r100 = virtualinvoke $r99.<javax.swing.JFrame: java.awt.Container getContentPane()>()
crystal.client.ConflictClient.reloadWindowBody : $r100 = virtualinvoke $r99.<javax.swing.JFrame: java.awt.Container getContentPane()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r100.<java.awt.Container: java.awt.Component add(java.awt.Component)>(r30)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r100.<java.awt.Container: java.awt.Component add(java.awt.Component)>(r30) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : return
crystal.client.ConflictClient.reloadWindowBody : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r4 = (crystal.client.ProjectPreferences) $r34
crystal.client.ConflictClient.reloadWindowBody : r4 = (crystal.client.ProjectPreferences) $r34 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r35 = new javax.swing.JPanel
crystal.client.ConflictClient.reloadWindowBody : $r35 = new javax.swing.JPanel >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r36 = new javax.swing.SpringLayout
crystal.client.ConflictClient.reloadWindowBody : $r36 = new javax.swing.SpringLayout >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r36.<javax.swing.SpringLayout: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r36.<javax.swing.SpringLayout: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r35.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r36)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r35.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r36) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r5 = $r35
crystal.client.ConflictClient.reloadWindowBody : r5 = $r35 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r37 = new javax.swing.JPanel
crystal.client.ConflictClient.reloadWindowBody : $r37 = new javax.swing.JPanel >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r37.<javax.swing.JPanel: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r37.<javax.swing.JPanel: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r6 = $r37
crystal.client.ConflictClient.reloadWindowBody : r6 = $r37 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r38 = new javax.swing.BoxLayout
crystal.client.ConflictClient.reloadWindowBody : $r38 = new javax.swing.BoxLayout >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r38.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>(r6, 1)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r38.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>(r6, 1) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r6.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r38)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r6.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r38) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r39 = new javax.swing.JLabel
crystal.client.ConflictClient.reloadWindowBody : $r39 = new javax.swing.JLabel >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r40 = new java.lang.StringBuilder
crystal.client.ConflictClient.reloadWindowBody : $r40 = new java.lang.StringBuilder >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r41 = virtualinvoke r4.<crystal.client.ProjectPreferences: java.lang.String getName()>()
crystal.client.ConflictClient.reloadWindowBody : $r41 = virtualinvoke r4.<crystal.client.ProjectPreferences: java.lang.String getName()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
crystal.client.ConflictClient.reloadWindowBody : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.client.ConflictClient.reloadWindowBody : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ConflictClient.reloadWindowBody : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r39.<javax.swing.JLabel: void <init>(java.lang.String)>($r44)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r39.<javax.swing.JLabel: void <init>(java.lang.String)>($r44) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r7 = $r39
crystal.client.ConflictClient.reloadWindowBody : r7 = $r39 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r45 = new javax.swing.JPopupMenu
crystal.client.ConflictClient.reloadWindowBody : $r45 = new javax.swing.JPopupMenu >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r45.<javax.swing.JPopupMenu: void <init>(java.lang.String)>("Project menu")
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r45.<javax.swing.JPopupMenu: void <init>(java.lang.String)>("Project menu") >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r8 = $r45
crystal.client.ConflictClient.reloadWindowBody : r8 = $r45 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r46 = specialinvoke r0.<crystal.client.ConflictClient: javax.swing.JMenuItem getClearCacheItem(crystal.client.ProjectPreferences)>(r4)
crystal.client.ConflictClient.reloadWindowBody : $r46 = specialinvoke r0.<crystal.client.ConflictClient: javax.swing.JMenuItem getClearCacheItem(crystal.client.ProjectPreferences)>(r4) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r8.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r46)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r8.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r46) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r48 = specialinvoke r0.<crystal.client.ConflictClient: javax.swing.JMenuItem getAddRepoItem(crystal.client.ProjectPreferences,crystal.client.ClientPreferences)>(r4, r1)
crystal.client.ConflictClient.reloadWindowBody : $r48 = specialinvoke r0.<crystal.client.ConflictClient: javax.swing.JMenuItem getAddRepoItem(crystal.client.ProjectPreferences,crystal.client.ClientPreferences)>(r4, r1) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r8.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r48)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r8.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r48) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r50 = new crystal.client.ConflictClient$8
crystal.client.ConflictClient.reloadWindowBody : $r50 = new crystal.client.ConflictClient$8 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r50.<crystal.client.ConflictClient$8: void <init>(crystal.client.ConflictClient,javax.swing.JPopupMenu)>(r0, r8)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r50.<crystal.client.ConflictClient$8: void <init>(crystal.client.ConflictClient,javax.swing.JPopupMenu)>(r0, r8) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r7.<javax.swing.JLabel: void addMouseListener(java.awt.event.MouseListener)>($r50)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r7.<javax.swing.JLabel: void addMouseListener(java.awt.event.MouseListener)>($r50) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r7)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r7) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r52 = new javax.swing.JLabel
crystal.client.ConflictClient.reloadWindowBody : $r52 = new javax.swing.JLabel >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r52.<javax.swing.JLabel: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r52.<javax.swing.JLabel: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r9 = $r52
crystal.client.ConflictClient.reloadWindowBody : r9 = $r52 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r53 = new java.awt.Font
crystal.client.ConflictClient.reloadWindowBody : $r53 = new java.awt.Font >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r53.<java.awt.Font: void <init>(java.lang.String,int,int)>("Monospaced", 0, 15)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r53.<java.awt.Font: void <init>(java.lang.String,int,int)>("Monospaced", 0, 15) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r9.<javax.swing.JLabel: void setFont(java.awt.Font)>($r53)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r9.<javax.swing.JLabel: void setFont(java.awt.Font)>($r53) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r54 = r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap>
crystal.client.ConflictClient.reloadWindowBody : $r54 = r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap> >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r55 = virtualinvoke r4.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ConflictClient.reloadWindowBody : $r55 = virtualinvoke r4.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, r9)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, r9) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r57 = new java.lang.String
crystal.client.ConflictClient.reloadWindowBody : $r57 = new java.lang.String >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r58 = "git commit"
crystal.client.ConflictClient.reloadWindowBody : $r58 = "git commit" >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $i2 = virtualinvoke $r58.<java.lang.String: int length()>()
crystal.client.ConflictClient.reloadWindowBody : $i2 = virtualinvoke $r58.<java.lang.String: int length()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r59 = newarray (char)[$i2]
crystal.client.ConflictClient.reloadWindowBody : $r59 = newarray (char)[$i2] >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r57.<java.lang.String: void <init>(char[])>($r59)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r57.<java.lang.String: void <init>(char[])>($r59) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r60 = virtualinvoke $r57.<java.lang.String: java.lang.String replace(char,char)>(0, 32)
crystal.client.ConflictClient.reloadWindowBody : $r60 = virtualinvoke $r57.<java.lang.String: java.lang.String replace(char,char)>(0, 32) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r9.<javax.swing.JLabel: void setText(java.lang.String)>($r60)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r9.<javax.swing.JLabel: void setText(java.lang.String)>($r60) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r61 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>()
crystal.client.ConflictClient.reloadWindowBody : $r61 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r62 = virtualinvoke r4.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ConflictClient.reloadWindowBody : $r62 = virtualinvoke r4.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r61.<crystal.client.ConflictDaemon: crystal.model.LocalStateResult getLocalState(crystal.model.DataSource)>($r62)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r61.<crystal.client.ConflictDaemon: crystal.model.LocalStateResult getLocalState(crystal.model.DataSource)>($r62) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r9)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r9) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r5.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r6)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r5.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r6) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r66 = new javax.swing.JPanel
crystal.client.ConflictClient.reloadWindowBody : $r66 = new javax.swing.JPanel >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r67 = new java.awt.BorderLayout
crystal.client.ConflictClient.reloadWindowBody : $r67 = new java.awt.BorderLayout >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r67.<java.awt.BorderLayout: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r67.<java.awt.BorderLayout: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r66.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r67)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r66.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r67) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r10 = $r66
crystal.client.ConflictClient.reloadWindowBody : r10 = $r66 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r68 = new javax.swing.JPanel
crystal.client.ConflictClient.reloadWindowBody : $r68 = new javax.swing.JPanel >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r69 = new java.awt.GridLayout
crystal.client.ConflictClient.reloadWindowBody : $r69 = new java.awt.GridLayout >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r69.<java.awt.GridLayout: void <init>(int,int,int,int)>(1, 0, 3, 3)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r69.<java.awt.GridLayout: void <init>(int,int,int,int)>(1, 0, 3, 3) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r68.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r69)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r68.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r69) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r11 = $r68
crystal.client.ConflictClient.reloadWindowBody : r11 = $r68 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r10.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>(r11, "North")
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r10.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>(r11, "North") >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r70 = virtualinvoke r4.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()
crystal.client.ConflictClient.reloadWindowBody : $r70 = virtualinvoke r4.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r12 = interfaceinvoke $r70.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictClient.reloadWindowBody : r12 = interfaceinvoke $r70.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.reloadWindowBody : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : if $z2 == 0
crystal.client.ConflictClient.reloadWindowBody : if $z2 == 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r71 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictClient.reloadWindowBody : if $z2 == 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : i3 = virtualinvoke r4.<crystal.client.ProjectPreferences: int getNumOfVisibleSources()>()
crystal.client.ConflictClient.reloadWindowBody : i3 = virtualinvoke r4.<crystal.client.ProjectPreferences: int getNumOfVisibleSources()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : if i3 >= i0
crystal.client.ConflictClient.reloadWindowBody : if i3 >= i0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r92 = new javax.swing.JLabel
crystal.client.ConflictClient.reloadWindowBody : if i3 >= i0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r5.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r10)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r5.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r10) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : staticinvoke <crystal.util.SpringLayoutUtility: void formGridInColumn(javax.swing.JPanel,int,int)>(r5, 1, 2)
crystal.client.ConflictClient.reloadWindowBody : staticinvoke <crystal.util.SpringLayoutUtility: void formGridInColumn(javax.swing.JPanel,int,int)>(r5, 1, 2) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r95 = <java.awt.Color: java.awt.Color black>
crystal.client.ConflictClient.reloadWindowBody : $r95 = <java.awt.Color: java.awt.Color black> >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r96 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r95)
crystal.client.ConflictClient.reloadWindowBody : $r96 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r95) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r5.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r96)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r5.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r96) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r30.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r5)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r30.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r5) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : goto [?= $z1 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictClient.reloadWindowBody : goto [?= $z1 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $z1 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.reloadWindowBody : $r92 = new javax.swing.JLabel >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r92.<javax.swing.JLabel: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r92.<javax.swing.JLabel: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r11.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r92)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r11.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r92) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : i3 = i3 + 1
crystal.client.ConflictClient.reloadWindowBody : i3 = i3 + 1 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : goto [?= (branch)]
crystal.client.ConflictClient.reloadWindowBody : goto [?= (branch)] >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : if i3 >= i0
crystal.client.ConflictClient.reloadWindowBody : $r71 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r13 = (crystal.model.DataSource) $r71
crystal.client.ConflictClient.reloadWindowBody : r13 = (crystal.model.DataSource) $r71 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $z3 = virtualinvoke r13.<crystal.model.DataSource: boolean isHidden()>()
crystal.client.ConflictClient.reloadWindowBody : $z3 = virtualinvoke r13.<crystal.model.DataSource: boolean isHidden()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : if $z3 != 0
crystal.client.ConflictClient.reloadWindowBody : if $z3 != 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r72 = new javax.swing.ImageIcon
crystal.client.ConflictClient.reloadWindowBody : if $z3 != 0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : goto [?= $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictClient.reloadWindowBody : goto [?= $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.reloadWindowBody : $r72 = new javax.swing.ImageIcon >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r72.<javax.swing.ImageIcon: void <init>()>()
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r72.<javax.swing.ImageIcon: void <init>()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r14 = $r72
crystal.client.ConflictClient.reloadWindowBody : r14 = $r72 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r73 = new crystal.client.ConflictClient$9
crystal.client.ConflictClient.reloadWindowBody : $r73 = new crystal.client.ConflictClient$9 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r74 = virtualinvoke r13.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ConflictClient.reloadWindowBody : $r74 = virtualinvoke r13.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r73.<crystal.client.ConflictClient$9: void <init>(crystal.client.ConflictClient,java.lang.String,javax.swing.Icon,int)>(r0, $r74, r14, 0)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r73.<crystal.client.ConflictClient$9: void <init>(crystal.client.ConflictClient,java.lang.String,javax.swing.Icon,int)>(r0, $r74, r14, 0) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r15 = $r73
crystal.client.ConflictClient.reloadWindowBody : r15 = $r73 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r75 = new javax.swing.JPopupMenu
crystal.client.ConflictClient.reloadWindowBody : $r75 = new javax.swing.JPopupMenu >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r75.<javax.swing.JPopupMenu: void <init>(java.lang.String)>("Repository")
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r75.<javax.swing.JPopupMenu: void <init>(java.lang.String)>("Repository") >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r16 = $r75
crystal.client.ConflictClient.reloadWindowBody : r16 = $r75 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r76 = new javax.swing.JMenuItem
crystal.client.ConflictClient.reloadWindowBody : $r76 = new javax.swing.JMenuItem >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r76.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Delete this repository")
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r76.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Delete this repository") >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r17 = $r76
crystal.client.ConflictClient.reloadWindowBody : r17 = $r76 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r77 = new crystal.client.ConflictClient$10
crystal.client.ConflictClient.reloadWindowBody : $r77 = new crystal.client.ConflictClient$10 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r77.<crystal.client.ConflictClient$10: void <init>(crystal.client.ConflictClient,crystal.model.DataSource,crystal.client.ProjectPreferences,javax.swing.JPanel,javax.swing.JLabel,crystal.client.ClientPreferences)>(r0, r13, r4, r11, r15, r1)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r77.<crystal.client.ConflictClient$10: void <init>(crystal.client.ConflictClient,crystal.model.DataSource,crystal.client.ProjectPreferences,javax.swing.JPanel,javax.swing.JLabel,crystal.client.ClientPreferences)>(r0, r13, r4, r11, r15, r1) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r17.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r77)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r17.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r77) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r78 = new javax.swing.JMenuItem
crystal.client.ConflictClient.reloadWindowBody : $r78 = new javax.swing.JMenuItem >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r78.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Edit Repository")
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r78.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Edit Repository") >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r18 = $r78
crystal.client.ConflictClient.reloadWindowBody : r18 = $r78 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r79 = new crystal.client.ConflictClient$11
crystal.client.ConflictClient.reloadWindowBody : $r79 = new crystal.client.ConflictClient$11 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r79.<crystal.client.ConflictClient$11: void <init>(crystal.client.ConflictClient,crystal.client.ClientPreferences,crystal.client.ProjectPreferences,crystal.model.DataSource)>(r0, r1, r4, r13)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r79.<crystal.client.ConflictClient$11: void <init>(crystal.client.ConflictClient,crystal.client.ClientPreferences,crystal.client.ProjectPreferences,crystal.model.DataSource)>(r0, r1, r4, r13) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r18.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r79)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r18.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r79) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r80 = specialinvoke r0.<crystal.client.ConflictClient: javax.swing.JMenuItem getAddRepoItem(crystal.client.ProjectPreferences,crystal.client.ClientPreferences)>(r4, r1)
crystal.client.ConflictClient.reloadWindowBody : $r80 = specialinvoke r0.<crystal.client.ConflictClient: javax.swing.JMenuItem getAddRepoItem(crystal.client.ProjectPreferences,crystal.client.ClientPreferences)>(r4, r1) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r80)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r80) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r82 = specialinvoke r0.<crystal.client.ConflictClient: javax.swing.JMenuItem getClearCacheItem(crystal.client.ProjectPreferences)>(r4)
crystal.client.ConflictClient.reloadWindowBody : $r82 = specialinvoke r0.<crystal.client.ConflictClient: javax.swing.JMenuItem getClearCacheItem(crystal.client.ProjectPreferences)>(r4) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r82)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r82) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r18)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r18) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r17)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r17) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r86 = new crystal.client.ConflictClient$12
crystal.client.ConflictClient.reloadWindowBody : $r86 = new crystal.client.ConflictClient$12 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r86.<crystal.client.ConflictClient$12: void <init>(crystal.client.ConflictClient,javax.swing.JPopupMenu)>(r0, r16)
crystal.client.ConflictClient.reloadWindowBody : specialinvoke $r86.<crystal.client.ConflictClient$12: void <init>(crystal.client.ConflictClient,javax.swing.JPopupMenu)>(r0, r16) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r15.<javax.swing.JLabel: void addMouseListener(java.awt.event.MouseListener)>($r86)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r15.<javax.swing.JLabel: void addMouseListener(java.awt.event.MouseListener)>($r86) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r87 = r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap>
crystal.client.ConflictClient.reloadWindowBody : $r87 = r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap> >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r87.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r15)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r87.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r15) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $r89 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>()
crystal.client.ConflictClient.reloadWindowBody : $r89 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r89.<crystal.client.ConflictDaemon: crystal.model.Relationship getRelationship(crystal.model.DataSource)>(r13)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke $r89.<crystal.client.ConflictDaemon: crystal.model.Relationship getRelationship(crystal.model.DataSource)>(r13) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r15.<javax.swing.JLabel: void setVerticalTextPosition(int)>(1)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r15.<javax.swing.JLabel: void setVerticalTextPosition(int)>(1) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r15.<javax.swing.JLabel: void setHorizontalTextPosition(int)>(0)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r15.<javax.swing.JLabel: void setHorizontalTextPosition(int)>(0) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r11.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r15)
crystal.client.ConflictClient.reloadWindowBody : virtualinvoke r11.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r15) >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : goto [?= $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictClient.reloadWindowBody : $r27 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : r3 = (crystal.client.ProjectPreferences) $r27
crystal.client.ConflictClient.reloadWindowBody : r3 = (crystal.client.ProjectPreferences) $r27 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $i1 = virtualinvoke r3.<crystal.client.ProjectPreferences: int getNumOfVisibleSources()>()
crystal.client.ConflictClient.reloadWindowBody : $i1 = virtualinvoke r3.<crystal.client.ProjectPreferences: int getNumOfVisibleSources()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : if $i1 <= i0
crystal.client.ConflictClient.reloadWindowBody : if $i1 <= i0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : i0 = virtualinvoke r3.<crystal.client.ProjectPreferences: int getNumOfVisibleSources()>()
crystal.client.ConflictClient.reloadWindowBody : if $i1 <= i0 >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictClient.reloadWindowBody : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.reloadWindowBody : i0 = virtualinvoke r3.<crystal.client.ProjectPreferences: int getNumOfVisibleSources()>() >>>>>>>> crystal.client.ConflictClient.reloadWindowBody : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
