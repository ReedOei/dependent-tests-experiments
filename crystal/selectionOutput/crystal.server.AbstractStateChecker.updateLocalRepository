crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3)
crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r8 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.updateLocalRepository : $r8 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.server.AbstractStateChecker.updateLocalRepository : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pull -u ")
crystal.server.AbstractStateChecker.updateLocalRepository : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pull -u ") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.server.AbstractStateChecker.updateLocalRepository : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r12 = new java.util.ArrayList
crystal.server.AbstractStateChecker.updateLocalRepository : $r12 = new java.util.ArrayList >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : r6 = $r12
crystal.server.AbstractStateChecker.updateLocalRepository : r6 = $r12 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("pull")
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("pull") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-u")
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-u") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2)
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if r4 == null
crystal.server.AbstractStateChecker.updateLocalRepository : if r4 == null >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("--remotecmd")
crystal.server.AbstractStateChecker.updateLocalRepository : if r4 == null >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r17 = newarray (java.lang.String)[0]
crystal.server.AbstractStateChecker.updateLocalRepository : $r17 = newarray (java.lang.String)[0] >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17)
crystal.server.AbstractStateChecker.updateLocalRepository : $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r19 = (java.lang.String[]) $r18
crystal.server.AbstractStateChecker.updateLocalRepository : $r19 = (java.lang.String[]) $r18 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : r7 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r0, $r19, r1, 0)
crystal.server.AbstractStateChecker.updateLocalRepository : r7 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r0, $r19, r1, 0) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $z5 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("git")
crystal.server.AbstractStateChecker.updateLocalRepository : $z5 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("git") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $z5 == 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $z5 == 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r20 = <crystal.server.AbstractStateChecker: org.apache.log4j.Logger _log>
crystal.server.AbstractStateChecker.updateLocalRepository : if $z5 == 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("hg")
crystal.server.AbstractStateChecker.updateLocalRepository : $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("hg") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $z6 == 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $z6 == 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r39 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.updateLocalRepository : if $z6 == 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $z7 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("git")
crystal.server.AbstractStateChecker.updateLocalRepository : $z7 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("git") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $z7 == 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $z7 == 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r43 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.updateLocalRepository : if $z7 == 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : return
crystal.server.AbstractStateChecker.updateLocalRepository : $r43 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $i3 = virtualinvoke $r43.<java.lang.String: int indexOf(java.lang.String)>("Fast-forward")
crystal.server.AbstractStateChecker.updateLocalRepository : $i3 = virtualinvoke $r43.<java.lang.String: int indexOf(java.lang.String)>("Fast-forward") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $i3 >= 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $i3 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r44 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.updateLocalRepository : if $i3 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : return
crystal.server.AbstractStateChecker.updateLocalRepository : $r44 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $i4 = virtualinvoke $r44.<java.lang.String: int indexOf(java.lang.String)>("Already up-to-date.")
crystal.server.AbstractStateChecker.updateLocalRepository : $i4 = virtualinvoke $r44.<java.lang.String: int indexOf(java.lang.String)>("Already up-to-date.") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $i4 >= 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $i4 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r45 = new crystal.server.AbstractStateChecker$OperationException
crystal.server.AbstractStateChecker.updateLocalRepository : if $i4 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : return
crystal.server.AbstractStateChecker.updateLocalRepository : $r45 = new crystal.server.AbstractStateChecker$OperationException >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r46 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r46 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r45.<crystal.server.AbstractStateChecker$OperationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r5, r1, $r46)
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r45.<crystal.server.AbstractStateChecker$OperationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r5, r1, $r46) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : throw $r45
crystal.server.AbstractStateChecker.updateLocalRepository : $r39 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $i1 = virtualinvoke $r39.<java.lang.String: int indexOf(java.lang.String)>("files updated")
crystal.server.AbstractStateChecker.updateLocalRepository : $i1 = virtualinvoke $r39.<java.lang.String: int indexOf(java.lang.String)>("files updated") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $i1 >= 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $i1 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r40 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.updateLocalRepository : if $i1 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $z7 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("git")
crystal.server.AbstractStateChecker.updateLocalRepository : $r40 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $i2 = virtualinvoke $r40.<java.lang.String: int indexOf(java.lang.String)>("no changes found")
crystal.server.AbstractStateChecker.updateLocalRepository : $i2 = virtualinvoke $r40.<java.lang.String: int indexOf(java.lang.String)>("no changes found") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $i2 >= 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $i2 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r41 = new crystal.server.AbstractStateChecker$OperationException
crystal.server.AbstractStateChecker.updateLocalRepository : if $i2 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $z7 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("git")
crystal.server.AbstractStateChecker.updateLocalRepository : $r41 = new crystal.server.AbstractStateChecker$OperationException >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r42 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r42 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r41.<crystal.server.AbstractStateChecker$OperationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r5, r1, $r42)
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r41.<crystal.server.AbstractStateChecker$OperationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r5, r1, $r42) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : throw $r41
crystal.server.AbstractStateChecker.updateLocalRepository : $r20 = <crystal.server.AbstractStateChecker: org.apache.log4j.Logger _log> >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : virtualinvoke $r20.<org.apache.log4j.Logger: void info(java.lang.Object)>("update local repository")
crystal.server.AbstractStateChecker.updateLocalRepository : virtualinvoke $r20.<org.apache.log4j.Logger: void info(java.lang.Object)>("update local repository") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r21 = <crystal.server.AbstractStateChecker: org.apache.log4j.Logger _log>
crystal.server.AbstractStateChecker.updateLocalRepository : $r21 = <crystal.server.AbstractStateChecker: org.apache.log4j.Logger _log> >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r22 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.updateLocalRepository : $r22 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("run command: ")
crystal.server.AbstractStateChecker.updateLocalRepository : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("run command: ") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.updateLocalRepository : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : virtualinvoke $r21.<org.apache.log4j.Logger: void info(java.lang.Object)>($r25)
crystal.server.AbstractStateChecker.updateLocalRepository : virtualinvoke $r21.<org.apache.log4j.Logger: void info(java.lang.Object)>($r25) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r26 = <crystal.server.AbstractStateChecker: org.apache.log4j.Logger _log>
crystal.server.AbstractStateChecker.updateLocalRepository : $r26 = <crystal.server.AbstractStateChecker: org.apache.log4j.Logger _log> >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r27 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.updateLocalRepository : $r27 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("output: \n")
crystal.server.AbstractStateChecker.updateLocalRepository : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("output: \n") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r29 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r29 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
crystal.server.AbstractStateChecker.updateLocalRepository : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : virtualinvoke $r26.<org.apache.log4j.Logger: void info(java.lang.Object)>($r31)
crystal.server.AbstractStateChecker.updateLocalRepository : virtualinvoke $r26.<org.apache.log4j.Logger: void info(java.lang.Object)>($r31) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r32 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getError()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r32 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getError()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $i0 = virtualinvoke $r32.<java.lang.String: int length()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $i0 = virtualinvoke $r32.<java.lang.String: int length()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $i0 <= 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $i0 <= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r33 = <crystal.server.AbstractStateChecker: org.apache.log4j.Logger _log>
crystal.server.AbstractStateChecker.updateLocalRepository : if $i0 <= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("hg")
crystal.server.AbstractStateChecker.updateLocalRepository : $r33 = <crystal.server.AbstractStateChecker: org.apache.log4j.Logger _log> >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r34 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.updateLocalRepository : $r34 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error: ")
crystal.server.AbstractStateChecker.updateLocalRepository : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error: ") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r36 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getError()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r36 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getError()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
crystal.server.AbstractStateChecker.updateLocalRepository : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : virtualinvoke $r33.<org.apache.log4j.Logger: void info(java.lang.Object)>($r38)
crystal.server.AbstractStateChecker.updateLocalRepository : virtualinvoke $r33.<org.apache.log4j.Logger: void info(java.lang.Object)>($r38) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $z6 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("hg")
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("--remotecmd") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r4)
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r13 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.updateLocalRepository : $r13 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.updateLocalRepository : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--remotecmd ")
crystal.server.AbstractStateChecker.updateLocalRepository : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--remotecmd ") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
crystal.server.AbstractStateChecker.updateLocalRepository : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r17 = newarray (java.lang.String)[0]
