crystal.client.ProjectPanel$7.keyReleased : $r2 = r0.<crystal.client.ProjectPanel$7: crystal.client.ProjectPreferences val$copyPref> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r3 = virtualinvoke $r2.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ProjectPanel$7.keyReleased : $r3 = virtualinvoke $r2.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r4 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test>
crystal.client.ProjectPanel$7.keyReleased : $r4 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r5 = virtualinvoke $r4.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel$7.keyReleased : $r5 = virtualinvoke $r4.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : virtualinvoke $r3.<crystal.model.DataSource: void setTestCommand(java.lang.String)>($r5)
crystal.client.ProjectPanel$7.keyReleased : virtualinvoke $r3.<crystal.model.DataSource: void setTestCommand(java.lang.String)>($r5) >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r6 = r0.<crystal.client.ProjectPanel$7: crystal.client.ProjectPreferences val$pref>
crystal.client.ProjectPanel$7.keyReleased : $r6 = r0.<crystal.client.ProjectPanel$7: crystal.client.ProjectPreferences val$pref> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : if $r6 == null
crystal.client.ProjectPanel$7.keyReleased : if $r6 == null >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r7 = r0.<crystal.client.ProjectPanel$7: java.util.Map val$changedComponents>
crystal.client.ProjectPanel$7.keyReleased : if $r6 == null >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r16 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test>
crystal.client.ProjectPanel$7.keyReleased : $r16 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r17 = virtualinvoke $r16.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel$7.keyReleased : $r17 = virtualinvoke $r16.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : z0 = staticinvoke <crystal.util.ValidInputChecker: boolean checkCommand(java.lang.String)>($r17)
crystal.client.ProjectPanel$7.keyReleased : z0 = staticinvoke <crystal.util.ValidInputChecker: boolean checkCommand(java.lang.String)>($r17) >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r18 = r0.<crystal.client.ProjectPanel$7: java.util.Map val$validText>
crystal.client.ProjectPanel$7.keyReleased : $r18 = r0.<crystal.client.ProjectPanel$7: java.util.Map val$validText> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r19 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$compile>
crystal.client.ProjectPanel$7.keyReleased : $r19 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$compile> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
crystal.client.ProjectPanel$7.keyReleased : $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20)
crystal.client.ProjectPanel$7.keyReleased : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20) >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r22 = r0.<crystal.client.ProjectPanel$7: crystal.client.ProjectPanel this$0>
crystal.client.ProjectPanel$7.keyReleased : $r22 = r0.<crystal.client.ProjectPanel$7: crystal.client.ProjectPanel this$0> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r23 = r0.<crystal.client.ProjectPanel$7: javax.swing.JLabel val$testState>
crystal.client.ProjectPanel$7.keyReleased : $r23 = r0.<crystal.client.ProjectPanel$7: javax.swing.JLabel val$testState> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : staticinvoke <crystal.client.ProjectPanel: void access$100(crystal.client.ProjectPanel,javax.swing.JLabel,boolean)>($r22, $r23, z0)
crystal.client.ProjectPanel$7.keyReleased : staticinvoke <crystal.client.ProjectPanel: void access$100(crystal.client.ProjectPanel,javax.swing.JLabel,boolean)>($r22, $r23, z0) >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : return
crystal.client.ProjectPanel$7.keyReleased : $r7 = r0.<crystal.client.ProjectPanel$7: java.util.Map val$changedComponents> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r8 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test>
crystal.client.ProjectPanel$7.keyReleased : $r8 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r9 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test>
crystal.client.ProjectPanel$7.keyReleased : $r9 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r10 = virtualinvoke $r9.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel$7.keyReleased : $r10 = virtualinvoke $r9.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r11 = r0.<crystal.client.ProjectPanel$7: crystal.client.ProjectPreferences val$pref>
crystal.client.ProjectPanel$7.keyReleased : $r11 = r0.<crystal.client.ProjectPanel$7: crystal.client.ProjectPreferences val$pref> >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r12 = virtualinvoke $r11.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ProjectPanel$7.keyReleased : $r12 = virtualinvoke $r11.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r13 = virtualinvoke $r12.<crystal.model.DataSource: java.lang.String getTestCommand()>()
crystal.client.ProjectPanel$7.keyReleased : $r13 = virtualinvoke $r12.<crystal.model.DataSource: java.lang.String getTestCommand()>() >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r13)
crystal.client.ProjectPanel$7.keyReleased : $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r13) >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : if $z1 != 0
crystal.client.ProjectPanel$7.keyReleased : if $z1 != 0 >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $z2 = 1
crystal.client.ProjectPanel$7.keyReleased : if $z1 != 0 >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $z2 = 0
crystal.client.ProjectPanel$7.keyReleased : $z2 = 0 >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
crystal.client.ProjectPanel$7.keyReleased : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r14)
crystal.client.ProjectPanel$7.keyReleased : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r14) >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r16 = r0.<crystal.client.ProjectPanel$7: javax.swing.JTextField val$test>
crystal.client.ProjectPanel$7.keyReleased : $z2 = 1 >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : goto [?= $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)]
crystal.client.ProjectPanel$7.keyReleased : goto [?= $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)] >>>>>>>> crystal.client.ProjectPanel$7.keyReleased : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
