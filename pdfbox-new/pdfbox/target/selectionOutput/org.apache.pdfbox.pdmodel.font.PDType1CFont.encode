org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : r1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : r1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $z0 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $z0 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r6 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: java.lang.String getNameInFont(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: java.lang.String getNameInFont(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : r3 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getNameToCodeMap()>()
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : r3 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getNameToCodeMap()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(".notdef")
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(".notdef") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z1 != 0
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r13 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r14 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r14 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r15 = newarray (java.lang.Object)[2]
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r15 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r15[0] = $r16
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r15[0] = $r16 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r15[1] = $r17
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r15[1] = $r17 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r15)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r15) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : throw $r14
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r13 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $z2 = interfaceinvoke $r13.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $z2 = interfaceinvoke $r13.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z2 != 0
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r14 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r19 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r19 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r20 = (java.lang.Integer) $r19
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r20 = (java.lang.Integer) $r19 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : i1 = virtualinvoke $r20.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : i1 = virtualinvoke $r20.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r21 = newarray (byte)[1]
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r21 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $b2 = (byte) i1
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $b2 = (byte) i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r21[0] = $b2
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r21[0] = $b2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : return $r21
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r6 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r7 = newarray (java.lang.Object)[3]
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r7 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r7[0] = $r8
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r7[0] = $r8 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r7[1] = r1
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r7[1] = r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r10 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>()
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r10 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r7[2] = $r10
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r7[2] = $r10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X (\'%s\') is not available in this font\'s encoding: %s", $r7)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X (\'%s\') is not available in this font\'s encoding: %s", $r7) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11)
org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.encode : throw $r6
