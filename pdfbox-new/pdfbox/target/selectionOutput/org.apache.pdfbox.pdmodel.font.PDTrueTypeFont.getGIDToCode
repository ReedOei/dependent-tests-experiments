org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if $r2 == null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r1 = new java.util.HashMap
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r1 = new java.util.HashMap >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode> = $r1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode> = $r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : i0 = 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : i0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if i0 > 255
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if i0 > 255 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: int codeToGID(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if i0 > 255 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : return $r10
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: int codeToGID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r5)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : i0 = i0 + 1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : i0 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : if i0 > 255
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : i0 = i0 + 1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map gidToCode> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDToCode : return $r3
