org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r2 = new java.util.LinkedHashMap >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r3 = $r2
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r3 = $r2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : if $z0 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : return r3
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r5 = (org.apache.pdfbox.pdmodel.font.FontInfo) $r8
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r5 = (org.apache.pdfbox.pdmodel.font.FontInfo) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r9 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: java.lang.String getPostScriptName()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r9 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: java.lang.String getPostScriptName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r10 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: java.util.Set getPostScriptNames(java.lang.String)>($r9)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r10 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: java.util.Set getPostScriptNames(java.lang.String)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r6 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r6 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : if $z1 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r7 = (java.lang.String) $r11
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : r7 = (java.lang.String) $r11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r5)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.createFontInfoByName : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
