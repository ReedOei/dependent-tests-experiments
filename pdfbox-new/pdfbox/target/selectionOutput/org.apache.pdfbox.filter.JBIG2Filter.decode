org.apache.pdfbox.filter.JBIG2Filter.decode : r4 = staticinvoke <org.apache.pdfbox.filter.JBIG2Filter: javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)>("JBIG2", "jbig2-imageio is not installed") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r17 = new org.apache.pdfbox.filter.DecodeResult
org.apache.pdfbox.filter.JBIG2Filter.decode : $r17 = new org.apache.pdfbox.filter.DecodeResult >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r5 = new org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.filter.JBIG2Filter.decode : $r5 = new org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void <init>()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r17.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r5)
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r17.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r5) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r6 = $r17
org.apache.pdfbox.filter.JBIG2Filter.decode : r6 = $r17 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r18 = virtualinvoke r6.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r18 = virtualinvoke r6.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke $r18.<org.apache.pdfbox.cos.COSDictionary: void addAll(org.apache.pdfbox.cos.COSDictionary)>(r3)
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke $r18.<org.apache.pdfbox.cos.COSDictionary: void addAll(org.apache.pdfbox.cos.COSDictionary)>(r3) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r19 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT>
org.apache.pdfbox.filter.JBIG2Filter.decode : $r19 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : i1 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r19, 1)
org.apache.pdfbox.filter.JBIG2Filter.decode : i1 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r19, 1) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r7 = virtualinvoke r0.<org.apache.pdfbox.filter.JBIG2Filter: org.apache.pdfbox.cos.COSDictionary getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)>(r3, i0)
org.apache.pdfbox.filter.JBIG2Filter.decode : r7 = virtualinvoke r0.<org.apache.pdfbox.filter.JBIG2Filter: org.apache.pdfbox.cos.COSDictionary getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)>(r3, i0) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r8 = r1
org.apache.pdfbox.filter.JBIG2Filter.decode : r8 = r1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if r7 == null
org.apache.pdfbox.filter.JBIG2Filter.decode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r20 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName JBIG2_GLOBALS>
org.apache.pdfbox.filter.JBIG2Filter.decode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r24 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r8)
org.apache.pdfbox.filter.JBIG2Filter.decode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r16 = $r43 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : r16 = $r43 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw r16
org.apache.pdfbox.filter.JBIG2Filter.decode : r24 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r8) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r10 = null
org.apache.pdfbox.filter.JBIG2Filter.decode : r24 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r8) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r10 = null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r10 = null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r10 = null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r24)
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r24) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r26 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r24) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r24) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r24) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r25 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r25 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r26 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r25 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r25 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r25 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r25)
org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r25) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r26 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r25) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r25) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r25) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r28 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()]
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r28 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r28 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r28 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r28 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r28 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r28 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r28 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $i2 = virtualinvoke $r28.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $i2 = virtualinvoke $r28.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i2 = virtualinvoke $r28.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i2 = virtualinvoke $r28.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r32 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r40 = $r39 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r10 = r40
org.apache.pdfbox.filter.JBIG2Filter.decode : r40 = $r39 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r41 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r14 = $r41 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r41 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r14 = $r41 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r14 = $r41 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if r24 == null
org.apache.pdfbox.filter.JBIG2Filter.decode : if r24 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null
org.apache.pdfbox.filter.JBIG2Filter.decode : if r24 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw r14
org.apache.pdfbox.filter.JBIG2Filter.decode : if r24 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : throw r14 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r42 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r15 = $r42 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r15)
org.apache.pdfbox.filter.JBIG2Filter.decode : r15 = $r42 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r15) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= throw r14]
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r15) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= throw r14] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw r14
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= throw r14] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw r14
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r42 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= throw r14]
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= throw r14] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw r14
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= throw r14] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r10 = r40 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw r40
org.apache.pdfbox.filter.JBIG2Filter.decode : r10 = r40 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r41 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : throw r40 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r41 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r32 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r32 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r32 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r33 = virtualinvoke $r32.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : r33 = virtualinvoke $r32.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r33 = virtualinvoke $r32.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r33 = virtualinvoke $r32.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $i5 = virtualinvoke r33.<java.awt.image.DataBuffer: int getDataType()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $i5 = virtualinvoke r33.<java.awt.image.DataBuffer: int getDataType()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i5 = virtualinvoke r33.<java.awt.image.DataBuffer: int getDataType()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i5 = virtualinvoke r33.<java.awt.image.DataBuffer: int getDataType()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r34 = (java.awt.image.DataBufferByte) r33
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r36 = new java.io.IOException
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r36 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r36 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r36 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r36.<java.io.IOException: void <init>(java.lang.String)>("Unexpected image buffer type")
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r36.<java.io.IOException: void <init>(java.lang.String)>("Unexpected image buffer type") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r36.<java.io.IOException: void <init>(java.lang.String)>("Unexpected image buffer type") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r36.<java.io.IOException: void <init>(java.lang.String)>("Unexpected image buffer type") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r36
org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r36 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r36 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r34 = (java.awt.image.DataBufferByte) r33 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r34 = (java.awt.image.DataBufferByte) r33 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r34 = (java.awt.image.DataBufferByte) r33 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r35 = virtualinvoke $r34.<java.awt.image.DataBufferByte: byte[] getData()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r35 = virtualinvoke $r34.<java.awt.image.DataBufferByte: byte[] getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r35 = virtualinvoke $r34.<java.awt.image.DataBufferByte: byte[] getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r35 = virtualinvoke $r34.<java.awt.image.DataBufferByte: byte[] getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r35)
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r35) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r35) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r35) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if r24 == null
org.apache.pdfbox.filter.JBIG2Filter.decode : if r24 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null
org.apache.pdfbox.filter.JBIG2Filter.decode : if r24 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if r24 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r44 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>]
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r44 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r44 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>
org.apache.pdfbox.filter.JBIG2Filter.decode : $r44 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $z2 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r44)
org.apache.pdfbox.filter.JBIG2Filter.decode : $z2 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r44) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if $z2 != 0
org.apache.pdfbox.filter.JBIG2Filter.decode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r45 = virtualinvoke r6.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r49 = new org.apache.pdfbox.filter.DecodeResult
org.apache.pdfbox.filter.JBIG2Filter.decode : $r49 = new org.apache.pdfbox.filter.DecodeResult >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r49.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r3)
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r49.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r3) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : return $r49
org.apache.pdfbox.filter.JBIG2Filter.decode : $r45 = virtualinvoke r6.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r46 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>
org.apache.pdfbox.filter.JBIG2Filter.decode : $r46 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r47 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DEVICEGRAY>
org.apache.pdfbox.filter.JBIG2Filter.decode : $r47 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DEVICEGRAY> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r48 = virtualinvoke $r47.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r48 = virtualinvoke $r47.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke $r45.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r46, $r48)
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke $r45.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r46, $r48) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r49 = new org.apache.pdfbox.filter.DecodeResult
org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if r10 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r37 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r38 = $r37 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r38)
org.apache.pdfbox.filter.JBIG2Filter.decode : r38 = $r37 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r38) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()]
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r38) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()]
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r37 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r24.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()]
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r29 = <org.apache.pdfbox.filter.JBIG2Filter: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 = new java.awt.image.BufferedImage
org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $i3 = virtualinvoke r11.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $i3 = virtualinvoke r11.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i3 = virtualinvoke r11.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i3 = virtualinvoke r11.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $i4 = virtualinvoke r11.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $i4 = virtualinvoke r11.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i4 = virtualinvoke r11.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i4 = virtualinvoke r11.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r30.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i4, 12)
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r30.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i4, 12) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r30.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i4, 12) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r30.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i4, 12) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r31 = $r30
org.apache.pdfbox.filter.JBIG2Filter.decode : r31 = $r30 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r31 = $r30 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r31 = $r30 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r13 = virtualinvoke r31.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : r13 = virtualinvoke r31.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r13 = virtualinvoke r31.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r13 = virtualinvoke r31.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r13.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r11, 0, 0, null)
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r13.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r11, 0, 0, null) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r13.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r11, 0, 0, null) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r13.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r11, 0, 0, null) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r13.<java.awt.Graphics: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r13.<java.awt.Graphics: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r13.<java.awt.Graphics: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r13.<java.awt.Graphics: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = r31
org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = r31 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = r31 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r11 = r31 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r32 = virtualinvoke r11.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r29 = <org.apache.pdfbox.filter.JBIG2Filter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r29 = <org.apache.pdfbox.filter.JBIG2Filter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r29 = <org.apache.pdfbox.filter.JBIG2Filter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke $r29.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Attempting to handle a JBIG2 with more than 1-bit depth")
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke $r29.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Attempting to handle a JBIG2 with more than 1-bit depth") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke $r29.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Attempting to handle a JBIG2 with more than 1-bit depth") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke $r29.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Attempting to handle a JBIG2 with more than 1-bit depth") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 = new java.awt.image.BufferedImage
org.apache.pdfbox.filter.JBIG2Filter.decode : r12 = $r26 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r12 = $r26 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r12 = $r26 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r27 = new java.io.IOException
org.apache.pdfbox.filter.JBIG2Filter.decode : $r27 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r27 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r27 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JBIG2 image", r12)
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JBIG2 image", r12) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JBIG2 image", r12) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JBIG2 image", r12) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r27
org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r27 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r39 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r27 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r20 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName JBIG2_GLOBALS> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r9 = virtualinvoke r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r20)
org.apache.pdfbox.filter.JBIG2Filter.decode : r9 = virtualinvoke r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r20) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $z0 = r9 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.filter.JBIG2Filter.decode : $z0 = r9 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if $z0 == 0
org.apache.pdfbox.filter.JBIG2Filter.decode : if $z0 == 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r21 = new java.io.SequenceInputStream
org.apache.pdfbox.filter.JBIG2Filter.decode : if $z0 == 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r24 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r8)
org.apache.pdfbox.filter.JBIG2Filter.decode : if $z0 == 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r21 = new java.io.SequenceInputStream >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r22 = (org.apache.pdfbox.cos.COSStream) r9
org.apache.pdfbox.filter.JBIG2Filter.decode : $r22 = (org.apache.pdfbox.cos.COSStream) r9 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r23 = virtualinvoke $r22.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r23 = virtualinvoke $r22.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r21.<java.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>($r23, r1)
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r21.<java.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>($r23, r1) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r8 = $r21
org.apache.pdfbox.filter.JBIG2Filter.decode : r8 = $r21 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r24 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r8)
org.apache.pdfbox.filter.JBIG2Filter.decode : r8 = $r21 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r43 := @caughtexception
