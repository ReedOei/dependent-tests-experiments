org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r2 = virtualinvoke r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState getGraphicsState()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDTextState getTextState()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDTextState getTextState()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: org.apache.pdfbox.pdmodel.font.PDFont getFont()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: org.apache.pdfbox.pdmodel.font.PDFont getFont()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if r4 != null
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if r4 != null >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r13 = <org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if r4 != null >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f0 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getFontSize()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f0 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getFontSize()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f6 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getHorizontalScaling()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f6 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getHorizontalScaling()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f1 = $f6 / 100.0F
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f1 = $f6 / 100.0F >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f2 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getCharacterSpacing()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f2 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getCharacterSpacing()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r14 = new org.apache.pdfbox.util.Matrix
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r14 = new org.apache.pdfbox.util.Matrix >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f7 = f0 * f1
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f7 = f0 * f1 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f8 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getRise()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f8 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getRise()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : specialinvoke $r14.<org.apache.pdfbox.util.Matrix: void <init>(float,float,float,float,float,float)>($f7, 0.0F, 0.0F, f0, 0.0F, $f8)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : specialinvoke $r14.<org.apache.pdfbox.util.Matrix: void <init>(float,float,float,float,float,float)>($f7, 0.0F, 0.0F, f0, 0.0F, $f8) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r5 = $r14
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r5 = $r14 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r15 = new java.io.ByteArrayInputStream
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r15 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : specialinvoke $r15.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : specialinvoke $r15.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r6 = $r15
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r6 = $r15 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $i3 = virtualinvoke r6.<java.io.InputStream: int available()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $i3 = virtualinvoke r6.<java.io.InputStream: int available()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $i3 <= 0
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $i3 <= 0 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : i0 = virtualinvoke r6.<java.io.InputStream: int available()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $i3 <= 0 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : return
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : i0 = virtualinvoke r6.<java.io.InputStream: int available()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : i1 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: int readCode(java.io.InputStream)>(r6)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : i1 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: int readCode(java.io.InputStream)>(r6) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $i4 = virtualinvoke r6.<java.io.InputStream: int available()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $i4 = virtualinvoke r6.<java.io.InputStream: int available()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : i2 = i0 - $i4
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : i2 = i0 - $i4 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r7 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: java.lang.String toUnicode(int)>(i1)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r7 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: java.lang.String toUnicode(int)>(i1) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f3 = 0.0F
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f3 = 0.0F >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if i2 != 1
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if i2 != 1 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if i1 != 32
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if i2 != 1 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r16 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r16 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r17 = virtualinvoke r5.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix)>($r16)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r17 = virtualinvoke r5.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix)>($r16) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r9 = virtualinvoke $r17.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix)>(r8)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r9 = virtualinvoke $r17.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix)>(r8) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $z0 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isVertical()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $z0 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isVertical()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $z0 == 0
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $z0 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r10 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.util.Vector getPositionVector(int)>(i1)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $z0 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r18 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.util.Vector getDisplacement(int)>(i1)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r18 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.util.Vector getDisplacement(int)>(i1) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: void saveGraphicsState()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: void saveGraphicsState()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r11 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r11 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r12 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix>
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r12 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix> >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)>(r9, r4, i1, r7, r18)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)>(r9, r4, i1, r7, r18) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> = r11
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> = r11 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix> = r12
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textLineMatrix> = r12 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: void restoreGraphicsState()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: void restoreGraphicsState()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $z1 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isVertical()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $z1 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isVertical()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $z1 == 0
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $z1 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f4 = 0.0F
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if $z1 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f13 = virtualinvoke r18.<org.apache.pdfbox.util.Vector: float getX()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f13 = virtualinvoke r18.<org.apache.pdfbox.util.Vector: float getX()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f14 = $f13 * f0
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f14 = $f13 * f0 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f15 = $f14 + f2
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f15 = $f14 + f2 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f16 = $f15 + f3
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f16 = $f15 + f3 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f4 = $f16 * f1
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f4 = $f16 * f1 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f5 = 0.0F
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f5 = 0.0F >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r19 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r19 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix> >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r20 = staticinvoke <org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix getTranslateInstance(float,float)>(f4, f5)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r20 = staticinvoke <org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix getTranslateInstance(float,float)>(f4, f5) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke $r19.<org.apache.pdfbox.util.Matrix: void concatenate(org.apache.pdfbox.util.Matrix)>($r20)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke $r19.<org.apache.pdfbox.util.Matrix: void concatenate(org.apache.pdfbox.util.Matrix)>($r20) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : goto [?= $i3 = virtualinvoke r6.<java.io.InputStream: int available()>()]
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : goto [?= $i3 = virtualinvoke r6.<java.io.InputStream: int available()>()] >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $i3 = virtualinvoke r6.<java.io.InputStream: int available()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f4 = 0.0F >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f10 = virtualinvoke r18.<org.apache.pdfbox.util.Vector: float getY()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f10 = virtualinvoke r18.<org.apache.pdfbox.util.Vector: float getY()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f11 = $f10 * f0
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f11 = $f10 * f0 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f12 = $f11 + f2
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f12 = $f11 + f2 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f5 = $f12 + f3
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f5 = $f12 + f3 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : goto [?= $r19 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>]
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : goto [?= $r19 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>] >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r19 = r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.util.Matrix textMatrix>
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r10 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.util.Vector getPositionVector(int)>(i1) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke r9.<org.apache.pdfbox.util.Matrix: void translate(org.apache.pdfbox.util.Vector)>(r10)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : virtualinvoke r9.<org.apache.pdfbox.util.Matrix: void translate(org.apache.pdfbox.util.Vector)>(r10) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r18 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.util.Vector getDisplacement(int)>(i1)
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if i1 != 32 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f9 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getWordSpacing()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : if i1 != 32 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $f9 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getWordSpacing()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f3 = f3 + $f9
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f3 = f3 + $f9 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : $r13 = <org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("No current font, will use default")
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("No current font, will use default") >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r4 = staticinvoke <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.pdfbox.pdmodel.font.PDFont createDefaultFont()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.showText : r4 = staticinvoke <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.pdfbox.pdmodel.font.PDFont createDefaultFont()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.showText : f0 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: float getFontSize()>()
