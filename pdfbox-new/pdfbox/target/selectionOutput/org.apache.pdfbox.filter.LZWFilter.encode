org.apache.pdfbox.filter.LZWFilter.encode : r4 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: java.util.List createCodeTable()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : b0 = 9
org.apache.pdfbox.filter.LZWFilter.encode : b0 = 9 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r5 = null
org.apache.pdfbox.filter.LZWFilter.encode : r5 = null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r10 = new javax.imageio.stream.MemoryCacheImageOutputStream
org.apache.pdfbox.filter.LZWFilter.encode : $r10 = new javax.imageio.stream.MemoryCacheImageOutputStream >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : specialinvoke $r10.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>(r2)
org.apache.pdfbox.filter.LZWFilter.encode : specialinvoke $r10.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>(r2) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r6 = $r10
org.apache.pdfbox.filter.LZWFilter.encode : r6 = $r10 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r7 = null
org.apache.pdfbox.filter.LZWFilter.encode : r7 = null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(256L, b0)
org.apache.pdfbox.filter.LZWFilter.encode : r7 = null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r8 = $r17 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if r6 == null
org.apache.pdfbox.filter.LZWFilter.encode : r8 = $r17 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r17 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : if r6 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if r7 == null
org.apache.pdfbox.filter.LZWFilter.encode : if r6 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : throw r8
org.apache.pdfbox.filter.LZWFilter.encode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.filter.LZWFilter.encode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.filter.LZWFilter.encode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r18 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r9 = $r18 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9)
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= throw r8]
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= throw r8] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : throw r8
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : throw r8
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= throw r8]
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r18 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= throw r8] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : throw r8
org.apache.pdfbox.filter.LZWFilter.encode : r16 = $r15 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r7 = r16
org.apache.pdfbox.filter.LZWFilter.encode : r16 = $r15 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r17 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r7 = r16 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : throw r16
org.apache.pdfbox.filter.LZWFilter.encode : r7 = r16 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r17 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : throw r16 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r17 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(256L, b0) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i1 = -1
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(256L, b0) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i1 = -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i5 = virtualinvoke r1.<java.io.InputStream: int read()>()
org.apache.pdfbox.filter.LZWFilter.encode : i1 = -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i5 = virtualinvoke r1.<java.io.InputStream: int read()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i2 = $i5
org.apache.pdfbox.filter.LZWFilter.encode : $i5 = virtualinvoke r1.<java.io.InputStream: int read()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i2 = $i5 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if $i5 == -1
org.apache.pdfbox.filter.LZWFilter.encode : i2 = $i5 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : if $i5 == -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : b3 = (byte) i2
org.apache.pdfbox.filter.LZWFilter.encode : if $i5 == -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if i1 == -1
org.apache.pdfbox.filter.LZWFilter.encode : if $i5 == -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : if i1 == -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i15 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.pdfbox.filter.LZWFilter.encode : if i1 == -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i19 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.pdfbox.filter.LZWFilter.encode : if i1 == -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i19 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i20 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i19, 1)
org.apache.pdfbox.filter.LZWFilter.encode : $i19 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i20 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i19, 1) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(257L, i20)
org.apache.pdfbox.filter.LZWFilter.encode : i20 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i19, 1) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(257L, i20) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, 7)
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(257L, i20) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, 7) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>()
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, 7) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if r6 == null
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : if r6 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if r7 == null
org.apache.pdfbox.filter.LZWFilter.encode : if r6 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : return
org.apache.pdfbox.filter.LZWFilter.encode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.filter.LZWFilter.encode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.filter.LZWFilter.encode : if r7 == null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r13 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r14 = $r13 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r14)
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r14) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= return]
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= return] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : return
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= return]
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= return] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : return
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= return]
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r13 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= return] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : return
org.apache.pdfbox.filter.LZWFilter.encode : $i15 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i16 = $i15 - 1
org.apache.pdfbox.filter.LZWFilter.encode : $i15 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i16 = $i15 - 1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i17 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i16, 1)
org.apache.pdfbox.filter.LZWFilter.encode : $i16 = $i15 - 1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i17 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i16, 1) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $l18 = (long) i1
org.apache.pdfbox.filter.LZWFilter.encode : i17 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i16, 1) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $l18 = (long) i1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l18, i17)
org.apache.pdfbox.filter.LZWFilter.encode : $l18 = (long) i1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l18, i17) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i19 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l18, i17) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : b3 = (byte) i2 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if r5 != null
org.apache.pdfbox.filter.LZWFilter.encode : b3 = (byte) i2 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : if r5 != null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r11 = newarray (byte)[1]
org.apache.pdfbox.filter.LZWFilter.encode : if r5 != null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i6 = lengthof r5
org.apache.pdfbox.filter.LZWFilter.encode : if r5 != null >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i6 = lengthof r5 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i7 = $i6 + 1
org.apache.pdfbox.filter.LZWFilter.encode : $i6 = lengthof r5 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i7 = $i6 + 1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r5, $i7)
org.apache.pdfbox.filter.LZWFilter.encode : $i7 = $i6 + 1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r5, $i7) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i8 = lengthof r5
org.apache.pdfbox.filter.LZWFilter.encode : r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r5, $i7) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i8 = lengthof r5 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i9 = $i8 - 1
org.apache.pdfbox.filter.LZWFilter.encode : $i8 = lengthof r5 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i9 = $i8 - 1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r5[$i9] = b3
org.apache.pdfbox.filter.LZWFilter.encode : $i9 = $i8 - 1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r5[$i9] = b3 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i4 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int findPatternCode(java.util.List,byte[])>(r4, r5)
org.apache.pdfbox.filter.LZWFilter.encode : r5[$i9] = b3 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i4 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int findPatternCode(java.util.List,byte[])>(r4, r5) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if i4 != -1
org.apache.pdfbox.filter.LZWFilter.encode : i4 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int findPatternCode(java.util.List,byte[])>(r4, r5) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : if i4 != -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i10 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.pdfbox.filter.LZWFilter.encode : if i4 != -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i1 = i4
org.apache.pdfbox.filter.LZWFilter.encode : if i4 != -1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i1 = i4 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= $i5 = virtualinvoke r1.<java.io.InputStream: int read()>()]
org.apache.pdfbox.filter.LZWFilter.encode : i1 = i4 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= $i5 = virtualinvoke r1.<java.io.InputStream: int read()>()] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i5 = virtualinvoke r1.<java.io.InputStream: int read()>()
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= $i5 = virtualinvoke r1.<java.io.InputStream: int read()>()] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i10 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i11 = $i10 - 1
org.apache.pdfbox.filter.LZWFilter.encode : $i10 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i11 = $i10 - 1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i12 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i11, 1)
org.apache.pdfbox.filter.LZWFilter.encode : $i11 = $i10 - 1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i12 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i11, 1) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $l13 = (long) i1
org.apache.pdfbox.filter.LZWFilter.encode : i12 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: int calculateChunk(int,int)>($i11, 1) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $l13 = (long) i1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l13, i12)
org.apache.pdfbox.filter.LZWFilter.encode : $l13 = (long) i1 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l13, i12) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l13, i12) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $i14 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.pdfbox.filter.LZWFilter.encode : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $i14 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : if $i14 != 4096
org.apache.pdfbox.filter.LZWFilter.encode : $i14 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : if $i14 != 4096 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(256L, i12)
org.apache.pdfbox.filter.LZWFilter.encode : if $i14 != 4096 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r12 = newarray (byte)[1]
org.apache.pdfbox.filter.LZWFilter.encode : if $i14 != 4096 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $r12 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r12[0] = b3
org.apache.pdfbox.filter.LZWFilter.encode : $r12 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $r12[0] = b3 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r5 = $r12
org.apache.pdfbox.filter.LZWFilter.encode : $r12[0] = b3 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r5 = $r12 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i1 = b3 & 255
org.apache.pdfbox.filter.LZWFilter.encode : r5 = $r12 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i1 = b3 & 255 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= (branch)]
org.apache.pdfbox.filter.LZWFilter.encode : i1 = b3 & 255 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= $i5 = virtualinvoke r1.<java.io.InputStream: int read()>()]
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(256L, i12) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r4 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: java.util.List createCodeTable()>()
org.apache.pdfbox.filter.LZWFilter.encode : virtualinvoke r6.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(256L, i12) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r4 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: java.util.List createCodeTable()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r12 = newarray (byte)[1]
org.apache.pdfbox.filter.LZWFilter.encode : r4 = specialinvoke r0.<org.apache.pdfbox.filter.LZWFilter: java.util.List createCodeTable()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $r11 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r11[0] = b3
org.apache.pdfbox.filter.LZWFilter.encode : $r11 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : $r11[0] = b3 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : r5 = $r11
org.apache.pdfbox.filter.LZWFilter.encode : $r11[0] = b3 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : r5 = $r11 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : i1 = b3 & 255
org.apache.pdfbox.filter.LZWFilter.encode : r5 = $r11 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : i1 = b3 & 255 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= (branch)]
org.apache.pdfbox.filter.LZWFilter.encode : i1 = b3 & 255 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : goto [?= $i5 = virtualinvoke r1.<java.io.InputStream: int read()>()]
org.apache.pdfbox.filter.LZWFilter.encode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.LZWFilter.encode : $r15 := @caughtexception
