org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: java.util.List getFilters()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r6 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r6 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: byte[] rawData>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: byte[] rawData> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r3 = $r6
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r3 = $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r8 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r8 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r9 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: byte[] rawData>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r9 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: byte[] rawData> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i1 = lengthof $r9
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i1 = lengthof $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>(int)>($i1)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r4 = $r8
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r4 = $r8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : i0 = 0
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : i0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if r2 == null
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i2 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r18 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r18 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r19 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r19 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r18.<java.io.ByteArrayInputStream: void <init>(byte[])>($r19)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r18.<java.io.ByteArrayInputStream: void <init>(byte[])>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : return $r18
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i2 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if i0 >= $i2
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if i0 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : virtualinvoke r4.<java.io.ByteArrayOutputStream: void reset()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if i0 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r18 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : virtualinvoke r4.<java.io.ByteArrayOutputStream: void reset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r10)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : goto [?= $r18 = new java.io.ByteArrayInputStream]
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r11 = <org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.FilterFactory INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r11 = <org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.FilterFactory INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r13 = (java.lang.String) $r12
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r5 = virtualinvoke $r11.<org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.Filter getFilter(java.lang.String)>($r13)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r5 = virtualinvoke $r11.<org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.Filter getFilter(java.lang.String)>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r14 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: org.apache.pdfbox.cos.COSDictionary parameters>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r14 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: org.apache.pdfbox.cos.COSDictionary parameters> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : virtualinvoke r5.<org.apache.pdfbox.filter.Filter: org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>(r3, r4, $r14, i0)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : virtualinvoke r5.<org.apache.pdfbox.filter.Filter: org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>(r3, r4, $r14, i0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r16 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r16 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r17 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r17 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r16.<java.io.ByteArrayInputStream: void <init>(byte[])>($r17)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r16.<java.io.ByteArrayInputStream: void <init>(byte[])>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r3 = $r16
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r3 = $r16 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : i0 = i0 + 1
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : i0 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if r2 == null
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : goto [?= $r18 = new java.io.ByteArrayInputStream] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r18 = new java.io.ByteArrayInputStream
