org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $r2 = virtualinvoke r0.<org.apache.pdfbox.contentstream.PDFStreamEngine: org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState getGraphicsState()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : r1 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : r1 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f3 = virtualinvoke r1.<org.apache.pdfbox.util.Matrix: float getScaleX()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f3 = virtualinvoke r1.<org.apache.pdfbox.util.Matrix: float getScaleX()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f4 = virtualinvoke r1.<org.apache.pdfbox.util.Matrix: float getShearX()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f4 = virtualinvoke r1.<org.apache.pdfbox.util.Matrix: float getShearX()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : f1 = $f3 + $f4
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : f1 = $f3 + $f4 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f5 = virtualinvoke r1.<org.apache.pdfbox.util.Matrix: float getScaleY()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f5 = virtualinvoke r1.<org.apache.pdfbox.util.Matrix: float getScaleY()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f6 = virtualinvoke r1.<org.apache.pdfbox.util.Matrix: float getShearY()>()
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f6 = virtualinvoke r1.<org.apache.pdfbox.util.Matrix: float getShearY()>() >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : f2 = $f5 + $f6
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : f2 = $f5 + $f6 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f7 = f1 * f1
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f7 = f1 * f1 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f8 = f2 * f2
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f8 = f2 * f2 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f9 = $f7 + $f8
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f9 = $f7 + $f8 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $d0 = (double) $f9
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $d0 = (double) $f9 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $d1 = $d0 * 0.5
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $d1 = $d0 * 0.5 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d1)
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d1) >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f10 = (float) $d2
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f10 = (float) $d2 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f11 = f0 * $f10
org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : $f11 = f0 * $f10 >>>>>>>> org.apache.pdfbox.contentstream.PDFStreamEngine.transformWidth : return $f11
