org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r2 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $z0 = virtualinvoke $r2.<java.awt.image.ColorModel: boolean hasAlpha()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $z0 = virtualinvoke $r2.<java.awt.image.ColorModel: boolean hasAlpha()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : if $z0 != 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : return r0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r3 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r3 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r4 = virtualinvoke $r3.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r4 = virtualinvoke $r3.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $i0 = virtualinvoke $r4.<java.awt.color.ColorSpace: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $i0 = virtualinvoke $r4.<java.awt.color.ColorSpace: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : if $i0 == 5
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : if $i0 == 5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r5 = new java.lang.UnsupportedOperationException
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : if $i0 == 5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r6 = new java.awt.image.BufferedImage
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r6 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $i2 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $i2 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : specialinvoke $r6.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i2, 5)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : specialinvoke $r6.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i2, 5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : r1 = $r6
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : r1 = $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r7 = new java.awt.image.ColorConvertOp
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r7 = new java.awt.image.ColorConvertOp >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : specialinvoke $r7.<java.awt.image.ColorConvertOp: void <init>(java.awt.RenderingHints)>(null)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : specialinvoke $r7.<java.awt.image.ColorConvertOp: void <init>(java.awt.RenderingHints)>(null) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r8 = virtualinvoke $r7.<java.awt.image.ColorConvertOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r0, r1)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r8 = virtualinvoke $r7.<java.awt.image.ColorConvertOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r0, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : return $r8
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : $r5 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("only RGB color spaces are implemented")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("only RGB color spaces are implemented") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorImage : throw $r5
