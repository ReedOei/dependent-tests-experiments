org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(47) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r1 = $r4
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r1 = $r4 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i1 = i0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r23 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r24 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r24 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z3 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isValidUTF8(byte[])>(r24)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z3 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isValidUTF8(byte[])>(r24) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z3 == 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r25 = new java.lang.String
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r29 = new java.lang.String
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r29 = new java.lang.String >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r30 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r30 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r31 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset WINDOWS_1252>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r31 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset WINDOWS_1252> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r29.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r30, $r31)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r29.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r30, $r31) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r28 = $r29
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r28 = $r29 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r32 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r28)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r32 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r28) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : return $r32
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r25 = new java.lang.String >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r26 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r26 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r27 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset UTF_8>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r27 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r25.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r26, $r27)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r25.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r26, $r27) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r28 = $r25
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r28 = $r25 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= $r32 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r28)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= $r32 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r28)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r32 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r28)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r23 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r23.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r23.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r24 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i1 = i0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i1 != 35
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i1 != 35 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r6 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i1 != 35 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEndOfName(int)>(i1)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEndOfName(int)>(i1) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z2 == 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i1)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i1) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r22 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r22 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = interfaceinvoke $r22.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = interfaceinvoke $r22.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r6 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i2 = interfaceinvoke $r6.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i2 = interfaceinvoke $r6.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r7 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r7 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i3 = interfaceinvoke $r7.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i3 = interfaceinvoke $r7.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c4 = (char) i2
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c4 = (char) i2 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z0 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isHexDigit(char)>($c4)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z0 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isHexDigit(char)>($c4) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z0 == 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c5 = (char) i3
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i3 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i2 != -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i3 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r20 = <org.apache.pdfbox.pdfparser.BaseParser: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r20 = <org.apache.pdfbox.pdfparser.BaseParser: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r20.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Premature EOF in BaseParser#parseCOSName")
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r20.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Premature EOF in BaseParser#parseCOSName") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i2 != -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r20 = <org.apache.pdfbox.pdfparser.BaseParser: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i2 != -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r21 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r21 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r21.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i3)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r21.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = i2
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = i2 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i1)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i1) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c5 = (char) i3 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z1 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isHexDigit(char)>($c5)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z1 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isHexDigit(char)>($c5) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z1 == 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r8 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("")
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c6 = (char) i2
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c6 = (char) i2 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c7 = (char) i3
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c7 = (char) i3 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r2, 16)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r12 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r3 = $r12 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r13 = new java.io.IOException
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r13 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r14 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expected hex digit, actual=\'")
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expected hex digit, actual=\'") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r3)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : throw $r13
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r2, 16) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($i8)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r2, 16) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r12 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($i8) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= $r19 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($i8) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r12 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= $r19 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r19 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r19 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = interfaceinvoke $r19.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = interfaceinvoke $r19.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
