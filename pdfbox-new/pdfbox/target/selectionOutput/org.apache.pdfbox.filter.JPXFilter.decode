org.apache.pdfbox.filter.JPXFilter.decode : $r4 = new org.apache.pdfbox.filter.DecodeResult >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r5 = new org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.filter.JPXFilter.decode : $r5 = new org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : specialinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void <init>()>()
org.apache.pdfbox.filter.JPXFilter.decode : specialinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : specialinvoke $r4.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r5)
org.apache.pdfbox.filter.JPXFilter.decode : specialinvoke $r4.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r5) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : r6 = $r4
org.apache.pdfbox.filter.JPXFilter.decode : r6 = $r4 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r12 = virtualinvoke r6.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()
org.apache.pdfbox.filter.JPXFilter.decode : $r12 = virtualinvoke r6.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: void addAll(org.apache.pdfbox.cos.COSDictionary)>(r3)
org.apache.pdfbox.filter.JPXFilter.decode : virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: void addAll(org.apache.pdfbox.cos.COSDictionary)>(r3) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : r7 = specialinvoke r0.<org.apache.pdfbox.filter.JPXFilter: java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeResult)>(r1, r6)
org.apache.pdfbox.filter.JPXFilter.decode : r7 = specialinvoke r0.<org.apache.pdfbox.filter.JPXFilter: java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeResult)>(r1, r6) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : r8 = virtualinvoke r7.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>()
org.apache.pdfbox.filter.JPXFilter.decode : r8 = virtualinvoke r7.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r13 = virtualinvoke r8.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.JPXFilter.decode : $r13 = virtualinvoke r8.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $i4 = virtualinvoke $r13.<java.awt.image.DataBuffer: int getDataType()>()
org.apache.pdfbox.filter.JPXFilter.decode : $i4 = virtualinvoke $r13.<java.awt.image.DataBuffer: int getDataType()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : lookupswitch($i4) {     case 0:
org.apache.pdfbox.filter.JPXFilter.decode : lookupswitch($i4) {     case 0: >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r14 = virtualinvoke r8.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.JPXFilter.decode : lookupswitch($i4) {     case 0: >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r16 = virtualinvoke r8.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.JPXFilter.decode : lookupswitch($i4) {     case 0: >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r17 = new java.io.IOException
org.apache.pdfbox.filter.JPXFilter.decode : $r17 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r18 = new java.lang.StringBuilder
org.apache.pdfbox.filter.JPXFilter.decode : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.filter.JPXFilter.decode : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data type ")
org.apache.pdfbox.filter.JPXFilter.decode : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data type ") >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r20 = virtualinvoke r8.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.JPXFilter.decode : $r20 = virtualinvoke r8.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $i6 = virtualinvoke $r20.<java.awt.image.DataBuffer: int getDataType()>()
org.apache.pdfbox.filter.JPXFilter.decode : $i6 = virtualinvoke $r20.<java.awt.image.DataBuffer: int getDataType()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)
org.apache.pdfbox.filter.JPXFilter.decode : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not implemented")
org.apache.pdfbox.filter.JPXFilter.decode : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not implemented") >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.filter.JPXFilter.decode : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r23)
org.apache.pdfbox.filter.JPXFilter.decode : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r23) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : throw $r17
org.apache.pdfbox.filter.JPXFilter.decode : $r16 = virtualinvoke r8.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : r10 = (java.awt.image.DataBufferUShort) $r16
org.apache.pdfbox.filter.JPXFilter.decode : r10 = (java.awt.image.DataBufferUShort) $r16 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : r11 = virtualinvoke r10.<java.awt.image.DataBufferUShort: short[] getData()>()
org.apache.pdfbox.filter.JPXFilter.decode : r11 = virtualinvoke r10.<java.awt.image.DataBufferUShort: short[] getData()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : i1 = lengthof r11
org.apache.pdfbox.filter.JPXFilter.decode : i1 = lengthof r11 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : i2 = 0
org.apache.pdfbox.filter.JPXFilter.decode : i2 = 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : if i2 >= i1
org.apache.pdfbox.filter.JPXFilter.decode : if i2 >= i1 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : s3 = r11[i2]
org.apache.pdfbox.filter.JPXFilter.decode : if i2 >= i1 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : return r6
org.apache.pdfbox.filter.JPXFilter.decode : s3 = r11[i2] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $s5 = s3 >> 8
org.apache.pdfbox.filter.JPXFilter.decode : $s5 = s3 >> 8 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(int)>($s5)
org.apache.pdfbox.filter.JPXFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(int)>($s5) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(int)>(s3)
org.apache.pdfbox.filter.JPXFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(int)>(s3) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : i2 = i2 + 1
org.apache.pdfbox.filter.JPXFilter.decode : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.JPXFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : if i2 >= i1
org.apache.pdfbox.filter.JPXFilter.decode : $r14 = virtualinvoke r8.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : r9 = (java.awt.image.DataBufferByte) $r14
org.apache.pdfbox.filter.JPXFilter.decode : r9 = (java.awt.image.DataBufferByte) $r14 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : $r15 = virtualinvoke r9.<java.awt.image.DataBufferByte: byte[] getData()>()
org.apache.pdfbox.filter.JPXFilter.decode : $r15 = virtualinvoke r9.<java.awt.image.DataBufferByte: byte[] getData()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r15)
org.apache.pdfbox.filter.JPXFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r15) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.decode : return r6
