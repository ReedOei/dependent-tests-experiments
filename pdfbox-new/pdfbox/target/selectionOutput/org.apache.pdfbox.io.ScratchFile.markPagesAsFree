org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : r2 = $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : r2 = $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : r3 = $r8 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor r2
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : r3 = $r8 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor r2 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : throw r3
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor r2 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= i1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i3 = r1[i2]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor r2
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor r2 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor r2 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : return
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i3 = r1[i2] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 < 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i3 = r1[i2] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i2 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= i1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 >= $i4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 >= $i4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 >= $i4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i2 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 >= $i4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i3)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i2 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i3)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i5 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i5 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 >= $i5
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i5 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 >= $i5 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 >= $i5 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i2 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i3 >= $i5 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i3] = null
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i3] = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = i2 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i3] = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r8 := @caughtexception
