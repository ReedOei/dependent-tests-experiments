org.apache.pdfbox.rendering.PageDrawer.getPaint : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $z0 = r2 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDPattern
org.apache.pdfbox.rendering.PageDrawer.getPaint : $z0 = r2 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDPattern >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : if $z0 != 0
org.apache.pdfbox.rendering.PageDrawer.getPaint : if $z0 != 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] getComponents()>()
org.apache.pdfbox.rendering.PageDrawer.getPaint : if $z0 != 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : r9 = (org.apache.pdfbox.pdmodel.graphics.color.PDPattern) r2
org.apache.pdfbox.rendering.PageDrawer.getPaint : r9 = (org.apache.pdfbox.pdmodel.graphics.color.PDPattern) r2 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : r4 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.graphics.color.PDPattern: org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor)>(r1)
org.apache.pdfbox.rendering.PageDrawer.getPaint : r4 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.graphics.color.PDPattern: org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor)>(r1) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $z1 = r4 instanceof org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern
org.apache.pdfbox.rendering.PageDrawer.getPaint : $z1 = r4 instanceof org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : if $z1 == 0
org.apache.pdfbox.rendering.PageDrawer.getPaint : if $z1 == 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : r5 = (org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern) r4
org.apache.pdfbox.rendering.PageDrawer.getPaint : if $z1 == 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : r17 = (org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern) r4
org.apache.pdfbox.rendering.PageDrawer.getPaint : r17 = (org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern) r4 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : r6 = virtualinvoke r17.<org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern: org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading()>()
org.apache.pdfbox.rendering.PageDrawer.getPaint : r6 = virtualinvoke r17.<org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern: org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : if r6 != null
org.apache.pdfbox.rendering.PageDrawer.getPaint : if r6 != null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r18 = <org.apache.pdfbox.rendering.PageDrawer: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.rendering.PageDrawer.getPaint : if r6 != null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r20 = virtualinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: org.apache.pdfbox.util.Matrix getInitialMatrix()>()
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r20 = virtualinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: org.apache.pdfbox.util.Matrix getInitialMatrix()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r21 = virtualinvoke r17.<org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern: org.apache.pdfbox.util.Matrix getMatrix()>()
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r21 = virtualinvoke r17.<org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern: org.apache.pdfbox.util.Matrix getMatrix()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r22 = staticinvoke <org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix concatenate(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)>($r20, $r21)
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r22 = staticinvoke <org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix concatenate(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)>($r20, $r21) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r23 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.graphics.shading.PDShading: java.awt.Paint toPaint(org.apache.pdfbox.util.Matrix)>($r22)
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r23 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.graphics.shading.PDShading: java.awt.Paint toPaint(org.apache.pdfbox.util.Matrix)>($r22) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : return $r23
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r18 = <org.apache.pdfbox.rendering.PageDrawer: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : interfaceinvoke $r18.<org.apache.commons.logging.Log: void error(java.lang.Object)>("shadingPattern is null, will be filled with transparency")
org.apache.pdfbox.rendering.PageDrawer.getPaint : interfaceinvoke $r18.<org.apache.commons.logging.Log: void error(java.lang.Object)>("shadingPattern is null, will be filled with transparency") >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r19 = new java.awt.Color
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r19 = new java.awt.Color >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : specialinvoke $r19.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0)
org.apache.pdfbox.rendering.PageDrawer.getPaint : specialinvoke $r19.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : return $r19
org.apache.pdfbox.rendering.PageDrawer.getPaint : r5 = (org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern) r4 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $i0 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: int getPaintType()>()
org.apache.pdfbox.rendering.PageDrawer.getPaint : $i0 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: int getPaintType()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : if $i0 != 1
org.apache.pdfbox.rendering.PageDrawer.getPaint : if $i0 != 1 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r10 = r0.<org.apache.pdfbox.rendering.PageDrawer: org.apache.pdfbox.rendering.TilingPaintFactory tilingPaintFactory>
org.apache.pdfbox.rendering.PageDrawer.getPaint : if $i0 != 1 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r13 = r0.<org.apache.pdfbox.rendering.PageDrawer: org.apache.pdfbox.rendering.TilingPaintFactory tilingPaintFactory>
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r13 = r0.<org.apache.pdfbox.rendering.PageDrawer: org.apache.pdfbox.rendering.TilingPaintFactory tilingPaintFactory> >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r14 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.graphics.color.PDPattern: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getUnderlyingColorSpace()>()
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r14 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.graphics.color.PDPattern: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getUnderlyingColorSpace()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r15 = r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.geom.AffineTransform xform>
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r15 = r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.geom.AffineTransform xform> >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r16 = virtualinvoke $r13.<org.apache.pdfbox.rendering.TilingPaintFactory: org.apache.pdfbox.rendering.TilingPaint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)>(r5, $r14, r1, $r15)
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r16 = virtualinvoke $r13.<org.apache.pdfbox.rendering.TilingPaintFactory: org.apache.pdfbox.rendering.TilingPaint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)>(r5, $r14, r1, $r15) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : return $r16
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r10 = r0.<org.apache.pdfbox.rendering.PageDrawer: org.apache.pdfbox.rendering.TilingPaintFactory tilingPaintFactory> >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r11 = r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.geom.AffineTransform xform>
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r11 = r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.geom.AffineTransform xform> >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r12 = virtualinvoke $r10.<org.apache.pdfbox.rendering.TilingPaintFactory: org.apache.pdfbox.rendering.TilingPaint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)>(r5, null, null, $r11)
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r12 = virtualinvoke $r10.<org.apache.pdfbox.rendering.TilingPaintFactory: org.apache.pdfbox.rendering.TilingPaint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)>(r5, null, null, $r11) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : return $r12
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] getComponents()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: float[] toRGB(float[])>($r7)
org.apache.pdfbox.rendering.PageDrawer.getPaint : r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: float[] toRGB(float[])>($r7) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $r8 = new java.awt.Color
org.apache.pdfbox.rendering.PageDrawer.getPaint : $r8 = new java.awt.Color >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $f0 = r3[0]
org.apache.pdfbox.rendering.PageDrawer.getPaint : $f0 = r3[0] >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $f1 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: float clampColor(float)>($f0)
org.apache.pdfbox.rendering.PageDrawer.getPaint : $f1 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: float clampColor(float)>($f0) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $f2 = r3[1]
org.apache.pdfbox.rendering.PageDrawer.getPaint : $f2 = r3[1] >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $f3 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: float clampColor(float)>($f2)
org.apache.pdfbox.rendering.PageDrawer.getPaint : $f3 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: float clampColor(float)>($f2) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $f4 = r3[2]
org.apache.pdfbox.rendering.PageDrawer.getPaint : $f4 = r3[2] >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : $f5 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: float clampColor(float)>($f4)
org.apache.pdfbox.rendering.PageDrawer.getPaint : $f5 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: float clampColor(float)>($f4) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : specialinvoke $r8.<java.awt.Color: void <init>(float,float,float)>($f1, $f3, $f5)
org.apache.pdfbox.rendering.PageDrawer.getPaint : specialinvoke $r8.<java.awt.Color: void <init>(float,float,float)>($f1, $f3, $f5) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.getPaint : return $r8
