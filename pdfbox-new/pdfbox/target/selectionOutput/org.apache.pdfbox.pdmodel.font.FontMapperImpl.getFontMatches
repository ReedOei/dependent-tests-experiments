org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r3 = new java.util.PriorityQueue >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : specialinvoke $r3.<java.util.PriorityQueue: void <init>(int)>(20)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : specialinvoke $r3.<java.util.PriorityQueue: void <init>(int)>(20) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r4 = $r3
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r4 = $r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r9 = r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: java.util.Map fontInfoByName>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r9 = r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: java.util.Map fontInfoByName> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r5 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r5 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z0 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : return r4
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r6 = (org.apache.pdfbox.pdmodel.font.FontInfo) $r11
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r6 = (org.apache.pdfbox.pdmodel.font.FontInfo) $r11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if r2 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: boolean isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)>(r2, r6)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r12 = new org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r12 = new org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : specialinvoke $r12.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: void <init>(org.apache.pdfbox.pdmodel.font.FontInfo)>(r6)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : specialinvoke $r12.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: void <init>(org.apache.pdfbox.pdmodel.font.FontInfo)>(r6) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7 = $r12
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7 = $r12 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.font.PDPanose getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.font.PDPanose getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r13 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r13 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r14 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r13 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $b23 = $f1 cmpl 0.0F
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $b23 = $f1 cmpl 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $b23 <= 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $b23 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i24 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClass()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $b23 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i24 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClass()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i24 <= 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i24 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i24 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i25 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClass()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i25 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClass()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f3 = (float) $i25
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f3 = (float) $i25 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f4 = $f2 - $f3
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f4 = $f2 - $f3 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : f5 = staticinvoke <java.lang.Math: float abs(float)>($f4)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : f5 = staticinvoke <java.lang.Math: float abs(float)>($f4) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d15 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d15 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f6 = f5 / 100.0F
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f6 = f5 / 100.0F >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d16 = (double) $f6
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d16 = (double) $f6 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d17 = $d16 * 0.5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d17 = $d16 * 0.5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d18 = 1.0 - $d17
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d18 = 1.0 - $d17 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d19 = $d15 + $d18
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d19 = $d15 + $d18 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d19
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d19 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r14 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r14 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r14 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r15 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.font.PDPanose getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r14 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r15 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.font.PDPanose getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r8 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.PDPanose: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r8 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.PDPanose: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i2 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getFamilyKind()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i2 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getFamilyKind()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r16 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r16 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i3 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getFamilyKind()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i3 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getFamilyKind()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i2 != $i3
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i2 != $i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i4 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i2 != $i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i4 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r17 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r17 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i5 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i5 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i4 != $i5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i4 != $i5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d0 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i4 != $i5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i6 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i6 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i6 < 2
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i6 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i7 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i6 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i10 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i10 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i10 < 11
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i10 < 11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i11 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i10 < 11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i14 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i14 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i14 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r25 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i0 = virtualinvoke $r27.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i0 = virtualinvoke $r27.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i1 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClassAsPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i1 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClassAsPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i16 = i0 - i1
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i16 = i0 - i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i17 = staticinvoke <java.lang.Math: int abs(int)>($i16)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i17 = staticinvoke <java.lang.Math: int abs(int)>($i16) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i17 <= 2
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i17 <= 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i0 = i1
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i17 <= 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i18 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i18 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i18 != i0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i18 != i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d8 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i18 != i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i19 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i19 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i19 <= 1
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i19 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if i0 <= 1
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i19 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if i0 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i20 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if i0 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i20 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i21 = $i20 - i0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i21 = $i20 - i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i22 = staticinvoke <java.lang.Math: int abs(int)>($i21)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i22 = staticinvoke <java.lang.Math: int abs(int)>($i21) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : f0 = (float) $i22
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : f0 = (float) $i22 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d10 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d10 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d11 = (double) f0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d11 = (double) f0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d12 = $d11 * 0.5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d12 = $d11 * 0.5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d13 = 1.0 - $d12
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d13 = 1.0 - $d12 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d14 = $d10 + $d13
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d14 = $d10 + $d13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d14
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d14 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d8 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d9 = $d8 + 2.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d9 = $d8 + 2.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d9
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d9 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r7)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i0 = i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i18 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r25 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i15 = virtualinvoke $r25.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i15 = virtualinvoke $r25.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i15 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i15 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d6 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i15 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d6 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d7 = $d6 - 1.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d7 = $d6 - 1.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d7
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d7 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i11 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i11 > 13
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i11 > 13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r22 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i11 > 13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i14 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r22 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i12 = virtualinvoke $r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i12 = virtualinvoke $r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i12 < 11
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i12 < 11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i12 < 11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i14 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i13 = virtualinvoke $r23.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i13 = virtualinvoke $r23.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i13 > 13
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i13 > 13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d4 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i13 > 13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i14 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d4 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d5 = $d4 + 1.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d5 = $d4 + 1.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i7 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i7 > 5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i7 > 5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r19 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i7 > 5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i10 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r19 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i8 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i8 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i8 < 2
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i8 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r20 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i8 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i10 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r20 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i9 = virtualinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i9 = virtualinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i9 > 5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i9 > 5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d2 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i9 > 5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i10 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d2 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d3 = $d2 + 1.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d3 = $d2 + 1.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d3
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d3 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d0 = r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d1 = $d0 + 2.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d1 = $d0 + 2.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d1
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r7.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r27 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: boolean isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)>(r2, r6) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z1 != 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r12 = new org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
