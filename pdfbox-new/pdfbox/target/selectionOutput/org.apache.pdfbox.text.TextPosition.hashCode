org.apache.pdfbox.text.TextPosition.hashCode : $r1 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.util.Matrix textMatrix> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : if $r1 == null
org.apache.pdfbox.text.TextPosition.hashCode : if $r1 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r2 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.util.Matrix textMatrix>
org.apache.pdfbox.text.TextPosition.hashCode : if $r1 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i1 = 0
org.apache.pdfbox.text.TextPosition.hashCode : $i1 = 0 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i0 = $i1
org.apache.pdfbox.text.TextPosition.hashCode : i0 = $i1 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i2 = 31 * i0
org.apache.pdfbox.text.TextPosition.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f0 = r0.<org.apache.pdfbox.text.TextPosition: float endX>
org.apache.pdfbox.text.TextPosition.hashCode : $f0 = r0.<org.apache.pdfbox.text.TextPosition: float endX> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0)
org.apache.pdfbox.text.TextPosition.hashCode : $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i4 = $i2 + $i3
org.apache.pdfbox.text.TextPosition.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i5 = 31 * i4
org.apache.pdfbox.text.TextPosition.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f1 = r0.<org.apache.pdfbox.text.TextPosition: float endY>
org.apache.pdfbox.text.TextPosition.hashCode : $f1 = r0.<org.apache.pdfbox.text.TextPosition: float endY> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1)
org.apache.pdfbox.text.TextPosition.hashCode : $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i7 = $i5 + $i6
org.apache.pdfbox.text.TextPosition.hashCode : i7 = $i5 + $i6 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i8 = 31 * i7
org.apache.pdfbox.text.TextPosition.hashCode : $i8 = 31 * i7 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f2 = r0.<org.apache.pdfbox.text.TextPosition: float maxHeight>
org.apache.pdfbox.text.TextPosition.hashCode : $f2 = r0.<org.apache.pdfbox.text.TextPosition: float maxHeight> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i9 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f2)
org.apache.pdfbox.text.TextPosition.hashCode : $i9 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f2) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i10 = $i8 + $i9
org.apache.pdfbox.text.TextPosition.hashCode : i10 = $i8 + $i9 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i11 = 31 * i10
org.apache.pdfbox.text.TextPosition.hashCode : $i11 = 31 * i10 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i12 = r0.<org.apache.pdfbox.text.TextPosition: int rotation>
org.apache.pdfbox.text.TextPosition.hashCode : $i12 = r0.<org.apache.pdfbox.text.TextPosition: int rotation> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i13 = $i11 + $i12
org.apache.pdfbox.text.TextPosition.hashCode : i13 = $i11 + $i12 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i14 = 31 * i13
org.apache.pdfbox.text.TextPosition.hashCode : $i14 = 31 * i13 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f3 = r0.<org.apache.pdfbox.text.TextPosition: float x>
org.apache.pdfbox.text.TextPosition.hashCode : $f3 = r0.<org.apache.pdfbox.text.TextPosition: float x> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i15 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f3)
org.apache.pdfbox.text.TextPosition.hashCode : $i15 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f3) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i16 = $i14 + $i15
org.apache.pdfbox.text.TextPosition.hashCode : i16 = $i14 + $i15 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i17 = 31 * i16
org.apache.pdfbox.text.TextPosition.hashCode : $i17 = 31 * i16 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f4 = r0.<org.apache.pdfbox.text.TextPosition: float y>
org.apache.pdfbox.text.TextPosition.hashCode : $f4 = r0.<org.apache.pdfbox.text.TextPosition: float y> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i18 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f4)
org.apache.pdfbox.text.TextPosition.hashCode : $i18 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f4) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i19 = $i17 + $i18
org.apache.pdfbox.text.TextPosition.hashCode : i19 = $i17 + $i18 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i20 = 31 * i19
org.apache.pdfbox.text.TextPosition.hashCode : $i20 = 31 * i19 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f5 = r0.<org.apache.pdfbox.text.TextPosition: float pageHeight>
org.apache.pdfbox.text.TextPosition.hashCode : $f5 = r0.<org.apache.pdfbox.text.TextPosition: float pageHeight> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i21 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f5)
org.apache.pdfbox.text.TextPosition.hashCode : $i21 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f5) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i22 = $i20 + $i21
org.apache.pdfbox.text.TextPosition.hashCode : i22 = $i20 + $i21 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i23 = 31 * i22
org.apache.pdfbox.text.TextPosition.hashCode : $i23 = 31 * i22 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f6 = r0.<org.apache.pdfbox.text.TextPosition: float pageWidth>
org.apache.pdfbox.text.TextPosition.hashCode : $f6 = r0.<org.apache.pdfbox.text.TextPosition: float pageWidth> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i24 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f6)
org.apache.pdfbox.text.TextPosition.hashCode : $i24 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f6) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i25 = $i23 + $i24
org.apache.pdfbox.text.TextPosition.hashCode : i25 = $i23 + $i24 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i26 = 31 * i25
org.apache.pdfbox.text.TextPosition.hashCode : $i26 = 31 * i25 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f7 = r0.<org.apache.pdfbox.text.TextPosition: float widthOfSpace>
org.apache.pdfbox.text.TextPosition.hashCode : $f7 = r0.<org.apache.pdfbox.text.TextPosition: float widthOfSpace> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i27 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f7)
org.apache.pdfbox.text.TextPosition.hashCode : $i27 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f7) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i28 = $i26 + $i27
org.apache.pdfbox.text.TextPosition.hashCode : i28 = $i26 + $i27 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i29 = 31 * i28
org.apache.pdfbox.text.TextPosition.hashCode : $i29 = 31 * i28 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r3 = r0.<org.apache.pdfbox.text.TextPosition: int[] charCodes>
org.apache.pdfbox.text.TextPosition.hashCode : $r3 = r0.<org.apache.pdfbox.text.TextPosition: int[] charCodes> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i30 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r3)
org.apache.pdfbox.text.TextPosition.hashCode : $i30 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r3) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i31 = $i29 + $i30
org.apache.pdfbox.text.TextPosition.hashCode : i31 = $i29 + $i30 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i32 = 31 * i31
org.apache.pdfbox.text.TextPosition.hashCode : $i32 = 31 * i31 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r4 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont font>
org.apache.pdfbox.text.TextPosition.hashCode : $r4 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont font> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : if $r4 == null
org.apache.pdfbox.text.TextPosition.hashCode : if $r4 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r5 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont font>
org.apache.pdfbox.text.TextPosition.hashCode : if $r4 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i33 = 0
org.apache.pdfbox.text.TextPosition.hashCode : $i33 = 0 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i34 = $i32 + $i33
org.apache.pdfbox.text.TextPosition.hashCode : i34 = $i32 + $i33 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i35 = 31 * i34
org.apache.pdfbox.text.TextPosition.hashCode : $i35 = 31 * i34 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f8 = r0.<org.apache.pdfbox.text.TextPosition: float fontSize>
org.apache.pdfbox.text.TextPosition.hashCode : $f8 = r0.<org.apache.pdfbox.text.TextPosition: float fontSize> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i36 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f8)
org.apache.pdfbox.text.TextPosition.hashCode : $i36 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f8) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i37 = $i35 + $i36
org.apache.pdfbox.text.TextPosition.hashCode : i37 = $i35 + $i36 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i38 = 31 * i37
org.apache.pdfbox.text.TextPosition.hashCode : $i38 = 31 * i37 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i39 = r0.<org.apache.pdfbox.text.TextPosition: int fontSizePt>
org.apache.pdfbox.text.TextPosition.hashCode : $i39 = r0.<org.apache.pdfbox.text.TextPosition: int fontSizePt> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i40 = $i38 + $i39
org.apache.pdfbox.text.TextPosition.hashCode : i40 = $i38 + $i39 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : return i40
org.apache.pdfbox.text.TextPosition.hashCode : $r5 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont font> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i33 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.PDFont: int hashCode()>()
org.apache.pdfbox.text.TextPosition.hashCode : $i33 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.PDFont: int hashCode()>() >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : goto [?= i34 = $i32 + $i33]
org.apache.pdfbox.text.TextPosition.hashCode : goto [?= i34 = $i32 + $i33] >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i34 = $i32 + $i33
org.apache.pdfbox.text.TextPosition.hashCode : $r2 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.util.Matrix textMatrix> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i1 = virtualinvoke $r2.<org.apache.pdfbox.util.Matrix: int hashCode()>()
org.apache.pdfbox.text.TextPosition.hashCode : $i1 = virtualinvoke $r2.<org.apache.pdfbox.util.Matrix: int hashCode()>() >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : goto [?= i0 = $i1]
org.apache.pdfbox.text.TextPosition.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i0 = $i1
