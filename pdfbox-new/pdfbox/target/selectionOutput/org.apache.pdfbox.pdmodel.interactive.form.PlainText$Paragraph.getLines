org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r2 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getLineInstance()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r7 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph: java.lang.String textContent>
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r7 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph: java.lang.String textContent> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r2.<java.text.BreakIterator: void setText(java.lang.String)>($r7)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r2.<java.text.BreakIterator: void setText(java.lang.String)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f2 = f0 / 1000.0F
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f2 = f0 / 1000.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : i0 = virtualinvoke r2.<java.text.BreakIterator: int first()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : i0 = virtualinvoke r2.<java.text.BreakIterator: int first()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : i1 = virtualinvoke r2.<java.text.BreakIterator: int next()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : i1 = virtualinvoke r2.<java.text.BreakIterator: int next()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f3 = 0.0F
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f3 = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r8 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r8 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r3 = $r8
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r3 = $r8 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r9 = new org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r9 = new org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r9.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r9.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r4 = $r9
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r4 = $r9 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if i1 == -1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if i1 == -1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r10 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph: java.lang.String textContent>
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if i1 == -1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f10 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)>(r1, f0)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f10 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)>(r1, f0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void setWidth(float)>($f10)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void setWidth(float)>($f10) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : return r3
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r10 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph: java.lang.String textContent> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r5 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(i0, i1)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r5 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(i0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>(r5)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f4 = $f6 * f2
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f4 = $f6 * f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f3 = f3 + f4
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f3 = f3 + f4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $b2 = f3 cmpl f1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $b2 = f3 cmpl f1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $b2 < 0
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $b2 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $i3 = virtualinvoke r5.<java.lang.String: int length()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $b2 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $b8 = f3 cmpl f1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $b8 = f3 cmpl f1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $b8 < 0
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $b8 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f8 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)>(r1, f0)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $b8 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r13 = new java.text.AttributedString
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r13 = new java.text.AttributedString >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r13.<java.text.AttributedString: void <init>(java.lang.String)>(r5)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r13.<java.text.AttributedString: void <init>(java.lang.String)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r14 = $r13
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r14 = $r13 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r15 = <org.apache.pdfbox.pdmodel.interactive.form.PlainText$TextAttribute: java.text.AttributedCharacterIterator$Attribute WIDTH>
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r15 = <org.apache.pdfbox.pdmodel.interactive.form.PlainText$TextAttribute: java.text.AttributedCharacterIterator$Attribute WIDTH> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f4)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r14.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>($r15, $r16)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r14.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>($r15, $r16) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r17 = new org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r17 = new org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r17.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: void <init>(java.lang.String)>(r5)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r17.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: void <init>(java.lang.String)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r6 = $r17
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r6 = $r17 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r6.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: void setAttributes(java.text.AttributedString)>(r14)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r6.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: void setAttributes(java.text.AttributedString)>(r14) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void addWord(org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word)>(r6)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void addWord(org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word)>(r6) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : i0 = i1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : i0 = i1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : i1 = virtualinvoke r2.<java.text.BreakIterator: int next()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : i1 = virtualinvoke r2.<java.text.BreakIterator: int next()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : goto [?= (branch)]
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if i1 == -1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f8 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)>(r1, f0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void setWidth(float)>($f8)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void setWidth(float)>($f8) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r12 = new org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r12 = new org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r12.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : specialinvoke $r12.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r4 = $r12
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : r4 = $r12 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>(r5)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f3 = $f9 * f2
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f3 = $f9 * f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r13 = new java.text.AttributedString
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $i3 = virtualinvoke r5.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $i4 = $i3 - 1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $i4 = $i3 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $c5 = virtualinvoke r5.<java.lang.String: char charAt(int)>($i4)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $c5 = virtualinvoke r5.<java.lang.String: char charAt(int)>($i4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $i6 = virtualinvoke r5.<java.lang.String: int length()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $b8 = f3 cmpl f1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $i6 = virtualinvoke r5.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $i7 = $i6 - 1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $i7 = $i6 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r11 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i7)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $r11 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i7) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>($r11)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $f7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f5 = $f7 * f2
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f5 = $f7 * f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f3 = f3 - f5
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : f3 = f3 - f5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph.getLines : $b8 = f3 cmpl f1
