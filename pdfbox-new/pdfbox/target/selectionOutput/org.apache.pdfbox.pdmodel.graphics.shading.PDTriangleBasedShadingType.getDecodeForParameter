org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : r1 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType: org.apache.pdfbox.cos.COSArray getDecodeValues()>()
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType: org.apache.pdfbox.cos.COSArray getDecodeValues()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : if r2 == null
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : $i1 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : return r1
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : $i1 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : $i2 = i0 * 2
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : $i2 = i0 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : $i3 = $i2 + 1
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : $i3 = $i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : if $i1 < $i3
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : if $i1 < $i3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : $r3 = new org.apache.pdfbox.pdmodel.common.PDRange
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : if $i1 < $i3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : return r1
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : $r3 = new org.apache.pdfbox.pdmodel.common.PDRange >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>(r2, i0)
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>(r2, i0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : r1 = $r3
org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : r1 = $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType.getDecodeForParameter : return r1
