org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createInputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : if $z0 == 0
org.apache.pdfbox.cos.COSStream.createInputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : $r2 = new java.lang.IllegalStateException
org.apache.pdfbox.cos.COSStream.createInputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void ensureRandomAccessExists(boolean)>(1)
org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void ensureRandomAccessExists(boolean)>(1) >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : $r3 = new org.apache.pdfbox.io.RandomAccessInputStream
org.apache.pdfbox.cos.COSStream.createInputStream : $r3 = new org.apache.pdfbox.io.RandomAccessInputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.createInputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke $r3.<org.apache.pdfbox.io.RandomAccessInputStream: void <init>(org.apache.pdfbox.io.RandomAccessRead)>($r4)
org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke $r3.<org.apache.pdfbox.io.RandomAccessInputStream: void <init>(org.apache.pdfbox.io.RandomAccessRead)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : r1 = $r3
org.apache.pdfbox.cos.COSStream.createInputStream : r1 = $r3 >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : $r5 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>()
org.apache.pdfbox.cos.COSStream.createInputStream : $r5 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createInputStream : $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : $r7 = staticinvoke <org.apache.pdfbox.cos.COSInputStream: org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile)>($r5, r0, r1, $r6)
org.apache.pdfbox.cos.COSStream.createInputStream : $r7 = staticinvoke <org.apache.pdfbox.cos.COSInputStream: org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile)>($r5, r0, r1, $r6) >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : return $r7
org.apache.pdfbox.cos.COSStream.createInputStream : $r2 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot read while there is an open stream writer")
org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot read while there is an open stream writer") >>>>>>>> org.apache.pdfbox.cos.COSStream.createInputStream : throw $r2
