org.apache.pdfbox.pdmodel.PDDocument.setVersion : f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b0 = f0 cmpl f1
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b0 = f0 cmpl f1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b0 != 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : return
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b1 = f0 cmpg f1
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b1 = f0 cmpg f1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b1 >= 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r1 = <org.apache.pdfbox.pdmodel.PDDocument: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $f2 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $f2 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b2 = $f2 cmpl 1.4F
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b2 = $f2 cmpl 1.4F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b2 < 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b2 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b2 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDocument: void setVersion(float)>(f0)
org.apache.pdfbox.pdmodel.PDDocument.setVersion : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDocument: void setVersion(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : return
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r4 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0)
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r4 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setVersion(java.lang.String)>($r4)
org.apache.pdfbox.pdmodel.PDDocument.setVersion : virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setVersion(java.lang.String)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : goto [?= return]
org.apache.pdfbox.pdmodel.PDDocument.setVersion : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : return
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r1 = <org.apache.pdfbox.pdmodel.PDDocument: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : interfaceinvoke $r1.<org.apache.commons.logging.Log: void error(java.lang.Object)>("It\'s not allowed to downgrade the version of a pdf.")
org.apache.pdfbox.pdmodel.PDDocument.setVersion : interfaceinvoke $r1.<org.apache.commons.logging.Log: void error(java.lang.Object)>("It\'s not allowed to downgrade the version of a pdf.") >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : return
