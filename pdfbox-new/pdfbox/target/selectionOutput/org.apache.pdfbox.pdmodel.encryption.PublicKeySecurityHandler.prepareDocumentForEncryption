org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i3 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if $i3 != 256
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if $i3 != 256 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r9 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if $i3 != 256 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if $i3 != 256 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r28 = $r27 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r29 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r29 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r29.<java.io.IOException: void <init>(java.lang.Throwable)>(r28)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r29.<java.io.IOException: void <init>(java.lang.Throwable)>(r28) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : throw $r29
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if r2 != null
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r10 = new org.apache.pdfbox.pdmodel.encryption.PDEncryption
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setFilter(java.lang.String)>("Adobe.PubSec")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setFilter(java.lang.String)>("Adobe.PubSec") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i4 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setFilter(java.lang.String)>("Adobe.PubSec") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i4 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setLength(int)>($i4)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i4 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setLength(int)>($i4) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setVersion(int)>(2)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setLength(int)>($i4) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setVersion(int)>(2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void removeV45filters()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setVersion(int)>(2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void removeV45filters()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setSubFilter(java.lang.String)>("adbe.pkcs7.s4")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void removeV45filters()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setSubFilter(java.lang.String)>("adbe.pkcs7.s4") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r3 = newarray (byte)[20]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setSubFilter(java.lang.String)>("adbe.pkcs7.s4") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r3 = newarray (byte)[20] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r3 = newarray (byte)[20] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r3 = newarray (byte)[20] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $r13 = new java.security.SecureRandom]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $r13 = new java.security.SecureRandom] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r13 = new java.security.SecureRandom
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $r13 = new java.security.SecureRandom] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r13 = new java.security.SecureRandom >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r13 = new java.security.SecureRandom >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r13.<java.security.SecureRandom: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(192, $r13)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r13.<java.security.SecureRandom: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(192, $r13) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r14 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(192, $r13) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r14 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r15 = interfaceinvoke r14.<javax.crypto.SecretKey: byte[] getEncoded()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r14 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r15 = interfaceinvoke r14.<javax.crypto.SecretKey: byte[] getEncoded()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, r3, 0, 20)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r15 = interfaceinvoke r14.<javax.crypto.SecretKey: byte[] getEncoded()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, r3, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r6 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[][] computeRecipientsField(byte[])>(r3)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, r3, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r6 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[][] computeRecipientsField(byte[])>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setRecipients(byte[][])>(r6)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r6 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[][] computeRecipientsField(byte[])>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setRecipients(byte[][])>(r6) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i0 = lengthof r3
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setRecipients(byte[][])>(r6) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i0 = lengthof r3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i1 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i0 = lengthof r3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i1 >= $i5
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i1 >= $i5 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r7 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i1)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i1 >= $i5 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r17 = newarray (byte)[i0]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i1 >= $i5 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r17 = newarray (byte)[i0] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r17, 0, 20)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r17 = newarray (byte)[i0] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r17, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i7 = 20
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r17, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i7 = 20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i2 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i7 = 20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i2 >= $i8
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i2 >= $i8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i2)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i2 >= $i8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i2 >= $i8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r22 = virtualinvoke r21.<java.security.MessageDigest: byte[] digest(byte[])>(r17)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r22 = virtualinvoke r21.<java.security.MessageDigest: byte[] digest(byte[])>(r17) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i11 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r22 = virtualinvoke r21.<java.security.MessageDigest: byte[] digest(byte[])>(r17) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i11 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i12 = $i11 / 8
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i11 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i12 = $i11 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r23 = newarray (byte)[$i12]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i12 = $i11 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r23 = newarray (byte)[$i12] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> = $r23
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r23 = newarray (byte)[$i12] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> = $r23 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r24 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> = $r23 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r24 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i13 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r24 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i13 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i14 = $i13 / 8
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i13 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i14 = $i13 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r22, 0, $r24, 0, $i14)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i14 = $i13 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r22, 0, $r24, 0, $i14) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void setEncryptionDictionary(org.apache.pdfbox.pdmodel.encryption.PDEncryption)>(r2)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r22, 0, $r24, 0, $i14) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void setEncryptionDictionary(org.apache.pdfbox.pdmodel.encryption.PDEncryption)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r25 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void setEncryptionDictionary(org.apache.pdfbox.pdmodel.encryption.PDEncryption)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r25 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r26 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r25 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r26 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke $r25.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>($r26)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r26 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke $r25.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= return]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke $r25.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : return
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r18 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r18 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r19 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r18 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r19 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i9 = lengthof $r19
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r19 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i9 = lengthof $r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, r17, i7, $i9)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i9 = lengthof $r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, r17, i7, $i9) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r20 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, r17, i7, $i9) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r20 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i10 = lengthof $r20
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r20 = virtualinvoke r8.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i10 = lengthof $r20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i7 = i7 + $i10
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i10 = lengthof $r20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i7 = i7 + $i10 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i2 = i2 + 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i7 = i7 + $i10 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r7 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r16 = virtualinvoke r7.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r7 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r16 = virtualinvoke r7.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i6 = lengthof $r16
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r16 = virtualinvoke r7.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i6 = lengthof $r16 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i0 = i0 + $i6
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i6 = lengthof $r16 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i0 = i0 + $i6 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i1 = i1 + 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i0 = i0 + $i6 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r5 = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r12 = new java.lang.RuntimeException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r5 = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r12 = new java.lang.RuntimeException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r12 = new java.lang.RuntimeException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : throw $r12
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : throw $r12 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r10 = new org.apache.pdfbox.pdmodel.encryption.PDEncryption >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r10.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void <init>()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r10 = new org.apache.pdfbox.pdmodel.encryption.PDEncryption >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r10.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = $r10
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r10.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = $r10 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setFilter(java.lang.String)>("Adobe.PubSec")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = $r10 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r27 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r9 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("256 bit key length is not supported yet for public key security")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("256 bit key length is not supported yet for public key security") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : throw $r9
