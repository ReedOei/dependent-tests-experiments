org.apache.pdfbox.filter.ASCII85OutputStream.flush : $z0 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: boolean flushed> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $z0 == 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $z0 == 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : return
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $z0 == 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i1 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i1 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i1 <= 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i1 <= 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : i0 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i1 <= 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i11 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i11 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i12 = $i11 - 1
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i12 = $i11 - 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i12
org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i12 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i12 != 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i12 != 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r9 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i12 != 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r10 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r10 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $c13 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: char terminator>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $c13 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: char terminator> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r10.<java.io.OutputStream: void write(int)>($c13)
org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r10.<java.io.OutputStream: void write(int)>($c13) >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r11 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r11 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r11.<java.io.OutputStream: void write(int)>(62)
org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r11.<java.io.OutputStream: void write(int)>(62) >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r12 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r12 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r12.<java.io.OutputStream: void write(int)>(10)
org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r12.<java.io.OutputStream: void write(int)>(10) >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i14 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int maxline>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i14 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int maxline> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i14
org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i14 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: boolean flushed> = 1
org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: boolean flushed> = 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : specialinvoke r0.<java.io.FilterOutputStream: void flush()>()
org.apache.pdfbox.filter.ASCII85OutputStream.flush : specialinvoke r0.<java.io.FilterOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : return
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r9 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r9.<java.io.OutputStream: void write(int)>(10)
org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r9.<java.io.OutputStream: void write(int)>(10) >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r10 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : i0 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i0 >= 4
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i0 >= 4 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r1 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] indata>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i0 >= 4 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : specialinvoke r0.<org.apache.pdfbox.filter.ASCII85OutputStream: void transformASCII85()>()
org.apache.pdfbox.filter.ASCII85OutputStream.flush : specialinvoke r0.<org.apache.pdfbox.filter.ASCII85OutputStream: void transformASCII85()>() >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r2 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r2 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $b2 = $r2[0]
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $b2 = $r2[0] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $b2 != 122
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $b2 != 122 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : i3 = 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $b2 != 122 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : i4 = 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : i4 = 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i6 = $i5 + 1
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i6 = $i5 + 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i4 >= $i6
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i4 >= $i6 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r4 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i4 >= $i6 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i11 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r4 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $b7 = $r5[i4]
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $b7 = $r5[i4] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r4.<java.io.OutputStream: void write(int)>($b7)
org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r4.<java.io.OutputStream: void write(int)>($b7) >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i8 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i8 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i9 = $i8 - 1
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i9 = $i8 - 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i9
org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i9 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i9 != 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i9 != 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r7 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if $i9 != 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : i4 = i4 + 1
org.apache.pdfbox.filter.ASCII85OutputStream.flush : i4 = i4 + 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : goto [?= $i5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count>]
org.apache.pdfbox.filter.ASCII85OutputStream.flush : goto [?= $i5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count>] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r7 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r7.<java.io.OutputStream: void write(int)>(10)
org.apache.pdfbox.filter.ASCII85OutputStream.flush : virtualinvoke $r7.<java.io.OutputStream: void write(int)>(10) >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i10 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int maxline>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $i10 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int maxline> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i10
org.apache.pdfbox.filter.ASCII85OutputStream.flush : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i10 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : i4 = i4 + 1
org.apache.pdfbox.filter.ASCII85OutputStream.flush : i3 = 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i3 >= 5
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i3 >= 5 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r3 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata>
org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i3 >= 5 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : i4 = 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r3 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r3[i3] = 33
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r3[i3] = 33 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : i3 = i3 + 1
org.apache.pdfbox.filter.ASCII85OutputStream.flush : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : goto [?= (branch)]
org.apache.pdfbox.filter.ASCII85OutputStream.flush : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i3 >= 5
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r1 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] indata> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r1[i0] = 0
org.apache.pdfbox.filter.ASCII85OutputStream.flush : $r1[i0] = 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : i0 = i0 + 1
org.apache.pdfbox.filter.ASCII85OutputStream.flush : i0 = i0 + 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : goto [?= (branch)]
org.apache.pdfbox.filter.ASCII85OutputStream.flush : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.flush : if i0 >= 4
