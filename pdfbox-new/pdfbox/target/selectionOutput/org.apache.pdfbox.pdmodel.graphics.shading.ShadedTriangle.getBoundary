org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1 = newarray (int)[4] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r3 = $r2[0]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r3 = $r2[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d0 = virtualinvoke $r3.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d0 = virtualinvoke $r3.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l6 = staticinvoke <java.lang.Math: long round(double)>($d0)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l6 = staticinvoke <java.lang.Math: long round(double)>($d0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i0 = (int) $l6
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i0 = (int) $l6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r5 = $r4[1]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r5 = $r4[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d1 = virtualinvoke $r5.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d1 = virtualinvoke $r5.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l7 = staticinvoke <java.lang.Math: long round(double)>($d1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l7 = staticinvoke <java.lang.Math: long round(double)>($d1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i1 = (int) $l7
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i1 = (int) $l7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r7 = $r6[2]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r7 = $r6[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d2 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d2 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l8 = staticinvoke <java.lang.Math: long round(double)>($d2)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l8 = staticinvoke <java.lang.Math: long round(double)>($d2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i2 = (int) $l8
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i2 = (int) $l8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r9 = $r8[0]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r9 = $r8[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d3 = virtualinvoke $r9.<java.awt.geom.Point2D: double getY()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d3 = virtualinvoke $r9.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l9 = staticinvoke <java.lang.Math: long round(double)>($d3)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l9 = staticinvoke <java.lang.Math: long round(double)>($d3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i3 = (int) $l9
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i3 = (int) $l9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r11 = $r10[1]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r11 = $r10[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d4 = virtualinvoke $r11.<java.awt.geom.Point2D: double getY()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d4 = virtualinvoke $r11.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l10 = staticinvoke <java.lang.Math: long round(double)>($d4)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l10 = staticinvoke <java.lang.Math: long round(double)>($d4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i4 = (int) $l10
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i4 = (int) $l10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r12 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r12 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r13 = $r12[2]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $r13 = $r12[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d5 = virtualinvoke $r13.<java.awt.geom.Point2D: double getY()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $d5 = virtualinvoke $r13.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l11 = staticinvoke <java.lang.Math: long round(double)>($d5)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $l11 = staticinvoke <java.lang.Math: long round(double)>($d5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i5 = (int) $l11
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : i5 = (int) $l11 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i12, i2)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i12, i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1[0] = $i13
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1[0] = $i13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i14 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i14 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i14, i2)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i14, i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1[1] = $i15
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1[1] = $i15 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i16 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i4)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i16 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i5)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1[2] = $i17
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1[2] = $i17 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i18 = staticinvoke <java.lang.Math: int max(int,int)>(i3, i4)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i18 = staticinvoke <java.lang.Math: int max(int,int)>(i3, i4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i19 = staticinvoke <java.lang.Math: int max(int,int)>($i18, i5)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : $i19 = staticinvoke <java.lang.Math: int max(int,int)>($i18, i5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1[3] = $i19
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : r1[3] = $i19 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.getBoundary : return r1
