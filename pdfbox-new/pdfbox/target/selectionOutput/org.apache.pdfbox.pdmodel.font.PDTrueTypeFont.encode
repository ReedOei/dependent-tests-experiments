org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $r4 == null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r26 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r26 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r27 = virtualinvoke $r26.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r27 = virtualinvoke $r26.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r28 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r28 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z3 = virtualinvoke $r28.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r27)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z3 = virtualinvoke $r28.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r27) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z3 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r29 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r34 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r34 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : i3 = virtualinvoke $r34.<org.apache.fontbox.ttf.TrueTypeFont: int nameToGID(java.lang.String)>(r27)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : i3 = virtualinvoke $r34.<org.apache.fontbox.ttf.TrueTypeFont: int nameToGID(java.lang.String)>(r27) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r35 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map getGIDToCode()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r35 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map getGIDToCode()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r37 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>($r36)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r37 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>($r36) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r38 = (java.lang.Integer) $r37
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r38 = (java.lang.Integer) $r37 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if r38 != null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if r38 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r39 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if r38 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r43 = newarray (byte)[1]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r43 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $i4 = virtualinvoke r38.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $i4 = virtualinvoke r38.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $b5 = (byte) $i4
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $b5 = (byte) $i4 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r43[0] = $b5
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r43[0] = $b5 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : return $r43
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r39 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r40 = newarray (java.lang.Object)[1]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r40 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r40[0] = $r41
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r40[0] = $r41 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X is not available in this font\'s Encoding", $r40)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X is not available in this font\'s Encoding", $r40) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : throw $r39
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r29 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r30 = newarray (java.lang.Object)[2]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r30 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r30[0] = $r31
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r30[0] = $r31 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r32 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r32 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r30[1] = $r32
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r30[1] = $r32 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r30)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r30) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : throw $r29
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z0 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>($r7)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z0 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r8 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r1 = virtualinvoke $r14.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r1 = virtualinvoke $r14.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r2 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getNameToCodeMap()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r2 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getNameToCodeMap()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r16 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r16 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z1 = virtualinvoke $r16.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z1 = virtualinvoke $r16.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z1 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r3 = staticinvoke <org.apache.pdfbox.pdmodel.font.UniUtil: java.lang.String getUniNameOfCodePoint(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r23 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r23 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r24 = (java.lang.Integer) $r23
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r24 = (java.lang.Integer) $r23 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : i1 = virtualinvoke $r24.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : i1 = virtualinvoke $r24.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r25 = newarray (byte)[1]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r25 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $b2 = (byte) i1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $b2 = (byte) i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r25[0] = $b2
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r25[0] = $b2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : return $r25
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r3 = staticinvoke <org.apache.pdfbox.pdmodel.font.UniUtil: java.lang.String getUniNameOfCodePoint(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r17 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r17 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z2 = virtualinvoke $r17.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z2 = virtualinvoke $r17.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z2 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r18 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r23 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r18 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r19 = newarray (java.lang.Object)[2]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r19 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r19[0] = $r20
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r19[0] = $r20 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r21 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r21 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r19[1] = $r21
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r19[1] = $r21 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r19)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r19) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : throw $r18
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r8 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r9 = newarray (java.lang.Object)[2]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r9 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r9[0] = $r10
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r9[0] = $r10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r12 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r12 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r9[1] = $r12
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r9[1] = $r12 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X is not available in this font\'s encoding: %s", $r9)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X is not available in this font\'s encoding: %s", $r9) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : throw $r8
