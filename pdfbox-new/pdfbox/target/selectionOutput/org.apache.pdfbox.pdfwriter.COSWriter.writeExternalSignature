org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $r3 == null
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $r3 == null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r4 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $r3 == null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r5 = new java.lang.IllegalStateException
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r5 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PDF not prepared for setting signature")
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PDF not prepared for setting signature") >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : throw $r5
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r4 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $r4 != null
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $r4 != null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r5 = new java.lang.IllegalStateException
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $r4 != null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : r2 = staticinvoke <org.apache.pdfbox.util.Hex: byte[] getBytes(byte[])>(r1)
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : r2 = staticinvoke <org.apache.pdfbox.util.Hex: byte[] getBytes(byte[])>(r1) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $i1 = lengthof r2
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $i1 = lengthof r2 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l2 = (long) $i1
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l2 = (long) $i1 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long signatureLength>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long signatureLength> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l4 = $l3 - 2L
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l4 = $l3 - 2L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $b5 = $l2 cmp $l4
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $b5 = $l2 cmp $l4 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $b5 <= 0
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $b5 <= 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r6 = new java.io.IOException
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : if $b5 <= 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l6 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long signatureOffset>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l6 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long signatureOffset> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r7 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r7 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l7 = interfaceinvoke $r7.<org.apache.pdfbox.io.RandomAccessRead: long length()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l7 = interfaceinvoke $r7.<org.apache.pdfbox.io.RandomAccessRead: long length()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l8 = $l6 - $l7
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $l8 = $l6 - $l7 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : i0 = (int) $l8
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : i0 = (int) $l8 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r8 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r8 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $i9 = i0 + 1
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $i9 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $i10 = lengthof r2
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $i10 = lengthof r2 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r8, $i9, $i10)
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r8, $i9, $i10) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r9 = new org.apache.pdfbox.io.RandomAccessInputStream
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r9 = new org.apache.pdfbox.io.RandomAccessInputStream >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r10 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r10 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : specialinvoke $r9.<org.apache.pdfbox.io.RandomAccessInputStream: void <init>(org.apache.pdfbox.io.RandomAccessRead)>($r10)
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : specialinvoke $r9.<org.apache.pdfbox.io.RandomAccessInputStream: void <init>(org.apache.pdfbox.io.RandomAccessRead)>($r10) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r11 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream incrementalOutput>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r11 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream incrementalOutput> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>($r9, $r11)
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>($r9, $r11) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r12 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream incrementalOutput>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r12 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream incrementalOutput> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r13 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart>
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r13 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r13)
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r13) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart> = null
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart> = null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : return
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : $r6 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Can\'t write signature, not enough space")
org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Can\'t write signature, not enough space") >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.writeExternalSignature : throw $r6
