org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r1 = new java.util.HashMap >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths> = $r1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths> = $r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName W>
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName W> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r2 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r9)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r2 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $z0 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $z0 = r2 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z0 == 0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r3 = (org.apache.pdfbox.cos.COSArray) r2
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : return
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r3 = (org.apache.pdfbox.cos.COSArray) r2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i0 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i0 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i1 = 0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i1 >= i0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i1 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i6 = i1 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i1 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : return
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i6 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r10 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r10 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r4 = (org.apache.pdfbox.cos.COSNumber) $r10
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r4 = (org.apache.pdfbox.cos.COSNumber) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i1 = i6 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i1 = i6 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r5 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i6)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r5 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i6) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $z1 = r5 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $z1 = r5 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r6 = (org.apache.pdfbox.cos.COSArray) r5
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r16 = (org.apache.pdfbox.cos.COSNumber) r5
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r16 = (org.apache.pdfbox.cos.COSNumber) r5 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $i8 = i1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $i8 = i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i1 = i1 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r17 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i8)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r17 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i8) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r18 = (org.apache.pdfbox.cos.COSNumber) $r17
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r18 = (org.apache.pdfbox.cos.COSNumber) $r17 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i9 = virtualinvoke r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i9 = virtualinvoke r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i10 = virtualinvoke r16.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i10 = virtualinvoke r16.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : f1 = virtualinvoke r18.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : f1 = virtualinvoke r18.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i5 = i9
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i5 = i9 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i5 > i10
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i5 > i10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths>
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i5 > i10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i1 >= i0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i5 = i5 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i5 > i10
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r6 = (org.apache.pdfbox.cos.COSArray) r5 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i2 = virtualinvoke r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i2 = virtualinvoke r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i3 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i3 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i4 = 0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i4 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i4 >= i3
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i4 >= i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r11 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i4)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i4 >= i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r11 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r7 = (org.apache.pdfbox.cos.COSNumber) $r11
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r7 = (org.apache.pdfbox.cos.COSNumber) $r11 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths>
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $i7 = i2 + i4
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $i7 = i2 + i4 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $f0 = virtualinvoke r7.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $f0 = virtualinvoke r7.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i4 = i4 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i4 = i4 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i4 >= i3
