org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r1, $r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r1, $r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z0 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z0 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r7 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName)>($r14)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE1>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE1> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z1 = virtualinvoke $r15.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z1 = virtualinvoke $r15.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_DESC>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MM_TYPE1>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MM_TYPE1> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z4 = virtualinvoke $r21.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z4 = virtualinvoke $r21.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z4 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_DESC>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TRUE_TYPE>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TRUE_TYPE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z7 = virtualinvoke $r28.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z7 = virtualinvoke $r28.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z7 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r29 = new org.apache.pdfbox.pdmodel.font.PDTrueTypeFont
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r30 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE3>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r30 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE3> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z8 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z8 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z8 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r31 = new org.apache.pdfbox.pdmodel.font.PDType3Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r32 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE0>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r32 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE0> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z9 = virtualinvoke $r32.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z9 = virtualinvoke $r32.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z9 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z9 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r33 = new org.apache.pdfbox.pdmodel.font.PDType0Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z9 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r34 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE0>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r34 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE0> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z10 = virtualinvoke $r34.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z10 = virtualinvoke $r34.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z10 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r35 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r36 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE2>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r36 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE2> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z11 = virtualinvoke $r36.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z11 = virtualinvoke $r36.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z11 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z11 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r37 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z11 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r38 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r38 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r39 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r39 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid font subtype \'")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid font subtype \'") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : interfaceinvoke $r38.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r43)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : interfaceinvoke $r38.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r43) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r44 = new org.apache.pdfbox.pdmodel.font.PDType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r44 = new org.apache.pdfbox.pdmodel.font.PDType1Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r44.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r44.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r44
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r37 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type 2 descendant font not allowed")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type 2 descendant font not allowed") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : throw $r37
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r35 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type 0 descendant font not allowed")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type 0 descendant font not allowed") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : throw $r35
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r33 = new org.apache.pdfbox.pdmodel.font.PDType0Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r33.<org.apache.pdfbox.pdmodel.font.PDType0Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r33.<org.apache.pdfbox.pdmodel.font.PDType0Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r33
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r31 = new org.apache.pdfbox.pdmodel.font.PDType3Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r31.<org.apache.pdfbox.pdmodel.font.PDType3Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r31.<org.apache.pdfbox.pdmodel.font.PDType3Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r31
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r29 = new org.apache.pdfbox.pdmodel.font.PDTrueTypeFont >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r29.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r29.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r29
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_DESC> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r23 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r22)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r23 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r22) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z5 = r23 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z5 = r23 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z5 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r24 = (org.apache.pdfbox.cos.COSDictionary) r23
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r27 = new org.apache.pdfbox.pdmodel.font.PDMMType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r27 = new org.apache.pdfbox.pdmodel.font.PDMMType1Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r27.<org.apache.pdfbox.pdmodel.font.PDMMType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r27.<org.apache.pdfbox.pdmodel.font.PDMMType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r27
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r24 = (org.apache.pdfbox.cos.COSDictionary) r23 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r25 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_FILE3>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r25 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_FILE3> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z6 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r25)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z6 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r25) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z6 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r26 = new org.apache.pdfbox.pdmodel.font.PDType1CFont
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r27 = new org.apache.pdfbox.pdmodel.font.PDMMType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r26 = new org.apache.pdfbox.pdmodel.font.PDType1CFont >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r26.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r26.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r26
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_DESC> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r5 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r16)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r5 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z2 = r5 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z2 = r5 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z2 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r17 = (org.apache.pdfbox.cos.COSDictionary) r5
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r20 = new org.apache.pdfbox.pdmodel.font.PDType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r20 = new org.apache.pdfbox.pdmodel.font.PDType1Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r20
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r17 = (org.apache.pdfbox.cos.COSDictionary) r5 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_FILE3>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_FILE3> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z3 = virtualinvoke $r17.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r18)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z3 = virtualinvoke $r17.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r18) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z3 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r19 = new org.apache.pdfbox.pdmodel.font.PDType1CFont
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r20 = new org.apache.pdfbox.pdmodel.font.PDType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r19 = new org.apache.pdfbox.pdmodel.font.PDType1CFont >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r19.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r19.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r19
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r7 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r8 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \'Font\' dictionary but found \'")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \'Font\' dictionary but found \'") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r10 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r10 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r13)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>
