org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l0 = -2L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l1 = 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l1 = 1L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r5 = new java.util.ArrayList
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r5 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : r2 = $r5
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : r2 = $r5 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $z0 == 0
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $i10 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $i10 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $i10 <= 0
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $i10 <= 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l11 = l0 - l1
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $i10 <= 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $i13 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $i13 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r12 = newarray (java.lang.Long)[$i13]
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r12 = newarray (java.lang.Long)[$i13] >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r14 = (java.lang.Long[]) $r13
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r14 = (java.lang.Long[]) $r13 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : return $r14
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l11 = l0 - l1 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l12 = $l11 + 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l12 = $l11 + 1L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $i13 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r6 = (org.apache.pdfbox.pdfwriter.COSWriterXRefEntry) r4
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r6 = (org.apache.pdfbox.pdfwriter.COSWriterXRefEntry) r4 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.cos.COSObjectKey getKey()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.cos.COSObjectKey getKey()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l3 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSObjectKey: long getNumber()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l3 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSObjectKey: long getNumber()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $i4 = (int) $l3
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $i4 = (int) $l3 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l2 = (long) $i4
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l2 = (long) $i4 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l5 = l0 + 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l5 = l0 + 1L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $b6 = l2 cmp $l5
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $b6 = l2 cmp $l5 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $b6 != 0
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $b6 != 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l1 = l1 + 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $b6 != 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $b7 = l0 cmp -2L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $b7 = l0 cmp -2L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $b7 != 0
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $b7 != 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l0 = l2
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : if $b7 != 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l8 = l0 - l1
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l8 = l0 - l1 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l9 = $l8 + 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l9 = $l8 + 1L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l0 = l2
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l0 = l2 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l1 = 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l1 = 1L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l0 = l2 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= (branch)]
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l1 = l1 + 1L >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l0 = l2
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l0 = l2 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= (branch)]
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
