org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z0 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z0 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z0 != 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z3 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z3 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z3 != 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r6 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if i0 <= 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if i0 <= 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i3 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if i0 <= 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z4 == 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r7 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = -1.0F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = -1.0F >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("-")
org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = -1.0F >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r28 := @caughtexception
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r29 = $r28 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r30 = <org.apache.pdfbox.pdfparser.COSParser: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r30 = <org.apache.pdfbox.pdfparser.COSParser: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r30.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Can\'t parse the header version.", r29)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r30.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Can\'t parse the header version.", r29) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $b14 = f0 cmpg 0.0F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $b14 = f0 cmpg 0.0F >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $b14 >= 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $b14 >= 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z6 = r0.<org.apache.pdfbox.pdfparser.COSParser: boolean isLenient>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $b14 >= 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r36 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r36 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : virtualinvoke $r36.<org.apache.pdfbox.cos.COSDocument: void setVersion(float)>(f0)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : virtualinvoke $r36.<org.apache.pdfbox.cos.COSDocument: void setVersion(float)>(f0) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r37 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r37 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source> >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r37.<org.apache.pdfbox.io.RandomAccessRead: void seek(long)>(0L)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r37.<org.apache.pdfbox.io.RandomAccessRead: void seek(long)>(0L) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : return 1
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z6 = r0.<org.apache.pdfbox.pdfparser.COSParser: boolean isLenient> >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z6 == 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = 1.7F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r31 = new java.io.IOException
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r31 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r32 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r32 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting header version: ")
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting header version: ") >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r35)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r35) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : throw $r31
org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = 1.7F >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $r36 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>]
org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $r36 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>] >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r36 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("-") >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i13 = lengthof r5
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("-") >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r28 := @caughtexception
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i13 = lengthof r5 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i13 != 2
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i13 = lengthof r5 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r28 := @caughtexception
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i13 != 2 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r27 = r5[1]
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i13 != 2 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $b14 = f0 cmpg 0.0F]
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i13 != 2 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r28 := @caughtexception
org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $b14 = f0 cmpg 0.0F] >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $b14 = f0 cmpg 0.0F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r27 = r5[1] >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r27)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r27 = r5[1] >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r28 := @caughtexception
org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r27) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $b14 = f0 cmpg 0.0F]
org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r27) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r28 := @caughtexception
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\d.\\d")
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\d.\\d") >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z5 = virtualinvoke r3.<java.lang.String: boolean matches(java.lang.String)>($r10)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z5 = virtualinvoke r3.<java.lang.String: boolean matches(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z5 != 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i4 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = -1.0F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i4 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i5 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i5 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i6 = $i5 + 3
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i6 = $i5 + 3 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i4 >= $i6
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i4 >= $i6 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r11 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i4 >= $i6 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r20 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i7 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i7 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i8 = $i7 + 3
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i8 = $i7 + 3 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i9 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i9 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r21 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r21 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r4 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r4 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i10 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i10 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i11 = $i10 + 3
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i11 = $i10 + 3 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i11) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r24 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r24 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source> >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r25 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset ISO_8859_1>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r25 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset ISO_8859_1> >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r26 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r25)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r26 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r25) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i12 = lengthof $r26
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i12 = lengthof $r26 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r24.<org.apache.pdfbox.io.RandomAccessRead: void rewind(int)>($i12)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r24.<org.apache.pdfbox.io.RandomAccessRead: void rewind(int)>($i12) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = -1.0F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r14 = <org.apache.pdfbox.pdfparser.COSParser: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r14 = <org.apache.pdfbox.pdfparser.COSParser: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r15 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No version found, set to ")
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No version found, set to ") >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as default.")
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as default.") >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r19)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r19) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= f0 = -1.0F]
org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= f0 = -1.0F] >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = -1.0F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i3 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r6 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source> >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r6.<org.apache.pdfbox.io.RandomAccessRead: void seek(long)>(0L)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : interfaceinvoke $r6.<org.apache.pdfbox.io.RandomAccessRead: void seek(long)>(0L) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : return 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z1 != 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i1 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z3 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i1 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i1 <= 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i1 <= 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $i1 <= 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)]
org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)] >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2) >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z2 == 0
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $z3 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)]
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r3 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : goto [?= $z3 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)] >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z3 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)
