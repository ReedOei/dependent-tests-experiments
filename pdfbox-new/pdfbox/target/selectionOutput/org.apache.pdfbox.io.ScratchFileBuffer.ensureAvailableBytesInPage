org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i0 < $i1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i0 < $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $z1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i0 < $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $z1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $z1 == 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $z1 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $z1 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i4 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i4 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i5 = $i4 + 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i5 = $i4 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i5 >= $i6
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i5 >= $i6 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i5 >= $i6 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if z0 == 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void addPage()>()
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void addPage()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : goto [?= return 1]
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : goto [?= return 1] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i7 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i7 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i8 = $i7 + 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i8 = $i7 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i8
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i8 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i9 = $r6[$i8]
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i9 = $r6[$i8] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r7 = virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: byte[] readPage(int)>($i9)
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r7 = virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: byte[] readPage(int)>($i9) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r7
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r7 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l11 = (long) $i10
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l11 = (long) $i10 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i12 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i12 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l13 = (long) $i12
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l13 = (long) $i12 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l14 = $l11 * $l13
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l14 = $l11 * $l13 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l14
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l14 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : goto [?= return 1]
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : goto [?= return 1] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i3 = $r3[$i2]
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i3 = $r3[$i2] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : virtualinvoke $r2.<org.apache.pdfbox.io.ScratchFile: void writePage(int,byte[])>($i3, $r4)
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : virtualinvoke $r2.<org.apache.pdfbox.io.ScratchFile: void writePage(int,byte[])>($i3, $r4) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i4 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
