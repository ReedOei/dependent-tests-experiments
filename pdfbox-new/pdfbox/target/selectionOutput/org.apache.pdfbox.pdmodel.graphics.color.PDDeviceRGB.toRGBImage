org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: void init()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r5 = new java.awt.image.ComponentColorModel
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r5 = new java.awt.image.ComponentColorModel >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: java.awt.color.ColorSpace awtColorSpace>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: java.awt.color.ColorSpace awtColorSpace> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r7 = virtualinvoke r1.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r7 = virtualinvoke r1.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $i4 = virtualinvoke $r7.<java.awt.image.DataBuffer: int getDataType()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $i4 = virtualinvoke $r7.<java.awt.image.DataBuffer: int getDataType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : specialinvoke $r5.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>($r6, 0, 0, 1, $i4)
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : specialinvoke $r5.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>($r6, 0, 0, 1, $i4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : r2 = $r5
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : r2 = $r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r8 = new java.awt.image.BufferedImage
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r8 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : specialinvoke $r8.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r2, r1, 0, null)
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : specialinvoke $r8.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r2, r1, 0, null) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : r3 = $r8
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : r3 = $r8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r9 = new java.awt.image.BufferedImage
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $r9 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $i5 = virtualinvoke r3.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $i5 = virtualinvoke r3.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $i6 = virtualinvoke r3.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $i6 = virtualinvoke r3.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : specialinvoke $r9.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i5, $i6, 1)
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : specialinvoke $r9.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i5, $i6, 1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : r4 = $r9
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : r4 = $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i0 = virtualinvoke r3.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i0 = virtualinvoke r3.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i1 = virtualinvoke r3.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i1 = virtualinvoke r3.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i2 = 0
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : if i2 >= i0
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : if i2 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i3 = 0
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : if i2 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : return r4
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i3 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : if i3 >= i1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : if i3 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $i7 = virtualinvoke r3.<java.awt.image.BufferedImage: int getRGB(int,int)>(i2, i3)
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : if i3 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i2 = i2 + 1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : if i2 >= i0
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : $i7 = virtualinvoke r3.<java.awt.image.BufferedImage: int getRGB(int,int)>(i2, i3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : virtualinvoke r4.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i2, i3, $i7)
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : virtualinvoke r4.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i2, i3, $i7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i3 = i3 + 1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGBImage : if i3 >= i1
