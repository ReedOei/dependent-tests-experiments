org.apache.pdfbox.util.DateConverter.toCalendar : if r0 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $r3 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.pdfbox.util.DateConverter.toCalendar : if r0 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : return null
org.apache.pdfbox.util.DateConverter.toCalendar : $r3 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>()
org.apache.pdfbox.util.DateConverter.toCalendar : $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : if $z0 == 0
org.apache.pdfbox.util.DateConverter.toCalendar : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : return null
org.apache.pdfbox.util.DateConverter.toCalendar : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $r4 = new java.text.ParsePosition
org.apache.pdfbox.util.DateConverter.toCalendar : $r4 = new java.text.ParsePosition >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0)
org.apache.pdfbox.util.DateConverter.toCalendar : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0) >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : r1 = $r4
org.apache.pdfbox.util.DateConverter.toCalendar : r1 = $r4 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, r1, " ")
org.apache.pdfbox.util.DateConverter.toCalendar : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, r1, " ") >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "D:", r1)
org.apache.pdfbox.util.DateConverter.toCalendar : staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "D:", r1) >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : r2 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar parseDate(java.lang.String,java.text.ParsePosition)>(r0, r1)
org.apache.pdfbox.util.DateConverter.toCalendar : r2 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar parseDate(java.lang.String,java.text.ParsePosition)>(r0, r1) >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : if r2 == null
org.apache.pdfbox.util.DateConverter.toCalendar : if r2 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.toCalendar : if r2 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : return null
org.apache.pdfbox.util.DateConverter.toCalendar : $i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.toCalendar : $i2 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : if $i1 == $i2
org.apache.pdfbox.util.DateConverter.toCalendar : if $i1 == $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : return null
org.apache.pdfbox.util.DateConverter.toCalendar : if $i1 == $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : return r2
