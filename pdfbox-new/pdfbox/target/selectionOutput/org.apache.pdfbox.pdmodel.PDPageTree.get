org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r5 = new java.lang.IndexOutOfBoundsException
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree.get : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : if $z0 == 0
org.apache.pdfbox.pdmodel.PDPageTree.get : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.get : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : if i1 != i0
org.apache.pdfbox.pdmodel.PDPageTree.get : if i1 != i0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : return r1
org.apache.pdfbox.pdmodel.PDPageTree.get : if i1 != i0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r21 = new java.lang.IllegalStateException
org.apache.pdfbox.pdmodel.PDPageTree.get : $r21 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r21.<java.lang.IllegalStateException: void <init>()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r21.<java.lang.IllegalStateException: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : throw $r21
org.apache.pdfbox.pdmodel.PDPageTree.get : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : i2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r9, 0)
org.apache.pdfbox.pdmodel.PDPageTree.get : i2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r9, 0) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $i4 = i1 + i2
org.apache.pdfbox.pdmodel.PDPageTree.get : $i4 = i1 + i2 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 > $i4
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 > $i4 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r10 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: java.util.List getKids(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 > $i4 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r16 = new java.lang.IndexOutOfBoundsException
org.apache.pdfbox.pdmodel.PDPageTree.get : $r16 = new java.lang.IndexOutOfBoundsException >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r17 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.PDPageTree.get : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index out of bounds: ")
org.apache.pdfbox.pdmodel.PDPageTree.get : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index out of bounds: ") >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.pdfbox.pdmodel.PDPageTree.get : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r16.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r20)
org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r16.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : throw $r16
org.apache.pdfbox.pdmodel.PDPageTree.get : $r10 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: java.util.List getKids(org.apache.pdfbox.cos.COSDictionary)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : if $z1 == 0
org.apache.pdfbox.pdmodel.PDPageTree.get : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r15 = new java.lang.IllegalStateException
org.apache.pdfbox.pdmodel.PDPageTree.get : $r15 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : throw $r15
org.apache.pdfbox.pdmodel.PDPageTree.get : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : r4 = (org.apache.pdfbox.cos.COSDictionary) $r11
org.apache.pdfbox.pdmodel.PDPageTree.get : r4 = (org.apache.pdfbox.cos.COSDictionary) $r11 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $z2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)>(r4)
org.apache.pdfbox.pdmodel.PDPageTree.get : $z2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : if $z2 == 0
org.apache.pdfbox.pdmodel.PDPageTree.get : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.get : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : i1 = i1 + 1
org.apache.pdfbox.pdmodel.PDPageTree.get : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 != i1
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 != i1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r14 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>(i0, r4, i1)
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 != i1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.PDPageTree.get : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : $r14 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>(i0, r4, i1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : return $r14
org.apache.pdfbox.pdmodel.PDPageTree.get : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : i3 = virtualinvoke r4.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r12, 0)
org.apache.pdfbox.pdmodel.PDPageTree.get : i3 = virtualinvoke r4.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r12, 0) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $i5 = i1 + i3
org.apache.pdfbox.pdmodel.PDPageTree.get : $i5 = i1 + i3 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 > $i5
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 > $i5 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r13 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>(i0, r4, i1)
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 > $i5 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : i1 = i1 + i3
org.apache.pdfbox.pdmodel.PDPageTree.get : i1 = i1 + i3 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : goto [?= (branch)]
org.apache.pdfbox.pdmodel.PDPageTree.get : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.PDPageTree.get : $r13 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>(i0, r4, i1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : return $r13
org.apache.pdfbox.pdmodel.PDPageTree.get : $r5 = new java.lang.IndexOutOfBoundsException >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.PDPageTree.get : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index out of bounds: ")
org.apache.pdfbox.pdmodel.PDPageTree.get : $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index out of bounds: ") >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.pdfbox.pdmodel.PDPageTree.get : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8)
org.apache.pdfbox.pdmodel.PDPageTree.get : specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.get : throw $r5
