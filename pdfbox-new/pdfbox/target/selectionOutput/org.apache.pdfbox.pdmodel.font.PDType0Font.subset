org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean willBeSubset()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $r1 = new java.lang.IllegalStateException
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder embedder>
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder embedder> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder: void subset()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder: void subset()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : if $r3 == null
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : if $r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : if $r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : return
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : virtualinvoke $r4.<org.apache.fontbox.ttf.TrueTypeFont: void close()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : virtualinvoke $r4.<org.apache.fontbox.ttf.TrueTypeFont: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.ttf.TrueTypeFont ttf> = null
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.ttf.TrueTypeFont ttf> = null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : return
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : $r1 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This font was created with subsetting disabled")
org.apache.pdfbox.pdmodel.font.PDType0Font.subset : specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This font was created with subsetting disabled") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.subset : throw $r1
