org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r1 = new java.io.IOException
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l2 cmp $l3
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l2 cmp $l3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i16 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i16 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i16
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i16 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i17 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i17 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i17)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i17) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r11 = (byte[]) $r10
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r11 = (byte[]) $r10 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r11
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i19 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i19 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l20 = (long) $i19
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l20 = (long) $i19 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l21 = $l18 % $l20
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l21 = $l18 % $l20 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i22 = (int) $l21
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i22 = (int) $l21 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i22
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i22 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : return
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l7 = (long) $i6
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l7 = (long) $i6 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l8 = $l5 / $l7
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l8 = $l5 / $l7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i9 = (int) $l8
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i9 = (int) $l8 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i9
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i9 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l10 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l10 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i11 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i11 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l12 = (long) $i11
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l12 = (long) $i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l13 = $l10 % $l12
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l13 = $l10 % $l12 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i14 = (int) $l13
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i14 = (int) $l13 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i14
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i14 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i15)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i15) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r8 = (byte[]) $r7
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r8 = (byte[]) $r7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r8
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r8 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : goto [?= return]
org.apache.pdfbox.io.RandomAccessBuffer.seek : goto [?= return] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : return
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r1 = new java.io.IOException >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid position ")
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid position ") >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r5)
org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r5) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : throw $r1
