org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z1 = r3 instanceof org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z1 != 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r18 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: boolean isEncryptMetaData()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: boolean isEncryptMetaData()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void setDecryptMetadata(boolean)>($z2)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void setDecryptMetadata(boolean)>($z2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $i3 == 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $i3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $i3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r4 = (org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial) r3
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r4 = (org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial) r3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : z0 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r4 = (org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial) r3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r51 = $r50 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r52 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r52 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r52.<java.io.IOException: void <init>(java.lang.Throwable)>(r51)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r52.<java.io.IOException: void <init>(java.lang.Throwable)>(r51) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : throw $r52
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : z0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.cert.X509Certificate getCertificate()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : z0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.cert.X509Certificate getCertificate()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r6 = null
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.cert.X509Certificate getCertificate()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r6 = null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r5 == null
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r6 = null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r19 = new org.bouncycastle.cert.X509CertificateHolder
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r7 = null
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r7 = null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r7 = null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r8 = newarray (byte[])[$i5]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r8 = newarray (byte[])[$i5] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i0 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r8 = newarray (byte[])[$i5] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i1 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r21 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r9 = $r21
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r9 = $r21 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r9 = $r21 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i1 >= $i6
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i1 >= $i6 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r10 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i1)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i1 >= $i6 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if z0 == 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i1 >= $i6 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r7 != null
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r31 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r31 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r32 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r31 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r32 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r32 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The certificate matches none of ")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The certificate matches none of ") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The certificate matches none of ") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recipient entries")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recipient entries") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r36 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" recipient entries") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r36 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r36 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r38)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : throw $r31
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : throw $r31 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r31 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i8 = lengthof r7
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i8 = lengthof r7 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $i8 == 24
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i8 = lengthof r7 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $i8 == 24 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r39 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $i8 == 24 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r40 = newarray (byte)[4]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $i8 == 24 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r40 = newarray (byte)[4] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 20, r40, 0, 4)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r40 = newarray (byte)[4] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 20, r40, 0, 4) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r41 = new org.apache.pdfbox.pdmodel.encryption.AccessPermission
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 20, r40, 0, 4) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r41 = new org.apache.pdfbox.pdmodel.encryption.AccessPermission >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r41.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void <init>(byte[])>(r40)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r41 = new org.apache.pdfbox.pdmodel.encryption.AccessPermission >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r41.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void <init>(byte[])>(r40) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r42 = $r41
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r41.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void <init>(byte[])>(r40) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r42 = $r41 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r42.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setReadOnly()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r42 = $r41 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r42.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setReadOnly()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void setCurrentAccessPermission(org.apache.pdfbox.pdmodel.encryption.AccessPermission)>(r42)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r42.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setReadOnly()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void setCurrentAccessPermission(org.apache.pdfbox.pdmodel.encryption.AccessPermission)>(r42) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i9 = i0 + 20
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void setCurrentAccessPermission(org.apache.pdfbox.pdmodel.encryption.AccessPermission)>(r42) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i9 = i0 + 20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r43 = newarray (byte)[$i9]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i9 = i0 + 20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r43 = newarray (byte)[$i9] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r43, 0, 20)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r43 = newarray (byte)[$i9] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r43, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i10 = 20
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r43, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i10 = 20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r44 = r8
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i10 = 20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r44 = r8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i11 = lengthof r44
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r44 = r8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i11 = lengthof r44 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i12 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i11 = lengthof r44 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i12 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i12 >= i11
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i12 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i12 >= i11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r45 = r44[i12]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i12 >= i11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r46 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i12 >= i11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r46 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r47 = virtualinvoke r46.<java.security.MessageDigest: byte[] digest(byte[])>(r43)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r46 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r47 = virtualinvoke r46.<java.security.MessageDigest: byte[] digest(byte[])>(r43) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i15 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r47 = virtualinvoke r46.<java.security.MessageDigest: byte[] digest(byte[])>(r43) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i15 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i16 = $i15 / 8
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i15 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i16 = $i15 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r48 = newarray (byte)[$i16]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i16 = $i15 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r48 = newarray (byte)[$i16] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> = $r48
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r48 = newarray (byte)[$i16] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> = $r48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r49 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> = $r48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r49 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i17 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r49 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i17 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i18 = $i17 / 8
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i17 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i18 = $i17 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r47, 0, $r49, 0, $i18)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i18 = $i17 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r47, 0, $r49, 0, $i18) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= return]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r47, 0, $r49, 0, $i18) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : return
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r45 = r44[i12] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i13 = lengthof r45
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r45 = r44[i12] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i13 = lengthof r45 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r45, 0, r43, i10, $i13)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i13 = lengthof r45 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r45, 0, r43, i10, $i13) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i14 = lengthof r45
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r45, 0, r43, i10, $i13) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i14 = lengthof r45 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i10 = i10 + $i14
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i14 = lengthof r45 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i10 = i10 + $i14 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i12 = i12 + 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i10 = i10 + $i14 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i12 = i12 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= (branch)]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i12 = i12 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if i12 >= i11
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r39 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>("The enveloped data does not contain 24 bytes")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r39 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>("The enveloped data does not contain 24 bytes") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : throw $r39
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>("The enveloped data does not contain 24 bytes") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : throw $r39 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r10 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r11 = virtualinvoke r10.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r10 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r11 = virtualinvoke r10.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r22 = new org.bouncycastle.cms.CMSEnvelopedData
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r11 = virtualinvoke r10.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r22 = new org.bouncycastle.cms.CMSEnvelopedData >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r22.<org.bouncycastle.cms.CMSEnvelopedData: void <init>(byte[])>(r11)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r22 = new org.bouncycastle.cms.CMSEnvelopedData >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r22.<org.bouncycastle.cms.CMSEnvelopedData: void <init>(byte[])>(r11) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r12 = $r22
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r22.<org.bouncycastle.cms.CMSEnvelopedData: void <init>(byte[])>(r11) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r12 = $r22 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r23 = virtualinvoke r12.<org.bouncycastle.cms.CMSEnvelopedData: org.bouncycastle.cms.RecipientInformationStore getRecipientInfos()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r12 = $r22 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r23 = virtualinvoke r12.<org.bouncycastle.cms.CMSEnvelopedData: org.bouncycastle.cms.RecipientInformationStore getRecipientInfos()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r13 = virtualinvoke $r23.<org.bouncycastle.cms.RecipientInformationStore: java.util.Collection getRecipients()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r23 = virtualinvoke r12.<org.bouncycastle.cms.CMSEnvelopedData: org.bouncycastle.cms.RecipientInformationStore getRecipientInfos()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r13 = virtualinvoke $r23.<org.bouncycastle.cms.RecipientInformationStore: java.util.Collection getRecipients()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i2 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r13 = virtualinvoke $r23.<org.bouncycastle.cms.RecipientInformationStore: java.util.Collection getRecipients()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r14 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r14 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r14 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z3 == 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r24 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r8[i1] = r11
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r8[i1] = r11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i7 = lengthof r11
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r8[i1] = r11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i7 = lengthof r11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i0 = i0 + $i7
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i7 = lengthof r11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i0 = i0 + $i7 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i1 = i1 + 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i0 = i0 + $i7 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= $i6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= $i6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= $i6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r24 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r15 = (org.bouncycastle.cms.RecipientInformation) $r24
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r24 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r15 = (org.bouncycastle.cms.RecipientInformation) $r24 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r16 = virtualinvoke r15.<org.bouncycastle.cms.RecipientInformation: org.bouncycastle.cms.RecipientId getRID()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r15 = (org.bouncycastle.cms.RecipientInformation) $r24 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r16 = virtualinvoke r15.<org.bouncycastle.cms.RecipientInformation: org.bouncycastle.cms.RecipientId getRID()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if z0 != 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r16 = virtualinvoke r15.<org.bouncycastle.cms.RecipientInformation: org.bouncycastle.cms.RecipientId getRID()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z4 = virtualinvoke r16.<org.bouncycastle.cms.RecipientId: boolean match(java.lang.Object)>(r6)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i2 = i2 + 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r5 == null
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z5 = r16 instanceof org.bouncycastle.cms.KeyTransRecipientId
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z5 = r16 instanceof org.bouncycastle.cms.KeyTransRecipientId >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z5 == 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z5 = r16 instanceof org.bouncycastle.cms.KeyTransRecipientId >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r30 = (org.bouncycastle.cms.KeyTransRecipientId) r16
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r30 = (org.bouncycastle.cms.KeyTransRecipientId) r16 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void appendCertInfo(java.lang.StringBuilder,org.bouncycastle.cms.KeyTransRecipientId,java.security.cert.X509Certificate,org.bouncycastle.cert.X509CertificateHolder)>(r9, $r30, r5, r6)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r30 = (org.bouncycastle.cms.KeyTransRecipientId) r16 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void appendCertInfo(java.lang.StringBuilder,org.bouncycastle.cms.KeyTransRecipientId,java.security.cert.X509Certificate,org.bouncycastle.cert.X509CertificateHolder)>(r9, $r30, r5, r6) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void appendCertInfo(java.lang.StringBuilder,org.bouncycastle.cms.KeyTransRecipientId,java.security.cert.X509Certificate,org.bouncycastle.cert.X509CertificateHolder)>(r9, $r30, r5, r6) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z4 = virtualinvoke r16.<org.bouncycastle.cms.RecipientId: boolean match(java.lang.Object)>(r6) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z4 == 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $z4 = virtualinvoke r16.<org.bouncycastle.cms.RecipientId: boolean match(java.lang.Object)>(r6) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : z0 = 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : i2 = i2 + 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : z0 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r25 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.Key getPrivateKey()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : z0 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r25 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.Key getPrivateKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r17 = (java.security.PrivateKey) $r25
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r25 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.Key getPrivateKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r17 = (java.security.PrivateKey) $r25 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r26 = new org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r17 = (java.security.PrivateKey) $r25 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r26 = new org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r26.<org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient: void <init>(java.security.PrivateKey)>(r17)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r26 = new org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r26.<org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient: void <init>(java.security.PrivateKey)>(r17) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r7 = virtualinvoke r15.<org.bouncycastle.cms.RecipientInformation: byte[] getContent(org.bouncycastle.cms.Recipient)>($r26)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r26.<org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient: void <init>(java.security.PrivateKey)>(r17) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r7 = virtualinvoke r15.<org.bouncycastle.cms.RecipientInformation: byte[] getContent(org.bouncycastle.cms.Recipient)>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= r8[i1] = r11]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r7 = virtualinvoke r15.<org.bouncycastle.cms.RecipientInformation: byte[] getContent(org.bouncycastle.cms.Recipient)>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= r8[i1] = r11] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r8[i1] = r11
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : goto [?= r8[i1] = r11] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r19 = new org.bouncycastle.cert.X509CertificateHolder >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r20 = virtualinvoke r5.<java.security.cert.X509Certificate: byte[] getEncoded()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r19 = new org.bouncycastle.cert.X509CertificateHolder >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r20 = virtualinvoke r5.<java.security.cert.X509Certificate: byte[] getEncoded()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r19.<org.bouncycastle.cert.X509CertificateHolder: void <init>(byte[])>($r20)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r20 = virtualinvoke r5.<java.security.cert.X509Certificate: byte[] getEncoded()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r19.<org.bouncycastle.cert.X509CertificateHolder: void <init>(byte[])>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r6 = $r19
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r19.<org.bouncycastle.cert.X509CertificateHolder: void <init>(byte[])>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r6 = $r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r7 = null
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r6 = $r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r50 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $i4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> = $i4
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> = $i4 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : r4 = (org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial) r3
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : $r18 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("Provided decryption material is not compatible with the document")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("Provided decryption material is not compatible with the document") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareForDecryption : throw $r18
