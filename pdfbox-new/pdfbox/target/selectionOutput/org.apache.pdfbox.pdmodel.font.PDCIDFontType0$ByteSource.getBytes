org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource: org.apache.pdfbox.pdmodel.font.PDCIDFontType0 this$0> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : r1 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.common.PDStream getFontFile3()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : r1 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.common.PDStream getFontFile3()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : $r5 = staticinvoke <org.apache.pdfbox.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r4)
org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : $r5 = staticinvoke <org.apache.pdfbox.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource.getBytes : return $r5
