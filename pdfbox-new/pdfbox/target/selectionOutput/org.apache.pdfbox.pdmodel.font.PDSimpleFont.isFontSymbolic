org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: java.lang.Boolean getSymbolicFlag()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if r1 == null
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : return r1
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: boolean isStandard14()>()
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: boolean isStandard14()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z0 == 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $r6 != null
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $r6 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z4 = r0 instanceof org.apache.pdfbox.pdmodel.font.PDTrueTypeFont
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $r6 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z5 = $r9 instanceof org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z5 = $r9 instanceof org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z5 != 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : return $r12
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z6 = $r10 instanceof org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z6 = $r10 instanceof org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z6 != 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z6 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z6 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z7 = $r11 instanceof org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z7 = $r11 instanceof org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z7 == 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r13 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r13 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z8 = $r13 instanceof org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z8 = $r13 instanceof org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z8 == 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r14 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : return null
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r14 = r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r15 = (org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding) $r14
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r15 = (org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding) $r14 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r16 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: java.util.Map getDifferences()>()
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r16 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: java.util.Map getDifferences()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : r18 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : r18 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z9 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z9 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z9 == 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z9 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z9 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : return $r25
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : r3 = (java.lang.String) $r19
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : r3 = (java.lang.String) $r19 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r20 = ".notdef"
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r20 = ".notdef" >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z10 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z10 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z10 == 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r21 = <org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding: org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding INSTANCE>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r21 = <org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding: org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z11 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding: boolean contains(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z11 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding: boolean contains(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z11 == 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z11 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r22 = <org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding: org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding INSTANCE>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z11 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : return $r24
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r22 = <org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding: org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z12 = virtualinvoke $r22.<org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding: boolean contains(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z12 = virtualinvoke $r22.<org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding: boolean contains(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z12 == 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z12 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r23 = <org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding: org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding INSTANCE>
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z12 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r23 = <org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding: org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z13 = virtualinvoke $r23.<org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding: boolean contains(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z13 = virtualinvoke $r23.<org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding: boolean contains(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z13 != 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z13 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z13 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : goto [?= $z9 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : goto [?= $z9 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z9 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : goto [?= $z9 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z4 = r0 instanceof org.apache.pdfbox.pdmodel.font.PDTrueTypeFont >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z4 != 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z4 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r7 = new java.lang.IllegalStateException
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z4 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : return $r8
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r7 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PDFBox bug: encoding should not be null!")
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PDFBox bug: encoding should not be null!") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : throw $r7
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : r2 = staticinvoke <org.apache.pdfbox.pdmodel.font.Standard14Fonts: java.lang.String getMappedFontName(java.lang.String)>($r4)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : r2 = staticinvoke <org.apache.pdfbox.pdmodel.font.Standard14Fonts: java.lang.String getMappedFontName(java.lang.String)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Symbol")
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Symbol") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z1 != 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ZapfDingbats")
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z3 = 1
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z3 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : goto [?= $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)]
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : goto [?= $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : return $r5
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ZapfDingbats") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z2 == 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z3 = 1
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z3 = 0
org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $z3 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic : $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
