org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i0 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: int degree> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i0 != 1
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: int degree>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: int degree> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i1 != 2
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i1 != 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r9 = new java.awt.Point
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i1 != 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r12 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r12 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r13 = $r12[1]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r13 = $r12[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r14 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r14 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r15 = $r14[2]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r15 = $r14[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r13, $r15)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r13, $r15) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d5 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v0>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d5 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v0> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d6 = d4 * $d5
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d6 = d4 * $d5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b6 = $d6 cmpg 0.0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b6 = $d6 cmpg 0.0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b6 >= 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b6 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b6 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r16 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r16 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r17 = $r16[2]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r17 = $r16[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r18 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r18 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r19 = $r18[0]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r19 = $r18[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r17, $r19)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r17, $r19) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d7 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v1>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d7 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v1> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d8 = d0 * $d7
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d8 = d0 * $d7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b7 = $d8 cmpg 0.0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b7 = $d8 cmpg 0.0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b7 >= 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b7 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b7 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r20 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r20 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r21 = $r20[0]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r21 = $r20[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r22 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r22 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r23 = $r22[1]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r23 = $r22[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r21, $r23)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r21, $r23) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d9 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v2>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d9 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v2> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d10 = d1 * $d9
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d10 = d1 * $d9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b8 = $d10 cmpl 0.0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b8 = $d10 cmpl 0.0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b8 < 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b8 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z6 = 1
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b8 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z6 = 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z6 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return $z6
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z6 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : goto [?= return $z6]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : goto [?= return $z6] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return $z6
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r9 = new java.awt.Point >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $l2 = staticinvoke <java.lang.Math: long round(double)>($d2)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $l2 = staticinvoke <java.lang.Math: long round(double)>($d2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i3 = (int) $l2
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i3 = (int) $l2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d3 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d3 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $l4 = staticinvoke <java.lang.Math: long round(double)>($d3)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $l4 = staticinvoke <java.lang.Math: long round(double)>($d3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i5 = (int) $l4
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i5 = (int) $l4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : specialinvoke $r9.<java.awt.Point: void <init>(int,int)>($i3, $i5)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : specialinvoke $r9.<java.awt.Point: void <init>(int,int)>($i3, $i5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : r2 = $r9
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : r2 = $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: org.apache.pdfbox.pdmodel.graphics.shading.Line line>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: org.apache.pdfbox.pdmodel.graphics.shading.Line line> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r11 = $r10.<org.apache.pdfbox.pdmodel.graphics.shading.Line: java.util.Set linePoints>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r11 = $r10.<org.apache.pdfbox.pdmodel.graphics.shading.Line: java.util.Set linePoints> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z5 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z5 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return $z5
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r4 = $r3[0]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r4 = $r3[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, r1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r6 = $r5[1]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r6 = $r5[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r6, r1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r6, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z2 = $z0 | $z1
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z2 = $z0 | $z1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r8 = $r7[2]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r8 = $r7[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r8, r1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r8, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z4 = $z2 | $z3
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z4 = $z2 | $z3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return $z4
