org.apache.pdfbox.pdfparser.BaseParser.readLine : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $z0 = interfaceinvoke $r2.<org.apache.pdfbox.pdfparser.SequentialSource: boolean isEOF()>()
org.apache.pdfbox.pdfparser.BaseParser.readLine : $z0 = interfaceinvoke $r2.<org.apache.pdfbox.pdfparser.SequentialSource: boolean isEOF()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z0 == 0
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r3 = new java.io.IOException
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r4 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(11)
org.apache.pdfbox.pdfparser.BaseParser.readLine : specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(11) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : r1 = $r4
org.apache.pdfbox.pdfparser.BaseParser.readLine : r1 = $r4 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $i1 = interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.readLine : $i1 = interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : i0 = $i1
org.apache.pdfbox.pdfparser.BaseParser.readLine : i0 = $i1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : if $i1 == -1
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $i1 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEOL(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $i1 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $z2 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isCR(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.readLine : $z2 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isCR(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z2 == 0
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r7 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : return $r9
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r7 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $i3 = interfaceinvoke $r7.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>()
org.apache.pdfbox.pdfparser.BaseParser.readLine : $i3 = interfaceinvoke $r7.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $z3 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isLF(int)>($i3)
org.apache.pdfbox.pdfparser.BaseParser.readLine : $z3 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isLF(int)>($i3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z3 == 0
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r8 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r8 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : interfaceinvoke $r8.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.readLine : interfaceinvoke $r8.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readLine : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEOL(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z1 == 0
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : goto [?= $z2 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isCR(int)>(i0)]
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $c2 = (char) i0
org.apache.pdfbox.pdfparser.BaseParser.readLine : $c2 = (char) i0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2)
org.apache.pdfbox.pdfparser.BaseParser.readLine : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : goto [?= $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>]
org.apache.pdfbox.pdfparser.BaseParser.readLine : goto [?= $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : goto [?= $z2 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isCR(int)>(i0)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $z2 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isCR(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r3 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Error: End-of-File, expected line")
org.apache.pdfbox.pdfparser.BaseParser.readLine : specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Error: End-of-File, expected line") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : throw $r3
