org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean willBeSubset()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : $r1 = new java.lang.IllegalStateException
org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder embedder>
org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder embedder> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder: void addToSubset(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder: void addToSubset(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : return
org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : $r1 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This font was created with subsetting disabled")
org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This font was created with subsetting disabled") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.addToSubset : throw $r1
