org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r2 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r3 = $r2
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r3 = $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r4 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: java.awt.image.Raster readJPEGRaster(java.io.InputStream)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r4 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: java.awt.image.Raster readJPEGRaster(java.io.InputStream)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r3.<java.io.ByteArrayInputStream: void reset()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r3.<java.io.ByteArrayInputStream: void reset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $i0 = virtualinvoke r4.<java.awt.image.Raster: int getNumDataElements()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $i0 = virtualinvoke r4.<java.awt.image.Raster: int getNumDataElements()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : tableswitch($i0) {     case 1:
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : tableswitch($i0) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : tableswitch($i0) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r9 = new java.lang.UnsupportedOperationException
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : tableswitch($i0) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : tableswitch($i0) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : goto [?= $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject]
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : goto [?= $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DCT_DECODE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DCT_DECODE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $i2 = virtualinvoke r4.<java.awt.image.Raster: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $i2 = virtualinvoke r4.<java.awt.image.Raster: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $i3 = virtualinvoke r4.<java.awt.image.Raster: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $i3 = virtualinvoke r4.<java.awt.image.Raster: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r14.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, r3, $r6, $i2, $i3, 8, r5)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r14.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, r3, $r6, $i2, $i3, 8, r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r7 = $r14
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r7 = $r14 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $z0 = r5 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $z0 = r5 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r15 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : return r7
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r15 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r15.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r15.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r8 = $r15
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r8 = $r15 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r16 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ONE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r16 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ONE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r16)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r17 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r17 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r17)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r18 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ONE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r18 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ONE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r19 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r19 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r20 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ONE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r20 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ONE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r20)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r21 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r21 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r21)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r21) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r22 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ONE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r22 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ONE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r22)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r22) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r23 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r23 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r23)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r23) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r7.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: void setDecode(org.apache.pdfbox.cos.COSArray)>(r8)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : virtualinvoke r7.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: void setDecode(org.apache.pdfbox.cos.COSArray)>(r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : return r7
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : goto [?= $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject]
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : goto [?= $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r9 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r10 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("number of data elements not supported: ")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("number of data elements not supported: ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $i1 = virtualinvoke r4.<java.awt.image.Raster: int getNumDataElements()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $i1 = virtualinvoke r4.<java.awt.image.Raster: int getNumDataElements()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : throw $r9
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : goto [?= $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject]
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : goto [?= $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromByteArray : $r14 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject
