org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r5 = newarray (int)[2] >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r5[0] = 1
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r5[0] = 1 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r5[1] = 0
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r5[1] = 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : r1 = $r5
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : r1 = $r5 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : i2 = lengthof r1
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : i2 = lengthof r1 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r6 = new java.awt.image.ComponentColorModel
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r6 = new java.awt.image.ComponentColorModel >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r7 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1003)
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r7 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1003) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : specialinvoke $r6.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>($r7, 1, 0, 3, 0)
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : specialinvoke $r6.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>($r7, 1, 0, 3, 0) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : r2 = $r6
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : r2 = $r6 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r8 = new java.awt.image.DataBufferByte
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r8 = new java.awt.image.DataBufferByte >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $i3 = i0 * i1
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $i3 = i0 * i1 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $i4 = $i3 * i2
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $i4 = $i3 * i2 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : specialinvoke $r8.<java.awt.image.DataBufferByte: void <init>(int)>($i4)
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : specialinvoke $r8.<java.awt.image.DataBufferByte: void <init>(int)>($i4) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : r3 = $r8
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : r3 = $r8 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $i5 = i0 * i2
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $i5 = i0 * i2 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r9 = new java.awt.Point
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r9 = new java.awt.Point >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : specialinvoke $r9.<java.awt.Point: void <init>(int,int)>(0, 0)
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : specialinvoke $r9.<java.awt.Point: void <init>(int,int)>(0, 0) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : r4 = staticinvoke <java.awt.image.Raster: java.awt.image.WritableRaster createInterleavedRaster(java.awt.image.DataBuffer,int,int,int,int,int[],java.awt.Point)>(r3, i0, i1, $i5, i2, r1, $r9)
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : r4 = staticinvoke <java.awt.image.Raster: java.awt.image.WritableRaster createInterleavedRaster(java.awt.image.DataBuffer,int,int,int,int,int[],java.awt.Point)>(r3, i0, i1, $i5, i2, r1, $r9) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r10 = new java.awt.image.BufferedImage
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : $r10 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r2, r4, 0, null)
org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r2, r4, 0, null) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup.create2ByteGrayAlphaImage : return $r10
