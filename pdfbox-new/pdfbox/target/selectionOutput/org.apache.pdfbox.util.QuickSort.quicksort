org.apache.pdfbox.util.QuickSort.quicksort : $r2 = new java.util.ArrayDeque >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : specialinvoke $r2.<java.util.ArrayDeque: void <init>()>()
org.apache.pdfbox.util.QuickSort.quicksort : specialinvoke $r2.<java.util.ArrayDeque: void <init>()>() >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : r3 = $r2
org.apache.pdfbox.util.QuickSort.quicksort : r3 = $r2 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.pdfbox.util.QuickSort.quicksort : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r4)
org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $i3 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.pdfbox.util.QuickSort.quicksort : $i3 = interfaceinvoke r0.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.pdfbox.util.QuickSort.quicksort : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r5)
org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $z0 = interfaceinvoke r3.<java.util.Deque: boolean isEmpty()>()
org.apache.pdfbox.util.QuickSort.quicksort : $z0 = interfaceinvoke r3.<java.util.Deque: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : if $z0 != 0
org.apache.pdfbox.util.QuickSort.quicksort : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r6 = interfaceinvoke r3.<java.util.Deque: java.lang.Object pop()>()
org.apache.pdfbox.util.QuickSort.quicksort : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : return
org.apache.pdfbox.util.QuickSort.quicksort : $r6 = interfaceinvoke r3.<java.util.Deque: java.lang.Object pop()>() >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r7 = (java.lang.Integer) $r6
org.apache.pdfbox.util.QuickSort.quicksort : $r7 = (java.lang.Integer) $r6 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.util.QuickSort.quicksort : i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r8 = interfaceinvoke r3.<java.util.Deque: java.lang.Object pop()>()
org.apache.pdfbox.util.QuickSort.quicksort : $r8 = interfaceinvoke r3.<java.util.Deque: java.lang.Object pop()>() >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r9 = (java.lang.Integer) $r8
org.apache.pdfbox.util.QuickSort.quicksort : $r9 = (java.lang.Integer) $r8 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.util.QuickSort.quicksort : i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $i4 = i0 - i1
org.apache.pdfbox.util.QuickSort.quicksort : $i4 = i0 - i1 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : if $i4 >= 2
org.apache.pdfbox.util.QuickSort.quicksort : if $i4 >= 2 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : goto [?= $z0 = interfaceinvoke r3.<java.util.Deque: boolean isEmpty()>()]
org.apache.pdfbox.util.QuickSort.quicksort : if $i4 >= 2 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $i5 = i0 - i1
org.apache.pdfbox.util.QuickSort.quicksort : $i5 = i0 - i1 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $i6 = $i5 / 2
org.apache.pdfbox.util.QuickSort.quicksort : $i6 = $i5 / 2 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : i2 = i1 + $i6
org.apache.pdfbox.util.QuickSort.quicksort : i2 = i1 + $i6 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : i7 = staticinvoke <org.apache.pdfbox.util.QuickSort: int partition(java.util.List,java.util.Comparator,int,int,int)>(r0, r1, i2, i1, i0)
org.apache.pdfbox.util.QuickSort.quicksort : i7 = staticinvoke <org.apache.pdfbox.util.QuickSort: int partition(java.util.List,java.util.Comparator,int,int,int)>(r0, r1, i2, i1, i0) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $i8 = i7 + 1
org.apache.pdfbox.util.QuickSort.quicksort : $i8 = i7 + 1 >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8)
org.apache.pdfbox.util.QuickSort.quicksort : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r10)
org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r10) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.util.QuickSort.quicksort : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r11)
org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r11) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.util.QuickSort.quicksort : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r12)
org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r12) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)
org.apache.pdfbox.util.QuickSort.quicksort : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r13)
org.apache.pdfbox.util.QuickSort.quicksort : interfaceinvoke r3.<java.util.Deque: void push(java.lang.Object)>($r13) >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : goto [?= $z0 = interfaceinvoke r3.<java.util.Deque: boolean isEmpty()>()]
org.apache.pdfbox.util.QuickSort.quicksort : goto [?= $z0 = interfaceinvoke r3.<java.util.Deque: boolean isEmpty()>()] >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $z0 = interfaceinvoke r3.<java.util.Deque: boolean isEmpty()>()
org.apache.pdfbox.util.QuickSort.quicksort : goto [?= $z0 = interfaceinvoke r3.<java.util.Deque: boolean isEmpty()>()] >>>>>>>> org.apache.pdfbox.util.QuickSort.quicksort : $z0 = interfaceinvoke r3.<java.util.Deque: boolean isEmpty()>()
