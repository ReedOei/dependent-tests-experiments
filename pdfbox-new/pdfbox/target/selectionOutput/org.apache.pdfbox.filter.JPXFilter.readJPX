org.apache.pdfbox.filter.JPXFilter.readJPX : r3 = staticinvoke <org.apache.pdfbox.filter.JPXFilter: javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)>("JPEG2000", "Java Advanced Imaging (JAI) Image I/O Tools are not installed") >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r4 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1)
org.apache.pdfbox.filter.JPXFilter.readJPX : r3 = staticinvoke <org.apache.pdfbox.filter.JPXFilter: javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)>("JPEG2000", "Java Advanced Imaging (JAI) Image I/O Tools are not installed") >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r12 = $r32 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : r12 = $r32 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw r12
org.apache.pdfbox.filter.JPXFilter.readJPX : r4 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r5 = null
org.apache.pdfbox.filter.JPXFilter.readJPX : r4 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r5 = null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r5 = null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r5 = null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(r4, 1, 1)
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(r4, 1, 1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(r4, 1, 1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r13 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(r4, 1, 1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r6 = virtualinvoke r3.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0)
org.apache.pdfbox.filter.JPXFilter.readJPX : r6 = virtualinvoke r3.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r13 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r6 = virtualinvoke r3.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r6 = virtualinvoke r3.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= r15 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()]
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= r15 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r15 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= r15 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r10 = $r30 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r10 = $r30 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r30 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r10 = $r30 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if r4 == null
org.apache.pdfbox.filter.JPXFilter.readJPX : if r4 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null
org.apache.pdfbox.filter.JPXFilter.readJPX : if r4 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw r10
org.apache.pdfbox.filter.JPXFilter.readJPX : if r4 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : throw r10 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r31 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r11 = $r31 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r11)
org.apache.pdfbox.filter.JPXFilter.readJPX : r11 = $r31 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r11) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= throw r10]
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r11) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= throw r10] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw r10
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= throw r10] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw r10
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r31 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= throw r10]
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= throw r10] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw r10
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= throw r10] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r29 = $r28 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r5 = r29
org.apache.pdfbox.filter.JPXFilter.readJPX : r29 = $r28 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r30 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r5 = r29 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw r29
org.apache.pdfbox.filter.JPXFilter.readJPX : r5 = r29 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r30 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : throw r29 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r30 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r15 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r16 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : r15 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r16 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $i1 = virtualinvoke $r16.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r16 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $i1 = virtualinvoke $r16.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r17 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $i1 = virtualinvoke $r16.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r17 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $i2 = virtualinvoke $r17.<java.awt.image.WritableRaster: int getNumBands()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r17 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $i2 = virtualinvoke $r17.<java.awt.image.WritableRaster: int getNumBands()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : i0 = $i1 / $i2
org.apache.pdfbox.filter.JPXFilter.readJPX : $i2 = virtualinvoke $r17.<java.awt.image.WritableRaster: int getNumBands()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : i0 = $i1 / $i2 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT>
org.apache.pdfbox.filter.JPXFilter.readJPX : i0 = $i1 / $i2 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r18, i0)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r18, i0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r19 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE_MASK>
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r18, i0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r19 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE_MASK> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $z0 = virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)>($r19, 0)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r19 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE_MASK> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $z0 = virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)>($r19, 0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if $z0 != 0
org.apache.pdfbox.filter.JPXFilter.readJPX : $z0 = virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)>($r19, 0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r20 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE>
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH>
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $i3 = virtualinvoke r6.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $i3 = virtualinvoke r6.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r21, $i3)
org.apache.pdfbox.filter.JPXFilter.readJPX : $i3 = virtualinvoke r6.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r21, $i3) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT>
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r21, $i3) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $i4 = virtualinvoke r6.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $i4 = virtualinvoke r6.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r22, $i4)
org.apache.pdfbox.filter.JPXFilter.readJPX : $i4 = virtualinvoke r6.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r22, $i4) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r23 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r22, $i4) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r23 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $z1 = virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r23)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r23 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $z1 = virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r23) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if $z1 != 0
org.apache.pdfbox.filter.JPXFilter.readJPX : $z1 = virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r23) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z1 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r24 = new org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z1 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r8 = r6
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z1 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r8 = r6 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r8 = r6 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r8 = r6 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if r4 == null
org.apache.pdfbox.filter.JPXFilter.readJPX : if r4 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null
org.apache.pdfbox.filter.JPXFilter.readJPX : if r4 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : if r4 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : return r8
org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if r5 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r27 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r9 = $r27 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9)
org.apache.pdfbox.filter.JPXFilter.readJPX : r9 = $r27 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()]
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r27 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r4.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()]
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r32 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r24 = new org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r25 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r24 = new org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r25 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r26 = virtualinvoke $r25.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r25 = virtualinvoke r6.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r26 = virtualinvoke $r25.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r24.<org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace: void <init>(java.awt.color.ColorSpace)>($r26)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r26 = virtualinvoke $r25.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r24.<org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace: void <init>(java.awt.color.ColorSpace)>($r26) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)>($r24)
org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r24.<org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace: void <init>(java.awt.color.ColorSpace)>($r26) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)>($r24) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r8 = r6
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)>($r24) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r20 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r20, null)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r20 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r20, null) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH>
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r15.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r20, null) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r7 = $r13 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r14 = new java.io.IOException
org.apache.pdfbox.filter.JPXFilter.readJPX : r7 = $r13 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r14 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JPEG 2000 (JPX) image", r7)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r14 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JPEG 2000 (JPX) image", r7) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw $r14
org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JPEG 2000 (JPX) image", r7) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : throw $r14 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r28 := @caughtexception
