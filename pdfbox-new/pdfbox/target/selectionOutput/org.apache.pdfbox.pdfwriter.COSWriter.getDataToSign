org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : if $r2 == null
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : if $r2 == null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput>
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : if $r2 == null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r4 = new java.lang.IllegalStateException
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r4 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PDF not prepared for signing")
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PDF not prepared for signing") >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : throw $r4
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : if $r3 != null
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : if $r3 != null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r4 = new java.lang.IllegalStateException
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : if $r3 != null >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $l2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long signatureOffset>
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $l2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long signatureOffset> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r5 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput>
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r5 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $l3 = interfaceinvoke $r5.<org.apache.pdfbox.io.RandomAccessRead: long length()>()
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $l3 = interfaceinvoke $r5.<org.apache.pdfbox.io.RandomAccessRead: long length()>() >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $l4 = $l2 - $l3
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $l4 = $l2 - $l3 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : i0 = (int) $l4
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : i0 = (int) $l4 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $l5 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long signatureLength>
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $l5 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long signatureLength> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $i6 = (int) $l5
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $i6 = (int) $l5 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : i1 = i0 + $i6
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : i1 = i0 + $i6 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6 = newarray (int)[4]
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6 = newarray (int)[4] >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6[0] = 0
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6[0] = 0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6[1] = i0
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6[1] = i0 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6[2] = i1
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6[2] = i1 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r7 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart>
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r7 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $i7 = lengthof $r7
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $i7 = lengthof $r7 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $i8 = $i7 - i1
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $i8 = $i7 - i1 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6[3] = $i8
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r6[3] = $i8 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : r1 = $r6
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : r1 = $r6 >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r8 = new java.io.SequenceInputStream
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r8 = new java.io.SequenceInputStream >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r9 = new org.apache.pdfbox.io.RandomAccessInputStream
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r9 = new org.apache.pdfbox.io.RandomAccessInputStream >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r10 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput>
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r10 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.io.RandomAccessRead incrementalInput> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : specialinvoke $r9.<org.apache.pdfbox.io.RandomAccessInputStream: void <init>(org.apache.pdfbox.io.RandomAccessRead)>($r10)
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : specialinvoke $r9.<org.apache.pdfbox.io.RandomAccessInputStream: void <init>(org.apache.pdfbox.io.RandomAccessRead)>($r10) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r11 = new org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r11 = new org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r12 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart>
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : $r12 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: byte[] incrementPart> >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : specialinvoke $r11.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream: void <init>(byte[],int[])>($r12, r1)
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : specialinvoke $r11.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream: void <init>(byte[],int[])>($r12, r1) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : specialinvoke $r8.<java.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>($r9, $r11)
org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : specialinvoke $r8.<java.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>($r9, $r11) >>>>>>>> org.apache.pdfbox.pdfwriter.COSWriter.getDataToSign : return $r8
