org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r1.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r1.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if $z0 != 0
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r4 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r4 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r4.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r4.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : goto [?= $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)]
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : goto [?= $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r2.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r2.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEOL(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEOL(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if $z1 != 0
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r3.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r3.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : goto [?= $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEOL(int)>(i0)]
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : goto [?= $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEOL(int)>(i0)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEOL(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : return
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : return
