org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i4 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i4 == 12
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i4 == 12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r7 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i4 == 12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r9 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r9 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r2 = $r9
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r2 = $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r10 = new javax.imageio.stream.MemoryCacheImageOutputStream
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r10 = new javax.imageio.stream.MemoryCacheImageOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r10.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>(r2)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r10.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r3 = $r10
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r3 = $r10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r4 = null
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r4 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i2 = 0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r4 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r5 = $r15 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r3 == null
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r5 = $r15 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r15 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r4 == null
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : throw r5
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r6 = $r16 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= throw r5]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= throw r5] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : throw r5
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : throw r5
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= throw r5]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= throw r5] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : throw r5
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r14 = $r13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r4 = r14
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r14 = $r13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r15 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r4 = r14 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : throw r14
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r4 = r14 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r15 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : throw r14 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r15 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i2 >= i0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i2 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i3 = 0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i2 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i2 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r3 == null
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r4 == null
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r18 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r18 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r19 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, $r17, i1, i0, $r18)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r19 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, $r17, i1, i0, $r18) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : return $r19
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : r12 = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r12)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r12) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r17 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i3 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i3 >= i1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i3 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i3 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i6 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(i3, i2)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i3 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i10 = virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i3 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i10 = virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i10 == 0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i10 = virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i11 = virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i2 = i2 + 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i2 >= i0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i11 = virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i12 = 8 - $i11
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i11 = virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i12 = 8 - $i11 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, $i12)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i12 = 8 - $i11 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, $i12) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i2 = i2 + 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, $i12) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i6 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(i3, i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i7 = $i6 & 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i6 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(i3, i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i7 = $i6 & 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i8 = $i7 ^ -1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i7 = $i6 & 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i8 = $i7 ^ -1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $l9 = (long) $i8
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i8 = $i7 ^ -1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $l9 = (long) $i8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l9, 1)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $l9 = (long) $i8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l9, 1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i3 = i3 + 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke r3.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l9, 1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i3 >= i1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r13 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r7 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i5 = virtualinvoke $r7.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i5 = virtualinvoke $r7.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i5 == 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i5 == 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r8 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i5 == 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r8 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only 1-bit b/w images supported")
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only 1-bit b/w images supported") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : throw $r8
