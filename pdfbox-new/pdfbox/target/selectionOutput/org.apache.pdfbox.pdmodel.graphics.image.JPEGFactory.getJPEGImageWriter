org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : r0 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : r1 = staticinvoke <javax.imageio.ImageIO: java.util.Iterator getImageWritersBySuffix(java.lang.String)>("jpeg")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : r1 = staticinvoke <javax.imageio.ImageIO: java.util.Iterator getImageWritersBySuffix(java.lang.String)>("jpeg") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if r0 == null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $r4 = new java.io.IOException
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $r4 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("No ImageWriter found for JPEG format")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("No ImageWriter found for JPEG format") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : throw $r4
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if r0 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : virtualinvoke r0.<javax.imageio.ImageWriter: void dispose()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if r0 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : r0 = (javax.imageio.ImageWriter) $r2
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : r0 = (javax.imageio.ImageWriter) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if r0 != null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if r0 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if r0 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $r3 = virtualinvoke r0.<javax.imageio.ImageWriter: javax.imageio.ImageWriteParam getDefaultWriteParam()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $r3 = virtualinvoke r0.<javax.imageio.ImageWriter: javax.imageio.ImageWriteParam getDefaultWriteParam()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $z1 = $r3 instanceof javax.imageio.plugins.jpeg.JPEGImageWriteParam
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $z1 = $r3 instanceof javax.imageio.plugins.jpeg.JPEGImageWriteParam >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : return r0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : virtualinvoke r0.<javax.imageio.ImageWriter: void dispose()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getJPEGImageWriter : $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
