org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f0 = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f1 = 0.0F
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f1 = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f2 = 0.0F
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f2 = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f3 = 0.0F
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f3 = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f23 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float horizontalOffset>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f23 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float horizontalOffset> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f24 = $f23 - f1
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f24 = $f23 - f1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float horizontalOffset> = $f24
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float horizontalOffset> = $f24 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : return
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r3 = (org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line) $r7
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r3 = (org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r8 = <org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$1: int[] $SwitchMap$org$apache$pdfbox$pdmodel$interactive$form$PlainTextFormatter$TextAlign>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r8 = <org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$1: int[] $SwitchMap$org$apache$pdfbox$pdmodel$interactive$form$PlainTextFormatter$TextAlign> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r9 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign textAlignment>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r9 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign textAlignment> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i0 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign: int ordinal()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i0 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign: int ordinal()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i1 = $r8[$i0]
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i1 = $r8[$i0] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : tableswitch($i1) {     case 1:
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : tableswitch($i1) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f5 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float width>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : tableswitch($i1) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f8 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float width>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : tableswitch($i1) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i2 = interfaceinvoke r1.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : tableswitch($i1) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f2 = 0.0F
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f2 = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f11 = neg f1
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f11 = neg f1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f12 = $f11 + f2
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f12 = $f11 + f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f13 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float horizontalOffset>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f13 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float horizontalOffset> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f4 = $f12 + $f13
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f4 = $f12 + $f13 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i5 = interfaceinvoke r1.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i5 = interfaceinvoke r1.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i5 != 0
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f15 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float verticalOffset>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f15 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float verticalOffset> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r11 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.form.AppearanceStyle appearanceStyle>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r11 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.form.AppearanceStyle appearanceStyle> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f16 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.interactive.form.AppearanceStyle: float getLeading()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f16 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.interactive.form.AppearanceStyle: float getLeading()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f17 = $f15 - $f16
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f17 = $f15 - $f16 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float verticalOffset> = $f17
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float verticalOffset> = $f17 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r12 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream contents>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r12 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream contents> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r13 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.form.AppearanceStyle appearanceStyle>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r13 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.form.AppearanceStyle appearanceStyle> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f18 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.interactive.form.AppearanceStyle: float getLeading()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f18 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.interactive.form.AppearanceStyle: float getLeading()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f19 = neg $f18
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f19 = neg $f18 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : virtualinvoke $r12.<org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream: void newLineAtOffset(float,float)>(f4, $f19)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : virtualinvoke $r12.<org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream: void newLineAtOffset(float,float)>(f4, $f19) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f1 = f1 + f4
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f1 = f1 + f4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: java.util.List getWords()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: java.util.List getWords()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $z2 == 0
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r6 = (org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word) $r14
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : r6 = (org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word) $r14 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r15 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream contents>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r15 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream contents> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r16 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: java.lang.String getText()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r16 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: java.lang.String getText()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : virtualinvoke $r15.<org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream: void showText(java.lang.String)>($r16)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : virtualinvoke $r15.<org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream: void showText(java.lang.String)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r17 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: java.text.AttributedString getAttributes()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r17 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: java.text.AttributedString getAttributes()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r18 = virtualinvoke $r17.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r18 = virtualinvoke $r17.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r19 = <org.apache.pdfbox.pdmodel.interactive.form.PlainText$TextAttribute: java.text.AttributedCharacterIterator$Attribute WIDTH>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r19 = <org.apache.pdfbox.pdmodel.interactive.form.PlainText$TextAttribute: java.text.AttributedCharacterIterator$Attribute WIDTH> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r20 = interfaceinvoke $r18.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r19)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r20 = interfaceinvoke $r18.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r21 = (java.lang.Float) $r20
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r21 = (java.lang.Float) $r20 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f20 = virtualinvoke $r21.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f20 = virtualinvoke $r21.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i6 = interfaceinvoke r4.<java.util.List: int indexOf(java.lang.Object)>(r6)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i6 = interfaceinvoke r4.<java.util.List: int indexOf(java.lang.Object)>(r6) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i7 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i7 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i8 = $i7 - 1
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i8 = $i7 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i6 == $i8
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i6 == $i8 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r22 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream contents>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i6 == $i8 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r22 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream contents> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f21 = f20 + f3
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f21 = f20 + f3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : virtualinvoke $r22.<org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream: void newLineAtOffset(float,float)>($f21, 0.0F)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : virtualinvoke $r22.<org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream: void newLineAtOffset(float,float)>($f21, 0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f22 = f1 + f20
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f22 = f1 + f20 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f1 = $f22 + f3
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f1 = $f22 + f3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r10 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream contents>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f15 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float verticalOffset>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $r10 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream contents> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f14 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float verticalOffset>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f14 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float verticalOffset> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream: void newLineAtOffset(float,float)>(f4, $f14)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream: void newLineAtOffset(float,float)>(f4, $f14) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= f1 = f1 + f4]
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= f1 = f1 + f4] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f1 = f1 + f4
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i2 = interfaceinvoke r1.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i3 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i3 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i4 = $i3 - 1
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $i4 = $i3 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i2 == $i4
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i2 == $i4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f10 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float width>
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : if $i2 == $i4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f11 = neg f1
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f10 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float width> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f3 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float getInterWordSpacing(float)>($f10)
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f3 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float getInterWordSpacing(float)>($f10) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $f11 = neg f1]
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $f11 = neg f1] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f11 = neg f1
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f8 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float width> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f9 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float getWidth()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f9 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f2 = $f8 - $f9
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f2 = $f8 - $f9 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $f11 = neg f1]
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $f11 = neg f1] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f11 = neg f1
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f5 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter: float width> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f6 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float getWidth()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f6 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: float getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f7 = $f5 - $f6
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f7 = $f5 - $f6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f2 = $f7 / 2.0F
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : f2 = $f7 / 2.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $f11 = neg f1]
org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : goto [?= $f11 = neg f1] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.processLines : $f11 = neg f1
