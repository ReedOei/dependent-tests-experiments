org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<field name=\"")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<field name=\"") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getPartialFieldName()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getPartialFieldName()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r12)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.Object getValue()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r3 == null
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z0 = r3 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r4 == null
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r29 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.util.List getKids()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.util.List getKids()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r5 == null
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("</field>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("</field>\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : return
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z2 == 0
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r35 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("</field>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r35 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r7 = (org.apache.pdfbox.pdmodel.fdf.FDFField) $r35
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r7 = (org.apache.pdfbox.pdmodel.fdf.FDFField) $r35 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r7.<org.apache.pdfbox.pdmodel.fdf.FDFField: void writeXML(java.io.Writer)>(r1)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r7.<org.apache.pdfbox.pdmodel.fdf.FDFField: void writeXML(java.io.Writer)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value-richtext>")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value-richtext>") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r31 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>(r4)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r31 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value-richtext>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value-richtext>\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r34)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r34) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.util.List getKids()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z0 = r3 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z0 == 0
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r13 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z1 = r3 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z1 = r3 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z1 == 0
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r21 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value>")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value>") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r23 = (org.apache.pdfbox.cos.COSStream) r3
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r23 = (org.apache.pdfbox.cos.COSStream) r3 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r24 = virtualinvoke $r23.<org.apache.pdfbox.cos.COSStream: java.lang.String toTextString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r24 = virtualinvoke $r23.<org.apache.pdfbox.cos.COSStream: java.lang.String toTextString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r25 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>($r24)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r25 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>($r24) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r28)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r28) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value>")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value>") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r15 = (org.apache.pdfbox.cos.COSString) r3
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r15 = (org.apache.pdfbox.cos.COSString) r3 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r16 = virtualinvoke $r15.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r16 = virtualinvoke $r15.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r17 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>($r16)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r17 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r20)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : goto [?= r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()]
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : goto [?= r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()] >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()
