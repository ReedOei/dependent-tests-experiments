org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $b1 = l0 cmp 0L >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : if $b1 >= 0
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r3 = new java.io.IOException
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $i3 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $i3 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $l4 = (long) $i3
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $l4 = (long) $i3 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $b5 = l0 cmp $l4
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $b5 = l0 cmp $l4 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : if $b5 < 0
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : if $b5 < 0 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r10 = new java.io.IOException
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : if $b5 < 0 >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : return
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r10 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r11 = new java.lang.StringBuilder
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("array index overflow: ")
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("array index overflow: ") >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ")
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ") >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $i6 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $i6 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near offset ")
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near offset ") >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $l7 = virtualinvoke r2.<javax.imageio.stream.MemoryCacheImageInputStream: long getStreamPosition()>()
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $l7 = virtualinvoke r2.<javax.imageio.stream.MemoryCacheImageInputStream: long getStreamPosition()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7)
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r18)
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r18) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : throw $r10
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r3 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r4 = new java.lang.StringBuilder
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("negative array index: ")
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("negative array index: ") >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near offset ")
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near offset ") >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $l2 = virtualinvoke r2.<javax.imageio.stream.MemoryCacheImageInputStream: long getStreamPosition()>()
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $l2 = virtualinvoke r2.<javax.imageio.stream.MemoryCacheImageInputStream: long getStreamPosition()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r9)
org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.pdfbox.filter.LZWFilter.checkIndexBounds : throw $r3
