org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r10 = virtualinvoke $r9.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r10 = virtualinvoke $r9.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i6 = virtualinvoke $r10.<org.apache.fontbox.ttf.HeaderTable: int getUnitsPerEm()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i6 = virtualinvoke $r10.<org.apache.fontbox.ttf.HeaderTable: int getUnitsPerEm()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $f1 = (float) $i6
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $f1 = (float) $i6 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : f0 = 1000.0F / $f1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : f0 = 1000.0F / $f1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r3 = virtualinvoke $r11.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HorizontalMetricsTable getHorizontalMetrics()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r3 = virtualinvoke $r11.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HorizontalMetricsTable getHorizontalMetrics()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder: org.apache.pdfbox.pdmodel.font.encoding.Encoding getFontEncoding()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder: org.apache.pdfbox.pdmodel.font.encoding.Encoding getFontEncoding()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r4 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getCodeToNameMap()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r4 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getCodeToNameMap()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r13 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r13 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r14 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>($r13)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r14 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r15 = (java.lang.Integer) $r14
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r15 = (java.lang.Integer) $r14 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i0 = virtualinvoke $r15.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i0 = virtualinvoke $r15.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r16 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r16 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r17 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>($r16)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r17 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r18 = (java.lang.Integer) $r17
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r18 = (java.lang.Integer) $r17 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i1 = virtualinvoke $r18.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i1 = virtualinvoke $r18.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r19 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r19 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i7 = i1 - i0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i7 = i1 - i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i8 = $i7 + 1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i8 = $i7 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i8)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i8) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r5 = $r19
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r5 = $r19 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i2 = 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i9 = i1 - i0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i9 = i1 - i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i10 = $i9 + 1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i10 = $i9 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i2 >= $i10
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i2 >= $i10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i2 >= $i10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r21 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r21 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r22 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r22 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r32 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIRST_CHAR>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r32 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIRST_CHAR> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r32, i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r32, i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r33 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAST_CHAR>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r33 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAST_CHAR> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r33, i1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r33, i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r34 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTHS>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r34 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTHS> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r35 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r5)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r35 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r34, $r35)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r34, $r35) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : return
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r6 = (java.util.Map$Entry) $r23
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r6 = (java.util.Map$Entry) $r23 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r24 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r24 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r25 = (java.lang.Integer) $r24
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r25 = (java.lang.Integer) $r24 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i3 = virtualinvoke $r25.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i3 = virtualinvoke $r25.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r26 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r26 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r7 = (java.lang.String) $r26
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r7 = (java.lang.String) $r26 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i3 < i0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i3 < i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i3 > i1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i3 < i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : goto [?= $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : goto [?= $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i3 > i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String toUnicode(java.lang.String)>(r7)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : if i3 > i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : goto [?= $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String toUnicode(java.lang.String)>(r7) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i4 = virtualinvoke r8.<java.lang.String: int codePointAt(int)>(0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i4 = virtualinvoke r8.<java.lang.String: int codePointAt(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder: org.apache.fontbox.ttf.CmapSubtable cmap>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder: org.apache.fontbox.ttf.CmapSubtable cmap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i5 = virtualinvoke $r27.<org.apache.fontbox.ttf.CmapSubtable: int getGlyphId(int)>(i4)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i5 = virtualinvoke $r27.<org.apache.fontbox.ttf.CmapSubtable: int getGlyphId(int)>(i4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r28 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r28 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r29 = (java.lang.Integer) $r28
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r29 = (java.lang.Integer) $r28 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i11 = virtualinvoke $r29.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i11 = virtualinvoke $r29.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i12 = $i11 - i0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i12 = $i11 - i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i13 = virtualinvoke r3.<org.apache.fontbox.ttf.HorizontalMetricsTable: int getAdvanceWidth(int)>(i5)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i13 = virtualinvoke r3.<org.apache.fontbox.ttf.HorizontalMetricsTable: int getAdvanceWidth(int)>(i5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $f2 = (float) $i13
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $f2 = (float) $i13 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $f3 = $f2 * f0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $f3 = $f2 * f0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i14 = staticinvoke <java.lang.Math: int round(float)>($f3)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i14 = staticinvoke <java.lang.Math: int round(float)>($f3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : interfaceinvoke r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i12, $r30)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : interfaceinvoke r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i12, $r30) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : goto [?= $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i2 = i2 + 1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : goto [?= $i9 = i1 - i0]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : goto [?= $i9 = i1 - i0] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder.setWidths : $i9 = i1 - i0
