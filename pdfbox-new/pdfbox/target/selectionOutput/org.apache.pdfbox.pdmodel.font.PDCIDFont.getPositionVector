org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: int codeToCID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map positionVectors>
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map positionVectors> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : r1 = (org.apache.pdfbox.util.Vector) $r4
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : r1 = (org.apache.pdfbox.util.Vector) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : if r1 != null
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.util.Vector getDefaultPositionVector(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : return r1
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.util.Vector getDefaultPositionVector(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : return r1
