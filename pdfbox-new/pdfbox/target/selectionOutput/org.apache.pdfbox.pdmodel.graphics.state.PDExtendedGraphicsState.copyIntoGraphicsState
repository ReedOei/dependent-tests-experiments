org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: java.util.Set keySet()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: java.util.Set keySet()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : return
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : r3 = (org.apache.pdfbox.cos.COSName) $r8
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : r3 = (org.apache.pdfbox.cos.COSName) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LW>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LW> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z1 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z1 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getLineWidth()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LC>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LC> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z2 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r10)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z2 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z2 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: int getLineCapStyle()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LJ>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LJ> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z3 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r11)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z3 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z3 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: int getLineJoinStyle()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ML>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ML> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z4 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r12)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z4 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z4 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getMiterLimit()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z5 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r14)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z5 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z5 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RI>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RI> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z6 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r16)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z6 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z6 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent getRenderingIntent()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPM>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPM> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z7 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r18)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z7 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z7 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getOverprintMode()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r20 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OP>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r20 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OP> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z8 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r20)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z8 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z8 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getStrokingOverprintControl()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OP_NS>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OP_NS> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z10 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r21)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z10 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r21) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z10 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getNonStrokingOverprintControl()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z12 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r22)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z12 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r22) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z12 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z12 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.PDFontSetting getFontSetting()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z12 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FL>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FL> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z13 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r26)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z13 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z13 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z13 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r27 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getFlatnessTolerance()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z13 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SM>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SM> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z14 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r28)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z14 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r28) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z14 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r29 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getSmoothnessTolerance()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r30 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SA>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r30 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SA> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z15 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r30)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z15 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r30) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z15 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z15 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getAutomaticStrokeAdjustment()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z15 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r31 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CA>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r31 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CA> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z17 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r31)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z17 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r31) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z17 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z17 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r32 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getStrokingAlphaConstant()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z17 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r33 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CA_NS>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r33 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CA_NS> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z18 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r33)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z18 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r33) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z18 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z18 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r34 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getNonStrokingAlphaConstant()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z18 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r35 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AIS>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r35 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AIS> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z19 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r35)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z19 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r35) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z19 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z19 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z20 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getAlphaSourceFlag()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z19 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r36 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TK>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r36 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TK> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z21 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r36)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z21 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r36) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z21 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z21 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r37 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDTextState getTextState()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z21 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r38 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r38 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z23 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r38)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z23 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r38) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z23 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z23 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : r39 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask getSoftMask()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z23 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r42 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BM>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r42 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BM> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z24 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r42)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z24 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r42) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z24 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z24 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r43 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getBlendMode()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z24 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r44 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TR>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r44 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TR> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z25 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r44)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z25 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r44) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z25 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z25 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r45 = r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z25 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r48 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TR2>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r48 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TR2> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z27 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r48)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z27 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r48) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z27 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z27 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r49 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.cos.COSBase getTransfer2()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z27 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r49 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.cos.COSBase getTransfer2()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setTransfer(org.apache.pdfbox.cos.COSBase)>($r49)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setTransfer(org.apache.pdfbox.cos.COSBase)>($r49) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r45 = r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r46 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TR2>
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r46 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TR2> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z26 = virtualinvoke $r45.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r46)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z26 = virtualinvoke $r45.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r46) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z26 == 0
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z26 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if $z26 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r47 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.cos.COSBase getTransfer()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r47 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.cos.COSBase getTransfer()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setTransfer(org.apache.pdfbox.cos.COSBase)>($r47)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setTransfer(org.apache.pdfbox.cos.COSBase)>($r47) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r43 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getBlendMode()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)>($r43)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)>($r43) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : r39 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask getSoftMask()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if r39 == null
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if r39 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r40 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if r39 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setSoftMask(org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)>(r39)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setSoftMask(org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)>(r39) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r40 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.util.Matrix getCurrentTransformationMatrix()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r41 = virtualinvoke $r40.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix clone()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r41 = virtualinvoke $r40.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix clone()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r39.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: void setInitialTransformationMatrix(org.apache.pdfbox.util.Matrix)>($r41)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r39.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: void setInitialTransformationMatrix(org.apache.pdfbox.util.Matrix)>($r41) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setSoftMask(org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)>(r39)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r37 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDTextState getTextState()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getTextKnockoutFlag()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getTextKnockoutFlag()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke $r37.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: void setKnockoutFlag(boolean)>($z22)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke $r37.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: void setKnockoutFlag(boolean)>($z22) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z20 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getAlphaSourceFlag()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setAlphaSource(boolean)>($z20)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setAlphaSource(boolean)>($z20) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r34 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getNonStrokingAlphaConstant()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f6 = virtualinvoke $r34.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f6 = virtualinvoke $r34.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d4 = (double) $f6
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d4 = (double) $f6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setNonStrokeAlphaConstant(double)>($d4)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setNonStrokeAlphaConstant(double)>($d4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r32 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getStrokingAlphaConstant()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f5 = virtualinvoke $r32.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f5 = virtualinvoke $r32.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d3 = (double) $f5
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d3 = (double) $f5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setAlphaConstant(double)>($d3)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setAlphaConstant(double)>($d3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getAutomaticStrokeAdjustment()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setStrokeAdjustment(boolean)>($z16)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setStrokeAdjustment(boolean)>($z16) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r29 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getSmoothnessTolerance()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f4 = virtualinvoke $r29.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f4 = virtualinvoke $r29.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d2 = (double) $f4
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d2 = (double) $f4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setSmoothness(double)>($d2)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setSmoothness(double)>($d2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r27 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getFlatnessTolerance()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f3 = virtualinvoke $r27.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f3 = virtualinvoke $r27.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d1 = (double) $f3
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d1 = (double) $f3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setFlatness(double)>($d1)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setFlatness(double)>($d1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.PDFontSetting getFontSetting()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if r5 == null
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r23 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDTextState getTextState()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r23 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDTextState getTextState()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r24 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.graphics.PDFontSetting: org.apache.pdfbox.pdmodel.font.PDFont getFont()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r24 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.graphics.PDFontSetting: org.apache.pdfbox.pdmodel.font.PDFont getFont()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke $r23.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: void setFont(org.apache.pdfbox.pdmodel.font.PDFont)>($r24)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke $r23.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: void setFont(org.apache.pdfbox.pdmodel.font.PDFont)>($r24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r25 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDTextState getTextState()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r25 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.PDTextState getTextState()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.graphics.PDFontSetting: float getFontSize()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.graphics.PDFontSetting: float getFontSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke $r25.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: void setFontSize(float)>($f2)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke $r25.<org.apache.pdfbox.pdmodel.graphics.state.PDTextState: void setFontSize(float)>($f2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getNonStrokingOverprintControl()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setNonStrokingOverprint(boolean)>($z11)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setNonStrokingOverprint(boolean)>($z11) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $z9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: boolean getStrokingOverprintControl()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setOverprint(boolean)>($z9)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setOverprint(boolean)>($z9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getOverprintMode()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d0 = virtualinvoke $r19.<java.lang.Float: double doubleValue()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $d0 = virtualinvoke $r19.<java.lang.Float: double doubleValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setOverprintMode(double)>($d0)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setOverprintMode(double)>($d0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent getRenderingIntent()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setRenderingIntent(org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent)>($r17)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setRenderingIntent(org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent)>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern)>($r15)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern)>($r15) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getMiterLimit()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f1 = virtualinvoke $r13.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f1 = virtualinvoke $r13.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setMiterLimit(float)>($f1)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setMiterLimit(float)>($f1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: int getLineJoinStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setLineJoin(int)>($i1)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setLineJoin(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: int getLineCapStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setLineCap(int)>($i0)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setLineCap(int)>($i0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState: java.lang.Float getLineWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setLineWidth(float)>($f0)
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: void setLineWidth(float)>($f0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState.copyIntoGraphicsState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
