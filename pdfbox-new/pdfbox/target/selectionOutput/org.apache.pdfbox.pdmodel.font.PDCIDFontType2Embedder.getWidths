org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i5 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $i5 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $i5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r5 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $i5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r7 = virtualinvoke $r6.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r7 = virtualinvoke $r6.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i6 = virtualinvoke $r7.<org.apache.fontbox.ttf.HeaderTable: int getUnitsPerEm()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i6 = virtualinvoke $r7.<org.apache.fontbox.ttf.HeaderTable: int getUnitsPerEm()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f1 = (float) $i6
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f1 = (float) $i6 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : f0 = 1000.0F / $f1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : f0 = 1000.0F / $f1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i7 = r1[0]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i7 = r1[0] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l0 = (long) $i7
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l0 = (long) $i7 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i8 = r1[1]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i8 = r1[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f2 = (float) $i8
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f2 = (float) $i8 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f3 = $f2 * f0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f3 = $f2 * f0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i9 = staticinvoke <java.lang.Math: int round(float)>($f3)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i9 = staticinvoke <java.lang.Math: int round(float)>($f3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = (long) $i9
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = (long) $i9 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r2 = null
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r2 = null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r8 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r8 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r8.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r8.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r3 = $r8
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r3 = $r8 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r9 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r9 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r9)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State FIRST>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State FIRST> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : i2 = 2
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : i2 = 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i10 = lengthof r1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i10 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if i2 >= $i10
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if i2 >= $i10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i11 = r1[i2]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if i2 >= $i10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r23 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$1: int[] $SwitchMap$org$apache$pdfbox$pdmodel$font$PDCIDFontType2Embedder$State>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r23 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$1: int[] $SwitchMap$org$apache$pdfbox$pdmodel$font$PDCIDFontType2Embedder$State> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i30 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: int ordinal()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i30 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: int ordinal()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i31 = $r23[$i30]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i31 = $r23[$i30] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i31) {     case 1:
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i31) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r24 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i31) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r27 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i31) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r28 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i31) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : return r3
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r28 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r28)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r28) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r29 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r29 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r29)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r29) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : return r3
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r27 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r27)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r27) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r2)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= return r3]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= return r3] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : return r3
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r24 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r24.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r24.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r25 = $r24
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r25 = $r24 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r26 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r26 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r25.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r26)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r25.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r25)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r25) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= return r3]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= return r3] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : return r3
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i11 = r1[i2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l3 = (long) $i11
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l3 = (long) $i11 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i12 = i2 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i12 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i13 = r1[$i12]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i13 = r1[$i12] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f4 = (float) $i13
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f4 = (float) $i13 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f5 = $f4 * f0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $f5 = $f4 * f0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i14 = staticinvoke <java.lang.Math: int round(float)>($f5)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i14 = staticinvoke <java.lang.Math: int round(float)>($f5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l4 = (long) $i14
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l4 = (long) $i14 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r10 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$1: int[] $SwitchMap$org$apache$pdfbox$pdmodel$font$PDCIDFontType2Embedder$State>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r10 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$1: int[] $SwitchMap$org$apache$pdfbox$pdmodel$font$PDCIDFontType2Embedder$State> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i15 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: int ordinal()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i15 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: int ordinal()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i16 = $r10[$i15]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i16 = $r10[$i15] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i16) {     case 1:
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i16) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l17 = l0 + 1L
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i16) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l22 = l0 + 1L
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i16) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l27 = l0 + 1L
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : tableswitch($i16) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l0 = l3
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l0 = l3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : i2 = i2 + 2
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : i2 = i2 + 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= $i10 = lengthof r1]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= $i10 = lengthof r1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $i10 = lengthof r1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l27 = l0 + 1L >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b28 = l3 cmp $l27
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b28 = l3 cmp $l27 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b28 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b28 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b29 = l4 cmp l1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b28 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r20 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r20 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r20)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r21 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r21 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r21)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r21) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r22 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l3)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r22 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r22)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r22) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State FIRST>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State FIRST> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b29 = l4 cmp l1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b29 == 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b29 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r20 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b29 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l22 = l0 + 1L >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b23 = l3 cmp $l22
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b23 = l3 cmp $l22 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b23 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b23 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b24 = l4 cmp l1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b23 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l25 = l0 + 1L
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l25 = l0 + 1L >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b26 = l3 cmp $l25
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b26 = l3 cmp $l25 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b26 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b26 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r17 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b26 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State FIRST>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State FIRST> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r18 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r18 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r2)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r19 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l3)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r19 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r17 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r17)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b24 = l4 cmp l1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b24 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b24 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State SERIAL>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b24 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l25 = l0 + 1L
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State SERIAL> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r2)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r16 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r16 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r16)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l17 = l0 + 1L >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b18 = l3 cmp $l17
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b18 = l3 cmp $l17 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b18 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b18 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b19 = l4 cmp l1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b18 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l20 = l0 + 1L
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l20 = l0 + 1L >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b21 = l3 cmp $l20
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b21 = l3 cmp $l20 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b21 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b21 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State BRACKET>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b21 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r13 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r13 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r13.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r13.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r2 = $r13
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r2 = $r13 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r14 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r14 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r14)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r2)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r15 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l3)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r15 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r15)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r15) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State BRACKET> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r11 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r11 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r11.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r11.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r2 = $r11
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r2 = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r12 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r12 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r12)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $b19 = l4 cmp l1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b19 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b19 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State SERIAL>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : if $b19 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $l20 = l0 + 1L
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : r4 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State: org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State SERIAL> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : goto [?= l1 = l4] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : l1 = l4
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : $r5 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("length of widths must be > 0")
org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("length of widths must be > 0") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder.getWidths : throw $r5
