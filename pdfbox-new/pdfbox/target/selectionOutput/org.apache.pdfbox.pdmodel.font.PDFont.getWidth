org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r1 = (java.lang.Float) $r5
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r1 = (java.lang.Float) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r1 == null
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f0 = virtualinvoke r1.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTHS>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTHS> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r8 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r7)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r8 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $r8 != null
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $r8 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $r8 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIRST_CHAR>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIRST_CHAR> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i1 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r12, -1)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i1 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r12, -1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r13 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r13 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAST_CHAR>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAST_CHAR> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i2 = virtualinvoke $r13.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r14, -1)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i2 = virtualinvoke $r13.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r14, -1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.List getWidths()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.List getWidths()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i3 = interfaceinvoke $r15.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i3 = interfaceinvoke $r15.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i4 = i0 - i1
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i4 = i0 - i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i3 <= 0
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i3 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 < i1
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i3 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r2 == null
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f2 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getMissingWidth()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isStandard14()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isStandard14()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: float getStandard14Width(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: float getWidthFromFont(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: float getWidthFromFont(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r30 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r30 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r31 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r31 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, r30)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, r30) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f7 = virtualinvoke r30.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f7 = virtualinvoke r30.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f7
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: float getStandard14Width(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r26 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r26 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r26)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r26) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f5 = virtualinvoke r26.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f5 = virtualinvoke r26.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f5
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f2 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getMissingWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r22)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r22) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f3 = virtualinvoke r22.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f3 = virtualinvoke r22.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f3
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 < i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 > i2
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 < i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 > i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i4 >= i3
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 > i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i4 >= i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.List getWidths()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i4 >= i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.List getWidths()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i4)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r18 = (java.lang.Float) $r17
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r18 = (java.lang.Float) $r17 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r18 != null
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r18 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r18 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r18)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r18) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f1 = virtualinvoke r18.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f1 = virtualinvoke r18.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f1
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MISSING_WIDTH>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MISSING_WIDTH> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z0 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r10)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z0 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z0 == 0
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r11 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isStandard14()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f0 = virtualinvoke r1.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f0
