org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCODING>
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCODING> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r2 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r2 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z0 == 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r3 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if r2 == null
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)>(r2)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFont descendantFont>
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFont descendantFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r20 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo getCIDSystemInfo()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r20 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo getCIDSystemInfo()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if r20 == null
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if r20 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r22 = "Adobe"
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if r20 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : return
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r22 = "Adobe" >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r23 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getRegistry()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r23 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getRegistry()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r23)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r23) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z2 == 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r24 = "GB1"
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z7 = 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z7 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isDescendantCJK> = $z7
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isDescendantCJK> = $z7 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : return
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r24 = "GB1" >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r25 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getOrdering()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r25 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getOrdering()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z3 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r25)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z3 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z3 != 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r26 = "CNS1"
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z7 = 1
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z7 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : goto [?= r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isDescendantCJK> = $z7]
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : goto [?= r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isDescendantCJK> = $z7] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isDescendantCJK> = $z7
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r26 = "CNS1" >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r27 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getOrdering()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r27 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getOrdering()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z4 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z4 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z4 != 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z4 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r28 = "Japan1"
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z4 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z7 = 1
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r28 = "Japan1" >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r29 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getOrdering()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r29 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getOrdering()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z5 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z5 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z5 != 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r30 = "Korea1"
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z7 = 1
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r30 = "Korea1" >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r31 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getOrdering()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r31 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo: java.lang.String getOrdering()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z6 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z6 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z6 == 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z7 = 1
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z7 = 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap> = $r9
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap> = $r9 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap>
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $r10 != null
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $r10 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r11 = new java.io.IOException
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $r10 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap>
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z1 = virtualinvoke $r12.<org.apache.fontbox.cmap.CMap: boolean hasCIDMappings()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $z1 = virtualinvoke $r12.<org.apache.fontbox.cmap.CMap: boolean hasCIDMappings()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z1 != 0
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r13 = <org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFont descendantFont>
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r13 = <org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r14 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Encoding CMap in font ")
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Encoding CMap in font ") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r18)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r18) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFont descendantFont>
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r11 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Missing required CMap")
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Missing required CMap") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : throw $r11
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r3 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r5 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r5 = virtualinvoke r3.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r6 = staticinvoke <org.apache.pdfbox.pdmodel.font.CMapManager: org.apache.fontbox.cmap.CMap getPredefinedCMap(java.lang.String)>($r5)
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r6 = staticinvoke <org.apache.pdfbox.pdmodel.font.CMapManager: org.apache.fontbox.cmap.CMap getPredefinedCMap(java.lang.String)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap> = $r6
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap> = $r6 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r7 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap>
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r7 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $r7 == null
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $r7 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isCMapPredefined> = 1
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : if $r7 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r8 = new java.io.IOException
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r8 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Missing required CMap")
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Missing required CMap") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : throw $r8
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isCMapPredefined> = 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : goto [?= $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFont descendantFont>]
org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : goto [?= $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFont descendantFont>] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.readEncoding : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.pdfbox.pdmodel.font.PDCIDFont descendantFont>
