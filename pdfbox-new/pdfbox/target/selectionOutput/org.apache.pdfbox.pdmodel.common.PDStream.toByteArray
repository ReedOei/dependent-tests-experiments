org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r1 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r2 = $r1
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r2 = $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r4 = null
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r4 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r3, r2)
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r4 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r3 == null
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r4 == null
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : throw r6
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r12 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r7 = $r12 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7)
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r7) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= throw r6]
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= throw r6] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : throw r6
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : throw r6
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= throw r6]
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r12 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= throw r6] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : throw r6
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r10 = $r9 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r4 = r10
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r10 = $r9 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r4 = r10 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : throw r10
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r4 = r10 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : throw r10 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r3, r2) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r3 == null
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r3, r2) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r4 == null
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : return $r13
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r8 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r5 = $r8 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5)
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r3.<java.io.InputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r8 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r13 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
