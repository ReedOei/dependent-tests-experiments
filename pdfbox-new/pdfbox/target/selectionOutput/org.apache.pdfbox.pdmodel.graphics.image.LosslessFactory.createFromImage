org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r2 = newarray (int)[i1]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r2 = newarray (int)[i1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i7 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i7 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i7 != 10
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i7 != 10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r11 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i7 != 10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i9 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i9 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i9 != 12
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i9 != 12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r12 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i9 != 12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i2 = 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i2 = 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r3 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r3 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i22 = i1 * i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i22 = i1 * i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i23 = $i22 * 3
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i23 = $i22 * 3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = newarray (byte)[$i23]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = newarray (byte)[$i23] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i24 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i24 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i25 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i25 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i25 >= i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i25 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r23 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i25, i1, 1, r2, 0, i1)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i25 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i39 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i39 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i40 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i40 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r24 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, r10, $i39, $i40, i2, r3)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r24 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, r10, $i39, $i40, i2, r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r25 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createAlphaFromARGBImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)>(r0, r1)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r25 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createAlphaFromARGBImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)>(r0, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r25 == null
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r25 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r26 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r25 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : return r24
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r26 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r27 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK>
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r27 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r26.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r27, r25)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r26.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r27, r25) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : return r24
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r23 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i25, i1, 1, r2, 0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i26 = lengthof r23
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i26 = lengthof r23 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i27 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i27 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i27 >= i26
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i27 >= i26 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i28 = r23[i27]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i27 >= i26 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i25 = i25 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i25 = i25 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i25 >= i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i28 = r23[i27] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i29 = i24 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i29 = i24 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i30 = i28 >> 16
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i30 = i28 >> 16 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i31 = $i30 & 255
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i31 = $i30 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b32 = (byte) $i31
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b32 = (byte) $i31 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10[i24] = $b32
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10[i24] = $b32 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i33 = i29 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i33 = i29 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i34 = i28 >> 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i34 = i28 >> 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i35 = $i34 & 255
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i35 = $i34 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b36 = (byte) $i35
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b36 = (byte) $i35 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10[i29] = $b36
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10[i29] = $b36 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i24 = i33 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i24 = i33 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i37 = i28 & 255
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i37 = i28 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b38 = (byte) $i37
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b38 = (byte) $i37 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10[i33] = $b38
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10[i33] = $b38 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i27 = i27 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i27 = i27 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i27 >= i26
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r12 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i10 = virtualinvoke $r12.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i10 = virtualinvoke $r12.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i10 != 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i10 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r13 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i10 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i2 = 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r13 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i2 = virtualinvoke $r13.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i2 = virtualinvoke $r13.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r3 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r3 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r14 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r14 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i11 = i1 * i2
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i11 = i1 * i2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i12 = $i11 / 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i12 = $i11 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i13 = i1 * i2
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i13 = i1 * i2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i14 = $i13 % 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i14 = $i13 % 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i14 == 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b15 = 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b15 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b15 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i16 = $b15 * i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i16 = $b15 * i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i17 = $i12 + $i16
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i17 = $i12 + $i16 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : specialinvoke $r14.<java.io.ByteArrayOutputStream: void <init>(int)>($i17)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : specialinvoke $r14.<java.io.ByteArrayOutputStream: void <init>(int)>($i17) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r4 = $r14
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r4 = $r14 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r16 = new javax.imageio.stream.MemoryCacheImageOutputStream
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r16 = new javax.imageio.stream.MemoryCacheImageOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : specialinvoke $r16.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>(r4)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : specialinvoke $r16.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r5 = $r16
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r5 = $r16 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r6 = null
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r6 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i3 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r6 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r8 = $r21 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r5 == null
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r8 = $r21 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r21 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r6 == null
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : throw r8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r22 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r9 = $r22 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= throw r8]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= throw r8] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : throw r8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : throw r8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= throw r8]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r22 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= throw r8] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : throw r8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r20 = $r19 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r6 = r20
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r20 = $r19 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r21 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r6 = r20 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : throw r20
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r6 = r20 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r21 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : throw r20 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r21 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i3 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i3 >= i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i3 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i3 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r7 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i3, i1, 1, r2, 0, i1)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i3 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i3 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r5 == null
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r6 == null
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= $i39 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= $i39 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i39 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r18 = $r17 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r18)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r18) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r7 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i3, i1, 1, r2, 0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i4 = lengthof r7
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r7 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i3, i1, 1, r2, 0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i4 = lengthof r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i5 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i4 = lengthof r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i5 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i5 >= i4
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i5 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i5 >= i4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i6 = r7[i5]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i5 >= i4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i20 = virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i5 >= i4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i20 = virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i20 == 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i20 = virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i20 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i21 = 8 - i20
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i20 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i3 = i3 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i20 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i3 >= i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i21 = 8 - i20 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, $i21)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i21 = 8 - i20 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, $i21) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i3 = i3 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, $i21) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i6 = r7[i5] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i18 = i6 & 255
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i6 = r7[i5] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i18 = i6 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $l19 = (long) $i18
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i18 = i6 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $l19 = (long) $i18 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l19, i2)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $l19 = (long) $i18 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l19, i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i5 = i5 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l19, i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i5 >= i4
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b15 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= $i16 = $b15 * i0]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= $i16 = $b15 * i0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i16 = $b15 * i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r11 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i8 = virtualinvoke $r11.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i8 = virtualinvoke $r11.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i8 <= 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i8 <= 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i9 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i8 <= 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r13 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
