org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r2 = new org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r3 = <org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.function.type4.Operators OPERATORS>
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r3 = <org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.function.type4.Operators OPERATORS> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : specialinvoke $r2.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: void <init>(org.apache.pdfbox.pdmodel.common.function.type4.Operators)>($r3)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : specialinvoke $r2.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: void <init>(org.apache.pdfbox.pdmodel.common.function.type4.Operators)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r4 = $r2
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r4 = $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i0 = 0
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $i2 = lengthof r1
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $i2 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i0 >= $i2
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i0 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.PDRange getDomainForInput(int)>(i0)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i0 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r10 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence instructions>
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r10 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence instructions> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence: void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)>(r4)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence: void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: int getNumberOfOutputParameters()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: int getNumberOfOutputParameters()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r11 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r11 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i4 = virtualinvoke $r11.<java.util.Stack: int size()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i4 = virtualinvoke $r11.<java.util.Stack: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i4 >= i3
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i4 >= i3 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r12 = new java.lang.IllegalStateException
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i4 >= i3 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r20 = newarray (float)[i3]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r20 = newarray (float)[i3] >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i1 = i3 - 1
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i1 = i3 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i1 < 0
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i1 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.PDRange getRangeForOutput(int)>(i1)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i1 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : return r20
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.PDRange getRangeForOutput(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f4 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: float popReal()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f4 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: float popReal()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r20[i1] = $f4
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r20[i1] = $f4 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f5 = r20[i1]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f5 = r20[i1] >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f6 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f6 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f7 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f7 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: float clipToRange(float,float,float)>($f5, $f6, $f7)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: float clipToRange(float,float,float)>($f5, $f6, $f7) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r20[i1] = $f8
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r20[i1] = $f8 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i1 = i1 + -1
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i1 = i1 + -1 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : goto [?= (branch)]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i1 < 0
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r12 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r13 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The type 4 function returned ")
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The type 4 function returned ") >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values but the Range entry indicates that ")
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values but the Range entry indicates that ") >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values be returned.")
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values be returned.") >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : throw $r12
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.PDRange getDomainForInput(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f1 = r1[i0]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f1 = r1[i0] >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f3 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f3 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: float clipToRange(float,float,float)>($f1, $f2, $f3)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: float clipToRange(float,float,float)>($f1, $f2, $f3) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r7 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r7 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : virtualinvoke $r7.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r8)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : virtualinvoke $r7.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i0 = i0 + 1
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i0 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : goto [?= $i2 = lengthof r1]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : goto [?= $i2 = lengthof r1] >>>>>>>> org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $i2 = lengthof r1
