org.apache.pdfbox.util.Hex.writeHexBytes : r2 = r0 >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : i0 = lengthof r2
org.apache.pdfbox.util.Hex.writeHexBytes : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : i1 = 0
org.apache.pdfbox.util.Hex.writeHexBytes : i1 = 0 >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : if i1 >= i0
org.apache.pdfbox.util.Hex.writeHexBytes : if i1 >= i0 >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : b2 = r2[i1]
org.apache.pdfbox.util.Hex.writeHexBytes : if i1 >= i0 >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : return
org.apache.pdfbox.util.Hex.writeHexBytes : b2 = r2[i1] >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : staticinvoke <org.apache.pdfbox.util.Hex: void writeHexByte(byte,java.io.OutputStream)>(b2, r1)
org.apache.pdfbox.util.Hex.writeHexBytes : staticinvoke <org.apache.pdfbox.util.Hex: void writeHexByte(byte,java.io.OutputStream)>(b2, r1) >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : i1 = i1 + 1
org.apache.pdfbox.util.Hex.writeHexBytes : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : goto [?= (branch)]
org.apache.pdfbox.util.Hex.writeHexBytes : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.Hex.writeHexBytes : if i1 >= i0
