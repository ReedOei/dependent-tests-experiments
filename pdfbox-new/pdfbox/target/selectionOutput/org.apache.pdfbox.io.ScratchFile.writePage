org.apache.pdfbox.io.ScratchFile.writePage : if i0 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $i1 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.writePage : if i0 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r6 = new java.io.IOException
org.apache.pdfbox.io.ScratchFile.writePage : $r6 = new java.io.IOException >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.io.ScratchFile.writePage : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.io.ScratchFile.writePage : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Page index out of range: ")
org.apache.pdfbox.io.ScratchFile.writePage : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Page index out of range: ") >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.pdfbox.io.ScratchFile.writePage : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Max value: ")
org.apache.pdfbox.io.ScratchFile.writePage : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Max value: ") >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $i2 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.writePage : $i2 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $i3 = $i2 - 1
org.apache.pdfbox.io.ScratchFile.writePage : $i3 = $i2 - 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
org.apache.pdfbox.io.ScratchFile.writePage : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.io.ScratchFile.writePage : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r11)
org.apache.pdfbox.io.ScratchFile.writePage : specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r11) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : throw $r6
org.apache.pdfbox.io.ScratchFile.writePage : $i1 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : if i0 < $i1
org.apache.pdfbox.io.ScratchFile.writePage : if i0 < $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.io.ScratchFile.writePage : if i0 < $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $i4 = lengthof r1
org.apache.pdfbox.io.ScratchFile.writePage : $i4 = lengthof r1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : if $i4 == 4096
org.apache.pdfbox.io.ScratchFile.writePage : if $i4 == 4096 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r12 = new java.io.IOException
org.apache.pdfbox.io.ScratchFile.writePage : if $i4 == 4096 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $i6 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.writePage : $i6 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : if i0 >= $i6
org.apache.pdfbox.io.ScratchFile.writePage : if i0 >= $i6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean maxMainMemoryIsRestricted>
org.apache.pdfbox.io.ScratchFile.writePage : if i0 >= $i6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.writePage : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : r24 = $r23
org.apache.pdfbox.io.ScratchFile.writePage : r24 = $r23 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : entermonitor $r23
org.apache.pdfbox.io.ScratchFile.writePage : entermonitor $r23 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.io.ScratchFile.writePage : entermonitor $r23 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : r5 = $r27 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r24
org.apache.pdfbox.io.ScratchFile.writePage : r5 = $r27 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r24 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : throw r5
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r24 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r25 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $r25 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $l7 = (long) i0
org.apache.pdfbox.io.ScratchFile.writePage : $r25 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $l7 = (long) i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $i8 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.writePage : $l7 = (long) i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $i8 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $l9 = (long) $i8
org.apache.pdfbox.io.ScratchFile.writePage : $i8 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $l9 = (long) $i8 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $l10 = $l7 - $l9
org.apache.pdfbox.io.ScratchFile.writePage : $l9 = (long) $i8 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $l10 = $l7 - $l9 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $l11 = $l10 * 4096L
org.apache.pdfbox.io.ScratchFile.writePage : $l10 = $l7 - $l9 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $l11 = $l10 * 4096L >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke $r25.<java.io.RandomAccessFile: void seek(long)>($l11)
org.apache.pdfbox.io.ScratchFile.writePage : $l11 = $l10 * 4096L >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke $r25.<java.io.RandomAccessFile: void seek(long)>($l11) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r26 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke $r25.<java.io.RandomAccessFile: void seek(long)>($l11) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $r26 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke $r26.<java.io.RandomAccessFile: void write(byte[])>(r1)
org.apache.pdfbox.io.ScratchFile.writePage : $r26 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke $r26.<java.io.RandomAccessFile: void write(byte[])>(r1) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r24
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke $r26.<java.io.RandomAccessFile: void write(byte[])>(r1) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r24 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : goto [?= return]
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r24 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r27 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : goto [?= return] >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : return
org.apache.pdfbox.io.ScratchFile.writePage : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean maxMainMemoryIsRestricted> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.writePage : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r19 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.writePage : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r20 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.writePage : $r20 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : r3 = $r20
org.apache.pdfbox.io.ScratchFile.writePage : r3 = $r20 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : entermonitor $r20
org.apache.pdfbox.io.ScratchFile.writePage : entermonitor $r20 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r21 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.writePage : entermonitor $r20 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r22 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : r4 = $r22 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r3
org.apache.pdfbox.io.ScratchFile.writePage : r4 = $r22 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r22 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : throw r4
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r22 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $r21 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r21[i0] = r1
org.apache.pdfbox.io.ScratchFile.writePage : $r21 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r22 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : $r21[i0] = r1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r3
org.apache.pdfbox.io.ScratchFile.writePage : $r21[i0] = r1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r22 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : goto [?= virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()]
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r22 := @caughtexception
org.apache.pdfbox.io.ScratchFile.writePage : goto [?= virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()] >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : goto [?= return]
org.apache.pdfbox.io.ScratchFile.writePage : goto [?= return] >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : return
org.apache.pdfbox.io.ScratchFile.writePage : $r19 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r19[i0] = r1
org.apache.pdfbox.io.ScratchFile.writePage : $r19[i0] = r1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : goto [?= virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()]
org.apache.pdfbox.io.ScratchFile.writePage : goto [?= virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()] >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.io.ScratchFile.writePage : $r12 = new java.io.IOException >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r13 = new java.lang.StringBuilder
org.apache.pdfbox.io.ScratchFile.writePage : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.io.ScratchFile.writePage : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong page size to write: ")
org.apache.pdfbox.io.ScratchFile.writePage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong page size to write: ") >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $i5 = lengthof r1
org.apache.pdfbox.io.ScratchFile.writePage : $i5 = lengthof r1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)
org.apache.pdfbox.io.ScratchFile.writePage : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Expected: ")
org.apache.pdfbox.io.ScratchFile.writePage : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Expected: ") >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(4096)
org.apache.pdfbox.io.ScratchFile.writePage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(4096) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.io.ScratchFile.writePage : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r18)
org.apache.pdfbox.io.ScratchFile.writePage : specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r18) >>>>>>>> org.apache.pdfbox.io.ScratchFile.writePage : throw $r12
