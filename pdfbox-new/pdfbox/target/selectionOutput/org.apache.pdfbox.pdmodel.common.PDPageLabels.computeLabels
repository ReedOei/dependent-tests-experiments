org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r6 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.Map labels> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z0 != 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : return
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i0 = 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r3 = (java.util.Map$Entry) $r8
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r3 = (java.util.Map$Entry) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z1 == 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r18 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r18 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r19 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r19 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r20 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r19
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r20 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r19 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r21 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc>
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r21 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i4 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i4 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r22 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r22 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r23 = (java.lang.Integer) $r22
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r23 = (java.lang.Integer) $r22 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i5 = virtualinvoke $r23.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i5 = virtualinvoke $r23.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i6 = $i4 - $i5
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i6 = $i4 - $i5 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : specialinvoke $r18.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r20, $i6)
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : specialinvoke $r18.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r20, $i6) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r24 = $r18
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r24 = $r18 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z3 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z3 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z3 == 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r25 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : return
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r25 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i0, $r25)
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i0, $r25) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i0 = i0 + 1
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i0 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z3 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z3 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z3 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r4 = (java.util.Map$Entry) $r9
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r4 = (java.util.Map$Entry) $r9 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r11 = (java.lang.Integer) $r10
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r11 = (java.lang.Integer) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r13 = (java.lang.Integer) $r12
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r13 = (java.lang.Integer) $r12 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i3 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i3 = virtualinvoke $r13.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i1 = $i2 - $i3
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i1 = $i2 - $i3 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r14 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r14 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r16 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r15
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r16 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r15 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : specialinvoke $r14.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r16, i1)
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : specialinvoke $r14.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r16, i1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r5 = $r14
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r5 = $r14 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z2 == 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r17 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r3 = r4
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r3 = r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r17 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i0, $r17)
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i0, $r17) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i0 = i0 + 1
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i0 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()
