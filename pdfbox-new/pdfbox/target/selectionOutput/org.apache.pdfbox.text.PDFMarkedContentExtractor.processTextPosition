org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z0 = 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z2 = 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z2 = 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r2 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r2 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f0 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getX()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f0 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getX()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f1 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getY()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f1 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getY()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r9 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Map characterListMapping>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r9 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Map characterListMapping> >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r3 = (java.util.List) $r10
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r3 = (java.util.List) $r10 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r3 != null
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r3 != null >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r11 = new java.util.ArrayList
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r3 != null >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z1 = 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z1 = 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f5 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getWidth()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f5 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getWidth()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i0 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i0 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f6 = (float) $i0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f6 = (float) $i0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f7 = $f5 / $f6
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f7 = $f5 / $f6 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f2 = $f7 / 3.0F
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f2 = $f7 / 3.0F >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z3 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z3 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z3 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z1 != 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z1 != 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z1 != 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z2 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z2 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r15 = new java.util.ArrayList
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z2 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : return
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r15 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : specialinvoke $r15.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : specialinvoke $r15.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r16 = $r15
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r16 = $r15 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z7 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z7 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z7 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z7 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z7 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i1 = interfaceinvoke r16.<java.util.List: int size()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i1 = interfaceinvoke r16.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i2 = $i1 - 1
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i2 = $i1 - 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r17 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>($i2)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r17 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>($i2) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r18 = (org.apache.pdfbox.text.TextPosition) $r17
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r18 = (org.apache.pdfbox.text.TextPosition) $r17 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z9 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z9 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z9 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z9 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z10 = virtualinvoke r18.<org.apache.pdfbox.text.TextPosition: boolean contains(org.apache.pdfbox.text.TextPosition)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z9 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z11 = virtualinvoke r18.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z11 = virtualinvoke r18.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z11 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z11 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z12 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: boolean contains(org.apache.pdfbox.text.TextPosition)>(r18)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z11 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents> >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z15 = virtualinvoke $r20.<java.util.Stack: boolean isEmpty()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z15 = virtualinvoke $r20.<java.util.Stack: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z15 != 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z15 != 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r21 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z15 != 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : return
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r21 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents> >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r22 = virtualinvoke $r21.<java.util.Stack: java.lang.Object peek()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r22 = virtualinvoke $r21.<java.util.Stack: java.lang.Object peek()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r23 = (org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent) $r22
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r23 = (org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent) $r22 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke $r23.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent: void addText(org.apache.pdfbox.text.TextPosition)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke $r23.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent: void addText(org.apache.pdfbox.text.TextPosition)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : return
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z12 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: boolean contains(org.apache.pdfbox.text.TextPosition)>(r18) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z12 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z12 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: void mergeDiacritic(org.apache.pdfbox.text.TextPosition)>(r18)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z12 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: void mergeDiacritic(org.apache.pdfbox.text.TextPosition)>(r18) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i3 = interfaceinvoke r16.<java.util.List: int size()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i3 = interfaceinvoke r16.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i4 = $i3 - 1
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i4 = $i3 - 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: java.lang.Object remove(int)>($i4)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: java.lang.Object remove(int)>($i4) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z10 = virtualinvoke r18.<org.apache.pdfbox.text.TextPosition: boolean contains(org.apache.pdfbox.text.TextPosition)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z10 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z10 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r18.<org.apache.pdfbox.text.TextPosition: void mergeDiacritic(org.apache.pdfbox.text.TextPosition)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z10 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z11 = virtualinvoke r18.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r18.<org.apache.pdfbox.text.TextPosition: void mergeDiacritic(org.apache.pdfbox.text.TextPosition)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r20 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z2 = 1
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z2 = 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z2 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r5 = (org.apache.pdfbox.text.TextPosition) $r14
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r5 = (org.apache.pdfbox.text.TextPosition) $r14 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r6 = r5
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r6 = r5 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r7 = virtualinvoke r6.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r7 = virtualinvoke r6.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f3 = virtualinvoke r6.<org.apache.pdfbox.text.TextPosition: float getX()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f3 = virtualinvoke r6.<org.apache.pdfbox.text.TextPosition: float getX()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f4 = virtualinvoke r6.<org.apache.pdfbox.text.TextPosition: float getY()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f4 = virtualinvoke r6.<org.apache.pdfbox.text.TextPosition: float getY()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r7 == null
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r7 == null >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z4 = specialinvoke r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: boolean within(float,float,float)>(f3, f0, f2)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r7 == null >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z4 = specialinvoke r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: boolean within(float,float,float)>(f3, f0, f2) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z4 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z4 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z5 = specialinvoke r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: boolean within(float,float,float)>(f4, f1, f2)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z4 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z5 = specialinvoke r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: boolean within(float,float,float)>(f4, f1, f2) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z5 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z5 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z1 = 1
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z5 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z1 = 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= (branch)]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z1 != 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r11 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r3 = $r11
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r3 = $r11 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r12 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Map characterListMapping>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r12 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Map characterListMapping> >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z1 = 0
