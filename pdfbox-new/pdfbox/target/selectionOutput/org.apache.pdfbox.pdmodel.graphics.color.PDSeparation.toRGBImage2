org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i0 = virtualinvoke r1.<java.awt.image.WritableRaster: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i1 = virtualinvoke r1.<java.awt.image.WritableRaster: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i1 = virtualinvoke r1.<java.awt.image.WritableRaster: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r10 = new java.awt.image.BufferedImage
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r10 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i1, 1)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i1, 1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r2 = $r10
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r2 = $r10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r3 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>()
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r3 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r4 = newarray (float)[1]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r4 = newarray (float)[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r11 = new java.util.HashMap
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r11 = new java.util.HashMap >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : specialinvoke $r11.<java.util.HashMap: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : specialinvoke $r11.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r5 = $r11
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r5 = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i2 = 0
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if i2 >= i1
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if i2 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i3 = 0
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if i2 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : return r2
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i3 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if i3 >= i0
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if i3 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : virtualinvoke r1.<java.awt.image.WritableRaster: float[] getPixel(int,int,float[])>(i3, i2, r4)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if i3 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i2 = i2 + 1
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if i2 >= i1
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : virtualinvoke r1.<java.awt.image.WritableRaster: float[] getPixel(int,int,float[])>(i3, i2, r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f0 = r4[0]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f0 = r4[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r6 = $r13
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r6 = $r13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7 = (int[]) $r14
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7 = (int[]) $r14 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if r7 != null
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $b5 = 0
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : virtualinvoke r3.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i3, i2, r7)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : virtualinvoke r3.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i3, i2, r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i3 = i3 + 1
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : if i3 >= i0
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $b5 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f1 = r4[$b5]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f1 = r4[$b5] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f2 = $f1 / 255.0F
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f2 = $f1 / 255.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r4[$b5] = $f2
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r4[$b5] = $f2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r16 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: org.apache.pdfbox.pdmodel.common.function.PDFunction tintTransform>
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r16 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: org.apache.pdfbox.pdmodel.common.function.PDFunction tintTransform> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r8 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.common.function.PDFunction: float[] eval(float[])>(r4)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r8 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.common.function.PDFunction: float[] eval(float[])>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace alternateColorSpace>
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace alternateColorSpace> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r9 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: float[] toRGB(float[])>(r8)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r9 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: float[] toRGB(float[])>(r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7 = newarray (int)[3]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7 = newarray (int)[3] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f3 = r9[0]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f3 = r9[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f4 = $f3 * 255.0F
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f4 = $f3 * 255.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $i6 = (int) $f4
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $i6 = (int) $f4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7[0] = $i6
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7[0] = $i6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f5 = r9[1]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f5 = r9[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f6 = $f5 * 255.0F
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f6 = $f5 * 255.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $i7 = (int) $f6
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $i7 = (int) $f6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7[1] = $i7
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7[1] = $i7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f7 = r9[2]
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f7 = r9[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f8 = $f7 * 255.0F
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $f8 = $f7 * 255.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $i8 = (int) $f8
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : $i8 = (int) $f8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7[2] = $i8
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : r7[2] = $i8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7)
org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDSeparation.toRGBImage2 : virtualinvoke r3.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i3, i2, r7)
