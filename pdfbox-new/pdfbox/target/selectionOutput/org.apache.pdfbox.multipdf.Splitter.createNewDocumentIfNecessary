org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $i0 = r0.<org.apache.pdfbox.multipdf.Splitter: int currentPageNumber> >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $z0 = virtualinvoke r0.<org.apache.pdfbox.multipdf.Splitter: boolean splitAtPage(int)>($i0)
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $z0 = virtualinvoke r0.<org.apache.pdfbox.multipdf.Splitter: boolean splitAtPage(int)>($i0) >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : if $z0 != 0
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : if $z0 != 0 >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r1 = r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDestinationDocument>
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : if $z0 != 0 >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r2 = virtualinvoke r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument createNewDocument()>()
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r2 = virtualinvoke r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument createNewDocument()>() >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDestinationDocument> = $r2
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDestinationDocument> = $r2 >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r3 = r0.<org.apache.pdfbox.multipdf.Splitter: java.util.List destinationDocuments>
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r3 = r0.<org.apache.pdfbox.multipdf.Splitter: java.util.List destinationDocuments> >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r4 = r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDestinationDocument>
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r4 = r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDestinationDocument> >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4)
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : return
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r1 = r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDestinationDocument> >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : if $r1 != null
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : if $r1 != null >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : $r2 = virtualinvoke r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument createNewDocument()>()
org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : if $r1 != null >>>>>>>> org.apache.pdfbox.multipdf.Splitter.createNewDocumentIfNecessary : return
