org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r3 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $i0 = virtualinvoke $r3.<java.security.KeyStore: int size()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $i0 = virtualinvoke $r3.<java.security.KeyStore: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : if $i0 != 1
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r4 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r9 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r9 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r10 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias>
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r10 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $z0 = virtualinvoke $r9.<java.security.KeyStore: boolean containsAlias(java.lang.String)>($r10)
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $z0 = virtualinvoke $r9.<java.security.KeyStore: boolean containsAlias(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : if $z0 == 0
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r11 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r15 = new java.security.KeyStoreException
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r15 = new java.security.KeyStoreException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : specialinvoke $r15.<java.security.KeyStoreException: void <init>(java.lang.String)>("the keystore does not contain the given alias")
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : specialinvoke $r15.<java.security.KeyStoreException: void <init>(java.lang.String)>("the keystore does not contain the given alias") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : throw $r15
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r11 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r12 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias>
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r12 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.lang.String alias> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r13 = virtualinvoke $r11.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r12)
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r13 = virtualinvoke $r11.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r14 = (java.security.cert.X509Certificate) $r13
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r14 = (java.security.cert.X509Certificate) $r13 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : return $r14
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r4 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : r1 = virtualinvoke $r4.<java.security.KeyStore: java.util.Enumeration aliases()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : r1 = virtualinvoke $r4.<java.security.KeyStore: java.util.Enumeration aliases()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r5 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r5 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : r2 = (java.lang.String) $r5
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : r2 = (java.lang.String) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r6 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore>
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r6 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial: java.security.KeyStore keyStore> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r7 = virtualinvoke $r6.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r7 = virtualinvoke $r6.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r8 = (java.security.cert.X509Certificate) $r7
org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : $r8 = (java.security.cert.X509Certificate) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial.getCertificate : return $r8
