org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $z0 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r7 = new java.io.IOException
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : r2 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : r2 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : i0 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: int getNumberOfComponents()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : i0 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: int getNumberOfComponents()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : i1 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : i1 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : i2 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : i2 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : i3 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: int getBitsPerComponent()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : i3 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: int getBitsPerComponent()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : r3 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : r3 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i1 <= 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i1 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i2 > 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i1 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r8 = new java.io.IOException
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r8 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("image width and height must be positive")
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("image width and height must be positive") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : throw $r8
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i2 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r8 = new java.io.IOException
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i2 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i3 != 1
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i3 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if r1 != null
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i3 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r4 = new java.awt.Point
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r4 = new java.awt.Point >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : specialinvoke $r4.<java.awt.Point: void <init>(int,int)>(0, 0)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : specialinvoke $r4.<java.awt.Point: void <init>(int,int)>(0, 0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : r5 = staticinvoke <java.awt.image.Raster: java.awt.image.WritableRaster createBandedRaster(int,int,int,int,java.awt.Point)>(0, i1, i2, i0, $r4)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : r5 = staticinvoke <java.awt.image.Raster: java.awt.image.WritableRaster createBandedRaster(int,int,int,int,java.awt.Point)>(0, i1, i2, i0, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r10 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r10 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : r6 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: float[] getDefaultDecode(int)>(8)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : r6 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: float[] getDefaultDecode(int)>(8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i3 != 8
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i3 != 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $z1 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>(r3, r6)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i3 != 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r12 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray)>(r0, r5, r1)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r12 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray)>(r0, r5, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : return $r12
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $z1 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>(r3, r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if r1 != null
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r12 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray)>(r0, r5, r1)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r11 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster)>(r0, r5)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r12 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray)>(r0, r5, r1)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r11 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster)>(r0, r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : return $r11
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i0 != 1
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r4 = new java.awt.Point
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r9 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : if i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r4 = new java.awt.Point
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r9 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : return $r9
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : $r7 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Image stream is empty")
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Image stream is empty") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBImage : throw $r7
