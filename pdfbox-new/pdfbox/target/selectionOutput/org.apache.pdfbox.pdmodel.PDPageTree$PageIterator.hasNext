org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: java.util.Queue queue> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : $z0 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : $z0 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : if $z0 != 0
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : $z1 = 1
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : $z1 = 0
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : $z1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : return $z1
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : $z1 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : goto [?= return $z1]
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : goto [?= return $z1] >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : return $z1
