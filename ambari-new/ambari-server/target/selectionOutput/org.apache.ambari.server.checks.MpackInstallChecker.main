org.apache.ambari.server.checks.MpackInstallChecker.main : $r5 = newarray (com.google.inject.Module)[2] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r1 = new org.apache.ambari.server.controller.ControllerModule
org.apache.ambari.server.checks.MpackInstallChecker.main : $r1 = new org.apache.ambari.server.controller.ControllerModule >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : specialinvoke $r1.<org.apache.ambari.server.controller.ControllerModule: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.main : specialinvoke $r1.<org.apache.ambari.server.controller.ControllerModule: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r5[0] = $r1
org.apache.ambari.server.checks.MpackInstallChecker.main : $r5[0] = $r1 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r6 = new org.apache.ambari.server.checks.MpackInstallChecker$MpackCheckerAuditModule
org.apache.ambari.server.checks.MpackInstallChecker.main : $r6 = new org.apache.ambari.server.checks.MpackInstallChecker$MpackCheckerAuditModule >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : specialinvoke $r6.<org.apache.ambari.server.checks.MpackInstallChecker$MpackCheckerAuditModule: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.main : specialinvoke $r6.<org.apache.ambari.server.checks.MpackInstallChecker$MpackCheckerAuditModule: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r5[1] = $r6
org.apache.ambari.server.checks.MpackInstallChecker.main : $r5[1] = $r6 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5)
org.apache.ambari.server.checks.MpackInstallChecker.main : r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r7 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/checks/MpackInstallChecker")
org.apache.ambari.server.checks.MpackInstallChecker.main : $r7 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/checks/MpackInstallChecker") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : r3 = (org.apache.ambari.server.checks.MpackInstallChecker) $r7
org.apache.ambari.server.checks.MpackInstallChecker.main : r3 = (org.apache.ambari.server.checks.MpackInstallChecker) $r7 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : r4 = staticinvoke <org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.checks.MpackInstallChecker$MpackContext processArguments(java.lang.String[])>(r0)
org.apache.ambari.server.checks.MpackInstallChecker.main : r4 = staticinvoke <org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.checks.MpackInstallChecker$MpackContext processArguments(java.lang.String[])>(r0) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke r3.<org.apache.ambari.server.checks.MpackInstallChecker: void startPersistenceService()>()
org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke r3.<org.apache.ambari.server.checks.MpackInstallChecker: void startPersistenceService()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r8 = virtualinvoke r4.<org.apache.ambari.server.checks.MpackInstallChecker$MpackContext: java.util.HashSet getStacksInMpack()>()
org.apache.ambari.server.checks.MpackInstallChecker.main : $r8 = virtualinvoke r4.<org.apache.ambari.server.checks.MpackInstallChecker$MpackContext: java.util.HashSet getStacksInMpack()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke r3.<org.apache.ambari.server.checks.MpackInstallChecker: void checkClusters(java.util.HashSet)>($r8)
org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke r3.<org.apache.ambari.server.checks.MpackInstallChecker: void checkClusters(java.util.HashSet)>($r8) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke r3.<org.apache.ambari.server.checks.MpackInstallChecker: void stopPersistenceService()>()
org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke r3.<org.apache.ambari.server.checks.MpackInstallChecker: void stopPersistenceService()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $z0 = virtualinvoke r3.<org.apache.ambari.server.checks.MpackInstallChecker: boolean isErrorsFound()>()
org.apache.ambari.server.checks.MpackInstallChecker.main : $z0 = virtualinvoke r3.<org.apache.ambari.server.checks.MpackInstallChecker: boolean isErrorsFound()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : if $z0 == 0
org.apache.ambari.server.checks.MpackInstallChecker.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r9 = <org.apache.ambari.server.checks.MpackInstallChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.MpackInstallChecker.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r11 = <org.apache.ambari.server.checks.MpackInstallChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.MpackInstallChecker.main : $r11 = <org.apache.ambari.server.checks.MpackInstallChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>("No errors found")
org.apache.ambari.server.checks.MpackInstallChecker.main : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>("No errors found") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r12 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.checks.MpackInstallChecker.main : $r12 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("No errors found")
org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("No errors found") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : return
org.apache.ambari.server.checks.MpackInstallChecker.main : $r9 = <org.apache.ambari.server.checks.MpackInstallChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>("Mpack installation checker failed!")
org.apache.ambari.server.checks.MpackInstallChecker.main : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>("Mpack installation checker failed!") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : $r10 = <java.lang.System: java.io.PrintStream err>
org.apache.ambari.server.checks.MpackInstallChecker.main : $r10 = <java.lang.System: java.io.PrintStream err> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Mpack installation checker failed!")
org.apache.ambari.server.checks.MpackInstallChecker.main : virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Mpack installation checker failed!") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.checks.MpackInstallChecker.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : goto [?= return]
org.apache.ambari.server.checks.MpackInstallChecker.main : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.main : return
