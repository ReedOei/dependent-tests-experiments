org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer: void viewInstanceDAOReturningNull()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r18 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r18 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r18
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r19 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r19 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.state.Clusters) $r19
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.state.Clusters) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.state.Cluster) $r20
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.state.Cluster) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/HostHealthStatus")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/HostHealthStatus") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r7 = (org.apache.ambari.server.state.HostHealthStatus) $r21
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r7 = (org.apache.ambari.server.state.HostHealthStatus) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r22
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r22 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/HostResponse")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/HostResponse") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.controller.HostResponse) $r23
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.controller.HostResponse) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r24 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ResourceProviderFactory")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r24 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ResourceProviderFactory") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r10 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r24
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r10 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r3)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r10)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r25 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r25 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r25.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r25.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r12 = $r25
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r12 = $r25 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r13 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r13 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r26 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r26 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r30 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r30 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r35 = (java.util.Set) $r34
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r35 = (java.util.Set) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r36 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r35)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r36 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r38 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r38 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r39 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r38)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r39 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r43 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r43 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r45 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r45 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r47 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r47 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r48 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r47)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r48 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r49 = interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r49 = interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r51 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r51 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r53 = interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r53 = interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r55 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r55 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r57 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r13)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r57 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r58 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r58 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r60 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r60 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r60, "Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r60, "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void recalculateAllClusterVersionStates()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void recalculateAllClusterVersionStates()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r65 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r65 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r65)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r67 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r67 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r68 = interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r67)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r68 = interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r67) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r70 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r70 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r73 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r73 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r75 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r75 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r76 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r75)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r76 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r77 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r77 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r77.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r77.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r78 = interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r77)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r78 = interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r77) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r78.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r78.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r80 = virtualinvoke r9.<org.apache.ambari.server.controller.HostResponse: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r80 = virtualinvoke r9.<org.apache.ambari.server.controller.HostResponse: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r81 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r80)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r81 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r82 = interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r82 = interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r84 = virtualinvoke r9.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r84 = virtualinvoke r9.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r85 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r84)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r85 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r84) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r86 = interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r86 = interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r88 = virtualinvoke r9.<org.apache.ambari.server.controller.HostResponse: org.apache.ambari.server.state.HostHealthStatus getHealthStatus()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r88 = virtualinvoke r9.<org.apache.ambari.server.controller.HostResponse: org.apache.ambari.server.state.HostHealthStatus getHealthStatus()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r89 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r88)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r89 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r88) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r90 = interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r90 = interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r92 = virtualinvoke r7.<org.apache.ambari.server.state.HostHealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus getHealthStatus()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r92 = virtualinvoke r7.<org.apache.ambari.server.state.HostHealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus getHealthStatus()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r93 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r92)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r93 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r92) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r94 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus HEALTHY>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r94 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus HEALTHY> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r95 = interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r94)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r95 = interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r94) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r97 = virtualinvoke r7.<org.apache.ambari.server.state.HostHealthStatus: java.lang.String getHealthReport()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r97 = virtualinvoke r7.<org.apache.ambari.server.state.HostHealthStatus: java.lang.String getHealthReport()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r98 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r97)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r98 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r97) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r99 = interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r99 = interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r101 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r101 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r102 = (java.util.Set) $r101
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r102 = (java.util.Set) $r101 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r103 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r103 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r104 = (java.util.Map) $r103
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r104 = (java.util.Map) $r103 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r105 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r105 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r106 = (org.apache.ambari.server.controller.AmbariManagementController) $r105
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r106 = (org.apache.ambari.server.controller.AmbariManagementController) $r105 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r107 = interfaceinvoke r10.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r102, $r104, $r106)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r107 = interfaceinvoke r10.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r102, $r104, $r106) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r108 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r107)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r108 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r107) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r109 = interfaceinvoke $r108.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r109 = interfaceinvoke $r108.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r109.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r109.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r111 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r111 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r111.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r111.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r112 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r112 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r113 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r113 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r14 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r112, $r113, r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r14 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r112, $r113, r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r114 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r114 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r114.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r114.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r15 = $r114
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r15 = $r114 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r115 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_RACK_INFO_PROPERTY_ID>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r115 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_RACK_INFO_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r115, "rack info")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r115, "rack info") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>(r15, null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>(r15, null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r17 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", "Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r17 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", "Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r14.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r16, r17)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r14.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r16, r17) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : return
