org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r37 = $r36 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r38 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r38 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error when configuring metric sink and source", r37)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error when configuring metric sink and source", r37) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : return
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r1 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("********* Configuring Metric Sources **********")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r1 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("********* Configuring Metric Sources **********") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r9 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("********* Configuring Metric Sources **********") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r9 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r2 = virtualinvoke $r9.<org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.lang.String getProperty(java.lang.String)>("metric.sources")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r9 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r2 = virtualinvoke $r9.<org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.lang.String getProperty(java.lang.String)>("metric.sources") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r2 = virtualinvoke $r9.<org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.lang.String getProperty(java.lang.String)>("metric.sources") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if $z0 == 0
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r10 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r4 = r3
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r4 = r3 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i0 = lengthof r4
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r4 = r3 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i1 = 0
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i1 = 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if i1 >= i0
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i1 = 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if i1 >= i0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r5 = r4[i1]
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if i1 >= i0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= return]
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if i1 >= i0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= return] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : return
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r5 = r4[i1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r5 = r4[i1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if $z1 == 0
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= i1 = i1 + 1]
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r11 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r11 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r12 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r11 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r12 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r12 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source.")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r6 = virtualinvoke $r12.<org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.lang.String getProperty(java.lang.String)>($r17)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r6 = virtualinvoke $r12.<org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.lang.String getProperty(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r18 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r6 = virtualinvoke $r12.<org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.lang.String getProperty(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r6 = virtualinvoke $r12.<org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: java.lang.String getProperty(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r6)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r18 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= $r24 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>()]
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= $r24 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>()] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r24 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= $r24 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>()] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r24 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r25 = (org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource) $r24
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r24 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r25 = (org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource) $r24 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r26 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r25 = (org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource) $r24 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r26 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r27 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r26 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source.")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r32 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getSubsetConfiguration(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,java.lang.String)>($r26, $r31)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r32 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getSubsetConfiguration(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,java.lang.String)>($r26, $r31) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r33 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r32 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getSubsetConfiguration(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,java.lang.String)>($r26, $r31) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r33 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : virtualinvoke r25.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: void init(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,org.apache.ambari.server.metrics.system.MetricsSink)>($r32, $r33)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r33 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : virtualinvoke r25.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: void init(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,org.apache.ambari.server.metrics.system.MetricsSink)>($r32, $r33) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r34 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: java.util.Map sources>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : virtualinvoke r25.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: void init(org.apache.ambari.server.metrics.system.impl.MetricsConfiguration,org.apache.ambari.server.metrics.system.MetricsSink)>($r32, $r33) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r34 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: java.util.Map sources> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r25)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r34 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: java.util.Map sources> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r25) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : virtualinvoke r25.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: void start()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r25) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : virtualinvoke r25.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: void start()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i1 = i1 + 1
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : virtualinvoke r25.<org.apache.ambari.server.metrics.system.impl.AbstractMetricsSource: void start()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= (branch)]
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : if i1 >= i0
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r8 = $r18 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r19 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : r8 = $r18 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r19 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r19 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Source class not found for source name :")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Source class not found for source name :") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Source class not found for source name :") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r23)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= i1 = i1 + 1]
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i1 = i1 + 1
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : i1 = i1 + 1
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r10 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("No metric sources configured.")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r10 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("No metric sources configured.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : return
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("No metric sources configured.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.initializeMetricSources : $r36 := @caughtexception
