org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : if r1 != null >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : $r2 = new java.lang.RuntimeException
org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : if r1 != null >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : r0.<org.apache.ambari.server.orm.cache.HostConfigMappingImpl: java.lang.String type> = r1
org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : r0.<org.apache.ambari.server.orm.cache.HostConfigMappingImpl: java.lang.String type> = r1 >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : return
org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : $r2 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Type couldn\'t be null")
org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Type couldn\'t be null") >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setType : throw $r2
