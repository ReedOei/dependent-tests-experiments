org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r14 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i2 = $r14.<org.apache.ambari.server.state.stack.upgrade.Batch: int percent>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i2 = $r14.<org.apache.ambari.server.state.stack.upgrade.Batch: int percent> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d0 = (double) $i2
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d0 = (double) $i2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d1 = $d0 / 100.0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d1 = $d0 / 100.0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r15 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r15 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i3 = virtualinvoke $r15.<java.util.LinkedHashSet: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i3 = virtualinvoke $r15.<java.util.LinkedHashSet: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d2 = (double) $i3
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d2 = (double) $i3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d3 = $d1 * $d2
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d3 = $d1 * $d2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d3)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i0 = virtualinvoke $r16.<java.lang.Double: int intValue()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i0 = virtualinvoke $r16.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i1 = 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i1 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r17 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r17 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r6 = virtualinvoke $r17.<java.util.LinkedHashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r6 = virtualinvoke $r17.<java.util.LinkedHashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : return
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r7 = (java.lang.String) $r18
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r7 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r19 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r19 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r19.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r19.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r8 = $r19
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r8 = $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r20 = r8.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r20 = r8.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : virtualinvoke $r20.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : virtualinvoke $r20.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i4 = i1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i4 = i1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i1 = i1 + 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i4 >= i0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i4 >= i0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r21 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i4 >= i0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r21 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r21 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r9 = $r21
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r9 = $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r22 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r22 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r10 = (java.util.List) $r22
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r10 = (java.util.List) $r22 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null != r10
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null != r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r23 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null != r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : n0 = null
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : n0 = null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r11 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r11 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 1, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r11
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i5 = interfaceinvoke r11.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r41 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Task resolveTask(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r41 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Task resolveTask(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r41
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r41 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r42 = class "org/apache/ambari/server/state/stack/upgrade/RestartTask"
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r41 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r60 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 0, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r60 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 0, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r60
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r60 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i6 = interfaceinvoke r60.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r60 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i6 = interfaceinvoke r60.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i6 <= 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i6 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r61 = interfaceinvoke r60.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i6 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r61 = interfaceinvoke r60.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r62 = (org.apache.ambari.server.state.stack.upgrade.Task) $r61
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r62 = (org.apache.ambari.server.state.stack.upgrade.Task) $r61 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r13 = virtualinvoke $r62.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r13 = virtualinvoke $r62.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r63 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r63 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r63.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r63.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r64 = $r63
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r64 = $r63 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>(r64, z0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>(r64, z0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r65 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r65 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r64, $r65)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r64, $r65) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r64, r3)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r64, r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>(r64, r13)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>(r64, r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r69 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r64)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r69 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r64) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r70 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r70 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r71 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: java.util.List getTaskList(java.lang.String,java.lang.String,org.apache.ambari.server.stack.HostsType,java.util.List,java.util.Map)>(r3, $r70, r8, r60, r5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r71 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: java.util.List getTaskList(java.lang.String,java.lang.String,org.apache.ambari.server.stack.HostsType,java.util.List,java.util.Map)>(r3, $r70, r8, r60, r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r69.<java.util.List: boolean addAll(java.util.Collection)>($r71)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r69.<java.util.List: boolean addAll(java.util.Collection)>($r71) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r72 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r72 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r73 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r72)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r73 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r72) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r74 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r74 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r75 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Completing", $r73, $r74)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r75 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Completing", $r73, $r74) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r64, $r75)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r64, $r75) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r64)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r64) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r42 = class "org/apache/ambari/server/state/stack/upgrade/RestartTask" >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z6 = virtualinvoke $r42.<java.lang.Class: boolean isInstance(java.lang.Object)>(r41)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z6 = virtualinvoke $r42.<java.lang.Class: boolean isInstance(java.lang.Object)>(r41) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z6 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r43 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r60 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 0, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r43 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r43.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r43.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r44 = $r43
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r44 = $r43 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>(r44, z0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>(r44, z0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r45 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r44)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r45 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r44) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r46 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r46 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r47 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r47 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r48 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r48 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r49 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r49 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r49[0] = r41
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r49[0] = r41 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r46.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r3, $r47, $r48, r5, $r49)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r46.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r3, $r47, $r48, r5, $r49) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r46)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$802(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>(r44, 1)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$802(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>(r44, 1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r44, r3)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r44, r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r51 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r51 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r44, $r51)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r44, $r51) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r53 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type RESTART>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r53 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type RESTART> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>(r44, $r53)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>(r44, $r53) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r55 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r55 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r56 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r55)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r56 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r55) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r57 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r57 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r58 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Restarting", $r56, $r57)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r58 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Restarting", $r56, $r57) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r44, $r58)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r44, $r58) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r44)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r44) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r60 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 0, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i5 = interfaceinvoke r11.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i5 <= 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i5 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r25 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i5 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r41 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Task resolveTask(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r25 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r26 = (org.apache.ambari.server.state.stack.upgrade.Task) $r25
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r26 = (org.apache.ambari.server.state.stack.upgrade.Task) $r25 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r12 = virtualinvoke $r26.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r12 = virtualinvoke $r26.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r27 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r27 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r27.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r27.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r28 = $r27
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r28 = $r27 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>(r28, z0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>(r28, z0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r29 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r29 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r30 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r29)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r30 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r29) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r31 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r31 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r32 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Preparing", $r30, $r31)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r32 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Preparing", $r30, $r31) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r28, $r32)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r28, $r32) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r34 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r28)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r34 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r28) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r35 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r35 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r36 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: java.util.List getTaskList(java.lang.String,java.lang.String,org.apache.ambari.server.stack.HostsType,java.util.List,java.util.Map)>(r3, $r35, r8, r11, r5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r36 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: java.util.List getTaskList(java.lang.String,java.lang.String,org.apache.ambari.server.stack.HostsType,java.util.List,java.util.Map)>(r3, $r35, r8, r11, r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r36)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r34.<java.util.List: boolean addAll(java.util.Collection)>($r36) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r28, r3)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r28, r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r38 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r38 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r28, $r38)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>(r28, $r38) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>(r28, r12)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>(r28, r12) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r28)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r28) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r41 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Task resolveTask(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r23 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r23.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r23.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r10 = $r23
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r10 = $r23 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r10)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : n0 = null
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r21 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= r9 = $r21]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= r9 = $r21] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r9 = $r21
