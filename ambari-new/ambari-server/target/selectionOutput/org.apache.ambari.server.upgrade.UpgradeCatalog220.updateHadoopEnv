org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r8
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r8 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r9 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r9 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r10 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r10 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r3 = (org.apache.ambari.server.state.Cluster) $r12
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r3 = (org.apache.ambari.server.state.Cluster) $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if r4 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r5 = (java.lang.String) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r5 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if r5 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if r5 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : if r5 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n{% if is_datanode_max_locked_memory_set %}\n# Fix temporary bug, when ulimit from conf files is not picked up, without full relogin. \n# Makes sense to fix only when runing DN as root \nif [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n  ulimit -l {{datanode_max_locked_memory}}\nfi\n{% endif %}\n")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n{% if is_datanode_max_locked_memory_set %}\n# Fix temporary bug, when ulimit from conf files is not picked up, without full relogin. \n# Makes sense to fix only when runing DN as root \nif [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n  ulimit -l {{datanode_max_locked_memory}}\nfi\n{% endif %}\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r18)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r3, "hadoop-env", r6, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r3, "hadoop-env", r6, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateHadoopEnv : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
