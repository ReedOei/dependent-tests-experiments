org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r3 = staticinvoke <org.apache.ambari.server.state.fsm.StateMachineFactory: java.util.Map access$000(org.apache.ambari.server.state.fsm.StateMachineFactory)>(r1) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r4 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: java.lang.Enum preState>
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r4 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: java.lang.Enum preState> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : r2 = (java.util.Map) $r5
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : r2 = (java.util.Map) $r5 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : if r2 != null
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : if r2 != null >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r6 = new java.util.HashMap
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : if r2 != null >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r10 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: java.lang.Enum eventType>
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r10 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: java.lang.Enum eventType> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r11 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: org.apache.ambari.server.state.fsm.StateMachineFactory$Transition transition>
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r11 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: org.apache.ambari.server.state.fsm.StateMachineFactory$Transition transition> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11)
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : return
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r6 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : specialinvoke $r6.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : specialinvoke $r6.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : r2 = $r6
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : r2 = $r6 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r7 = staticinvoke <org.apache.ambari.server.state.fsm.StateMachineFactory: java.util.Map access$000(org.apache.ambari.server.state.fsm.StateMachineFactory)>(r1)
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r7 = staticinvoke <org.apache.ambari.server.state.fsm.StateMachineFactory: java.util.Map access$000(org.apache.ambari.server.state.fsm.StateMachineFactory)>(r1) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r8 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: java.lang.Enum preState>
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r8 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: java.lang.Enum preState> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2)
org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition.apply : $r10 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$ApplicableSingleOrMultipleTransition: java.lang.Enum eventType>
