org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r2 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r18 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r2 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r23 = newarray (org.apache.ambari.server.state.RepositoryVersionState)[1]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r23 = newarray (org.apache.ambari.server.state.RepositoryVersionState)[1] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r24 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r24 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r23[0] = $r24
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r23[0] = $r24 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r5 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r23)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r5 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r23) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z0 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>(r3)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z0 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z0 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r25 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r32 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r32 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r33 = interfaceinvoke $r32.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r33 = interfaceinvoke $r32.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke $r33.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke $r33.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r34 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke $r33.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r17 = $r72 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r73 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r17 = $r72 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r73 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r74 = interfaceinvoke $r73.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r74 = interfaceinvoke $r73.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke $r74.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke $r74.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : throw r17
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r34 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r6 = virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity getStack()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r34 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r6 = virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity getStack()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r35 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r6 = virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity getStack()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r35 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r35.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>(r6)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r35 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r35.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>(r6) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r7 = $r35
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r35.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>(r6) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r7 = $r35 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r36 = new java.util.HashMap
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r7 = $r35 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r36 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r36.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r36 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r36.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r8 = $r36
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r36.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r8 = $r36 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r37 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r8 = $r36 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r37 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r38 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r37 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r38 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r39 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r38 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r39 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r40 = virtualinvoke $r39.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r39 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r40 = virtualinvoke $r39.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r9 = virtualinvoke $r37.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByClusterStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>($r38, r7, $r40)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r40 = virtualinvoke $r39.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r9 = virtualinvoke $r37.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByClusterStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>($r38, r7, $r40) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r9 == null
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r9 = virtualinvoke $r37.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByClusterStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>($r38, r7, $r40) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r9 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r9 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r44 = interfaceinvoke r8.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r9 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r44 = interfaceinvoke r8.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r45 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r44, r1)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r44 = interfaceinvoke r8.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r45 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r44, r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r46 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r45 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r44, r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r46 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r46 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z2 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r70 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r70 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r71 = interfaceinvoke $r70.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r71 = interfaceinvoke $r70.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke $r71.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke $r71.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= return]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= return] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : return
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r12 = (java.lang.String) $r47
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r12 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r48 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r12 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r48 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r49 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r48 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r49 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r50 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r49 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r50 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r13 = virtualinvoke $r48.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByClusterHostAndState(java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r49, r12, $r50)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r50 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r13 = virtualinvoke $r48.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByClusterHostAndState(java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r49, r12, $r50) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r13 == null
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r13 = virtualinvoke $r48.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByClusterHostAndState(java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r49, r12, $r50) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r13 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $i0 = interfaceinvoke r13.<java.util.List: int size()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r13 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r52 = null
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r13 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r52 = null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r14 = $r52
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r52 = null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r14 = $r52 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z3 = virtualinvoke r45.<com.google.common.collect.Sets$SetView: boolean contains(java.lang.Object)>(r12)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r14 = $r52 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z3 = virtualinvoke r45.<com.google.common.collect.Sets$SetView: boolean contains(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z3 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z3 = virtualinvoke r45.<com.google.common.collect.Sets$SetView: boolean contains(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r53 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r57 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r57 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r58 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r57
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r57 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r58 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r57 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r59 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r58 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r57 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r59 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $r59 == r3
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r59 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $r59 == r3 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>(r3)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $r59 == r3 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r14 == null
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $r59 == r3 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r14 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r62 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r14 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r14 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r62 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r63 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r62 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r63 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z4 = virtualinvoke $r62.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean equals(java.lang.Object)>($r63)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r63 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z4 = virtualinvoke $r62.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean equals(java.lang.Object)>($r63) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z4 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z4 = virtualinvoke $r62.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean equals(java.lang.Object)>($r63) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r64 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r64 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r3 != $r64
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r64 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r3 != $r64 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r65 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r3 != $r64 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r3 != $r64 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r65 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r66 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r65 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r66 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $r65 != $r66
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r66 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $r65 != $r66 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r67 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $r65 != $r66 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $r65 != $r66 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r67 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r67)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r67 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r67) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r68 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r67) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r68 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke $r68.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r14)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r68 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke $r68.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke $r68.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>(r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r60 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke r58.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>(r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r60 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r61 = virtualinvoke $r60.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r58)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r60 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r61 = virtualinvoke $r60.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r58) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r58 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r61
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r61 = virtualinvoke $r60.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r58) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r58 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r61 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if r14 == null
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r58 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r61 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r53 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r15 = virtualinvoke $r53.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r12)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r53 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r15 = virtualinvoke $r53.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r54 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r15 = virtualinvoke $r53.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r54 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r55 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r54 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r55 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r54.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>(org.apache.ambari.server.orm.entities.HostEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r15, $r55, r3)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r55 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r54.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>(org.apache.ambari.server.orm.entities.HostEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r15, $r55, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r16 = $r54
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r54.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>(org.apache.ambari.server.orm.entities.HostEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r15, $r55, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r16 = $r54 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r56 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r16 = $r54 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r56 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke $r56.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r16)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r56 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke $r56.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= (branch)]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : virtualinvoke $r56.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $i0 = interfaceinvoke r13.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $i0 != 1
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $i0 = interfaceinvoke r13.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $i0 != 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r51 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $i0 != 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r52 = null
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $i0 != 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r51 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r52 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r51
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r51 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r52 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r51 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= r14 = $r52]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r52 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r51 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= r14 = $r52] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r14 = $r52
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= r14 = $r52] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r41 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r44 = interfaceinvoke r8.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r41 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r11 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r41
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r41 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r11 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r41 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r42 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : r11 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r41 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r42 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, r11)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r42 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r72 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r25 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r26 = new java.lang.StringBuilder
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The state must be one of [")
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The state must be one of [") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r28 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r5, ", ")
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r28 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r5, ", ") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]")
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r25.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r31)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r25.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : throw $r25
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r18 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r19 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find current stack version of cluster ")
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r19 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find current stack version of cluster ") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r20 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r20 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r22)
org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.mapHostVersions : throw $r18
