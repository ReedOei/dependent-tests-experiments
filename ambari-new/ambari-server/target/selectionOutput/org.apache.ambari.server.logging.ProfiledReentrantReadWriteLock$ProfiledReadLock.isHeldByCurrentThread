org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $r1 = r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock: java.util.concurrent.locks.ReentrantReadWriteLock delegate> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $i0 = virtualinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadHoldCount()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $i0 = virtualinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadHoldCount()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : if $i0 <= 0
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $z0 = 1
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $z0 = 0
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $z0 = 0 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : return $z0
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : $z0 = 1 >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : goto [?= return $z0]
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLock$ProfiledReadLock.isHeldByCurrentThread : return $z0
