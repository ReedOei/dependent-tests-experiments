org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cluster={ clusterName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=")
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $l0 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: long getClusterId()>()
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $l0 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredStackVersion=")
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredStackVersion=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.StackId desiredStackVersion>
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.StackId desiredStackVersion> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r11 = virtualinvoke $r10.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r11 = virtualinvoke $r10.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", services=[ ")
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", services=[ ") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : z0 = 1
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : z0 = 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r14 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentSkipListMap services>
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r14 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentSkipListMap services> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r15 = virtualinvoke $r14.<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>()
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r15 = virtualinvoke $r14.<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : r2 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : r2 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] }")
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] }") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r21 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.logging.LockFactory lockFactory>
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r21 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.logging.LockFactory lockFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke $r21.<org.apache.ambari.server.logging.LockFactory: void debugDump(java.lang.StringBuilder)>(r1)
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke $r21.<org.apache.ambari.server.logging.LockFactory: void debugDump(java.lang.StringBuilder)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : return
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : r3 = (org.apache.ambari.server.state.Service) $r16
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : r3 = (org.apache.ambari.server.state.Service) $r16 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : if z0 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : if z0 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ")
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : if z0 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : z0 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : z0 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ")
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : interfaceinvoke r3.<org.apache.ambari.server.state.Service: void debugDump(java.lang.StringBuilder)>(r1)
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : interfaceinvoke r3.<org.apache.ambari.server.state.Service: void debugDump(java.lang.StringBuilder)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.debugDump : z0 = 0
