org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : r1 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.entities.ClusterEntity getClusterEntity()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getConfigGroupEntities()>()
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getConfigGroupEntities()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : if $z0 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getConfigGroupEntities()>()
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : return
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getConfigGroupEntities()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : return
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : r3 = (org.apache.ambari.server.orm.entities.ConfigGroupEntity) $r6
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : r3 = (org.apache.ambari.server.orm.entities.ConfigGroupEntity) $r6 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r7 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.Map clusterConfigGroups>
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r7 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.Map clusterConfigGroups> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r8 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ConfigGroupEntity: java.lang.Long getGroupId()>()
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r8 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.ConfigGroupEntity: java.lang.Long getGroupId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r9 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.configgroup.ConfigGroupFactory configGroupFactory>
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r9 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.configgroup.ConfigGroupFactory configGroupFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.configgroup.ConfigGroupFactory: org.apache.ambari.server.state.configgroup.ConfigGroup createExisting(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.orm.entities.ConfigGroupEntity)>(r0, r3)
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.configgroup.ConfigGroupFactory: org.apache.ambari.server.state.configgroup.ConfigGroup createExisting(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.orm.entities.ConfigGroupEntity)>(r0, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r10)
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r10) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.loadConfigGroups : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
