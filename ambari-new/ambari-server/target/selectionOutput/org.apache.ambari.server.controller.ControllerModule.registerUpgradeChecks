org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r2 = new org.apache.ambari.server.checks.UpgradeCheckRegistry >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : specialinvoke $r2.<org.apache.ambari.server.checks.UpgradeCheckRegistry: void <init>()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : specialinvoke $r2.<org.apache.ambari.server.checks.UpgradeCheckRegistry: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r3 = $r2
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r3 = $r2 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r9 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/checks/UpgradeCheckRegistry")
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r9 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/checks/UpgradeCheckRegistry") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if null == r1
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if null == r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if null == r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r10 = new org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r10 = new org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : specialinvoke $r10.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean)>(0)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : specialinvoke $r10.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r4 = $r10
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r4 = $r10 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r11 = new org.springframework.core.type.filter.AssignableTypeFilter
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r11 = new org.springframework.core.type.filter.AssignableTypeFilter >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : specialinvoke $r11.<org.springframework.core.type.filter.AssignableTypeFilter: void <init>(java.lang.Class)>(class "org/apache/ambari/server/checks/AbstractCheckDescriptor")
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : specialinvoke $r11.<org.springframework.core.type.filter.AssignableTypeFilter: void <init>(java.lang.Class)>(class "org/apache/ambari/server/checks/AbstractCheckDescriptor") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r5 = $r11
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r5 = $r11 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : virtualinvoke r4.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)>(r5)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : virtualinvoke r4.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)>(r5) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r12 = class "org/apache/ambari/server/checks/AbstractCheckDescriptor"
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r12 = class "org/apache/ambari/server/checks/AbstractCheckDescriptor" >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Package getPackage()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Package getPackage()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r14 = virtualinvoke $r13.<java.lang.Package: java.lang.String getName()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r14 = virtualinvoke $r13.<java.lang.Package: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r1 = virtualinvoke r4.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: java.util.Set findCandidateComponents(java.lang.String)>($r14)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r1 = virtualinvoke r4.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: java.util.Set findCandidateComponents(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if null == r1
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if null == r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $i0 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if null == r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r15 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r15 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("No instances of {} found to register", class "org/apache/ambari/server/checks/AbstractCheckDescriptor")
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("No instances of {} found to register", class "org/apache/ambari/server/checks/AbstractCheckDescriptor") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : return null
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $i0 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $i0 != 0
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r15 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r16 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r16 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z1 == 0
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r25 = virtualinvoke r3.<org.apache.ambari.server.checks.UpgradeCheckRegistry: java.util.List getUpgradeChecks()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r25 = virtualinvoke r3.<org.apache.ambari.server.checks.UpgradeCheckRegistry: java.util.List getUpgradeChecks()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r26 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r26 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z2 == 0
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r27 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : return r1
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r27 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r28 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r27
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r28 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r27 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r29 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r29 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r30 = virtualinvoke r28.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r30 = virtualinvoke r28.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Registered pre-upgrade check {}", $r30)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Registered pre-upgrade check {}", $r30) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : goto [?= $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : goto [?= $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r18 = (org.springframework.beans.factory.config.BeanDefinition) $r17
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r18 = (org.springframework.beans.factory.config.BeanDefinition) $r17 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r6 = interfaceinvoke r18.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r6 = interfaceinvoke r18.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r19 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r19 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r7 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>(r6, $r19)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r7 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>(r6, $r19) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r20 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r7 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>(r6, $r19) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r22 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r23 = $r22 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r24 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r24 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to bind and register upgrade check {}", r7, r23)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to bind and register upgrade check {}", r7, r23) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : goto [?= $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : goto [?= $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r20 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r8 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r20
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r20 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r22 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r8 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r20 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r7)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : r8 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r20 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r22 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r8)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r22 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : virtualinvoke r3.<org.apache.ambari.server.checks.UpgradeCheckRegistry: void register(org.apache.ambari.server.checks.AbstractCheckDescriptor)>(r8)
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : interfaceinvoke $r21.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r22 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : virtualinvoke r3.<org.apache.ambari.server.checks.UpgradeCheckRegistry: void register(org.apache.ambari.server.checks.AbstractCheckDescriptor)>(r8) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : goto [?= (branch)]
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : virtualinvoke r3.<org.apache.ambari.server.checks.UpgradeCheckRegistry: void register(org.apache.ambari.server.checks.AbstractCheckDescriptor)>(r8) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r22 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : goto [?= $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z0 == 0
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : $r10 = new org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider
org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.registerUpgradeChecks : if null == r1
