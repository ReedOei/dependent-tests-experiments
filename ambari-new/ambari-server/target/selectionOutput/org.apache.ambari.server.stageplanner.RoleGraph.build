org.apache.ambari.server.stageplanner.RoleGraph.build : $r2 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r2.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r2.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> = $r2
org.apache.ambari.server.stageplanner.RoleGraph.build : r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> = $r2 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r28 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.actionmanager.CommandExecutionType commandExecutionType>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r28 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.actionmanager.CommandExecutionType commandExecutionType> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r29 = <org.apache.ambari.server.actionmanager.CommandExecutionType: org.apache.ambari.server.actionmanager.CommandExecutionType STAGE>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r29 = <org.apache.ambari.server.actionmanager.CommandExecutionType: org.apache.ambari.server.actionmanager.CommandExecutionType STAGE> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $r28 != $r29
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r28 != $r29 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r30 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies>
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r28 != $r29 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r30 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r30
org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r30 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r31 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r30 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r31 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r32 = interfaceinvoke $r31.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r32 = interfaceinvoke $r31.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r33 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r33 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r35 = (java.lang.String) $r34
org.apache.ambari.server.stageplanner.RoleGraph.build : r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r36 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r36 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r37 = interfaceinvoke $r36.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r37 = interfaceinvoke $r36.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r38 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r38 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r40 = (java.lang.String) $r39
org.apache.ambari.server.stageplanner.RoleGraph.build : r40 = (java.lang.String) $r39 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z4 = virtualinvoke r35.<java.lang.String: boolean equals(java.lang.Object)>(r40)
org.apache.ambari.server.stageplanner.RoleGraph.build : $z4 = virtualinvoke r35.<java.lang.String: boolean equals(java.lang.Object)>(r40) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 != 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 != 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r41 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 != 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r41 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>(r35)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r43 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r42
org.apache.ambari.server.stageplanner.RoleGraph.build : r43 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r42 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r44 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r44 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r45 = interfaceinvoke $r44.<java.util.Map: java.lang.Object get(java.lang.Object)>(r40)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r45 = interfaceinvoke $r44.<java.util.Map: java.lang.Object get(java.lang.Object)>(r40) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r46 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r45
org.apache.ambari.server.stageplanner.RoleGraph.build : r46 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r45 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r47 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r47 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : i0 = virtualinvoke $r47.<org.apache.ambari.server.metadata.RoleCommandOrder: int order(org.apache.ambari.server.stageplanner.RoleGraphNode,org.apache.ambari.server.stageplanner.RoleGraphNode)>(r43, r46)
org.apache.ambari.server.stageplanner.RoleGraph.build : i0 = virtualinvoke $r47.<org.apache.ambari.server.metadata.RoleCommandOrder: int order(org.apache.ambari.server.stageplanner.RoleGraphNode,org.apache.ambari.server.stageplanner.RoleGraphNode)>(r43, r46) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r43.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r46)
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r46.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r43)
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r46.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r43) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r43.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r46) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= (branch)]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r4 = (java.lang.String) $r10
org.apache.ambari.server.stageplanner.RoleGraph.build : r4 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r12 = (java.util.Map) $r11
org.apache.ambari.server.stageplanner.RoleGraph.build : $r12 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r5 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r5 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r6 = (java.lang.String) $r14
org.apache.ambari.server.stageplanner.RoleGraph.build : r6 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r16 = (java.util.Map) $r15
org.apache.ambari.server.stageplanner.RoleGraph.build : $r16 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r7 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r17
org.apache.ambari.server.stageplanner.RoleGraph.build : r7 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r17 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r18 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r18 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $r19 != null
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r19 != null >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r20 = new org.apache.ambari.server.stageplanner.RoleGraphNode
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r19 != null >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r25 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r25 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r27 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r26
org.apache.ambari.server.stageplanner.RoleGraph.build : r27 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r26 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r27.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addHost(java.lang.String)>(r4)
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r27.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addHost(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r20 = new org.apache.ambari.server.stageplanner.RoleGraphNode >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r21 = virtualinvoke r7.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r21 = virtualinvoke r7.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r22 = specialinvoke r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.RoleCommand getRoleCommand(org.apache.ambari.server.actionmanager.HostRoleCommand)>(r7)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r22 = specialinvoke r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.RoleCommand getRoleCommand(org.apache.ambari.server.actionmanager.HostRoleCommand)>(r7) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r20.<org.apache.ambari.server.stageplanner.RoleGraphNode: void <init>(org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand)>($r21, $r22)
org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r20.<org.apache.ambari.server.stageplanner.RoleGraphNode: void <init>(org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand)>($r21, $r22) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r8 = $r20
org.apache.ambari.server.stageplanner.RoleGraph.build : r8 = $r20 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r23 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r23 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8)
org.apache.ambari.server.stageplanner.RoleGraph.build : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r25 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
