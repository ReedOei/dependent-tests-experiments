org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r3 = $r2
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r3 = $r2 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z0 == 0
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : return r3
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r5 = (org.apache.ambari.server.orm.entities.TopologyHostGroupEntity) $r10
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r5 = (org.apache.ambari.server.orm.entities.TopologyHostGroupEntity) $r10 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r6 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r6 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z1 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z1 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z1 != 0
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r7 = new java.util.HashSet
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.util.Collection getTopologyHostInfoEntities()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.util.Collection getTopologyHostInfoEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r8 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r8 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z2 == 0
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r9 = (org.apache.ambari.server.orm.entities.TopologyHostInfoEntity) $r13
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r9 = (org.apache.ambari.server.orm.entities.TopologyHostInfoEntity) $r13 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r14 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: java.lang.String getFqdn()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r14 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: java.lang.String getFqdn()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r14)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z3 == 0
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r15 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r15 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r16 = (java.util.Set) $r15
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r16 = (java.util.Set) $r15 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r17 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: java.lang.String getFqdn()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r17 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: java.lang.String getFqdn()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r7 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : specialinvoke $r7.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r7)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r7) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r12 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.util.Collection getTopologyHostInfoEntities()>()
