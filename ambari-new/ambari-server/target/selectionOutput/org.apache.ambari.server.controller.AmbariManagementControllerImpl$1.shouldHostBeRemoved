org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r3 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl$1: org.apache.ambari.server.controller.AmbariManagementControllerImpl this$0> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r4 = staticinvoke <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.controller.AmbariManagementControllerImpl)>($r3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r4 = staticinvoke <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.controller.AmbariManagementControllerImpl)>($r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : r2 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : r2 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r5 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl$1: org.apache.ambari.server.controller.AmbariManagementControllerImpl this$0>
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r5 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl$1: org.apache.ambari.server.controller.AmbariManagementControllerImpl this$0> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r6 = staticinvoke <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.MaintenanceStateHelper access$100(org.apache.ambari.server.controller.AmbariManagementControllerImpl)>($r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r6 = staticinvoke <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.MaintenanceStateHelper access$100(org.apache.ambari.server.controller.AmbariManagementControllerImpl)>($r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r7 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl$1: org.apache.ambari.server.state.Cluster val$cluster>
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r7 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl$1: org.apache.ambari.server.state.Cluster val$cluster> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $l0 = interfaceinvoke $r7.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $l0 = interfaceinvoke $r7.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl$1: org.apache.ambari.server.controller.spi.Resource$Type val$level>
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl$1: org.apache.ambari.server.controller.spi.Resource$Type val$level> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $z0 = virtualinvoke $r6.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.state.Host,long,org.apache.ambari.server.controller.spi.Resource$Type)>(r2, $l0, $r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $z0 = virtualinvoke $r6.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.state.Host,long,org.apache.ambari.server.controller.spi.Resource$Type)>(r2, $l0, $r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : if $z0 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $z1 = 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $z1 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $z1 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : return $z1
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : $z1 = 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : goto [?= return $z1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl$1.shouldHostBeRemoved : return $z1
