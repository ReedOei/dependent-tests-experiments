org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r7 = $r6
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r7 = $r6 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r11 = new java.util.HashSet
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r11 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : specialinvoke $r11.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : specialinvoke $r11.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r8 = $r11
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r8 = $r11 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r9 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r9 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if $z0 == 0
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r13 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r19 = (java.util.Set) $r18
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r19 = (java.util.Set) $r18 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if r19 == null
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if r19 == null >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r20 = specialinvoke r0.<org.apache.ambari.server.utils.StageUtilsTest: java.util.Set getDecompressedSet(java.util.Set)>(r19)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if r19 == null >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r7, r8)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r7, r8) >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : return
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r20 = specialinvoke r0.<org.apache.ambari.server.utils.StageUtilsTest: java.util.Set getDecompressedSet(java.util.Set)>(r19) >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : interfaceinvoke r8.<java.util.Set: boolean addAll(java.util.Collection)>($r20)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : interfaceinvoke r8.<java.util.Set: boolean addAll(java.util.Collection)>($r20) >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r7, r8)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r13 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r10 = (java.util.Map$Entry) $r13
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : r10 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r14 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r14 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r15 = (java.util.Collection) $r14
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r15 = (java.util.Collection) $r14 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $z1 = interfaceinvoke $r15.<java.util.Collection: boolean contains(java.lang.Object)>(r2)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $z1 = interfaceinvoke $r15.<java.util.Collection: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if $z1 == 0
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r16 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r16 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $i0 = interfaceinvoke r5.<java.util.List: int indexOf(java.lang.Object)>($r16)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $i0 = interfaceinvoke r5.<java.util.List: int indexOf(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.utils.StageUtilsTest.checkServiceHostIndexes : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
