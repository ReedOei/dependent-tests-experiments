org.apache.ambari.server.topology.TopologyManager.getRequests : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void ensureInitialized()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.topology.TopologyManager.getRequests : $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : if $z0 == 0
org.apache.ambari.server.topology.TopologyManager.getRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests>
org.apache.ambari.server.topology.TopologyManager.getRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $r7 = new java.util.ArrayList
org.apache.ambari.server.topology.TopologyManager.getRequests : $r7 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : specialinvoke $r7.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.getRequests : specialinvoke $r7.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : r2 = $r7
org.apache.ambari.server.topology.TopologyManager.getRequests : r2 = $r7 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.getRequests : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.getRequests : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : if $z1 == 0
org.apache.ambari.server.topology.TopologyManager.getRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.getRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : return r2
org.apache.ambari.server.topology.TopologyManager.getRequests : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $r9 = (java.lang.Long) $r8
org.apache.ambari.server.topology.TopologyManager.getRequests : $r9 = (java.lang.Long) $r8 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.TopologyManager.getRequests : l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $r10 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests>
org.apache.ambari.server.topology.TopologyManager.getRequests : $r10 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.topology.TopologyManager.getRequests : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)
org.apache.ambari.server.topology.TopologyManager.getRequests : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : r4 = (org.apache.ambari.server.topology.LogicalRequest) $r12
org.apache.ambari.server.topology.TopologyManager.getRequests : r4 = (org.apache.ambari.server.topology.LogicalRequest) $r12 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : if r4 == null
org.apache.ambari.server.topology.TopologyManager.getRequests : if r4 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.topology.TopologyManager.getRequests : if r4 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.getRequests : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.getRequests : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.getRequests : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.TopologyManager.getRequests : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequests : return $r6
