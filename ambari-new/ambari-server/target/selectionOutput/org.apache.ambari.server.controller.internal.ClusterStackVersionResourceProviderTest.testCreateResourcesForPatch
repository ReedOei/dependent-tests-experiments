org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r1 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterStackVersion> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r2 = (org.apache.ambari.server.controller.AmbariManagementController) $r45
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r2 = (org.apache.ambari.server.controller.AmbariManagementController) $r45 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r3 = (org.apache.ambari.server.state.Clusters) $r46
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r3 = (org.apache.ambari.server.state.Clusters) $r46 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r4 = (org.apache.ambari.server.state.Cluster) $r47
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r4 = (org.apache.ambari.server.state.Cluster) $r47 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r48 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r48 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r48.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>("HDP", "2.0.1")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r48.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>("HDP", "2.0.1") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r5 = $r48
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r5 = $r48 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r49 = new java.io.File
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r49 = new java.io.File >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r49.<java.io.File: void <init>(java.lang.String)>("src/test/resources/hbase_version_test.xml")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r49.<java.io.File: void <init>(java.lang.String)>("src/test/resources/hbase_version_test.xml") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r6 = $r49
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r6 = $r49 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r50 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r50 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r50.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r50.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r7 = $r50
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r7 = $r50 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setId(java.lang.Long)>($r51)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setId(java.lang.Long)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setOperatingSystems(java.lang.String)>("[\n   {\n      \"repositories\":[\n         {\n            \"Repositories/base_url\":\"http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos5/2.x/updates/2.2.0.0\",\n            \"Repositories/repo_name\":\"HDP-UTILS\",\n            \"Repositories/repo_id\":\"HDP-UTILS-1.1.0.20\"\n         },\n         {\n            \"Repositories/base_url\":\"http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos5/2.x/updates/2.2.0.0\",\n            \"Repositories/repo_name\":\"HDP\",\n            \"Repositories/repo_id\":\"HDP-2.2\"\n         }\n      ],\n      \"OperatingSystems/os_type\":\"redhat6\"\n   }\n]")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setOperatingSystems(java.lang.String)>("[\n   {\n      \"repositories\":[\n         {\n            \"Repositories/base_url\":\"http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos5/2.x/updates/2.2.0.0\",\n            \"Repositories/repo_name\":\"HDP-UTILS\",\n            \"Repositories/repo_id\":\"HDP-UTILS-1.1.0.20\"\n         },\n         {\n            \"Repositories/base_url\":\"http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos5/2.x/updates/2.2.0.0\",\n            \"Repositories/repo_name\":\"HDP\",\n            \"Repositories/repo_id\":\"HDP-2.2\"\n         }\n      ],\n      \"OperatingSystems/os_type\":\"redhat6\"\n   }\n]") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r52 = new java.io.FileInputStream
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r52 = new java.io.FileInputStream >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r52.<java.io.FileInputStream: void <init>(java.io.File)>(r6)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r52.<java.io.FileInputStream: void <init>(java.io.File)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r53 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream)>($r52)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r53 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersionXml(java.lang.String)>($r53)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersionXml(java.lang.String)>($r53) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersionXsd(java.lang.String)>("version_definition.xsd")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersionXsd(java.lang.String)>("version_definition.xsd") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r54 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r54 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setType(org.apache.ambari.server.state.RepositoryType)>($r54)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setType(org.apache.ambari.server.state.RepositoryType)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r55 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r55 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r56 = virtualinvoke $r55.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.1.1", "HBASE", "HBASE_MASTER")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r56 = virtualinvoke $r55.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.1.1", "HBASE", "HBASE_MASTER") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke $r56.<org.apache.ambari.server.state.ComponentInfo: void setVersionAdvertised(boolean)>(1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke $r56.<org.apache.ambari.server.state.ComponentInfo: void setVersionAdvertised(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r57 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r57 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r57.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r57.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r8 = $r57
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r8 = $r57 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : b0 = 10
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : b0 = 10 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : i1 = 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : i1 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : if i1 >= b0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : if i1 >= b0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r58 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : if i1 >= b0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r82 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r82 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r83 = (org.apache.ambari.server.state.Service) $r82
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r83 = (org.apache.ambari.server.state.Service) $r82 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r84 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r84 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r85 = (org.apache.ambari.server.state.Service) $r84
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r85 = (org.apache.ambari.server.state.Service) $r84 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r86 = interfaceinvoke r83.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r86 = interfaceinvoke r83.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r87 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r86)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r87 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r86) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r88 = interfaceinvoke $r87.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r88 = interfaceinvoke $r87.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r90 = interfaceinvoke r85.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r90 = interfaceinvoke r85.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r92 = interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HBASE")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r92 = interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HBASE") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r94 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponent")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r94 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponent") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r95 = (org.apache.ambari.server.state.ServiceComponent) $r94
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r95 = (org.apache.ambari.server.state.ServiceComponent) $r94 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r96 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponent")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r96 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponent") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r11 = (org.apache.ambari.server.state.ServiceComponent) $r96
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r11 = (org.apache.ambari.server.state.ServiceComponent) $r96 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r97 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponent")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r97 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponent") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r12 = (org.apache.ambari.server.state.ServiceComponent) $r97
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r12 = (org.apache.ambari.server.state.ServiceComponent) $r97 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r98 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponent")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r98 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponent") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r13 = (org.apache.ambari.server.state.ServiceComponent) $r98
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r13 = (org.apache.ambari.server.state.ServiceComponent) $r98 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r99 = interfaceinvoke r83.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r99 = interfaceinvoke r83.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r101 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r101 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r101.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r101.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r101)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r101) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r103 = interfaceinvoke r85.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r103 = interfaceinvoke r85.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r105 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r105 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r105.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r105.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r107 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r107 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r107.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r107.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r14 = $r107
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r14 = $r107 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r83)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r83) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HBASE", r85)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HBASE", r85) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r110 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r110 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r15 = (org.apache.ambari.server.state.ServiceComponentHost) $r110
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r15 = (org.apache.ambari.server.state.ServiceComponentHost) $r110 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r111 = interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r111 = interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r113 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r113 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r113.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r113.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r115 = interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r115 = interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r116 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r115)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r116 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r115) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r117 = interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("DATANODE")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r117 = interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("DATANODE") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r117.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r117.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r119 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r119 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r16 = (org.apache.ambari.server.state.ServiceComponentHost) $r119
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r16 = (org.apache.ambari.server.state.ServiceComponentHost) $r119 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r120 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r120 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r121 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r120)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r121 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r120) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r122 = interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r122 = interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r124 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r124 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r125 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r124)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r125 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r124) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r126 = interfaceinvoke $r125.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("NAMENODE")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r126 = interfaceinvoke $r125.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("NAMENODE") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r126.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r126.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r128 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r128 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r17 = (org.apache.ambari.server.state.ServiceComponentHost) $r128
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r17 = (org.apache.ambari.server.state.ServiceComponentHost) $r128 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r129 = interfaceinvoke r17.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r129 = interfaceinvoke r17.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r130 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r129)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r130 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r129) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r131 = interfaceinvoke $r130.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("AMBARI_METRICS")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r131 = interfaceinvoke $r130.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("AMBARI_METRICS") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r133 = interfaceinvoke r17.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r133 = interfaceinvoke r17.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r134 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r133)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r134 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r133) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r135 = interfaceinvoke $r134.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("METRICS_COLLECTOR")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r135 = interfaceinvoke $r134.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("METRICS_COLLECTOR") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r135.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r135.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r137 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r137 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r18 = (org.apache.ambari.server.state.ServiceComponentHost) $r137
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r18 = (org.apache.ambari.server.state.ServiceComponentHost) $r137 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r138 = interfaceinvoke r18.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r138 = interfaceinvoke r18.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r139 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r138)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r139 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r138) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r140 = interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HBASE")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r140 = interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HBASE") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r142 = interfaceinvoke r18.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r142 = interfaceinvoke r18.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r143 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r142)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r143 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r142) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r144 = interfaceinvoke $r143.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HBASE_MASTER")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r144 = interfaceinvoke $r143.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HBASE_MASTER") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r146 = newarray (org.apache.ambari.server.state.ServiceComponentHost)[3]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r146 = newarray (org.apache.ambari.server.state.ServiceComponentHost)[3] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r146[0] = r15
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r146[0] = r15 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r146[1] = r16
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r146[1] = r16 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r146[2] = r17
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r146[2] = r17 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r146)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r146) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r147 = newarray (org.apache.ambari.server.state.ServiceComponentHost)[1]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r147 = newarray (org.apache.ambari.server.state.ServiceComponentHost)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r147[0] = r17
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r147[0] = r17 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r147)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r147) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r148 = newarray (org.apache.ambari.server.state.ServiceComponentHost)[1]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r148 = newarray (org.apache.ambari.server.state.ServiceComponentHost)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r148[0] = r18
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r148[0] = r18 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r148)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r148) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r149 = new org.apache.ambari.server.state.ServiceOsSpecific$Package
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r149 = new org.apache.ambari.server.state.ServiceOsSpecific$Package >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r149.<org.apache.ambari.server.state.ServiceOsSpecific$Package: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r149.<org.apache.ambari.server.state.ServiceOsSpecific$Package: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r22 = $r149
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r22 = $r149 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r22.<org.apache.ambari.server.state.ServiceOsSpecific$Package: void setName(java.lang.String)>("hdfs")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r22.<org.apache.ambari.server.state.ServiceOsSpecific$Package: void setName(java.lang.String)>("hdfs") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r23 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r22)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r23 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r150 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r150 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r24 = (org.apache.ambari.server.actionmanager.ActionManager) $r150
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r24 = (org.apache.ambari.server.actionmanager.ActionManager) $r150 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r151 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r151 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r25 = (org.apache.ambari.server.controller.RequestStatusResponse) $r151
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r25 = (org.apache.ambari.server.controller.RequestStatusResponse) $r151 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r152 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ResourceProviderFactory")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r152 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ResourceProviderFactory") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r26 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r152
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r26 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r152 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r153 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r153 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r27 = (org.apache.ambari.server.controller.spi.ResourceProvider) $r153
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r27 = (org.apache.ambari.server.controller.spi.ResourceProvider) $r153 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r26)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r26) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r154 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r154 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r154.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r154.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r28 = $r154
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r28 = $r154 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r155 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r155 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r156 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/cluster/ClusterImpl")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r156 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/cluster/ClusterImpl") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r157 = (org.apache.ambari.server.state.Cluster) $r156
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r157 = (org.apache.ambari.server.state.Cluster) $r156 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r158 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r158 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r159 = (java.lang.String) $r158
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r159 = (java.lang.String) $r158 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r160 = virtualinvoke $r155.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getEffectiveDesiredTags(org.apache.ambari.server.state.Cluster,java.lang.String)>($r157, $r159)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r160 = virtualinvoke $r155.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getEffectiveDesiredTags(org.apache.ambari.server.state.Cluster,java.lang.String)>($r157, $r159) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r161 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r160)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r161 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r160) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r28)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r28) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r163 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r163 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r164 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r163)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r164 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r163) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r165 = interfaceinvoke $r164.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r165 = interfaceinvoke $r164.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r167 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r167 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r168 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r167)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r168 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r167) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r169 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r169 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r170 = interfaceinvoke $r168.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r169)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r170 = interfaceinvoke $r168.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r169) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r170.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r170.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r172 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r172 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r173 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r172)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r173 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r172) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r174 = interfaceinvoke $r173.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("admin")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r174 = interfaceinvoke $r173.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("admin") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r174.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r174.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r176 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.actionmanager.ActionManager getActionManager()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r176 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.actionmanager.ActionManager getActionManager()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r177 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r176)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r177 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r176) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r178 = interfaceinvoke $r177.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r24)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r178 = interfaceinvoke $r177.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r178.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r178.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r180 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getJdkResourceUrl()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r180 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getJdkResourceUrl()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r181 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r180)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r181 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r180) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r182 = interfaceinvoke $r181.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/JdkResourceUrl")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r182 = interfaceinvoke $r181.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/JdkResourceUrl") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r184 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r184 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r185 = (org.apache.ambari.server.state.ServiceInfo) $r184
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r185 = (org.apache.ambari.server.state.ServiceInfo) $r184 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r186 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r186 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r187 = (java.util.Map) $r186
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r187 = (java.util.Map) $r186 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r188 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r188 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r189 = (java.lang.String) $r188
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r189 = (java.lang.String) $r188 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r190 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>($r185, $r187, $r189)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r190 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>($r185, $r187, $r189) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r191 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r190)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r191 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r190) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r192 = interfaceinvoke $r191.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r23)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r192 = interfaceinvoke $r191.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r23) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r192.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r192.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r194 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r194 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r195 = (java.util.Set) $r194
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r195 = (java.util.Set) $r194 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r196 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r196 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r197 = (java.util.Map) $r196
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r197 = (java.util.Map) $r196 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r198 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r198 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r199 = (org.apache.ambari.server.controller.AmbariManagementController) $r198
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r199 = (org.apache.ambari.server.controller.AmbariManagementController) $r198 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r200 = interfaceinvoke r26.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r195, $r197, $r199)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r200 = interfaceinvoke r26.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r195, $r197, $r199) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r201 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r200)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r201 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r200) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r202 = interfaceinvoke $r201.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r27)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r202 = interfaceinvoke $r201.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r27) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r202.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r202.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r204 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r204 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r205 = (java.lang.String) $r204
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r205 = (java.lang.String) $r204 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r206 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r205)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r206 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r205) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r207 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r206)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r207 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r206) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r207.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r207.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r209 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r209 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r210 = (java.lang.String) $r209
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r210 = (java.lang.String) $r209 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r211 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>($r210)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r211 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>($r210) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r212 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r211)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r212 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r211) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r213 = interfaceinvoke $r212.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r213 = interfaceinvoke $r212.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r213.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r213.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r29 = "Cluster100"
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r29 = "Cluster100" >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l3 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l3 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r215 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r215 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r216 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r215)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r216 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r215) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r217 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r217 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r218 = interfaceinvoke $r216.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r217)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r218 = interfaceinvoke $r216.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r217) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r218.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r218.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r220 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r220 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r221 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r220)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r221 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r220) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r222 = interfaceinvoke r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r222 = interfaceinvoke r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r223 = interfaceinvoke $r221.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r222)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r223 = interfaceinvoke $r221.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r222) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r223.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r223.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r225 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r225 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r226 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r225)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r226 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r225) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r227 = interfaceinvoke $r226.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r227 = interfaceinvoke $r226.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r227.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r227.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r229 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r229 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r230 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r229)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r230 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r229) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r230.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r230.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r232 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r232 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r233 = (java.lang.String) $r232
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r233 = (java.lang.String) $r232 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r234 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>($r233)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r234 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>($r233) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r235 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r234)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r235 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r234) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r236 = new org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$4
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r236 = new org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r236.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$4: void <init>(org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest,java.util.List,java.util.List,java.util.List)>(r0, r20, r21, r19)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r236.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$4: void <init>(org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest,java.util.List,java.util.List,java.util.List)>(r0, r20, r21, r19) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r237 = interfaceinvoke $r235.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r236)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r237 = interfaceinvoke $r235.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r236) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r237.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r237.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r239 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/agent/ExecutionCommand")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r239 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/agent/ExecutionCommand") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r30 = (org.apache.ambari.server.agent.ExecutionCommand) $r239
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r30 = (org.apache.ambari.server.agent.ExecutionCommand) $r239 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r240 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ExecutionCommandWrapper")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r240 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ExecutionCommandWrapper") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r31 = (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper) $r240
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r31 = (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper) $r240 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r241 = virtualinvoke r31.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r241 = virtualinvoke r31.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r242 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r241)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r242 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r241) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r243 = interfaceinvoke $r242.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r30)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r243 = interfaceinvoke $r242.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r30) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r243.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r243.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r245 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/Stage")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r245 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/Stage") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r32 = (org.apache.ambari.server.actionmanager.Stage) $r245
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r32 = (org.apache.ambari.server.actionmanager.Stage) $r245 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r246 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r246 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r247 = (java.lang.String) $r246
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r247 = (java.lang.String) $r246 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r248 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r248 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r249 = (java.lang.String) $r248
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r249 = (java.lang.String) $r248 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r250 = virtualinvoke r32.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>($r247, $r249)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r250 = virtualinvoke r32.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>($r247, $r249) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r251 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r250)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r251 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r250) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r252 = interfaceinvoke $r251.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r31)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r252 = interfaceinvoke $r251.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r31) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r252.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r252.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r254 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r254 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r254.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r254.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r33 = $r254
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r33 = $r254 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r255 = virtualinvoke r32.<org.apache.ambari.server.actionmanager.Stage: java.util.Map getSuccessFactors()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r255 = virtualinvoke r32.<org.apache.ambari.server.actionmanager.Stage: java.util.Map getSuccessFactors()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r256 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r255)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r256 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r255) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r257 = interfaceinvoke $r256.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r33)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r257 = interfaceinvoke $r256.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r257.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r257.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r259 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r259 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l4 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l4 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r260 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r260 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r261 = (java.lang.String) $r260
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r261 = (java.lang.String) $r260 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r262 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r262 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r263 = (java.lang.String) $r262
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r263 = (java.lang.String) $r262 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l5 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l5 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r264 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r264 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r265 = (java.lang.String) $r264
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r265 = (java.lang.String) $r264 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r266 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r266 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r267 = (java.lang.String) $r266
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r267 = (java.lang.String) $r266 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r268 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r268 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r269 = (java.lang.String) $r268
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r269 = (java.lang.String) $r268 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r270 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r270 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r271 = (java.lang.String) $r270
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r271 = (java.lang.String) $r270 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r272 = interfaceinvoke $r259.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($l4, $r261, $r263, $l5, $r265, $r267, $r269, $r271)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r272 = interfaceinvoke $r259.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($l4, $r261, $r263, $l5, $r265, $r267, $r269, $r271) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r273 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r272)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r273 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r272) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r274 = interfaceinvoke $r273.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r32)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r274 = interfaceinvoke $r273.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r32) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $i6 = b0 / 2
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $i6 = b0 / 2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $d0 = (double) $i6
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $d0 = (double) $i6 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $i7 = (int) $d1
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $i7 = (int) $d1 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r274.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>($i7)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r274.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>($i7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r276 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAOMock>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r276 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAOMock> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r277 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/StackId")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r277 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/StackId") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r278 = (org.apache.ambari.server.state.StackId) $r277
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r278 = (org.apache.ambari.server.state.StackId) $r277 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r279 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r279 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r280 = (java.lang.String) $r279
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r280 = (java.lang.String) $r279 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r281 = virtualinvoke $r276.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r278, $r280)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r281 = virtualinvoke $r276.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r278, $r280) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r282 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r281)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r282 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r281) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r282.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r282.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r34 = staticinvoke <org.easymock.Capture: org.easymock.Capture newInstance()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r34 = staticinvoke <org.easymock.Capture: org.easymock.Capture newInstance()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r35 = staticinvoke <org.easymock.Capture: org.easymock.Capture newInstance()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r35 = staticinvoke <org.easymock.Capture: org.easymock.Capture newInstance()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r284 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r34)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r284 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r34) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r285 = (org.apache.ambari.server.actionmanager.Request) $r284
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r285 = (org.apache.ambari.server.actionmanager.Request) $r284 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r286 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r35)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r286 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r35) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r287 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r286
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r287 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r286 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r24.<org.apache.ambari.server.actionmanager.ActionManager: void sendActions(org.apache.ambari.server.actionmanager.Request,org.apache.ambari.server.controller.ExecuteActionRequest)>($r285, $r287)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r24.<org.apache.ambari.server.actionmanager.ActionManager: void sendActions(org.apache.ambari.server.actionmanager.Request,org.apache.ambari.server.controller.ExecuteActionRequest)>($r285, $r287) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r288 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r288 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r288.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r288.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l8 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l8 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r290 = virtualinvoke r24.<org.apache.ambari.server.actionmanager.ActionManager: java.util.List getRequestTasks(long)>($l8)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r290 = virtualinvoke r24.<org.apache.ambari.server.actionmanager.ActionManager: java.util.List getRequestTasks(long)>($l8) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r291 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r290)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r291 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r290) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r292 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r292 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r293 = interfaceinvoke $r291.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r292)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r293 = interfaceinvoke $r291.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r292) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r293.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r293.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r295 = new org.apache.ambari.server.orm.entities.ClusterEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r295 = new org.apache.ambari.server.orm.entities.ClusterEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r295.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r295.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r36 = $r295
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r36 = $r295 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r296 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r296 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r36.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterId(java.lang.Long)>($r296)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r36.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterId(java.lang.Long)>($r296) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r36.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>(r29)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : virtualinvoke r36.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>(r29) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r297 = new org.apache.ambari.server.orm.entities.ClusterVersionEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r297 = new org.apache.ambari.server.orm.entities.ClusterVersionEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r298 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r298 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r297.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void <init>(org.apache.ambari.server.orm.entities.ClusterEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState,long,java.lang.String)>(r36, r7, $r298, 0L, "")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r297.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void <init>(org.apache.ambari.server.orm.entities.ClusterEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState,long,java.lang.String)>(r36, r7, $r298, 0L, "") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r37 = $r297
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r37 = $r297 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r299 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r299 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r300 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r300 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r301 = (java.lang.String) $r300
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r301 = (java.lang.String) $r300 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r302 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/StackId")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r302 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/StackId") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r303 = (org.apache.ambari.server.state.StackId) $r302
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r303 = (org.apache.ambari.server.state.StackId) $r302 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r304 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r304 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r305 = (java.lang.String) $r304
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r305 = (java.lang.String) $r304 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r306 = virtualinvoke $r299.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>($r301, $r303, $r305)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r306 = virtualinvoke $r299.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>($r301, $r303, $r305) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r307 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r306)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r307 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r306) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r307.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r37)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r307.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r309 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r309 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r310 = interfaceinvoke $r309.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/topology/TopologyManager")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r310 = interfaceinvoke $r309.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/topology/TopologyManager") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r38 = (org.apache.ambari.server.topology.TopologyManager) $r310
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r38 = (org.apache.ambari.server.topology.TopologyManager) $r310 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.apache.ambari.server.utils.StageUtils: void setTopologyManager(org.apache.ambari.server.topology.TopologyManager)>(r38)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.apache.ambari.server.utils.StageUtils: void setTopologyManager(org.apache.ambari.server.topology.TopologyManager)>(r38) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311 = newarray (java.lang.Object)[20]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311 = newarray (java.lang.Object)[20] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[0] = r2
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[0] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[1] = r25
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[1] = r25 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[2] = r3
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[2] = r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[3] = r83
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[3] = r83 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[4] = r85
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[4] = r85 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[5] = r26
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[5] = r26 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[6] = r27
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[6] = r27 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[7] = r4
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[7] = r4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r312 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAOMock>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r312 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAOMock> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[8] = $r312
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[8] = $r312 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r313 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r313 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[9] = $r313
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[9] = $r313 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[10] = r15
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[10] = r15 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[11] = r16
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[11] = r16 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[12] = r17
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[12] = r17 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[13] = r18
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[13] = r18 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[14] = r24
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[14] = r24 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[15] = r30
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[15] = r30 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[16] = r31
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[16] = r31 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[17] = r32
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[17] = r32 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r314 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r314 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[18] = $r314
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[18] = $r314 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r315 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r315 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[19] = $r315
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r311[19] = $r315 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r311)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r311) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r316 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r316 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r317 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r317 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r39 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r1, $r316, $r317, r2)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r39 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r1, $r316, $r317, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r318 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r318 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r318.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r39)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r318.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r39) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r319 = new java.util.LinkedHashSet
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r319 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r319.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r319.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r40 = $r319
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r40 = $r319 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r320 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r320 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r320.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r320.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r41 = $r320
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r41 = $r320 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r321 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r321 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r321, "Cluster100")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r321, "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r323 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r323 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r323, "2.2.0.1-885")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r323, "2.2.0.1-885") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r325 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_STACK_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r325 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_STACK_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r325, "HDP")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r325, "HDP") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r327 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r327 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r327, "2.1.1")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r327, "2.1.1") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r40.<java.util.Set: boolean add(java.lang.Object)>(r41)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r40.<java.util.Set: boolean add(java.lang.Object)>(r41) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r42 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r40, null)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r42 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r40, null) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r43 = interfaceinvoke r39.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r42)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r43 = interfaceinvoke r39.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r42) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r43)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r43) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329 = newarray (java.lang.Object)[5]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[0] = r2
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[0] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[1] = r25
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[1] = r25 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[2] = r3
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[2] = r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r330 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r330 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[3] = $r330
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[3] = $r330 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[4] = r32
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r329[4] = r32 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r329)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r329) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r331 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role INSTALL_PACKAGES>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r331 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role INSTALL_PACKAGES> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r332 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>($r331)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r332 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>($r331) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r44 = (java.lang.Float) $r332
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r44 = (java.lang.Float) $r332 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r333 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.85F)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r333 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.85F) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r333, r44)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r333, r44) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r58 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : specialinvoke $r58.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("host")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("host") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r9 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r9 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r61 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.String,java.lang.Class)>(r9, class "org/apache/ambari/server/state/Host")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r61 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.String,java.lang.Class)>(r9, class "org/apache/ambari/server/state/Host") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r10 = (org.apache.ambari.server.state.Host) $r61
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : r10 = (org.apache.ambari.server.state.Host) $r61 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r62 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r62 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r66 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r66 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l2 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $l2 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r70 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l2)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r70 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r72 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r72 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r73 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r73 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r75 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.util.List getAllHostVersions()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r75 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.util.List getAllHostVersions()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r76 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r75)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r76 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r77 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r77 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r78 = interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r77)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r78 = interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r77) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r78.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke $r78.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r80 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r80 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r80[0] = r10
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : $r80[0] = r10 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r80)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r80) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : i1 = i1 + 1
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : goto [?= (branch)]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesForPatch : if i1 >= b0
