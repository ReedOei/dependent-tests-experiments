org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z0 = r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z0 != 0
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r3 = r0.<org.apache.ambari.server.topology.TopologyManager: java.lang.Object initializationLock>
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : return
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r3 = r0.<org.apache.ambari.server.topology.TopologyManager: java.lang.Object initializationLock> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r1 = $r3
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r1 = $r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : entermonitor $r3
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : entermonitor $r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z1 = r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized>
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : entermonitor $r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r2 = $r6 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor r1
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r2 = $r6 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor r1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : throw r2
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor r1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z1 = r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z1 != 0
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z1 = r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r4 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState>
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor r1
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor r1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : goto [?= return]
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor r1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : return
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r4 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.topology.PersistedState: java.util.Map getAllRequests()>()
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r4 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.topology.PersistedState: java.util.Map getAllRequests()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void replayRequests(java.util.Map)>($r5)
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.topology.PersistedState: java.util.Map getAllRequests()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void replayRequests(java.util.Map)>($r5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> = 1
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void replayRequests(java.util.Map)>($r5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor r1
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 := @caughtexception
