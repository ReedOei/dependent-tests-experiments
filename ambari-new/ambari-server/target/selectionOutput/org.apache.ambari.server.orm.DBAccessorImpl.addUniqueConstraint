org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableHasConstraint(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : if $z0 != 0
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $z1 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableHasColumn(java.lang.String,java.lang.String[])>(r1, r3)
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r9 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r9 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String)>(r3, ", ")
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String)>(r3, ", ") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Unique constraint {} already exists or columns {} not found, skipping", r2, $r10)
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Unique constraint {} already exists or columns {} not found, skipping", r2, $r10) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : return
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $z1 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableHasColumn(java.lang.String,java.lang.String[])>(r1, r3) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : if $z1 == 0
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r6 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.orm.helpers.dbms.DbmsHelper dbmsHelper>
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r9 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r6 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.orm.helpers.dbms.DbmsHelper dbmsHelper> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : r4 = interfaceinvoke $r6.<org.apache.ambari.server.orm.helpers.dbms.DbmsHelper: java.lang.String getAddUniqueConstraintStatement(java.lang.String,java.lang.String,java.lang.String[])>(r1, r2, r3)
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : r4 = interfaceinvoke $r6.<org.apache.ambari.server.orm.helpers.dbms.DbmsHelper: java.lang.String getAddUniqueConstraintStatement(java.lang.String,java.lang.String,java.lang.String[])>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r4)
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : r4 = interfaceinvoke $r6.<org.apache.ambari.server.orm.helpers.dbms.DbmsHelper: java.lang.String getAddUniqueConstraintStatement(java.lang.String,java.lang.String,java.lang.String[])>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r7 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : r5 = $r7 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r8 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r8 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Add unique constraint failed, constraintName={},tableName={}", r2, r1)
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Add unique constraint failed, constraintName={},tableName={}", r2, r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : throw r5
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : goto [?= (branch)]
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : $r7 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : goto [?= return]
org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : goto [?= return] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addUniqueConstraint : return
