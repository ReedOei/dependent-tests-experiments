org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z3 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z3 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z3 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r23 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r24 = new java.util.EnumMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r24 = new java.util.EnumMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r24.<java.util.EnumMap: void <init>(java.lang.Class)>(class "org/apache/ambari/server/state/State")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r24.<java.util.EnumMap: void <init>(java.lang.Class)>(class "org/apache/ambari/server/state/State") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r5 = $r24
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r5 = $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r25 = new java.util.EnumMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r25 = new java.util.EnumMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r25.<java.util.EnumMap: void <init>(java.lang.Class)>(class "org/apache/ambari/server/state/State")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r25.<java.util.EnumMap: void <init>(java.lang.Class)>(class "org/apache/ambari/server/state/State") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r6 = $r25
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r6 = $r25 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r26 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r26 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r26.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r26.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r7 = $r26
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r7 = $r26 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r27 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r27 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r27.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r27.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r8 = $r27
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r8 = $r27 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r28 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r28 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r28.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r28.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r9 = $r28
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r9 = $r28 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r29 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r29 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r29.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r29.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r10 = $r29
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r10 = $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r30 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r30 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r30.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r30.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r11 = $r30
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r11 = $r30 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r31 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r31 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r31.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r31.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r12 = $r31
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r12 = $r31 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z4 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>("operation_level/level")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z4 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>("operation_level/level") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z4 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r32 = new org.apache.ambari.server.controller.internal.RequestOperationLevel
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r33 = "Can not determine request operation level. Operation level property should be specified for this request."
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r33 = "Can not determine request operation level. Operation level property should be specified for this request." >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r34 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r34 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r34.<org.slf4j.Logger: void warn(java.lang.String)>(r33)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r34.<org.slf4j.Logger: void warn(java.lang.String)>(r33) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r14 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r14 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r35 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r35 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : n0 = null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : n0 = null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r15 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r15 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z5 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r36 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z2 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r154 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i2 = interfaceinvoke r11.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i2 = interfaceinvoke r11.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i2 <= 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r180 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r181 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r181 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r182 = interfaceinvoke $r181.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r182 = interfaceinvoke $r181.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z33 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z33 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r183 = interfaceinvoke r182.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z33 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r189 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r189 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r190 = interfaceinvoke $r189.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r190 = interfaceinvoke $r189.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r191 = (java.lang.String) $r190
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r191 = (java.lang.String) $r190 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r192 = interfaceinvoke r35.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r191)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r192 = interfaceinvoke r35.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r191) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r193 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>(r1, r192, r3, null, r5, r6, r7, r8, z0, z1)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r193 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>(r1, r192, r3, null, r5, r6, r7, r8, z0, z1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : return $r193
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r183 = interfaceinvoke r182.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r184 = (java.util.Map$Entry) $r183
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r184 = (java.util.Map$Entry) $r183 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r185 = interfaceinvoke r184.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r185 = interfaceinvoke r184.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r186 = (org.apache.ambari.server.state.Service) $r185
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r186 = (org.apache.ambari.server.state.Service) $r185 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r187 = interfaceinvoke r184.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r187 = interfaceinvoke r184.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r188 = (java.lang.Boolean) $r187
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r188 = (java.lang.Boolean) $r187 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z34 = virtualinvoke r188.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z34 = virtualinvoke r188.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r186.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z34)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r186.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z34) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z33 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z33 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r180 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r180.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot handle different desired state changes for a set of services at the same time")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r180.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot handle different desired state changes for a set of services at the same time") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r180
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r154 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z26 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r154)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z26 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r154) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z26 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z26 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r155 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z26 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i2 = interfaceinvoke r11.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r155 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r155.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r155.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r156 = $r155
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r156 = $r155 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r157 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r157 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r158 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r157)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r158 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r157) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r159 = (java.util.List) $r158
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r159 = (java.util.List) $r158 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r160 = interfaceinvoke $r159.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r160 = interfaceinvoke $r159.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z27 = interfaceinvoke r160.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z27 = interfaceinvoke r160.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z27 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z27 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r161 = interfaceinvoke r160.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z27 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r173 = virtualinvoke r156.<java.util.HashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r173 = virtualinvoke r156.<java.util.HashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z31 = interfaceinvoke r173.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z31 = interfaceinvoke r173.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z31 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z31 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r174 = interfaceinvoke r173.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z31 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i2 = interfaceinvoke r11.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r174 = interfaceinvoke r173.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r175 = (org.apache.ambari.server.state.Service) $r174
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r175 = (org.apache.ambari.server.state.Service) $r174 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r176 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r176 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, r6, r7, r8, r14, r175, $r176)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, r6, r7, r8, r14, r175, $r176) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r177 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r177 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r178 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r177)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r178 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r177) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r179 = (java.util.List) $r178
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r179 = (java.util.List) $r178 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r179.<java.util.List: boolean add(java.lang.Object)>(r175)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r179.<java.util.List: boolean add(java.lang.Object)>(r175) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z31 = interfaceinvoke r173.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z31 = interfaceinvoke r173.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z31 = interfaceinvoke r173.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r161 = interfaceinvoke r160.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r162 = (org.apache.ambari.server.state.Service) $r161
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r162 = (org.apache.ambari.server.state.Service) $r161 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r163 = interfaceinvoke r162.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r163 = interfaceinvoke r162.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r164 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>($r163)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r164 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>($r163) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r165 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand START>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r165 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand START> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r166 = virtualinvoke r164.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.Set getTransitiveServices(org.apache.ambari.server.state.Service,org.apache.ambari.server.RoleCommand)>(r162, $r165)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r166 = virtualinvoke r164.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.Set getTransitiveServices(org.apache.ambari.server.state.Service,org.apache.ambari.server.RoleCommand)>(r162, $r165) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r167 = interfaceinvoke r166.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r167 = interfaceinvoke r166.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z28 = interfaceinvoke r167.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z28 = interfaceinvoke r167.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z28 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z28 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r168 = interfaceinvoke r167.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z28 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z27 = interfaceinvoke r160.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z27 = interfaceinvoke r160.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z27 = interfaceinvoke r160.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r168 = interfaceinvoke r167.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r169 = (org.apache.ambari.server.state.Service) $r168
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r169 = (org.apache.ambari.server.state.Service) $r168 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r170 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r170 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r171 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r170)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r171 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r170) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r172 = (java.util.List) $r171
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r172 = (java.util.List) $r171 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z29 = interfaceinvoke $r172.<java.util.List: boolean contains(java.lang.Object)>(r169)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z29 = interfaceinvoke $r172.<java.util.List: boolean contains(java.lang.Object)>(r169) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z29 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z29 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : virtualinvoke r156.<java.util.HashSet: boolean add(java.lang.Object)>(r169)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z29 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z28 = interfaceinvoke r167.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z28 = interfaceinvoke r167.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z28 = interfaceinvoke r167.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : virtualinvoke r156.<java.util.HashSet: boolean add(java.lang.Object)>(r169) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z28 = interfaceinvoke r167.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r36 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r16 = (org.apache.ambari.server.controller.ServiceRequest) $r36
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r16 = (org.apache.ambari.server.controller.ServiceRequest) $r36 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r37 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r37 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r37 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r37 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r38 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r37 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r41 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r41 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, cluster name and service name should be provided to update services")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, cluster name and service name should be provided to update services") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r41
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r38 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z6 = virtualinvoke $r38.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z6 = virtualinvoke $r38.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z6 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r39 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r41 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r39 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r39 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r39 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r40 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r39 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r41 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r40 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z7 = virtualinvoke $r40.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z7 = virtualinvoke $r40.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z7 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r41 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r42 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r42 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r43 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r43 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a updateService request, clusterName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a updateService request, clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r45 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r45 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r48 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r48 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r51 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r51 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String)>($r53)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String)>($r53) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r54 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r54 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i0 = interfaceinvoke r9.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i0 = interfaceinvoke r9.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i0 <= 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r55 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r56 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r56 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z9 = interfaceinvoke r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r56)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z9 = interfaceinvoke r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z9 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r57 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r60 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r60 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r61 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r60)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r61 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r62 = (java.util.Set) $r61
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r62 = (java.util.Set) $r61 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r63 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r63 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z10 = interfaceinvoke $r62.<java.util.Set: boolean contains(java.lang.Object)>($r63)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z10 = interfaceinvoke $r62.<java.util.Set: boolean contains(java.lang.Object)>($r63) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z10 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r64 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r65 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r65 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r66 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r65)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r66 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r67 = (java.util.Set) $r66
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r67 = (java.util.Set) $r66 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r68 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r68 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r67.<java.util.Set: boolean add(java.lang.Object)>($r68)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r67.<java.util.Set: boolean add(java.lang.Object)>($r68) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r69 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r69 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r17 = interfaceinvoke r35.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r69)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r17 = interfaceinvoke r35.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r70 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r70 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r18 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r70)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r18 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r19 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r19 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r20 = null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r20 = null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r71 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r71 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r71 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r71 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r72 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r71 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r78 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r78 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if null == $r78
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if null == $r78 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r79 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if null == $r78 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r95 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r95 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z16 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r95)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z16 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r95) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z16 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r96 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 != null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 != null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r108 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 != null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r119 = r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r119 = r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z20 = virtualinvoke $r119.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>(r14, r18)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z20 = virtualinvoke $r119.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>(r14, r18) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z20 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r120 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 == r19
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 == r19 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r129 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 == r19 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, r6, r7, r8, r14, r18, r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, r6, r7, r8, r14, r18, r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r129 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 == $r129
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 == $r129 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r130 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 == $r129 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r131 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r131 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r132 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r132 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r133 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r133 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z22 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r131, $r132, $r133)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z22 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r131, $r132, $r133) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z22 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z22 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r134 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z22 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z23 = staticinvoke <org.apache.ambari.server.state.State: boolean isValidDesiredStateTransition(org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>(r19, r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z23 = staticinvoke <org.apache.ambari.server.state.State: boolean isValidDesiredStateTransition(org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>(r19, r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z23 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z23 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r135 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z23 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z24 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z24 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z24 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z24 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r150 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z24 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r152 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r152 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r153 = (java.util.List) $r152
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r153 = (java.util.List) $r152 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r153.<java.util.List: boolean add(java.lang.Object)>(r18)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r153.<java.util.List: boolean add(java.lang.Object)>(r18) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, r6, r7, r8, r14, r18, r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r150 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r150.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r150.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, $r150)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, $r150) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r152 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r135 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r136 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r136 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r136.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r136.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transition for service, clusterName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transition for service, clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r138 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r138 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r139 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r138)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r139 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r138) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $l1 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $l1 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r143 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r143 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentDesiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentDesiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDesiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDesiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r135.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r149)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r135.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r149) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r135
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r134 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r134.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to start or stop services")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r134.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to start or stop services") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r134
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r130 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 != $r130
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 != $r130 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r131 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 != $r130 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z23 = staticinvoke <org.apache.ambari.server.state.State: boolean isValidDesiredStateTransition(org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>(r19, r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r120 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r121 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r121 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r121.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r121.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operations cannot be applied to service ")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operations cannot be applied to service ") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r123 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r123 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the maintenance state of ")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the maintenance state of ") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r126 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r126 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r126)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r126) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r120.<org.slf4j.Logger: void info(java.lang.String)>($r128)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r120.<org.slf4j.Logger: void info(java.lang.String)>($r128) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r108 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z19 = interfaceinvoke $r108.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z19 = interfaceinvoke $r108.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z19 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z19 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r109 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z19 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r109 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r110 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r110 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r110.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r110.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nothing to do for new updateService request, clusterName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nothing to do for new updateService request, clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r112 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r112 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r115 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r115 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDesiredState=null")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDesiredState=null") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r109.<org.slf4j.Logger: void debug(java.lang.String)>($r118)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r109.<org.slf4j.Logger: void debug(java.lang.String)>($r118) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r96 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : z17 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r96)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : z17 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r96) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z18 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: boolean isCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z18 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: boolean isCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z18 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z18 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z17 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z18 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r103 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z17)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r103 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z17) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r103)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r103) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r105 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r105 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r106 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r106 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r107 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z17)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r107 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z17) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r105.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_enabled from request: {}", $r106, $r107)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r105.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_enabled from request: {}", $r106, $r107) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r20 != null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z17 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r97 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z17 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r103 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z17)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r97 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r98 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r98 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r98.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r98.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot enable credential store as it is not supported by the service. Service=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot enable credential store as it is not supported by the service. Service=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r100 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r100 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r97.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r102)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r97.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r102) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r97
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r79 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r80 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r80 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r81 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r81 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z13 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r79, $r80, $r81)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z13 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r79, $r80, $r81) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z13 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r82 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r83 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r83 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r21 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r83)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r21 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r83) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r84 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r84 = interfaceinvoke r18.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r21 == $r84
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r21 == $r84 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r85 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r21 == $r84 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r95 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r85 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z14 = virtualinvoke r21.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r85)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z14 = virtualinvoke r21.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r85) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z14 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z14 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r86 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z14 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r87 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r87 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r88 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r88 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r88.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r88.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r90 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r90 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r22 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r22 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r91 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r90, $r22)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r91 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r90, $r22) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r91)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r87.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r93)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r87.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r93) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r87
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r86 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z15 = virtualinvoke r21.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r86)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z15 = virtualinvoke r21.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r86) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z15 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r87 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r18.<org.apache.ambari.server.state.Service: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>(r21)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r18.<org.apache.ambari.server.state.Service: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r95 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r82 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r82.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to toggle the maintainence state of services")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r82.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to toggle the maintainence state of services") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r82
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r72 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r20 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r72)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r20 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r72) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z12 = virtualinvoke r20.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z12 = virtualinvoke r20.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z12 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r73 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r78 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r73 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r74 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r74 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r74.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r74.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r73.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r77)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r73.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r77) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r73
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r64 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r64.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid request contains duplicate service names")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r64.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid request contains duplicate service names") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r64
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r57 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r58 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r58 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r58.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r58.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r58)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r58) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r60 = virtualinvoke r16.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r55 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Updates to multiple clusters is not supported")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Updates to multiple clusters is not supported") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r55
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r32 = new org.apache.ambari.server.controller.internal.RequestOperationLevel >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r32.<org.apache.ambari.server.controller.internal.RequestOperationLevel: void <init>(java.util.Map)>(r3)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r32.<org.apache.ambari.server.controller.internal.RequestOperationLevel: void <init>(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r13 = $r32
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r13 = $r32 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r14 = virtualinvoke r13.<org.apache.ambari.server.controller.internal.RequestOperationLevel: org.apache.ambari.server.controller.spi.Resource$Type getLevel()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r14 = virtualinvoke r13.<org.apache.ambari.server.controller.internal.RequestOperationLevel: org.apache.ambari.server.controller.spi.Resource$Type getLevel()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= r35 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= r35 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r35 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r23 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r23.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r23.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : return null
