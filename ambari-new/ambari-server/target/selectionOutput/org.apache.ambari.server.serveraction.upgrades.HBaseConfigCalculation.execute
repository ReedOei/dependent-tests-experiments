org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r12 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r2 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r2 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r3 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r3 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hbase-site")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hbase-site") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r4 != null
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r5 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED>
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r17 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.regionserver.global.memstore.upperLimit")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r17 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.regionserver.global.memstore.upperLimit") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r7 = (java.lang.String) $r17
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r7 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r18 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.regionserver.global.memstore.lowerLimit")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r18 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.regionserver.global.memstore.lowerLimit") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r8 = (java.lang.String) $r18
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r8 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r7 == null
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r7 == null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r8 != null
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r7 == null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r19 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r19 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r19, "{}", "Upper or lower memstore limit setting is not set, skipping", "")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r19, "{}", "Upper or lower memstore limit setting is not set, skipping", "") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : return $r20
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r8 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r19 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r8 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r21 = new java.math.BigDecimal
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if r8 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r23 := @caughtexception
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r11 = $r23 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r24 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r24 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r24, "{}", "Upper or lower memstore limit setting value is malformed, skipping", "")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r24, "{}", "Upper or lower memstore limit setting value is malformed, skipping", "") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : return $r25
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r21 = new java.math.BigDecimal >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : specialinvoke $r21.<java.math.BigDecimal: void <init>(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r21 = new java.math.BigDecimal >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r23 := @caughtexception
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : specialinvoke $r21.<java.math.BigDecimal: void <init>(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r9 = $r21
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : specialinvoke $r21.<java.math.BigDecimal: void <init>(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r23 := @caughtexception
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r9 = $r21 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r22 = new java.math.BigDecimal
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r9 = $r21 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r23 := @caughtexception
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r22 = new java.math.BigDecimal >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(r8)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r22 = new java.math.BigDecimal >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r23 := @caughtexception
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r10 = $r22
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : specialinvoke $r22.<java.math.BigDecimal: void <init>(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r23 := @caughtexception
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r10 = $r22 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : goto [?= $i0 = virtualinvoke r10.<java.math.BigDecimal: int scale()>()]
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r10 = $r22 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r23 := @caughtexception
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : goto [?= $i0 = virtualinvoke r10.<java.math.BigDecimal: int scale()>()] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $i0 = virtualinvoke r10.<java.math.BigDecimal: int scale()>()
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $i0 = virtualinvoke r10.<java.math.BigDecimal: int scale()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if $i0 >= 2
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if $i0 >= 2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r10 = virtualinvoke r10.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : if $i0 >= 2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r26 = virtualinvoke r10.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int)>(r9, 4)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r26 = virtualinvoke r10.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int)>(r9, 4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r27 = virtualinvoke r26.<java.math.BigDecimal: java.lang.String toString()>()
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r27 = virtualinvoke r26.<java.math.BigDecimal: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.regionserver.global.memstore.size.lower.limit", $r27)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.regionserver.global.memstore.size.lower.limit", $r27) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>("hbase.regionserver.global.memstore.upperLimit")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>("hbase.regionserver.global.memstore.upperLimit") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>("hbase.regionserver.global.memstore.lowerLimit")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>("hbase.regionserver.global.memstore.lowerLimit") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r6)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void save()>()
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void save()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r31 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r31 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r32 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r32 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r32[0] = "hbase.regionserver.global.memstore.size.lower.limit"
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r32[0] = "hbase.regionserver.global.memstore.size.lower.limit" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r33 = virtualinvoke r26.<java.math.BigDecimal: java.lang.String toString()>()
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r33 = virtualinvoke r26.<java.math.BigDecimal: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r32[1] = $r33
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r32[1] = $r33 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s was set to %s", $r32)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s was set to %s", $r32) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r35 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r31, "{}", $r34, "")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r35 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r31, "{}", $r34, "") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : return $r35
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r10 = virtualinvoke r10.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : r26 = virtualinvoke r10.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int)>(r9, 4)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r5 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r14 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r14 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r14[0] = "hbase-site"
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r14[0] = "hbase-site" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source type %s not found", $r14)
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source type %s not found", $r14) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r5, "{}", $r15, "")
org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r5, "{}", $r15, "") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.HBaseConfigCalculation.execute : return $r16
