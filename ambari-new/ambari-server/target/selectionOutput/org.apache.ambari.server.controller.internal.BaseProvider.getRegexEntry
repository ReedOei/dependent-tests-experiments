org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r2 = null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r8 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Map patterns>
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r8 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Map patterns> >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z0 == 0
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : return r2
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r4 = (java.util.Map$Entry) $r10
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r4 = (java.util.Map$Entry) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r5 = (java.util.regex.Pattern) $r11
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r5 = (java.util.regex.Pattern) $r11 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r6 = virtualinvoke r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1)
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r6 = virtualinvoke r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z1 == 0
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r7 = (java.lang.String) $r12
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r7 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if r2 == null
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r13 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r2 = r4
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r2 = r4 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r13 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r14 = (java.lang.String) $r13
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $z2 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>($r14)
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : $z2 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z2 == 0
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : r2 = r4
org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexEntry : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
