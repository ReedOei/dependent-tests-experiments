org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r2 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String BLUEPRINT_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r3 == null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("null")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r12 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r12 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r12.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("Blueprint name must be specified for all host groups")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r12.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("Blueprint name must be specified for all host groups") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r12
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("null") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z2 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r12 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r13 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOSTGROUP_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r13 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOSTGROUP_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 == null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("null")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r15 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r15 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r15.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("A name must be specified for all host groups")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r15.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("A name must be specified for all host groups") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r15
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("null") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z3 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r15 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r16 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r16 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r5 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint parseBlueprint(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r16 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r17 = interfaceinvoke r5.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r17 = interfaceinvoke r5.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r17)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z4 != 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r18 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r6 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r6 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String getHostNameFromProperties(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r19 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_COUNT_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r19 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_COUNT_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r20 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_PREDICATE_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r20 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_PREDICATE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r20)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r6 == null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r6 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r6 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r6 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r31 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r31 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r32 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r32 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r7 = (org.apache.ambari.server.topology.HostGroupInfo) $r32
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r7 = (org.apache.ambari.server.topology.HostGroupInfo) $r32 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r7 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r33 = interfaceinvoke r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r42 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r42 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r43 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r43 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r42.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r43, $r8)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r42.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r43, $r8) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r42)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r42) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i1 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i1 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r60 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r60 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i2 = interfaceinvoke $r60.<java.util.Collection: int size()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i2 = interfaceinvoke $r60.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $i1 == $i2
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $i1 == $i2 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r61 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $i1 == $i2 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r66 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String processRackInfo(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r66 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String processRackInfo(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void addHostRackInfo(java.lang.String,java.lang.String)>(r6, $r66)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void addHostRackInfo(java.lang.String,java.lang.String)>(r6, $r66) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : return
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r61 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r62 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r62 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host group specified in request: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host group specified in request: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r61.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r65)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r61.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r65) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r61
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r44 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_PREDICATE_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r50 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r50 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z5 = interfaceinvoke $r50.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z5 = interfaceinvoke $r50.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z5 != 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r51 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r56 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_COUNT_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r56 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_COUNT_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r57 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r56)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r57 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r58 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r58 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r58)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r58) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i0 = virtualinvoke $r59.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i0 = virtualinvoke $r59.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setRequestedCount(int)>($i0)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setRequestedCount(int)>($i0) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= return]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : return
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r51 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r52 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r52 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t specify both host_name and host_count for the same hostgroup: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t specify both host_name and host_count for the same hostgroup: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r51.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r55)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r51.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r51
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r44 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_PREDICATE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r45 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r44)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r45 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r45)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void validateHostPredicateProperties(java.lang.String)>(r9)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void validateHostPredicateProperties(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setPredicate(java.lang.String)>(r9)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void validateHostPredicateProperties(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r46 := @caughtexception
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r10 = $r46 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r47 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r47 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r48 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r48 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r48[0] = r9
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r48[0] = r9 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r48[1] = r10
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r48[1] = r10 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to compile host predicate \'%s\': %s", $r48)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to compile host predicate \'%s\': %s", $r48) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r47.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String,java.lang.Throwable)>($r49, r10)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r47.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String,java.lang.Throwable)>($r49, r10) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r47
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setPredicate(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= $r50 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setPredicate(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r46 := @caughtexception
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= $r50 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r50 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r33 = interfaceinvoke r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r33 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r33 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r34 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r33 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r39 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r39 = new org.apache.ambari.server.topology.HostGroupInfo >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r39.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r39.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r7 = $r39
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r7 = $r39 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r40 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r40 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r7)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r7) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r42 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r34 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r35 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r35 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host group specified in request: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host group specified in request: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r34.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r38)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r34.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r34
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r26 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r31 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r26 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r27 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must specify either host_name or host_count for hostgroup: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must specify either host_name or host_count for hostgroup: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r26.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r30)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r26.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r26
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r21 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r21 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t specify host_count or host_predicate if host_name is specified in hostgroup: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t specify host_count or host_predicate if host_name is specified in hostgroup: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r21.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r25)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r21.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r21
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r21 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r6 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r18 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r18.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("Currently, a scaling request may only refer to a single blueprint")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r18.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("Currently, a scaling request may only refer to a single blueprint") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r18
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r5 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint parseBlueprint(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void setBlueprint(org.apache.ambari.server.topology.Blueprint)>(r5)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void setBlueprint(org.apache.ambari.server.topology.Blueprint)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= r6 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= r6 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r6 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)
