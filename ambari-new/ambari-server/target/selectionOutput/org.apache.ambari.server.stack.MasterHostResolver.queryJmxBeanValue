org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r9 = "https://"
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r9 = "http://"
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r9 = "http://" >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r4 = $r9
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r4 = $r9 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z0 == 0
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12 = newarray (java.lang.Object)[3]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15 = newarray (java.lang.Object)[4]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15[0] = r1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15[0] = r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15[1] = $r16
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15[1] = $r16 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15[2] = r2
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15[2] = r2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15[3] = r3
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15[3] = r3 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s/jmx?get=%s::%s", $r15)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s/jmx?get=%s::%s", $r15) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r6 = staticinvoke <org.apache.ambari.server.utils.HTTPUtils: java.lang.String requestURL(java.lang.String)>(r5)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r6 = staticinvoke <org.apache.ambari.server.utils.HTTPUtils: java.lang.String requestURL(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if null == r6
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if null == r6 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $z2 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if null == r6 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return null
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $z2 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z2 == 0
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return null
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r18 = new org.apache.ambari.server.stack.MasterHostResolver$1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r18 = new org.apache.ambari.server.stack.MasterHostResolver$1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : specialinvoke $r18.<org.apache.ambari.server.stack.MasterHostResolver$1: void <init>(org.apache.ambari.server.stack.MasterHostResolver)>(r0)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : specialinvoke $r18.<org.apache.ambari.server.stack.MasterHostResolver$1: void <init>(org.apache.ambari.server.stack.MasterHostResolver)>(r0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r7 = virtualinvoke $r18.<org.apache.ambari.server.stack.MasterHostResolver$1: java.lang.reflect.Type getType()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r7 = virtualinvoke $r18.<org.apache.ambari.server.stack.MasterHostResolver$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r19 = staticinvoke <org.apache.ambari.server.utils.StageUtils: com.google.gson.Gson getGson()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r7 = virtualinvoke $r18.<org.apache.ambari.server.stack.MasterHostResolver$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r28 = $r27 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r29 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r29 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $z3 = interfaceinvoke $r29.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $z3 = interfaceinvoke $r29.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z3 == 0
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r30 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r32 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r32 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r33 = newarray (java.lang.Object)[3]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r33 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r33[0] = r2
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r33[0] = r2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r33[1] = r3
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r33[1] = r3 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r33[2] = r1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r33[2] = r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : interfaceinvoke $r32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not load JMX from {}/{} from {}", $r33)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : interfaceinvoke $r32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not load JMX from {}/{} from {}", $r33) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return null
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r30 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31 = newarray (java.lang.Object)[4]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31[0] = r2
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31[0] = r2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31[1] = r3
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31[1] = r3 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31[2] = r1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31[2] = r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31[3] = r28
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31[3] = r28 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not load JMX from {}/{} from {}", $r31)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not load JMX from {}/{} from {}", $r31) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= return null]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= return null] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return null
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r19 = staticinvoke <org.apache.ambari.server.utils.StageUtils: com.google.gson.Gson getGson()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r20 = virtualinvoke $r19.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r6, r7)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r19 = staticinvoke <org.apache.ambari.server.utils.StageUtils: com.google.gson.Gson getGson()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r20 = virtualinvoke $r19.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r6, r7) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r8 = (java.util.Map) $r20
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r20 = virtualinvoke $r19.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r6, r7) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r8 = (java.util.Map) $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r21 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("beans")
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r8 = (java.util.Map) $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r21 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("beans") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22 = (java.util.ArrayList) $r21
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r21 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("beans") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22 = (java.util.ArrayList) $r21 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(0)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22 = (java.util.ArrayList) $r21 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 = (java.util.HashMap) $r23
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 = (java.util.HashMap) $r23 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r25 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 = (java.util.HashMap) $r23 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r25 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26 = (java.lang.String) $r25
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r25 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return $r26
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12[0] = r1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12[0] = r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12[1] = $r13
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12[1] = $r13 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12[2] = r2
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12[2] = r2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s/jmx?qry=%s", $r12)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s/jmx?qry=%s", $r12) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r9 = "https://" >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= r4 = $r9]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= r4 = $r9] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r4 = $r9
