org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("definitionName")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("definitionName") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c6401.ambari.apache.org")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c6401.ambari.apache.org") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r16 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r16 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r28 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r28 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r30 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r30 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("alertText")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("alertText") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34 = newarray (java.lang.Object)[2]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[0] = r1
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[0] = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[1] = r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[1] = r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r34)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r34) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : return
