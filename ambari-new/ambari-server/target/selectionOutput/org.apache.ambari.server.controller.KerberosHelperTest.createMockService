org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.KerberosHelperTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : r3 = (org.apache.ambari.server.state.Service) $r4
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : r3 = (org.apache.ambari.server.state.Service) $r4 >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r9 = interfaceinvoke r3.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r9 = interfaceinvoke r3.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.KerberosHelperTest.createMockService : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.KerberosHelperTest.createMockService : return r3
