org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r5 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r5
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r5 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r5 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r10 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r10 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r10
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r10 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r12 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r10 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r3 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) r2
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r3 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) r2 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r15 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger access$200()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r15 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger access$200()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z2 = interfaceinvoke $r15.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z2 = interfaceinvoke $r15.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z2 == 0
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r16 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger access$200()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r22 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r22 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r22
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r22 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r23 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r22 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r28
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r28 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r29 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r28 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : return
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r29 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r29
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r29 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r30 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r29 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : return
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r30 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r31 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r31 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r30[0] = $r31
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r30[0] = $r31 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r32 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r32 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r30[1] = $r32
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r30[1] = $r32 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upgrade pack must contain post-downgrade elements if post-upgrade exists for processing component %s/%s", $r30)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upgrade pack must contain post-downgrade elements if post-upgrade exists for processing component %s/%s", $r30) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r34 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r34 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String)>(r33)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String)>(r33) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : throw $r34
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r23 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r23
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r23 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r24 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r23 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r24 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r25 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r25 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r24[0] = $r25
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r24[0] = $r25 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r26 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r26 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r24[1] = $r26
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r24[1] = $r26 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upgrade pack must contain pre-downgrade elements if pre-upgrade exists for processing component %s/%s", $r24)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upgrade pack must contain pre-downgrade elements if pre-upgrade exists for processing component %s/%s", $r24) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r27 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r27 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String)>(r4)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : throw $r27
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r16 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger access$200()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17 = newarray (java.lang.Object)[4]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r18 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r18 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17[0] = $r18
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17[0] = $r18 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r19 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r19 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17[1] = $r19
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17[1] = $r19 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r20 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r20 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17[2] = $r20
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17[2] = $r20 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r21 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r21 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17[3] = $r21
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17[3] = $r21 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Processing component {}/{} preUpgrade={} postUpgrade={} preDowngrade={} postDowngrade={}", $r17)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Processing component {}/{} preUpgrade={} postUpgrade={} preDowngrade={} postDowngrade={}", $r17) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r22 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r12 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z1 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: boolean access$000(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r12)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z1 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: boolean access$000(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r12) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r13 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r14 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r14 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r13 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: java.util.List access$100(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r14)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r13 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: java.util.List access$100(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r14) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r13
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r13 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r3 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) r2
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r13 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : goto [?= r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r13]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : goto [?= r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r13] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r13
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z0 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: boolean access$000(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r7)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z0 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: boolean access$000(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r7) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r8 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r9 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r9 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r8 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: java.util.List access$100(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r9)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r8 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: java.util.List access$100(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r9) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r8
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r8 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r10 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r8 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : goto [?= r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r8]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : goto [?= r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r8] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r8
