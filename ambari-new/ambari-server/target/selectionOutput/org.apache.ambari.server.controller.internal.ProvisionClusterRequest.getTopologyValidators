org.apache.ambari.server.controller.internal.ProvisionClusterRequest.getTopologyValidators : $r1 = new org.apache.ambari.server.topology.RequiredPasswordValidator >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.getTopologyValidators : $r2 = r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: java.lang.String defaultPassword>
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.getTopologyValidators : $r2 = r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: java.lang.String defaultPassword> >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.getTopologyValidators : specialinvoke $r1.<org.apache.ambari.server.topology.RequiredPasswordValidator: void <init>(java.lang.String)>($r2)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.getTopologyValidators : specialinvoke $r1.<org.apache.ambari.server.topology.RequiredPasswordValidator: void <init>(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.getTopologyValidators : $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.getTopologyValidators : $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.getTopologyValidators : return $r3
