org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r2 = <org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Initializing {}", $r4)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Initializing {}", $r4) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r5 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : if $r5 != null
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : if $r5 != null >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r6 = <org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : if $r5 != null >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r7 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r7 = r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void processConfig(org.apache.ambari.server.configuration.Configuration)>($r7)
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : virtualinvoke r0.<org.apache.ambari.server.security.AbstractSecurityHeaderFilter: void processConfig(org.apache.ambari.server.configuration.Configuration)>($r7) >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : return
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : $r6 = <org.apache.ambari.server.security.AbstractSecurityHeaderFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>("The Ambari configuration object is not available, all default options will be assumed.")
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>("The Ambari configuration object is not available, all default options will be assumed.") >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : goto [?= return]
org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : goto [?= return] >>>>>>>> org.apache.ambari.server.security.AbstractSecurityHeaderFilter.init : return
