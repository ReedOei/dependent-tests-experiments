org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: void loadCredentialProvider()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: void loadCredentialProvider()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $r5 == null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r3 = null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r2
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r3 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r6 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r3 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r7 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r4 = $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r8 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r8 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String)>("Error reading from credential store.")
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String)>("Error reading from credential store.") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : virtualinvoke r4.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : virtualinvoke r4.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if r3 == null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r9 = new java.lang.String
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r10 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r10 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read password for alias = ")
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read password for alias = ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>($r14)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r2
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r9 = new java.lang.String >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke $r9.<java.lang.String: void <init>(char[])>(r3)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke $r9.<java.lang.String: void <init>(char[])>(r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r2 = $r9
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r2 = $r9 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= return r2]
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= return r2] >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r2
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r6 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r3 = virtualinvoke $r6.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r6 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r7 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r3 = virtualinvoke $r6.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= (branch)]
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r3 = virtualinvoke $r6.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r7 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if r3 == null
