org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r4 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock> >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r6 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.Map properties>
org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r9 := @caughtexception
org.apache.ambari.server.state.ConfigImpl.deleteProperties : r3 = $r9 >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r10 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock>
org.apache.ambari.server.state.ConfigImpl.deleteProperties : r3 = $r9 >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r9 := @caughtexception
org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r10 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock> >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : throw r3
org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r6 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : r2 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r6 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.Map properties> >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r9 := @caughtexception
org.apache.ambari.server.state.ConfigImpl.deleteProperties : r2 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>(r1)
org.apache.ambari.server.state.ConfigImpl.deleteProperties : r2 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r9 := @caughtexception
org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r7 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock>
org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r9 := @caughtexception
org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r7 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock> >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.ConfigImpl.deleteProperties : $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.ConfigImpl.deleteProperties : interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : goto [?= return]
org.apache.ambari.server.state.ConfigImpl.deleteProperties : goto [?= return] >>>>>>>> org.apache.ambari.server.state.ConfigImpl.deleteProperties : return
