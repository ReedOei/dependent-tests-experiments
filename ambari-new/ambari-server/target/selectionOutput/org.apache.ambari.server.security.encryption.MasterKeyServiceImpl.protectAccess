org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z0 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : return
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z1 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z2 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r2 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r2 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r3 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r3 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r2[0] = $r3
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r2[0] = $r3 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s readable only by current user", $r2)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s readable only by current user", $r2) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r4 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r4 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r5 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r5 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r5.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r5.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : throw $r5
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z2 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z2 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r2 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z3 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z3 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z3 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z4 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r6 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r6 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r7 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r7 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r6[0] = $r7
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r6[0] = $r7 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s writable only by current user", $r6)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s writable only by current user", $r6) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r9 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r9 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r8)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r8)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : throw $r10
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z4 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z4 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r6 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z5 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z5 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z6 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z5 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z8 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z8 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z8 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r16 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : return
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r16 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r17 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r17 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r16[0] = $r17
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r16[0] = $r17 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s not executable", $r16)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s not executable", $r16) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r19 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r19 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r19.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r18)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r19.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r18) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r20 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r20 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r20.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r18)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r20.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r18) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : throw $r20
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z6 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z6 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z6 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z7 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z6 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r11 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r12 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r12 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r11[0] = $r12
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r11[0] = $r12 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s executable by current user", $r11)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s executable by current user", $r11) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r14 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r14 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r14.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r13)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r14.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r15 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r15 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r13)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : throw $r15
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z7 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z7 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r11 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : return
