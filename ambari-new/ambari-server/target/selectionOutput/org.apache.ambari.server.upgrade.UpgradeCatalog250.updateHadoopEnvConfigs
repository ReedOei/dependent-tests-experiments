org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r9 = interfaceinvoke $r8.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r9 = interfaceinvoke $r8.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r10 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r10 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : specialinvoke $r10.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : specialinvoke $r10.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r4 = $r10
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r4 = $r10 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r11 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r11 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r6 = (org.apache.ambari.server.state.Cluster) $r12
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r6 = (org.apache.ambari.server.state.Cluster) $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r7 = null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r7 = null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r13 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r13 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $r13 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $r13 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r14 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $r13 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r7 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $z2 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("ulimit")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $z2 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("ulimit") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z2 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z2 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if $z2 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n{% if is_datanode_max_locked_memory_set %}\n# Fix temporary bug, when ulimit from conf files is not picked up, without full relogin. \n# Makes sense to fix only when runing DN as root \nif [ \"$command\" == \"datanode\" ] &amp;&amp; [ \"$EUID\" -eq 0 ] &amp;&amp; [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n  ulimit -l {{datanode_max_locked_memory}}\nfi\n{% endif %}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n{% if is_datanode_max_locked_memory_set %}\n# Fix temporary bug, when ulimit from conf files is not picked up, without full relogin. \n# Makes sense to fix only when runing DN as root \nif [ \"$command\" == \"datanode\" ] &amp;&amp; [ \"$EUID\" -eq 0 ] &amp;&amp; [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n  ulimit -l {{datanode_max_locked_memory}}\nfi\n{% endif %}") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r20)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r20) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r6, "hadoop-env", r4, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r6, "hadoop-env", r4, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r14 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r7 = (java.lang.String) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : r7 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHadoopEnvConfigs : if r7 == null
