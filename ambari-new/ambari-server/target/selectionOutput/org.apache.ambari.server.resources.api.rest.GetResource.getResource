org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r3 = <org.apache.ambari.server.resources.api.rest.GetResource: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>()
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : if $z0 == 0
org.apache.ambari.server.resources.api.rest.GetResource.getResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r6 = <org.apache.ambari.server.resources.api.rest.GetResource: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.resources.api.rest.GetResource.getResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r10 = <org.apache.ambari.server.resources.api.rest.GetResource: org.apache.ambari.server.resources.ResourceManager resourceManager>
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r10 = <org.apache.ambari.server.resources.api.rest.GetResource: org.apache.ambari.server.resources.ResourceManager resourceManager> >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : r5 = virtualinvoke $r10.<org.apache.ambari.server.resources.ResourceManager: java.io.File getResource(java.lang.String)>(r1)
org.apache.ambari.server.resources.api.rest.GetResource.getResource : r5 = virtualinvoke $r10.<org.apache.ambari.server.resources.ResourceManager: java.io.File getResource(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $z1 = virtualinvoke r5.<java.io.File: boolean exists()>()
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $z1 = virtualinvoke r5.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : if $z1 != 0
org.apache.ambari.server.resources.api.rest.GetResource.getResource : if $z1 != 0 >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r11 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(int)>(404)
org.apache.ambari.server.resources.api.rest.GetResource.getResource : if $z1 != 0 >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r13 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder ok(java.lang.Object)>(r5)
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r13 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder ok(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r14 = virtualinvoke $r13.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>()
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r14 = virtualinvoke $r13.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : return $r14
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r11 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(int)>(404) >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r12 = virtualinvoke $r11.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>()
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r12 = virtualinvoke $r11.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : return $r12
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r6 = <org.apache.ambari.server.resources.api.rest.GetResource: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.resources.api.rest.GetResource.getResource : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a resource request from agent, resourcePath=")
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a resource request from agent, resourcePath=") >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r9)
org.apache.ambari.server.resources.api.rest.GetResource.getResource : interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.resources.api.rest.GetResource.getResource : $r10 = <org.apache.ambari.server.resources.api.rest.GetResource: org.apache.ambari.server.resources.ResourceManager resourceManager>
