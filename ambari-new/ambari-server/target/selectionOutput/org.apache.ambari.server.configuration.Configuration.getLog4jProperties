org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $z0 = virtualinvoke $r3.<java.util.Properties: boolean isEmpty()>()
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $z0 = virtualinvoke $r3.<java.util.Properties: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : if $z0 != 0
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : if $z0 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r4 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties>
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : if $z0 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r5 = class "org/apache/ambari/server/configuration/Configuration"
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r5 = class "org/apache/ambari/server/configuration/Configuration" >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : r1 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("log4j.properties")
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : r1 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("log4j.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : if r1 != null
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : if r1 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r7 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : if r1 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r8 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties>
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : if r1 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r9 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : if r1 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r11 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : r12 = $r11 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r13 = new java.lang.IllegalArgumentException
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r13 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t read configuration file log4j.properties", r12)
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t read configuration file log4j.properties", r12) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : throw $r13
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : r2 = $r9 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r10 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r10 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("No configuration file log4j.properties found in classpath.", r2)
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("No configuration file log4j.properties found in classpath.", r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : goto [?= $r14 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties>]
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : goto [?= $r14 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties>] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r14 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties>
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r14 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : return $r14
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r8 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r9 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r8 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r11 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r8 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : virtualinvoke $r8.<java.util.Properties: void load(java.io.InputStream)>(r1)
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : virtualinvoke $r8.<java.util.Properties: void load(java.io.InputStream)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r9 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : virtualinvoke $r8.<java.util.Properties: void load(java.io.InputStream)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r11 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : virtualinvoke $r8.<java.util.Properties: void load(java.io.InputStream)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : virtualinvoke r1.<java.io.InputStream: void close()>()
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r9 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r11 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : goto [?= $r14 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties>]
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : goto [?= $r14 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties>] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r14 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties>
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r7 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("log4j.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("log4j.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : throw $r7
org.apache.ambari.server.configuration.Configuration.getLog4jProperties : $r4 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties log4jProperties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getLog4jProperties : return $r4
