org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: long lastDumpTime> = $l0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: long lastDumpTime> = $l0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r9 = new java.util.TreeSet
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r9 = new java.util.TreeSet >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r10 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: java.util.Map operationTimings>
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r10 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: java.util.Map operationTimings> >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke $r9.<java.util.TreeSet: void <init>(java.util.Collection)>($r11)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke $r9.<java.util.TreeSet: void <init>(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r1 = $r9
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r1 = $r9 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r12 = new java.util.HashMap
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r12 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke $r12.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r2 = $r12
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r2 = $r12 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z0 == 0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z0 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z0 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z6 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z6 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z6 != 0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z6 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z7 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: boolean isInitialized>
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z6 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : return
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z7 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: boolean isInitialized> >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z7 != 0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z7 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: void init()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z7 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z8 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: boolean isInitialized>
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z8 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: boolean isInitialized> >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z8 == 0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z8 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r26 = <org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: org.slf4j.Logger LOG>
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z8 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : return
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r26 = <org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r27 = new java.lang.StringBuilder
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Publishing ")
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Publishing ") >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i5 = interfaceinvoke r2.<java.util.Map: int size()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i5 = interfaceinvoke r2.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" metrics to sink.")
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" metrics to sink.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String)>($r31)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r32 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource metricsSource>
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r32 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource metricsSource> >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : virtualinvoke $r32.<org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource: void publish(java.util.Map)>(r2)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : virtualinvoke $r32.<org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource: void publish(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : return
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: void init()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z8 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: boolean isInitialized>
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r4 = (java.lang.String) $r13
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r4 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r14 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: java.util.Map operationTimings>
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r14 = r0.<org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: java.util.Map operationTimings> >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r6 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r6 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if r6 != null
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if r6 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if r6 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z1 = r6 instanceof java.lang.Long
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z1 = r6 instanceof java.lang.Long >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z1 == 0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z1 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r15 = new java.util.ArrayList
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z1 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r15 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke $r15.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : specialinvoke $r15.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r7 = $r15
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r7 = $r15 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : i1 = 0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : i1 = 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i2 = lengthof r5
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i2 = lengthof r5 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if i1 >= $i2
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if i1 >= $i2 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r16 = r5[i1]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if i1 >= $i2 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r23 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r7, ".")
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r23 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r7, ".") >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r24 = (java.lang.Long) r6
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r24 = (java.lang.Long) r6 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r24)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r24) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r16 = r5[i1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r17 = <org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: java.lang.String entityPackagePrefix>
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r17 = <org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor: java.lang.String entityPackagePrefix> >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z2 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>($r17)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z2 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z2 == 0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z2 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r18 = r5[i1]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z2 == 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r20 = r5[i1]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r20 = r5[i1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $r20 == null
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $r20 == null >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r21 = r5[i1]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $r20 == null >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : i1 = i1 + 1
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : goto [?= $i2 = lengthof r5]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : goto [?= $i2 = lengthof r5] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i2 = lengthof r5
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r21 = r5[i1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("null")
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("null") >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z4 != 0
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z4 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r22 = r5[i1]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : if $z4 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : i1 = i1 + 1
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r22 = r5[i1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r22)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : i1 = i1 + 1
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r18 = r5[i1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r8 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r8 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i3 = lengthof r8
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i3 = lengthof r8 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i4 = $i3 - 1
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $i4 = $i3 - 1 >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r19 = r8[$i4]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $r19 = r8[$i4] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r19)
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : goto [?= i1 = i1 + 1]
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : i1 = i1 + 1
org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L) >>>>>>>> org.apache.ambari.server.metrics.system.impl.AmbariPerformanceMonitor.dumpResults : $z1 = r6 instanceof java.lang.Long
