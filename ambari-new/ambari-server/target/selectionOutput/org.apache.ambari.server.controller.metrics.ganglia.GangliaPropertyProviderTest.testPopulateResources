org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: void setUpCommonMocks()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r22 = new org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r22 = new org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r22.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: void <init>(java.lang.String)>("temporal_ganglia_data.txt")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r22.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: void <init>(java.lang.String)>("temporal_ganglia_data.txt") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r1 = $r22
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r1 = $r22 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r23 = new org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest$TestGangliaHostProvider
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r23 = new org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest$TestGangliaHostProvider >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r23.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest$TestGangliaHostProvider: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r23.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest$TestGangliaHostProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r2 = $r23
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r2 = $r23 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r3 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getMetricPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r24)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r3 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getMetricPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r24) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r25 = new org.apache.ambari.server.controller.metrics.ganglia.GangliaHostComponentPropertyProvider
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r25 = new org.apache.ambari.server.controller.metrics.ganglia.GangliaHostComponentPropertyProvider >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r26 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r26 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r4 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r4 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r5 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r5 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r6 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r6 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r25.<org.apache.ambari.server.controller.metrics.ganglia.GangliaHostComponentPropertyProvider: void <init>(java.util.Map,org.apache.ambari.server.controller.internal.URLStreamProvider,org.apache.ambari.server.configuration.ComponentSSLConfiguration,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String,java.lang.String)>(r3, r1, $r26, r2, $r4, $r5, $r6)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r25.<org.apache.ambari.server.controller.metrics.ganglia.GangliaHostComponentPropertyProvider: void <init>(java.util.Map,org.apache.ambari.server.controller.internal.URLStreamProvider,org.apache.ambari.server.configuration.ComponentSSLConfiguration,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String,java.lang.String)>(r3, r1, $r26, r2, $r4, $r5, $r6) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r7 = $r25
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r7 = $r25 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r27 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r27 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r28 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r28 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r27.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r28)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r27.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r28) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r8 = $r27
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r8 = $r27 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r29 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r29 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r29, "c1")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r29, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r30 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r30 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r30, "domU-12-31-39-0E-34-E1.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r30, "domU-12-31-39-0E-34-E1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r31 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r31 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r31, "DATANODE")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r31, "DATANODE") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r32 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r32 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r32.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r32.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r9 = $r32
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r9 = $r32 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r33 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r33 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r34 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r34 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r34.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r34.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r36 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r36 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r37 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r36)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r37 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r10 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>($r37, r9)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r10 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>($r37, r9) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r38 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r8)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r38 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r39 = virtualinvoke r7.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r38, r10, null)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r39 = virtualinvoke r7.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r38, r10, null) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i1 = interfaceinvoke $r39.<java.util.Set: int size()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i1 = interfaceinvoke $r39.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l2 = (long) $i1
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r40 = new java.lang.StringBuilder
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r40 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r41 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r41 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $z0 = virtualinvoke $r41.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $z0 = virtualinvoke $r41.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if $z0 == 0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r42 = "https"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r42 = "http"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r42 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://domU-12-31-39-0E-34-E1.compute-1.internal/cgi-bin/rrd.py?c=HDPDataNode%2CHDPSlaves&h=domU-12-31-39-0E-34-E1.compute-1.internal&m=proc_total&s=10&e=20&r=1")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://domU-12-31-39-0E-34-E1.compute-1.internal/cgi-bin/rrd.py?c=HDPDataNode%2CHDPSlaves&h=domU-12-31-39-0E-34-E1.compute-1.internal&m=proc_total&s=10&e=20&r=1") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r11 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r11 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r45 = virtualinvoke r1.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r45 = virtualinvoke r1.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r11, $r45)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r11, $r45) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r46 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r8)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r46 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r8) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i3 = interfaceinvoke $r46.<java.util.Map: int size()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i3 = interfaceinvoke $r46.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l4 = (long) $i3
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l4 = (long) $i3 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l4)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l4) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r47 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r47 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r48 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r47)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r48 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r48)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r49 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r49 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r50 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r50 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r49.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r50)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r49.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r50) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r51 = $r49
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r51 = $r49 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r52 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r52 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r52, "c1")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r52, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r53 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r53 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r53, "domU-12-31-39-0E-34-E1.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r53, "domU-12-31-39-0E-34-E1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r54 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r54 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r54, "TASKTRACKER")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r54, "TASKTRACKER") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r55 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r55 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r55.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r55.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r56 = $r55
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r56 = $r55 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r57 = new java.util.HashSet
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r57 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r57.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r57.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r12 = $r57
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r12 = $r57 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r13 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/mapred/shuffleOutput", "shuffle_exceptions_caught")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r13 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/mapred/shuffleOutput", "shuffle_exceptions_caught") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/mapred/shuffleOutput", "shuffle_failed_outputs")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/mapred/shuffleOutput", "shuffle_failed_outputs") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/mapred/shuffleOutput", "shuffle_output_bytes")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/mapred/shuffleOutput", "shuffle_output_bytes") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/mapred/shuffleOutput", "shuffle_success_outputs")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/mapred/shuffleOutput", "shuffle_success_outputs") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r13)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r14)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r15)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r15) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r16)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r12.<java.util.Set: boolean add(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r58 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>(r12, r56)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r58 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>(r12, r56) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r59 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r59 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r59.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r59.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r59)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r59) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r61 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r61 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r61.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r61.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r61)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r61) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r63 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r63 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r63.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r63.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r63)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r63) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r65 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r65 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r65.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r65.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r65)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r65) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r67 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r51)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r67 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r51) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r68 = virtualinvoke r7.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r67, r58, null)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r68 = virtualinvoke r7.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r67, r58, null) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i5 = interfaceinvoke $r68.<java.util.Set: int size()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i5 = interfaceinvoke $r68.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l6 = (long) $i5
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l6 = (long) $i5 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l6)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l6) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r69 = new java.util.ArrayList
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r69 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r69.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r69.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r17 = $r69
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r17 = $r69 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>("metrics/mapred/shuffleOutput/shuffle_exceptions_caught")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>("metrics/mapred/shuffleOutput/shuffle_exceptions_caught") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>("metrics/mapred/shuffleOutput/shuffle_failed_outputs")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>("metrics/mapred/shuffleOutput/shuffle_failed_outputs") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>("metrics/mapred/shuffleOutput/shuffle_output_bytes")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>("metrics/mapred/shuffleOutput/shuffle_output_bytes") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>("metrics/mapred/shuffleOutput/shuffle_success_outputs")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>("metrics/mapred/shuffleOutput/shuffle_success_outputs") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r18 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String getMetricsRegexes(java.util.List,java.util.Map,java.lang.String)>(r17, r3, "TASKTRACKER")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r18 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String getMetricsRegexes(java.util.List,java.util.Map,java.lang.String)>(r17, r3, "TASKTRACKER") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r70 = new org.apache.http.client.utils.URIBuilder
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r70 = new org.apache.http.client.utils.URIBuilder >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r70.<org.apache.http.client.utils.URIBuilder: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r70.<org.apache.http.client.utils.URIBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r19 = $r70
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r19 = $r70 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r72 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r72 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $z9 = virtualinvoke $r72.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $z9 = virtualinvoke $r72.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if $z9 == 0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r73 = "https"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r73 = "http"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r73 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r73)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r73) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>("domU-12-31-39-0E-34-E1.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>("domU-12-31-39-0E-34-E1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>("/cgi-bin/rrd.py")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>("/cgi-bin/rrd.py") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("c", "HDPTaskTracker,HDPSlaves")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("c", "HDPTaskTracker,HDPSlaves") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("h", "domU-12-31-39-0E-34-E1.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("h", "domU-12-31-39-0E-34-E1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("m", r18)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("m", r18) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("s", "10")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("s", "10") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("e", "20")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("e", "20") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("r", "1")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("r", "1") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r83 = new org.apache.http.client.utils.URIBuilder
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r83 = new org.apache.http.client.utils.URIBuilder >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r84 = virtualinvoke r1.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r84 = virtualinvoke r1.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r83.<org.apache.http.client.utils.URIBuilder: void <init>(java.lang.String)>($r84)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : specialinvoke $r83.<org.apache.http.client.utils.URIBuilder: void <init>(java.lang.String)>($r84) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r20 = $r83
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r20 = $r83 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r85 = virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: java.lang.String getScheme()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r85 = virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: java.lang.String getScheme()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r86 = virtualinvoke r20.<org.apache.http.client.utils.URIBuilder: java.lang.String getScheme()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r86 = virtualinvoke r20.<org.apache.http.client.utils.URIBuilder: java.lang.String getScheme()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r85, $r86)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r85, $r86) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r87 = virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: java.lang.String getHost()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r87 = virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: java.lang.String getHost()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r88 = virtualinvoke r20.<org.apache.http.client.utils.URIBuilder: java.lang.String getHost()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r88 = virtualinvoke r20.<org.apache.http.client.utils.URIBuilder: java.lang.String getHost()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r87, $r88)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r87, $r88) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r89 = virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: java.lang.String getPath()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r89 = virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r90 = virtualinvoke r20.<org.apache.http.client.utils.URIBuilder: java.lang.String getPath()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r90 = virtualinvoke r20.<org.apache.http.client.utils.URIBuilder: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r89, $r90)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r89, $r90) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $z10 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: boolean isUrlParamsEquals(org.apache.http.client.utils.URIBuilder,org.apache.http.client.utils.URIBuilder)>(r20, r19)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $z10 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: boolean isUrlParamsEquals(org.apache.http.client.utils.URIBuilder,org.apache.http.client.utils.URIBuilder)>(r20, r19) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r91 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r51)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r91 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r51) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i7 = interfaceinvoke $r91.<java.util.Map: int size()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i7 = interfaceinvoke $r91.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l8 = (long) $i7
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l8 = (long) $i7 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(7L, $l8)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(7L, $l8) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r92 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r13)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r92 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r92)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r92) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r93 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r13)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r93 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r94 = (java.lang.Number[][]) $r93
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r94 = (java.lang.Number[][]) $r93 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r21 = (java.lang.Number[][]) $r94
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : r21 = (java.lang.Number[][]) $r94 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i9 = lengthof r21
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i9 = lengthof r21 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l10 = (long) $i9
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $l10 = (long) $i9 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(106L, $l10)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(106L, $l10) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : i0 = 0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : i0 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i11 = lengthof r21
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i11 = lengthof r21 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 >= $i11
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 >= $i11 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 < 10
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 >= $i11 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r101 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r14)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r101 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r14) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r101)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r101) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r102 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r15)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r102 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r102)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r102) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r103 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r16)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r103 = interfaceinvoke r51.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r103)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : return
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 < 10 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 >= 20
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 < 10 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $d0 = 0.0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $d0 = 0.0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r95 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r95 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r96 = r21[i0]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r96 = r21[i0] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r97 = $r96[0]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r97 = $r96[0] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r95, $r97)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r95, $r97) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i12 = 360 * i0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i12 = 360 * i0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i13 = $i12 + 1358434800
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i13 = $i12 + 1358434800 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r99 = r21[i0]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r99 = r21[i0] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r100 = $r99[1]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r100 = $r99[1] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r98, $r100)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r98, $r100) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : i0 = i0 + 1
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : goto [?= $i11 = lengthof r21]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : goto [?= $i11 = lengthof r21] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $i11 = lengthof r21
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 >= 20 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $d0 = 7.0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : if i0 >= 20 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $d0 = 0.0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $d0 = 7.0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : goto [?= $r95 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : goto [?= $r95 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r95 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r73 = "https" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : goto [?= virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r73)]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : goto [?= virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r73)] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : virtualinvoke r19.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r73)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r42 = "https" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : goto [?= $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : goto [?= $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateResources : $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)
