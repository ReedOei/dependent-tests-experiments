org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r14 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r14
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r14 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r15 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterVersionDAO")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r15 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterVersionDAO") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r2 = (org.apache.ambari.server.orm.dao.ClusterVersionDAO) $r15
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r2 = (org.apache.ambari.server.orm.dao.ClusterVersionDAO) $r15 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r16 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/RepositoryVersionDAO")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r16 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/RepositoryVersionDAO") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r17 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r16
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r17 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r16 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao> = $r17
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao> = $r17 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r18 = new org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r18 = new org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r18.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r18.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r3 = $r18
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r3 = $r18 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r19 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r19 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r4 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r19
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r4 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r19 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r20 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManager")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r20 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManager") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r5 = (org.apache.ambari.server.stack.StackManager) $r20
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r5 = (org.apache.ambari.server.stack.StackManager) $r20 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r21 = virtualinvoke r4.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.stack.StackManager getStackManager()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r21 = virtualinvoke r4.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.stack.StackManager getStackManager()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r22 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r21)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r22 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r22.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r22.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r24 = new org.apache.ambari.server.orm.entities.ClusterEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r24 = new org.apache.ambari.server.orm.entities.ClusterEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r24.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r24.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r6 = $r24
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r6 = $r24 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r25 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String CLUSTER_NAME>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r25 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String CLUSTER_NAME> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>($r25)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r26 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r26 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r27 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r26)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r27 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r28 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r6)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r28 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r27.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r28)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r27.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r30 = new org.apache.ambari.server.orm.entities.StackEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r30 = new org.apache.ambari.server.orm.entities.StackEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r30.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r30.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r7 = $r30
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r7 = $r30 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r7.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("HDP")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r7.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("HDP") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r7.<org.apache.ambari.server.orm.entities.StackEntity: void setStackVersion(java.lang.String)>("2.3")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r7.<org.apache.ambari.server.orm.entities.StackEntity: void setStackVersion(java.lang.String)>("2.3") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterEntity: void setDesiredStack(org.apache.ambari.server.orm.entities.StackEntity)>(r7)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterEntity: void setDesiredStack(org.apache.ambari.server.orm.entities.StackEntity)>(r7) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r31 = new org.apache.ambari.server.state.StackInfo
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r31 = new org.apache.ambari.server.state.StackInfo >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r31.<org.apache.ambari.server.state.StackInfo: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r31.<org.apache.ambari.server.state.StackInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r8 = $r31
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r8 = $r31 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r8.<org.apache.ambari.server.state.StackInfo: void setName(java.lang.String)>("HDP")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r8.<org.apache.ambari.server.state.StackInfo: void setName(java.lang.String)>("HDP") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r8.<org.apache.ambari.server.state.StackInfo: void setVersion(java.lang.String)>("2.3")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r8.<org.apache.ambari.server.state.StackInfo: void setVersion(java.lang.String)>("2.3") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r32 = new org.apache.ambari.server.state.RepositoryInfo
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r32 = new org.apache.ambari.server.state.RepositoryInfo >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r32.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r32.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r9 = $r32
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r9 = $r32 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r9.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>("http://msft.r")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r9.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>("http://msft.r") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r33 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String ADD_ON_REPO_ID>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r33 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String ADD_ON_REPO_ID> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r9.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>($r33)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r9.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r9.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>("MSFT_R")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r9.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>("MSFT_R") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r9.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>("redhat6")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r9.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>("redhat6") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r34 = virtualinvoke r8.<org.apache.ambari.server.state.StackInfo: java.util.List getRepositories()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r34 = virtualinvoke r8.<org.apache.ambari.server.state.StackInfo: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r35 = virtualinvoke r5.<org.apache.ambari.server.stack.StackManager: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>("HDP", "2.3")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r35 = virtualinvoke r5.<org.apache.ambari.server.stack.StackManager: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>("HDP", "2.3") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r36 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r35)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r36 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r36.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r8)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r36.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r38 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "com/google/inject/Provider")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r38 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "com/google/inject/Provider") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r10 = (com.google.inject.Provider) $r38
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r10 = (com.google.inject.Provider) $r38 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r39 = interfaceinvoke r10.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r39 = interfaceinvoke r10.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r40 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r39)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r40 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r40.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r3)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r40.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r42 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest$1
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r42 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest$1 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r42.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest$1: void <init>(org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest,org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper)>(r0, r3)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r42.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest$1: void <init>(org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest,org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper)>(r0, r3) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r11 = $r42
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r11 = $r42 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r43 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r43 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r43[0] = r11
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r43[0] = r11 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r43)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r43) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : if z0 == 0
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r44 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r54 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r54 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r55 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r55 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r54.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup: void <init>(org.apache.ambari.server.orm.dao.ClusterDAO,org.apache.ambari.server.orm.dao.ClusterVersionDAO,org.apache.ambari.server.orm.dao.RepositoryVersionDAO,org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r1, r2, $r55, r3, r4)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r54.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup: void <init>(org.apache.ambari.server.orm.dao.ClusterDAO,org.apache.ambari.server.orm.dao.ClusterVersionDAO,org.apache.ambari.server.orm.dao.RepositoryVersionDAO,org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r1, r2, $r55, r3, r4) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup activeRepoUpdater> = $r54
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup activeRepoUpdater> = $r54 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : return
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r44 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r44.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r44.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion> = $r44
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion> = $r44 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r45 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r45 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r45.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>(r7)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r45.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>(r7) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r46 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r46 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r47 = staticinvoke <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String resourceAsString(java.lang.String)>("org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartupTest_initialRepos.json")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r47 = staticinvoke <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String resourceAsString(java.lang.String)>("org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartupTest_initialRepos.json") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setOperatingSystems(java.lang.String)>($r47)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setOperatingSystems(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r48 = new org.apache.ambari.server.orm.entities.ClusterVersionEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r48 = new org.apache.ambari.server.orm.entities.ClusterVersionEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r48.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r48.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r13 = $r48
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r13 = $r48 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r49 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r49 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r49)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r49) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r50 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String CLUSTER_NAME>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r50 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String CLUSTER_NAME> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r51 = virtualinvoke r2.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStateCurrent(java.lang.String)>($r50)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r51 = virtualinvoke r2.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStateCurrent(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r52 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r51)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r52 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r52.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r13)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r52.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r54 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup
