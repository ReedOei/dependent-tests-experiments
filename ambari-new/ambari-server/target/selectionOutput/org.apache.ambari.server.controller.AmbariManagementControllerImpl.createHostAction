org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r10 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r43 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.Host getHost()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r43 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.Host getHost()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r44 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r44 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r45 = staticinvoke <org.apache.ambari.server.Role: org.apache.ambari.server.Role valueOf(java.lang.String)>($r44)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r45 = staticinvoke <org.apache.ambari.server.Role: org.apache.ambari.server.Role valueOf(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r2.<org.apache.ambari.server.actionmanager.Stage: void addHostRoleExecutionCommand(org.apache.ambari.server.state.Host,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,org.apache.ambari.server.state.Cluster,java.lang.String,boolean,boolean)>($r43, $r45, r7, r9, r1, r10, 0, z0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r2.<org.apache.ambari.server.actionmanager.Stage: void addHostRoleExecutionCommand(org.apache.ambari.server.state.Host,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,org.apache.ambari.server.state.Cluster,java.lang.String,boolean,boolean)>($r43, $r45, r7, r9, r1, r10, 0, z0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r11 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r11 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r12 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r12 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r46 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r46 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r47 = interfaceinvoke $r46.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r12)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r47 = interfaceinvoke $r46.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r13 = interfaceinvoke $r47.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r13 = interfaceinvoke $r47.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r48 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r48 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r49 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r49 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r50 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r50 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r15 = virtualinvoke $r48.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r49, $r50, r10)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r15 = virtualinvoke $r48.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r49, $r50, r10) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r51 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r51 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r52 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r52 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r53 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r53 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r16 = virtualinvoke $r51.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r52, $r53, r10, r11)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r16 = virtualinvoke $r51.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r52, $r53, r10, r11) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r54 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r54 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r55 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r55 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r56 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r56 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r17 = virtualinvoke $r54.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r55, $r56)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r17 = virtualinvoke $r54.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r55, $r56) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r57 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r57 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r58 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r58 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r59 = virtualinvoke r2.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>($r57, $r58)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r59 = virtualinvoke r2.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>($r57, $r58) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r18 = virtualinvoke $r59.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r18 = virtualinvoke $r59.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r60 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r60 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r61 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r61 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r19 = interfaceinvoke $r60.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r61)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r19 = interfaceinvoke $r60.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r61) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationTags(java.util.Map)>(r6)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationTags(java.util.Map)>(r6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r20 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r10)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r20 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z3 = interfaceinvoke r20.<org.apache.ambari.server.state.Service: boolean isCredentialStoreEnabled()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z3 = interfaceinvoke r20.<org.apache.ambari.server.state.Service: boolean isCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r62 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r62 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setCredentialStoreEnabled(java.lang.String)>($r62)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setCredentialStoreEnabled(java.lang.String)>($r62) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r63 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map configCredentialsForService>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r63 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map configCredentialsForService> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r64 = interfaceinvoke r20.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r64 = interfaceinvoke r20.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r65 = interfaceinvoke $r63.<java.util.Map: java.lang.Object get(java.lang.Object)>($r64)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r65 = interfaceinvoke $r63.<java.util.Map: java.lang.Object get(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r21 = (java.util.Map) $r65
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r21 = (java.util.Map) $r65 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r21 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r21 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r66 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r21 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationCredentials(java.util.Map)>(r21)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationCredentials(java.util.Map)>(r21) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r70 = new java.util.TreeMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r70 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r70.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r70.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r22 = $r70
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r22 = $r70 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r8 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r8 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: void putAll(java.util.Map)>(r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r8 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r71 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r71 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r72 = interfaceinvoke $r71.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r72 = interfaceinvoke $r71.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r23 = interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r23 = interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z4 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z4 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z4 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r73 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r82 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r82 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z5 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: boolean equals(java.lang.Object)>($r82)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z5 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: boolean equals(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r83 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r83 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r84 = virtualinvoke $r83.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDefaultAgentTaskTimeout(boolean)>(z5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r84 = virtualinvoke $r83.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDefaultAgentTaskTimeout(boolean)>(z5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r85 = ""
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r85 = "" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r86 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: org.apache.ambari.server.state.CommandScriptDefinition getCommandScript()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r86 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: org.apache.ambari.server.state.CommandScriptDefinition getCommandScript()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r87 = virtualinvoke r15.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getSchemaVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r87 = virtualinvoke r15.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getSchemaVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z6 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>("2.0")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z6 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>("2.0") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z6 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r86 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z13 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z13 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z13 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r119 = r85
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r119 = r84
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r119 = r84 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r120 = $r119
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r120 = $r119 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r121 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r121 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z14 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: boolean equals(java.lang.Object)>($r121)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z14 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: boolean equals(java.lang.Object)>($r121) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z14 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z15 = virtualinvoke r84.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r120)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r120) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r123 = virtualinvoke r15.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getServicePackageFolder()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r123 = virtualinvoke r15.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getServicePackageFolder()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_package_folder", $r123)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_package_folder", $r123) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r125 = virtualinvoke r17.<org.apache.ambari.server.state.StackInfo: java.lang.String getStackHooksFolder()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r125 = virtualinvoke r17.<org.apache.ambari.server.state.StackInfo: java.lang.String getStackHooksFolder()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hooks_folder", $r125)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hooks_folder", $r125) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r127 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCustomFolder()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r127 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCustomFolder()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r127 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r127 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r128 = new java.io.File
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r127 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r133 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r133 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper customCommandExecutionHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper customCommandExecutionHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r135 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: java.lang.String name()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r135 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z18 = virtualinvoke $r134.<org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: boolean isTopologyRefreshRequired(java.lang.String,java.lang.String,java.lang.String)>($r135, r133, r10)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z18 = virtualinvoke $r134.<org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: boolean isTopologyRefreshRequired(java.lang.String,java.lang.String,java.lang.String)>($r135, r133, r10) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z18 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z18 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("refresh_topology", "True")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z18 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r137 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper customCommandExecutionHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r137 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper customCommandExecutionHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r138 = virtualinvoke $r137.<org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: java.lang.String getRepoInfo(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Host)>(r1, r19)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r138 = virtualinvoke $r137.<org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: java.lang.String getRepoInfo(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Host)>(r1, r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r139 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r139 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z19 = interfaceinvoke $r139.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z19 = interfaceinvoke $r139.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z19 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z19 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r140 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z19 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r153 = new java.util.TreeMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r153 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r153.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r153.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r154 = $r153
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r154 = $r153 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repo_info", r138)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repo_info", r138) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r156 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map getRcaParameters()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r156 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map getRcaParameters()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: void putAll(java.util.Map)>($r156)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: void putAll(java.util.Map)>($r156) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r157 = null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r157 = null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r158 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getEffectiveClusterVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r158 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getEffectiveClusterVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r158
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r158 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r157 = virtualinvoke r158.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r158 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r159 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r159 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r160 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r160 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r161 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INIT>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r161 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r162 = virtualinvoke $r159.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: java.util.List findByClusterAndState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r160, $r161)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r162 = virtualinvoke $r159.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: java.util.List findByClusterAndState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>($r160, $r161) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i9 = interfaceinvoke r162.<java.util.List: int size()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i9 = interfaceinvoke r162.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if 1 != $i9
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if 1 != $i9 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r163 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if 1 != $i9 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r157
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r157 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r165 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r157 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r178 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>(r15, r154, r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r157 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r169 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r170 = $r169 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r171 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r171 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r172 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r172 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r173 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r173 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r172[0] = $r173
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r172[0] = $r173 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load version xml from repo version %s", $r172)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load version xml from repo version %s", $r172) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r171.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r174, r170)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r171.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r174, r170) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : throw $r171
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r178 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>(r15, r154, r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r179 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r179 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r180 = virtualinvoke $r179.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r178)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r180 = virtualinvoke $r179.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r178) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_list", r180)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_list", r180) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r182 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r182 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r183 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r183 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r184 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType USER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r184 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType USER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r185 = virtualinvoke $r183.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map)>(r14, $r184, r1, r182)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r185 = virtualinvoke $r183.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map)>(r14, $r184, r1, r182) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r186 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r186 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r34 = virtualinvoke $r186.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r185)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r34 = virtualinvoke $r186.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r185) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user_list", r34)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user_list", r34) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r188 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r188 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r189 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType GROUP>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r189 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType GROUP> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r35 = virtualinvoke $r188.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map)>(r14, $r189, r1, r182)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r35 = virtualinvoke $r188.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map)>(r14, $r189, r1, r182) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r190 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r190 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r36 = virtualinvoke $r190.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r35)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r36 = virtualinvoke $r190.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("group_list", r36)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("group_list", r36) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r192 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r192 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r193 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType NOT_MANAGED_HDFS_PATH>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r193 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType NOT_MANAGED_HDFS_PATH> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r37 = virtualinvoke $r192.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map)>(r14, $r193, r1, r182)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r37 = virtualinvoke $r192.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map)>(r14, $r193, r1, r182) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r194 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r194 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r38 = virtualinvoke $r194.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r37)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r38 = virtualinvoke $r194.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("not_managed_hdfs_path_list", r38)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("not_managed_hdfs_path_list", r38) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r196 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r196 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r39 = virtualinvoke $r196.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r39 = virtualinvoke $r196.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType ORACLE>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType ORACLE> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r39 != $r197
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r39 != $r197 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r198 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r39 != $r197 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r201 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r201 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r39 != $r201
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r39 != $r201 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r202 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r39 != $r201 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r40 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r40 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r40 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r40 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r205 = new java.util.ArrayList
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r40 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r206 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r206 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r41 = virtualinvoke $r206.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r40)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r41 = virtualinvoke $r206.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r40) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clientsToUpdateConfigs", r41)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clientsToUpdateConfigs", r41) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setHostLevelParams(java.util.Map)>(r154)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setHostLevelParams(java.util.Map)>(r154) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r208 = new java.util.TreeMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r208 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r208.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r208.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r42 = $r208
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r42 = $r208 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z22 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: boolean isUpgradeSuspended()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z22 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: boolean isUpgradeSuspended()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z22 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z22 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void addSuspendedUpgradeParameters(java.util.Map,java.util.Map)>(r22, r42)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z22 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>(r42)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>(r42) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>(r22)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>(r22) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r209 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r209 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r210 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r210 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r211 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r211 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r212 = virtualinvoke $r209.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r210, $r211)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r212 = virtualinvoke $r209.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r210, $r211) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setAvailableServicesFromServiceInfoMap(java.util.Map)>($r212)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setAvailableServicesFromServiceInfoMap(java.util.Map)>($r212) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r18 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r18 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r213 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r18 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r213 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z23 = interfaceinvoke $r213.<java.util.Map: boolean containsKey(java.lang.Object)>("cluster-env")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z23 = interfaceinvoke $r213.<java.util.Map: boolean containsKey(java.lang.Object)>("cluster-env") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z23 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z23 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r214 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z23 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r214 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215 = newarray (java.lang.Object)[5]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r216 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getHostname()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r216 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[0] = $r216
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[0] = $r216 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r217 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r217 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[1] = $r217
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[1] = $r217 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r218 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r218 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[2] = $r218
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[2] = $r218 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r219 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getCommandId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r219 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getCommandId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[3] = $r219
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[3] = $r219 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r220 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r220 = virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r221 = interfaceinvoke $r220.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-env")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r221 = interfaceinvoke $r220.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-env") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r222 = (java.util.Map) $r221
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r222 = (java.util.Map) $r221 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r223 = interfaceinvoke $r222.<java.util.Map: java.lang.Object get(java.lang.Object)>("tag")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r223 = interfaceinvoke $r222.<java.util.Map: java.lang.Object get(java.lang.Object)>("tag") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[4] = $r223
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r215[4] = $r223 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r214.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("AmbariManagementControllerImpl.createHostAction: created ExecutionCommand for host {}, role {}, roleCommand {}, and command ID {}, with cluster-env tags {}", $r215)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r214.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("AmbariManagementControllerImpl.createHostAction: created ExecutionCommand for host {}, role {}, roleCommand {}, and command ID {}, with cluster-env tags {}", $r215) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void addSuspendedUpgradeParameters(java.util.Map,java.util.Map)>(r22, r42) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>(r42)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r205 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r205.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r205.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r40 = $r205
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r40 = $r205 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r40.<java.util.List: boolean add(java.lang.Object)>("*")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r40.<java.util.List: boolean add(java.lang.Object)>("*") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r206 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r202 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r203 = virtualinvoke $r202.<org.apache.ambari.server.configuration.Configuration: java.lang.String getMySQLJarName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r203 = virtualinvoke $r202.<org.apache.ambari.server.configuration.Configuration: java.lang.String getMySQLJarName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_driver_filename", $r203)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_driver_filename", $r203) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r40 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r198 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r199 = virtualinvoke $r198.<org.apache.ambari.server.configuration.Configuration: java.lang.String getOjdbcJarName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r199 = virtualinvoke $r198.<org.apache.ambari.server.configuration.Configuration: java.lang.String getOjdbcJarName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_driver_filename", $r199)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_driver_filename", $r199) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= r40 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= r40 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r40 = virtualinvoke r16.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r165 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r165
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r165 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r169 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r165 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r166 = virtualinvoke r165.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r165 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r175 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r165 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r169 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r175 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r175 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r175 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r176 = virtualinvoke $r175.<java.lang.Long: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r176 = virtualinvoke $r175.<java.lang.Long: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repository_version_id", $r176)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repository_version_id", $r176) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r178 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>(r15, r154, r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r166 = virtualinvoke r165.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z20 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r166)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r166 = virtualinvoke r165.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r169 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z20 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r166) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z20 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z20 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r166) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r169 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r167 = virtualinvoke r165.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r175 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r169 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r167 = virtualinvoke r165.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_version", $r167)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r167 = virtualinvoke r165.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r169 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_version", $r167) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r175 = virtualinvoke r157.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_version", $r167) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r169 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r163 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r164 = (org.apache.ambari.server.orm.entities.ClusterVersionEntity) $r163
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r164 = (org.apache.ambari.server.orm.entities.ClusterVersionEntity) $r163 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r157 = virtualinvoke $r164.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r157 = virtualinvoke $r164.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r157
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r157 = virtualinvoke r158.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r157
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r140 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r141 = new java.lang.StringBuilder
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r141 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r141.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r141.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending repo information to agent, hostname=")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending repo information to agent, hostname=") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r143 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r143 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r143) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterName=")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterName=") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r133)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r133) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackInfo=")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackInfo=") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r148 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r148 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", repoInfo=")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", repoInfo=") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r140.<org.slf4j.Logger: void debug(java.lang.String)>($r152)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r140.<org.slf4j.Logger: void debug(java.lang.String)>($r152) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r153 = new java.util.TreeMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("refresh_topology", "True") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r137 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper customCommandExecutionHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r128 = new java.io.File >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r129 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r129 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r130 = virtualinvoke $r129.<org.apache.ambari.server.configuration.Configuration: java.lang.String getResourceDirPath()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r130 = virtualinvoke $r129.<org.apache.ambari.server.configuration.Configuration: java.lang.String getResourceDirPath()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r128.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r130, r127)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r128.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r130, r127) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r131 = $r128
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r131 = $r128 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z16 = virtualinvoke r131.<java.io.File: boolean exists()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z16 = virtualinvoke r131.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z16 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z17 = virtualinvoke r131.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r133 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z17 = virtualinvoke r131.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z17 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z17 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("custom_folder", r127)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z17 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r133 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("custom_folder", r127) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r133 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z15 = virtualinvoke r84.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z15 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r120)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r120)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r120) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r84)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r84) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i7 >= $i8
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i7 >= $i8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r120 = r84
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i7 >= $i8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r120)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r120 = r84 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r120)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r119 = r85 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= r120 = $r119]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= r120 = $r119] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r120 = $r119
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r86 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r88 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r86 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r116 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r116 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r116[0] = r11
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r116[0] = r11 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r116[1] = r10
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r116[1] = r10 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r117 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Component %s of service %s has no command script defined", $r116)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r117 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Component %s of service %s has no command script defined", $r116) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r118 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r118 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r118.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r117)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r118.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r117) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : throw $r118
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r88 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script", $r88)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script", $r88) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r90 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: org.apache.ambari.server.state.CommandScriptDefinition$Type getScriptType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r90 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: org.apache.ambari.server.state.CommandScriptDefinition$Type getScriptType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r91 = virtualinvoke $r90.<org.apache.ambari.server.state.CommandScriptDefinition$Type: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r91 = virtualinvoke $r90.<org.apache.ambari.server.state.CommandScriptDefinition$Type: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script_type", $r91)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script_type", $r91) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z1 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z1 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z7 = interfaceinvoke r22.<java.util.Map: boolean containsKey(java.lang.Object)>("phase")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z7 = interfaceinvoke r22.<java.util.Map: boolean containsKey(java.lang.Object)>("phase") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z7 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r93 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("phase")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i4 = virtualinvoke r27.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i4 = virtualinvoke r27.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r108 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r108 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("max_duration_for_retries", $r108)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("max_duration_for_retries", $r108) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r110 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r110 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_retry_enabled", $r110)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_retry_enabled", $r110) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r112 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getEffectiveClusterVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r112 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getEffectiveClusterVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r112 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r112 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r113 = virtualinvoke r112.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r112 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i5 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i5 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i5 <= 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i5 <= 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i6 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i5 <= 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z13 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("")]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z13 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("")] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z13 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i6 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r85 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r85 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z13 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>("")]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r113 = virtualinvoke r112.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r114 = virtualinvoke $r113.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r114 = virtualinvoke $r113.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("version", $r114)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("version", $r114) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i5 = virtualinvoke r86.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r93 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("phase") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r94 = (java.lang.String) $r93
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r94 = (java.lang.String) $r93 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z8 = virtualinvoke $r94.<java.lang.String: boolean equals(java.lang.Object)>("INITIAL_INSTALL")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z8 = virtualinvoke $r94.<java.lang.String: boolean equals(java.lang.Object)>("INITIAL_INSTALL") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z8 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r95 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("phase")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r97 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r97 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r28 = virtualinvoke $r97.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "command_retry_enabled")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r28 = virtualinvoke $r97.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "command_retry_enabled") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r98 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r98 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r29 = virtualinvoke $r98.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "commands_to_retry")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r29 = virtualinvoke $r98.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "commands_to_retry") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r99 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r99 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r30 = virtualinvoke $r99.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "command_retry_max_time_in_sec")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r30 = virtualinvoke $r99.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "command_retry_max_time_in_sec") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z10 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r28)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z10 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r28) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z10 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r100 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i2 = staticinvoke <org.apache.commons.lang.math.NumberUtils: int toInt(java.lang.String,int)>(r30, 0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r104 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r104 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105 = newarray (java.lang.Object)[5]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[0] = r10
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[0] = r10 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[1] = r11
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[1] = r11 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[2] = $r106
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[2] = $r106 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r107 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r107 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[3] = $r107
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[3] = $r107 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[4] = r27
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105[4] = r27 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r104.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Auto retry setting for {}-{} on {} is retryEnabled={} and retryMaxTime={}", $r105)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r104.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Auto retry setting for {}-{} on {} is retryEnabled={} and retryMaxTime={}", $r105) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i4 = virtualinvoke r27.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i2 = staticinvoke <org.apache.commons.lang.math.NumberUtils: int toInt(java.lang.String,int)>(r30, 0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i3 = virtualinvoke r27.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i3 = virtualinvoke r27.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i3 >= 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i3 >= 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i3 >= 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r29)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r29) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z11 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z2 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r104 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z2 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r31 = virtualinvoke r29.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r31 = virtualinvoke r29.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r32 = r31
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r32 = r31 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i0 = lengthof r32
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i0 = lengthof r32 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i1 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i1 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if i1 >= i0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if i1 >= i0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r33 = r32[i1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if i1 >= i0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z1 = z2
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z1 = z2 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r104 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r33 = r32[i1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r102 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r102 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r103 = virtualinvoke r33.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r103 = virtualinvoke r33.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z12 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>($r103)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z12 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z12 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z2 = 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i1 = i1 + 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if i1 >= i0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z2 = 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i1 = i1 + 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r29)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r100 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r101 = virtualinvoke $r100.<java.lang.Boolean: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r101 = virtualinvoke $r100.<java.lang.Boolean: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z1 = virtualinvoke $r101.<java.lang.String: boolean equals(java.lang.Object)>(r28)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z1 = virtualinvoke $r101.<java.lang.String: boolean equals(java.lang.Object)>(r28) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r95 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("phase") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r96 = (java.lang.String) $r95
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r96 = (java.lang.String) $r95 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z9 = virtualinvoke $r96.<java.lang.String: boolean equals(java.lang.Object)>("INITIAL_START")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z9 = virtualinvoke $r96.<java.lang.String: boolean equals(java.lang.Object)>("INITIAL_START") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z9 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r97 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i4 = virtualinvoke r27.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r73 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r24 = (org.apache.ambari.server.state.Service) $r73
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r24 = (org.apache.ambari.server.state.Service) $r73 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r74 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r74 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r75 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r75 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r76 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r76 = virtualinvoke r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r77 = interfaceinvoke r24.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r77 = interfaceinvoke r24.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r25 = virtualinvoke $r74.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r75, $r76, $r77)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r25 = virtualinvoke $r74.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r75, $r76, $r77) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r78 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r78 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r79 = virtualinvoke r25.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r79 = virtualinvoke r25.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r78.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Iterating service type Instance in createHostAction: {}", $r79)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r78.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Iterating service type Instance in createHostAction: {}", $r79) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r26 = virtualinvoke r25.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getServiceType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r26 = virtualinvoke r25.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getServiceType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r26 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r26 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r80 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r26 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z4 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z4 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z4 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r80 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r80.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Adding service type info in createHostAction: {}", r26)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r80.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Adding service type info in createHostAction: {}", r26) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs_type", r26)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs_type", r26) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r82 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r82 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r82 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r22.<java.util.Map: void putAll(java.util.Map)>(r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r71 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r66 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r21 = virtualinvoke $r66.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getCredentialStoreEnabledProperties(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.Service)>(r14, r20)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r21 = virtualinvoke $r66.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getCredentialStoreEnabledProperties(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.Service)>(r14, r20) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r67 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map configCredentialsForService>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r67 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map configCredentialsForService> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r68 = interfaceinvoke r20.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r68 = interfaceinvoke r20.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r68, r21)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r68, r21) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r18.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationCredentials(java.util.Map)>(r21)
