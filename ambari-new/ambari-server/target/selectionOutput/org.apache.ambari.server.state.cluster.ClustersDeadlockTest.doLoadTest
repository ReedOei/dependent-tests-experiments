org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r6 = $r5
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r6 = $r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : i1 = 0
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : i1 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : if i1 >= i0
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : if i1 >= i0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $r9 = interfaceinvoke r1.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : if i1 >= i0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r11 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r11 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : if $z1 == 0
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r4.<java.util.concurrent.CountDownLatch: void await()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r4.<java.util.concurrent.CountDownLatch: void await()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : return
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r13 = (java.lang.Thread) $r12
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r13 = (java.lang.Thread) $r12 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r13.<java.lang.Thread: void join()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r13.<java.lang.Thread: void join()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r3.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r3.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $r9 = interfaceinvoke r1.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r7 = (java.lang.Thread) $r9
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r7 = (java.lang.Thread) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $r10 = interfaceinvoke r2.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : $r10 = interfaceinvoke r2.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r8 = (java.lang.Thread) $r10
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : r8 = (java.lang.Thread) $r10 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r7.<java.lang.Thread: void start()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r7.<java.lang.Thread: void start()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r8.<java.lang.Thread: void start()>()
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : virtualinvoke r8.<java.lang.Thread: void start()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : i1 = i1 + 1
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : goto [?= (branch)]
org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersDeadlockTest.doLoadTest : if i1 >= i0
