org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r14 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r1 = (org.apache.ambari.server.state.Clusters) $r15
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r1 = (org.apache.ambari.server.state.Clusters) $r15 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r16 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r16 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r2 = (org.apache.ambari.server.state.ServiceFactory) $r17
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r2 = (org.apache.ambari.server.state.ServiceFactory) $r17 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r3 = "c1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r3 = "c1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r18 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r18 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r18.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.1.1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r18.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.1.1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r4 = $r18
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r4 = $r18 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r19 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r19 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r19.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.2.0")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r19.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.2.0") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r5 = $r19
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r5 = $r19 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r3, r4)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r3, r4) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r20 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r20 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r21 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r21 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r20.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r4, $r22)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r20.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r4, $r22) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r24 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r24 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r24.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, "2.2.0")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r24.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, "2.2.0") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r26 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r26 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r27 = virtualinvoke $r26.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r27 = virtualinvoke $r26.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r7 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r7 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r4, $r27, "admin", $r7)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r4, $r27, "admin", $r7) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i0 = 0
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i0 = 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i0 >= 4
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i0 >= 4 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i0 >= 4 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r34 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "HDFS")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r34 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "HDFS") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r34)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r34) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r35 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "YARN")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r35 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "YARN") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r35)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r35) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r36 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "ZOOKEEPER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r36 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "ZOOKEEPER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r36)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r36) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r37 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "HIVE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r37 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "HIVE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r37)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r37) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r38 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "OOZIE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r38 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r6, "OOZIE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r38)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r38) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r39 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r39 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r40 = interfaceinvoke r39.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NAMENODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r40 = interfaceinvoke r39.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r40.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r40.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r40.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r40.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r43 = interfaceinvoke r39.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("DATANODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r43 = interfaceinvoke r39.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("DATANODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r43.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r43.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r43.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r43.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r46 = interfaceinvoke r43.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h4")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r46 = interfaceinvoke r43.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h4") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r47 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("ZOOKEEPER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r47 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("ZOOKEEPER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r48 = interfaceinvoke r47.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("ZOOKEEPER_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r48 = interfaceinvoke r47.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r48.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r48.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r48.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r48.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r48.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r48.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r52 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("YARN")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r52 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("YARN") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r53 = interfaceinvoke r52.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("RESOURCEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r53 = interfaceinvoke r52.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r53.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r53.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r55 = interfaceinvoke r52.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NODEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r55 = interfaceinvoke r52.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NODEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r55.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r55.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r55.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r55.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r58 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HIVE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r58 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HIVE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r59 = interfaceinvoke r58.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r59 = interfaceinvoke r58.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r59.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r59.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r61 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("OOZIE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r61 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("OOZIE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r62 = interfaceinvoke r61.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r62 = interfaceinvoke r61.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r62.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r62.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r62.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r62.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r65 = interfaceinvoke r61.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_CLIENT")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r65 = interfaceinvoke r61.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_CLIENT") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r65.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r65.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r65.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r65.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r65.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r65.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r69 = new java.util.HashMap
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r69 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r69.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r69.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r70 = $r69
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r70 = $r69 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r70.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.transport.mode", "binary")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r70.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.transport.mode", "binary") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r70.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.thrift.port", "10001")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r70.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.thrift.port", "10001") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r73 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r73 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r73.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r73.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r11 = $r73
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r11 = $r73 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>(r3)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setType(java.lang.String)>("hive-site")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setType(java.lang.String)>("hive-site") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setVersionTag(java.lang.String)>("version1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setVersionTag(java.lang.String)>("version1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setProperties(java.util.Map)>(r70)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r11.<org.apache.ambari.server.controller.ConfigurationRequest: void setProperties(java.util.Map)>(r70) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r74 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r74 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $l2 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $l2 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r75 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r75 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r76 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r76 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r77 = virtualinvoke $r76.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r77 = virtualinvoke $r76.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r74.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r75, r3, $r77, null)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r74.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r75, r3, $r77, null) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r12 = $r74
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r12 = $r74 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r11)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r12.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r78)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke r12.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r78) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r79 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.controller.AmbariManagementController m_managementController>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r79 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.controller.AmbariManagementController m_managementController> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r80 = new org.apache.ambari.server.state.UpgradeHelperTest$2
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r80 = new org.apache.ambari.server.state.UpgradeHelperTest$2 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r80.<org.apache.ambari.server.state.UpgradeHelperTest$2: void <init>(org.apache.ambari.server.state.UpgradeHelperTest,org.apache.ambari.server.controller.ClusterRequest)>(r0, r12)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r80.<org.apache.ambari.server.state.UpgradeHelperTest$2: void <init>(org.apache.ambari.server.state.UpgradeHelperTest,org.apache.ambari.server.controller.ClusterRequest)>(r0, r12) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r79.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r80, null)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r79.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r80, null) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r82 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r82 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r82.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r82.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r13 = $r82
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r13 = $r82 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r83 = r13.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r83 = r13.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84[2] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84[2] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r85 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r84)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r85 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r84) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r83.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r85)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r83.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r85) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r87 = virtualinvoke $r86.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("ZOOKEEPER", "ZOOKEEPER_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r87 = virtualinvoke $r86.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("ZOOKEEPER", "ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r91 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r91 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r91.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r91.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r92 = $r91
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r92 = $r91 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r93 = r92.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r93 = r92.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r94 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r94 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r94[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r94[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r94[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r94[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r95 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r94)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r95 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r94) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r93.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r95)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r93.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r95) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r92.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r92.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r92.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r92.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r97 = virtualinvoke $r96.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "NAMENODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r97 = virtualinvoke $r96.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "NAMENODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r98 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r97)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r98 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r97) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r99 = interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r92)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r99 = interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r92) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r101 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r101 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r101.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r101.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r102 = $r101
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r102 = $r101 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r103 = r102.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r46)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r46) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r102.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = $r106
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r102.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = $r106 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r107 = r102.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r107 = r102.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r109 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r108)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r109 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r108) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r107.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r109)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r107.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r109) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r111 = virtualinvoke $r110.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "DATANODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r111 = virtualinvoke $r110.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "DATANODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r113 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r102)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r113 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r102) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r113.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r113.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r115 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r115 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r115.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r115.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r116 = $r115
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r116 = $r115 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r117 = r116.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r117 = r116.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r118 = newarray (java.lang.String)[1]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r118 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r118[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r118[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r119 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r118)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r119 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r118) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r117.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r119)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r117.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r119) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r120 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r120 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r121 = virtualinvoke $r120.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "RESOURCEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r121 = virtualinvoke $r120.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r122 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r121)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r122 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r121) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r123 = interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r116)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r123 = interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r116) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r123.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r123.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r125.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r125.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r126 = $r125
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r126 = $r125 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r127 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r127 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r128 = virtualinvoke $r127.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "APP_TIMELINE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r128 = virtualinvoke $r127.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "APP_TIMELINE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r129 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r128)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r129 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r128) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r130 = interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r126)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r130 = interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r126) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r130.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r130.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r132 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r132 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r132.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r132.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r133 = $r132
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r133 = $r132 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r134 = r133.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r134 = r133.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r135 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r135 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r135[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r135[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r135[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r135[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r136 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r135)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r136 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r135) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r134.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r136)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r134.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r136) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r137 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r137 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r138 = virtualinvoke $r137.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "NODEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r138 = virtualinvoke $r137.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "NODEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r139 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r138)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r139 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r138) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r140 = interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r133)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r140 = interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r133) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r142 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r142 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r143 = virtualinvoke $r142.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HIVE", "HIVE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r143 = virtualinvoke $r142.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HIVE", "HIVE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r145 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r133)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r145 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r133) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r145.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r145.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r147 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r147 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r147.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r147.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r148 = $r147
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r148 = $r147 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r149 = r148.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r149 = r148.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r150 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r150 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r150[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r150[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r150[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r150[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r150)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r150) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r149.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r151)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r149.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r151) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r153 = virtualinvoke $r152.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r153 = virtualinvoke $r152.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r155 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r148)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r155 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r148) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r155.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r155.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r157 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r157 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r157.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r157.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r158 = $r157
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r158 = $r157 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r159 = r158.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r159 = r158.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r160 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r160 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r160[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r160[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r160[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r160[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r160[2] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r160[2] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r161 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r160)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r161 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r160) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r159.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r161)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r159.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r161) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r162 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r163 = virtualinvoke $r162.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_CLIENT")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r163 = virtualinvoke $r162.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_CLIENT") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r164 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r163)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r164 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r163) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r165 = interfaceinvoke $r164.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r158)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r165 = interfaceinvoke $r164.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r158) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r167 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r167 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r168 = virtualinvoke $r167.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r168 = virtualinvoke $r167.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r169 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r168)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r169 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r168) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r170 = interfaceinvoke $r169.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r170 = interfaceinvoke $r169.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r170.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r170.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r172 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r172 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r173 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r173 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r172[0] = $r173
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r172[0] = $r173 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r172)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r172) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : return r6
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r103 = r102.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104[2] = "h4"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104[2] = "h4" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r105 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r104)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r105 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r104) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r103.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r105)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r103.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r105) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $r110 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $r110 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $i1 = i0 + 1
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $i1 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r8 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r8 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r31 = new java.util.HashMap
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r31 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r31.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r31.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r10 = $r31
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r10 = $r31 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r9.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r10)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r9.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r10) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r8, r3)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r8, r3) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i0 = i0 + 1
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i0 >= 4
