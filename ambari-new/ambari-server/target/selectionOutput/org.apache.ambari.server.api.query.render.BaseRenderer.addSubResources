org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r3 = (org.apache.ambari.server.api.query.QueryInfo) $r9
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r3 = (org.apache.ambari.server.api.query.QueryInfo) $r9 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r4 = virtualinvoke r3.<org.apache.ambari.server.api.query.QueryInfo: org.apache.ambari.server.api.resources.ResourceDefinition getResource()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r4 = virtualinvoke r3.<org.apache.ambari.server.api.query.QueryInfo: org.apache.ambari.server.api.resources.ResourceDefinition getResource()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r5 = interfaceinvoke r4.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Set getSubResourceDefinitions()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r5 = interfaceinvoke r4.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Set getSubResourceDefinitions()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : if $z0 == 0
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : return
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r7 = (org.apache.ambari.server.api.resources.SubResourceDefinition) $r10
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r7 = (org.apache.ambari.server.api.resources.SubResourceDefinition) $r10 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r11 = new java.util.HashSet
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r11 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : specialinvoke $r11.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : specialinvoke $r11.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r8 = $r11
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : r8 = $r11 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void populateSubResourceDefaults(org.apache.ambari.server.api.resources.SubResourceDefinition,java.util.Set)>(r7, r8)
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void populateSubResourceDefaults(org.apache.ambari.server.api.resources.SubResourceDefinition,java.util.Set)>(r7, r8) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r12 = virtualinvoke r7.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r12 = virtualinvoke r7.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r13 = virtualinvoke $r12.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $r13 = virtualinvoke $r12.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : interfaceinvoke r2.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r8, $r13)
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : interfaceinvoke r2.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r8, $r13) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.addSubResources : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
