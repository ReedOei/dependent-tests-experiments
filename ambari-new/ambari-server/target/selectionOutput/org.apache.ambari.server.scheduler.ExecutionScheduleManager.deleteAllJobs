org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $z0 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean isSchedulerAvailable()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if $z0 != 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r8 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.Batch getBatch()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.Batch getBatch()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if r2 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if r2 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r3 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if r2 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r3 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if r3 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if r3 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if r3 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if $z1 == 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r5 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r9
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r5 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r9 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r10 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Long getId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r10 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r11 = virtualinvoke r5.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r11 = virtualinvoke r5.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r6 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: java.lang.String getJobName(java.lang.Long,java.lang.Long)>($r10, $r11)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r6 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: java.lang.String getJobName(java.lang.Long,java.lang.Long)>($r10, $r11) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r12 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r12 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting Job, jobName = ")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting Job, jobName = ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>($r16)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r17 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : r7 = $r19 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r20 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r20 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to delete job, ")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to delete job, ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r24, r7)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r24, r7) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r25 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r25 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r26 = virtualinvoke r7.<org.quartz.SchedulerException: java.lang.String getMessage()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r26 = virtualinvoke r7.<org.quartz.SchedulerException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : specialinvoke $r25.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r26)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : specialinvoke $r25.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : throw $r25
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r17 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r18 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>(r6, "LinearExecutionJobs")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r17 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r18 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>(r6, "LinearExecutionJobs") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : interfaceinvoke $r17.<org.apache.ambari.server.scheduler.ExecutionScheduler: void deleteJob(org.quartz.JobKey)>($r18)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r18 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>(r6, "LinearExecutionJobs") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : interfaceinvoke $r17.<org.apache.ambari.server.scheduler.ExecutionScheduler: void deleteJob(org.quartz.JobKey)>($r18) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : interfaceinvoke $r17.<org.apache.ambari.server.scheduler.ExecutionScheduler: void deleteJob(org.quartz.JobKey)>($r18) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : $r8 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : specialinvoke $r8.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Scheduler unavailable.")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : specialinvoke $r8.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Scheduler unavailable.") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.deleteAllJobs : throw $r8
