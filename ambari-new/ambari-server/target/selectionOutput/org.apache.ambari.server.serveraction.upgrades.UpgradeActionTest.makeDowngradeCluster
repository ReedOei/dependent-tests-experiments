org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r5 = "h1" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r12 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r12 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r6 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r6 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r7 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r7 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r15 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r8 = $r15
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r8 = $r15 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r8)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r8) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r18 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r18 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke $r18.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke $r18.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r9 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r9 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, "admin", $r9)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, "admin", $r9) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r20 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r20 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, $r20)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, $r20) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r21 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r21 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke $r21.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke $r21.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r23 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r23 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, "admin", $r23)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, "admin", $r23) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r24 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r24 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, $r24)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, $r24) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r25 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r25 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r26 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getCurrentClusterVersion()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r26 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getCurrentClusterVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r27 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r27 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void mapHostVersions(java.util.Set,org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>($r25, $r26, $r27)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void mapHostVersions(java.util.Set,org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>($r25, $r26, $r27) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r28 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r28 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : specialinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : specialinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r10 = $r28
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : r10 = $r28 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r30 = virtualinvoke $r29.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r30 = virtualinvoke $r29.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r30)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r30) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r31 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r31 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r32 = virtualinvoke $r31.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r32 = virtualinvoke $r31.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r32)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r32) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r33 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r33 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r33)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r33) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r34 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : $r34 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke $r34.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r10)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : virtualinvoke $r34.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r10) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeDowngradeCluster : return
