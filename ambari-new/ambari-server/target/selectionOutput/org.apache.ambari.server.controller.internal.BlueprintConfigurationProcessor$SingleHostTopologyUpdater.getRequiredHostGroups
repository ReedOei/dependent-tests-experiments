org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r5 = <org.apache.ambari.server.topology.HostGroup: java.util.regex.Pattern HOSTGROUP_REGEX> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $z0 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>()
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $z0 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if $z0 == 0
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : r7 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r10 = r0.<org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater: java.lang.String component>
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r10 = r0.<org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater: java.lang.String component> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : r11 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.util.Collection getHostGroupsForComponent(java.lang.String)>($r10)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : r11 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.util.Collection getHostGroupsForComponent(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : i0 = interfaceinvoke r11.<java.util.Collection: int size()>()
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : i0 = interfaceinvoke r11.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if i0 == 0
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if i0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r12 = new java.util.HashSet
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if i0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r13 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r13 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r14 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r14 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r15 = r0.<org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater: java.lang.String component>
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r15 = r0.<org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater: java.lang.String component> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : r8 = virtualinvoke $r14.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.topology.Cardinality getCardinality(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : r8 = virtualinvoke $r14.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.topology.Cardinality getCardinality(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $z1 = virtualinvoke r8.<org.apache.ambari.server.topology.Cardinality: boolean isValidCount(int)>(0)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $z1 = virtualinvoke r8.<org.apache.ambari.server.topology.Cardinality: boolean isValidCount(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if $z1 != 0
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r16 = <org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r18 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r18 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : return $r18
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r16 = <org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r17 = r0.<org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater: java.lang.String component>
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r17 = r0.<org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater: java.lang.String component> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("The property \'{}\' is associated with the component \'{}\' which isn\'t mapped to any host group. This may affect configuration topology resolution.", r1, $r17)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("The property \'{}\' is associated with the component \'{}\' which isn\'t mapped to any host group. This may affect configuration topology resolution.", r1, $r17) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r18 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>(r11)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : return $r12
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : r7 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r9 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : $r9 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$SingleHostTopologyUpdater.getRequiredHostGroups : return $r9
