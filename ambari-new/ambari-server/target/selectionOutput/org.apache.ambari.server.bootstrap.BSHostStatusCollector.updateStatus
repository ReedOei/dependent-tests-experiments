org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusCode(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i0 = -1
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i0 = -1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i0 = -1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r4 := @caughtexception
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : r3 = $r4 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : lookupswitch(i0) {     case 2:
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : lookupswitch(i0) {     case 2: >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusAction(java.lang.String)>("Processing could not continue because the file was not found.")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : lookupswitch(i0) {     case 2: >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r5 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String getLog()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r5 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String getLog()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if null == $r5
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if null == $r5 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r6 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String getLog()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if null == $r5 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : return
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r6 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String getLog()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $i1 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("permission denied")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $i1 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("permission denied") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i1
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $i2 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("publickey")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i1 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $i3 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("connect to host")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $i3 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("connect to host") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i3
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i3 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i3 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : return
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Please verify that the hostname \'")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Please verify that the hostname \'") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r10 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String getHostName()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r10 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is correct.")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is correct.") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusAction(java.lang.String)>($r13)
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusAction(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : return
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $i2 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("publickey") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i2
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i2 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusAction(java.lang.String)>("Use correct SSH key")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : if -1 == $i2 >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $i3 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("connect to host")
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusAction(java.lang.String)>("Use correct SSH key") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : goto [?= return]
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : goto [?= return] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : return
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : virtualinvoke r1.<org.apache.ambari.server.bootstrap.BSHostStatus: void setStatusAction(java.lang.String)>("Processing could not continue because the file was not found.") >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : goto [?= return]
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : goto [?= return] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : return
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : goto [?= (branch)]
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : $r4 := @caughtexception
org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.bootstrap.BSHostStatusCollector.updateStatus : lookupswitch(i0) {     case 2:
