org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r5 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r11 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r6 = $r11
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r6 = $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : return r6
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r8 = (org.apache.ambari.server.state.stack.upgrade.Task) $r12
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r8 = (org.apache.ambari.server.state.stack.upgrade.Task) $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r13 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r13 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r14 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type CONFIGURE>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r14 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type CONFIGURE> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z1 = virtualinvoke $r13.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean equals(java.lang.Object)>($r14)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z1 = virtualinvoke $r13.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z1 != 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r15 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r17 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r17 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if null == $r17
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if null == $r17 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r18 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if null == $r17 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r18 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z3 = virtualinvoke $r18.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z3 = virtualinvoke $r18.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z3 != 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r19 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r19 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r20 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r20 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r21 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r21 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r21[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r21[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r19.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r20, r4, $r21)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r19.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r20, r4, $r21) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r19)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r15 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r16 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type MANUAL>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r16 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type MANUAL> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z2 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean equals(java.lang.Object)>($r16)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z2 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r17 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r22 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r22 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r23 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type EXECUTE>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r23 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type EXECUTE> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z5 = virtualinvoke $r22.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean equals(java.lang.Object)>($r23)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z5 = virtualinvoke $r22.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean equals(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z5 == 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r9 = (org.apache.ambari.server.state.stack.upgrade.ExecuteTask) r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r61 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r61 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r62 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r62 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r63 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r63 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r63[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r63[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r61.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r62, r4, $r63)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r61.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r62, r4, $r63) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r61)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r9 = (org.apache.ambari.server.state.stack.upgrade.ExecuteTask) r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r24 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r24 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r25 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType MASTER>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r25 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType MASTER> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r24 != $r25
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r24 != $r25 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r26 = r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r24 != $r25 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r34 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r34 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r35 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType ANY>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r35 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType ANY> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r34 != $r35
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r34 != $r35 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r36 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r34 != $r35 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r47 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r47 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r48 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType FIRST>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r48 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType FIRST> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r47 != $r48
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r47 != $r48 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r49 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r47 != $r48 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r61 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r49 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r49 == null
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r49 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r50 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r49 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r58 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r58 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59[0] = r0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59[0] = r0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59[1] = r1
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59[1] = r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r60 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on the first host sorted alphabetically but could not find host to run on. Skipping this task.", $r59)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r60 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on the first host sorted alphabetically but could not find host to run on. Skipping this task.", $r59) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r58.<org.slf4j.Logger: void error(java.lang.String)>($r60)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r58.<org.slf4j.Logger: void error(java.lang.String)>($r60) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r50 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z9 = virtualinvoke $r50.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z9 = virtualinvoke $r50.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z9 != 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z9 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r51 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z9 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r58 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r51 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r52 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r52 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r51.<java.util.ArrayList: void <init>(java.util.Collection)>($r52)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r51.<java.util.ArrayList: void <init>(java.util.Collection)>($r52) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r10 = $r51
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r10 = $r51 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r53 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r53 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r10, $r53)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r10, $r53) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r54 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r54 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r55 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r55 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r56 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r55)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r56 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r57 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r57 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r57[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r57[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r56, r4, $r57)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r56, r4, $r57) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r54)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r36 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r36 == null
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r36 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r37 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r36 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r44 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r44 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r45 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r45 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r45[0] = r0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r45[0] = r0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r45[1] = r1
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r45[1] = r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r46 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on any host but could not find host to run on. Skipping this task.", $r45)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r46 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on any host but could not find host to run on. Skipping this task.", $r45) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>($r46)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r37 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z7 = virtualinvoke $r37.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z7 = virtualinvoke $r37.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z7 != 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z7 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r38 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z7 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r44 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r38 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r39 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r39 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r40 = virtualinvoke $r39.<java.util.LinkedHashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r40 = virtualinvoke $r39.<java.util.LinkedHashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r41 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r41 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r42 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r41)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r42 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r43 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r43 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r43[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r43[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r38.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r42, r4, $r43)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r38.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r42, r4, $r43) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r38)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r26 = r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r26 == null
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r26 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r27 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r26 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r31 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r31 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r32 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r32 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r32[0] = r0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r32[0] = r0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r32[1] = r1
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r32[1] = r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r33 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on a master but could not find any masters to run on. Skipping this task.", $r32)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r33 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on a master but could not find any masters to run on. Skipping this task.", $r32) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>($r33)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r27 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r28 = r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r28 = r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r29 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r28)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r29 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r30 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r30 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r30[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r30[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r27.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r29, r4, $r30)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r27.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r29, r4, $r30) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r27)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
