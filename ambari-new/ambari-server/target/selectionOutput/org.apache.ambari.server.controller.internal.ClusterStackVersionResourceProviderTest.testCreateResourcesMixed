org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterStackVersion> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r39
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r39 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r4 = (org.apache.ambari.server.state.Clusters) $r40
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r4 = (org.apache.ambari.server.state.Clusters) $r40 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r5 = (org.apache.ambari.server.state.Cluster) $r41
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r5 = (org.apache.ambari.server.state.Cluster) $r41 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r42 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r42 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r42.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r42.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r6 = $r42
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r6 = $r42 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r43 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r43 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r43.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>("HDP", "2.0.1")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r43.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>("HDP", "2.0.1") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r7 = $r43
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r7 = $r43 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r44 = new java.io.File
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r44 = new java.io.File >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r44.<java.io.File: void <init>(java.lang.String)>("src/test/resources/hbase_version_test.xml")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r44.<java.io.File: void <init>(java.lang.String)>("src/test/resources/hbase_version_test.xml") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r8 = $r44
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r8 = $r44 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r45 = new java.io.FileInputStream
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r45 = new java.io.FileInputStream >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r45.<java.io.FileInputStream: void <init>(java.io.File)>(r8)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r45.<java.io.FileInputStream: void <init>(java.io.File)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r9 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream)>($r45)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r9 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r46 = virtualinvoke r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<package-version>2_3_4_0_3396</package-version>", "")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r46 = virtualinvoke r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<package-version>2_3_4_0_3396</package-version>", "") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r47 = new org.apache.ambari.server.orm.entities.StackEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r47 = new org.apache.ambari.server.orm.entities.StackEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r47.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r47.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r10 = $r47
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r10 = $r47 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r10.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("HDP")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r10.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("HDP") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r48 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r48 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r48.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r48.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r11 = $r48
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r11 = $r48 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>(r10)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setId(java.lang.Long)>($r49)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setId(java.lang.Long)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setOperatingSystems(java.lang.String)>("[\n   {\n      \"repositories\":[\n         {\n            \"Repositories/base_url\":\"http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos5/2.x/updates/2.2.0.0\",\n            \"Repositories/repo_name\":\"HDP-UTILS\",\n            \"Repositories/repo_id\":\"HDP-UTILS-1.1.0.20\"\n         },\n         {\n            \"Repositories/base_url\":\"http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos5/2.x/updates/2.2.0.0\",\n            \"Repositories/repo_name\":\"HDP\",\n            \"Repositories/repo_id\":\"HDP-2.2\"\n         }\n      ],\n      \"OperatingSystems/os_type\":\"redhat6\"\n   }\n]")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setOperatingSystems(java.lang.String)>("[\n   {\n      \"repositories\":[\n         {\n            \"Repositories/base_url\":\"http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos5/2.x/updates/2.2.0.0\",\n            \"Repositories/repo_name\":\"HDP-UTILS\",\n            \"Repositories/repo_id\":\"HDP-UTILS-1.1.0.20\"\n         },\n         {\n            \"Repositories/base_url\":\"http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos5/2.x/updates/2.2.0.0\",\n            \"Repositories/repo_name\":\"HDP\",\n            \"Repositories/repo_id\":\"HDP-2.2\"\n         }\n      ],\n      \"OperatingSystems/os_type\":\"redhat6\"\n   }\n]") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersionXml(java.lang.String)>(r46)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersionXml(java.lang.String)>(r46) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersionXsd(java.lang.String)>("version_definition.xsd")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersionXsd(java.lang.String)>("version_definition.xsd") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r50 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r50 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setType(org.apache.ambari.server.state.RepositoryType)>($r50)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setType(org.apache.ambari.server.state.RepositoryType)>($r50) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r51 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r51 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r51.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r51.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r12 = $r51
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r12 = $r51 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : b0 = 10
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : b0 = 10 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : i1 = 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : i1 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : if i1 >= b0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : if i1 >= b0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r52 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : if i1 >= b0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r76 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r76 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r77 = (org.apache.ambari.server.state.ServiceComponentHost) $r76
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r77 = (org.apache.ambari.server.state.ServiceComponentHost) $r76 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r78 = interfaceinvoke r77.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r78 = interfaceinvoke r77.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r80 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r80 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r82 = interfaceinvoke r77.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r82 = interfaceinvoke r77.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r84 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("DATANODE")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r84 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("DATANODE") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r86 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r86 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r87 = (org.apache.ambari.server.state.ServiceComponentHost) $r86
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r87 = (org.apache.ambari.server.state.ServiceComponentHost) $r86 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r88 = interfaceinvoke r87.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r88 = interfaceinvoke r87.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r89 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r88)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r89 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r88) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r90 = interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r90 = interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r92 = interfaceinvoke r87.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r92 = interfaceinvoke r87.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r93 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r92)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r93 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r92) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r94 = interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("NAMENODE")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r94 = interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("NAMENODE") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r94.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r94.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r96 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r96 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHost") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r97 = (org.apache.ambari.server.state.ServiceComponentHost) $r96
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r97 = (org.apache.ambari.server.state.ServiceComponentHost) $r96 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r98 = interfaceinvoke r97.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r98 = interfaceinvoke r97.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r99 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r98)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r99 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r98) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r100 = interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("AMBARI_METRICS")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r100 = interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("AMBARI_METRICS") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r102 = interfaceinvoke r97.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r102 = interfaceinvoke r97.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r103 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r102)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r103 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r102) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r104 = interfaceinvoke $r103.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("METRICS_COLLECTOR")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r104 = interfaceinvoke $r103.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("METRICS_COLLECTOR") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r106 = new org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$11
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r106 = new org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$11 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r106.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$11: void <init>(org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest,org.apache.ambari.server.state.ServiceComponentHost,org.apache.ambari.server.state.ServiceComponentHost,org.apache.ambari.server.state.ServiceComponentHost)>(r0, r77, r87, r97)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r106.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$11: void <init>(org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest,org.apache.ambari.server.state.ServiceComponentHost,org.apache.ambari.server.state.ServiceComponentHost,org.apache.ambari.server.state.ServiceComponentHost)>(r0, r77, r87, r97) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r15 = $r106
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r15 = $r106 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r107 = new org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$12
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r107 = new org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$12 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r107.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$12: void <init>(org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest,org.apache.ambari.server.state.ServiceComponentHost)>(r0, r97)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r107.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$12: void <init>(org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest,org.apache.ambari.server.state.ServiceComponentHost)>(r0, r97) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r16 = $r107
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r16 = $r107 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r108 = new org.apache.ambari.server.state.ServiceOsSpecific$Package
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r108 = new org.apache.ambari.server.state.ServiceOsSpecific$Package >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r108.<org.apache.ambari.server.state.ServiceOsSpecific$Package: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r108.<org.apache.ambari.server.state.ServiceOsSpecific$Package: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r17 = $r108
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r17 = $r108 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r17.<org.apache.ambari.server.state.ServiceOsSpecific$Package: void setName(java.lang.String)>("hdfs")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r17.<org.apache.ambari.server.state.ServiceOsSpecific$Package: void setName(java.lang.String)>("hdfs") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r18 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r17)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r18 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r109 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r109 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r19 = (org.apache.ambari.server.actionmanager.ActionManager) $r109
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r19 = (org.apache.ambari.server.actionmanager.ActionManager) $r109 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r110 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r110 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r20 = (org.apache.ambari.server.controller.RequestStatusResponse) $r110
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r20 = (org.apache.ambari.server.controller.RequestStatusResponse) $r110 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r111 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ResourceProviderFactory")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r111 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ResourceProviderFactory") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r21 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r111
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r21 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r111 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r112 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r112 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r22 = (org.apache.ambari.server.controller.spi.ResourceProvider) $r112
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r22 = (org.apache.ambari.server.controller.spi.ResourceProvider) $r112 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r21)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r113 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r113 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r113.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r113.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r23 = $r113
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r23 = $r113 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r114 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r114 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r115 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/cluster/ClusterImpl")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r115 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/cluster/ClusterImpl") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r116 = (org.apache.ambari.server.state.Cluster) $r115
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r116 = (org.apache.ambari.server.state.Cluster) $r115 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r117 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r117 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r118 = (java.lang.String) $r117
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r118 = (java.lang.String) $r117 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r119 = virtualinvoke $r114.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getEffectiveDesiredTags(org.apache.ambari.server.state.Cluster,java.lang.String)>($r116, $r118)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r119 = virtualinvoke $r114.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getEffectiveDesiredTags(org.apache.ambari.server.state.Cluster,java.lang.String)>($r116, $r118) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r120 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r119)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r120 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r119) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r120.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r23)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r120.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r23) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r122 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r122 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r123 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r122)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r123 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r122) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r124 = interfaceinvoke $r123.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r124 = interfaceinvoke $r123.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r126 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r126 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r127 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r126)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r127 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r126) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r128 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r128 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r129 = interfaceinvoke $r127.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r128)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r129 = interfaceinvoke $r127.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r128) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r131 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r131 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r132 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r131)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r132 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r131) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r133 = interfaceinvoke $r132.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("admin")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r133 = interfaceinvoke $r132.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("admin") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r133.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r133.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r135 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.actionmanager.ActionManager getActionManager()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r135 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.actionmanager.ActionManager getActionManager()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r136 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r135)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r136 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r135) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r137 = interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r19)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r137 = interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r139 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getJdkResourceUrl()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r139 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getJdkResourceUrl()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/JdkResourceUrl")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/JdkResourceUrl") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r143 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r143 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r144 = (org.apache.ambari.server.state.ServiceInfo) $r143
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r144 = (org.apache.ambari.server.state.ServiceInfo) $r143 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r145 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r145 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r146 = (java.util.Map) $r145
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r146 = (java.util.Map) $r145 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r147 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r147 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r148 = (java.lang.String) $r147
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r148 = (java.lang.String) $r147 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r149 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>($r144, $r146, $r148)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r149 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>($r144, $r146, $r148) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r150 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r149)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r150 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r149) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r151 = interfaceinvoke $r150.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r18)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r151 = interfaceinvoke $r150.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r18) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $i3 = b0 - 1
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $i3 = b0 - 1 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $i4 = $i3 * 2
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $i4 = $i3 * 2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>($i4)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>($i4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r153 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r153 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r154 = (java.util.Set) $r153
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r154 = (java.util.Set) $r153 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r155 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r155 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r156 = (java.util.Map) $r155
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r156 = (java.util.Map) $r155 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r157 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r157 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r158 = (org.apache.ambari.server.controller.AmbariManagementController) $r157
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r158 = (org.apache.ambari.server.controller.AmbariManagementController) $r157 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r159 = interfaceinvoke r21.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r154, $r156, $r158)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r159 = interfaceinvoke r21.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r154, $r156, $r158) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r160 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r159)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r160 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r159) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r161 = interfaceinvoke $r160.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r22)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r161 = interfaceinvoke $r160.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r163 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r163 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r164 = (java.lang.String) $r163
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r164 = (java.lang.String) $r163 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r165 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r164)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r165 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r164) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r166 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r165)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r166 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r165) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r166.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r166.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r168 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r168 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r169 = (java.lang.String) $r168
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r169 = (java.lang.String) $r168 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r170 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>($r169)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r170 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>($r169) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r171 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r170)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r171 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r170) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r172 = interfaceinvoke $r171.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r172 = interfaceinvoke $r171.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r172.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r172.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r24 = "Cluster100"
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r24 = "Cluster100" >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l5 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l5 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r174 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r174 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r175 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r174)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r175 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r174) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r176 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r176 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r177 = interfaceinvoke $r175.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r176)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r177 = interfaceinvoke $r175.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r176) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r177.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r177.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r179 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r179 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r180 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r179)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r180 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r179) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r181 = interfaceinvoke r12.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r181 = interfaceinvoke r12.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r182 = interfaceinvoke $r180.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r181)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r182 = interfaceinvoke $r180.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r181) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r184 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r184 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r185 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r184)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r185 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r184) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r186 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r186 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r186.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r186.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r187 = interfaceinvoke $r185.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r186)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r187 = interfaceinvoke $r185.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r186) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r187.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r187.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r189 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r189 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r190 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r189)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r190 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r189) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r190.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r190.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r192 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r192 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r193 = (java.lang.String) $r192
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r193 = (java.lang.String) $r192 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r194 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>($r193)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r194 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>($r193) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r195 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r194)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r195 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r194) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r196 = new org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$13
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r196 = new org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$13 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r196.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$13: void <init>(org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest,java.util.List,java.util.List)>(r0, r16, r15)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r196.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest$13: void <init>(org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest,java.util.List,java.util.List)>(r0, r16, r15) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r197 = interfaceinvoke $r195.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r196)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r197 = interfaceinvoke $r195.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r196) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r197.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r197.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r199 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/agent/ExecutionCommand")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r199 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/agent/ExecutionCommand") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r25 = (org.apache.ambari.server.agent.ExecutionCommand) $r199
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r25 = (org.apache.ambari.server.agent.ExecutionCommand) $r199 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r200 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ExecutionCommandWrapper")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r200 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ExecutionCommandWrapper") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r26 = (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper) $r200
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r26 = (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper) $r200 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r201 = virtualinvoke r26.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r201 = virtualinvoke r26.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r202 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r201)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r202 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r201) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r203 = interfaceinvoke $r202.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r25)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r203 = interfaceinvoke $r202.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r25) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r203.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r203.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r205 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/Stage")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r205 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/Stage") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r27 = (org.apache.ambari.server.actionmanager.Stage) $r205
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r27 = (org.apache.ambari.server.actionmanager.Stage) $r205 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r206 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r206 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r207 = (java.lang.String) $r206
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r207 = (java.lang.String) $r206 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r208 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r208 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r209 = (java.lang.String) $r208
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r209 = (java.lang.String) $r208 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r210 = virtualinvoke r27.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>($r207, $r209)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r210 = virtualinvoke r27.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>($r207, $r209) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r211 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r210)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r211 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r210) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r212 = interfaceinvoke $r211.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r26)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r212 = interfaceinvoke $r211.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r26) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r212.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r212.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r214 = virtualinvoke r25.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getHostLevelParams()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r214 = virtualinvoke r25.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getHostLevelParams()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r215 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r214)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r215 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r214) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r216 = interfaceinvoke $r215.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r216 = interfaceinvoke $r215.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r216.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r216.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r218 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r218 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r218.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r218.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r28 = $r218
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r28 = $r218 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r219 = virtualinvoke r27.<org.apache.ambari.server.actionmanager.Stage: java.util.Map getSuccessFactors()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r219 = virtualinvoke r27.<org.apache.ambari.server.actionmanager.Stage: java.util.Map getSuccessFactors()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r220 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r219)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r220 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r219) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r221 = interfaceinvoke $r220.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r28)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r221 = interfaceinvoke $r220.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r28) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r221.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r221.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r223 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r223 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l6 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l6 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r224 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r224 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r225 = (java.lang.String) $r224
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r225 = (java.lang.String) $r224 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r226 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r226 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r227 = (java.lang.String) $r226
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r227 = (java.lang.String) $r226 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l7 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l7 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r228 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r228 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r229 = (java.lang.String) $r228
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r229 = (java.lang.String) $r228 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r230 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r230 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r231 = (java.lang.String) $r230
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r231 = (java.lang.String) $r230 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r232 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r232 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r233 = (java.lang.String) $r232
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r233 = (java.lang.String) $r232 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r234 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r234 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r235 = (java.lang.String) $r234
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r235 = (java.lang.String) $r234 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r236 = interfaceinvoke $r223.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($l6, $r225, $r227, $l7, $r229, $r231, $r233, $r235)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r236 = interfaceinvoke $r223.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($l6, $r225, $r227, $l7, $r229, $r231, $r233, $r235) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r237 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r236)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r237 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r236) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r238 = interfaceinvoke $r237.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r27)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r238 = interfaceinvoke $r237.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r27) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $i8 = b0 / 2
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $i8 = b0 / 2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $d0 = (double) $i8
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $d0 = (double) $i8 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $i9 = (int) $d1
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $i9 = (int) $d1 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r238.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>($i9)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r238.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>($i9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r240 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAOMock>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r240 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAOMock> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r241 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/StackId")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r241 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/StackId") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r242 = (org.apache.ambari.server.state.StackId) $r241
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r242 = (org.apache.ambari.server.state.StackId) $r241 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r243 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r243 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r244 = (java.lang.String) $r243
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r244 = (java.lang.String) $r243 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r245 = virtualinvoke $r240.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r242, $r244)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r245 = virtualinvoke $r240.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r242, $r244) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r246 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r245)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r246 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r245) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r246.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r246.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l10 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l10 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r248 = virtualinvoke r19.<org.apache.ambari.server.actionmanager.ActionManager: java.util.List getRequestTasks(long)>($l10)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r248 = virtualinvoke r19.<org.apache.ambari.server.actionmanager.ActionManager: java.util.List getRequestTasks(long)>($l10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r249 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r248)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r249 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r248) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r250 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r250 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r251 = interfaceinvoke $r249.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r250)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r251 = interfaceinvoke $r249.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r250) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r251.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r251.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r253 = new org.apache.ambari.server.orm.entities.ClusterEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r253 = new org.apache.ambari.server.orm.entities.ClusterEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r253.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r253.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r29 = $r253
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r29 = $r253 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r254 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r254 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r29.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterId(java.lang.Long)>($r254)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r29.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterId(java.lang.Long)>($r254) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r29.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>(r24)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r29.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>(r24) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r255 = new org.apache.ambari.server.orm.entities.ClusterVersionEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r255 = new org.apache.ambari.server.orm.entities.ClusterVersionEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r256 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r256 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r255.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void <init>(org.apache.ambari.server.orm.entities.ClusterEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState,long,java.lang.String)>(r29, r11, $r256, 0L, "")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r255.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void <init>(org.apache.ambari.server.orm.entities.ClusterEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState,long,java.lang.String)>(r29, r11, $r256, 0L, "") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r30 = $r255
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r30 = $r255 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r257 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r257 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r258 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r258 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r259 = (java.lang.String) $r258
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r259 = (java.lang.String) $r258 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r260 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/StackId")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r260 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/StackId") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r261 = (org.apache.ambari.server.state.StackId) $r260
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r261 = (org.apache.ambari.server.state.StackId) $r260 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r262 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r262 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r263 = (java.lang.String) $r262
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r263 = (java.lang.String) $r262 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r264 = virtualinvoke $r257.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>($r259, $r261, $r263)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r264 = virtualinvoke $r257.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>($r259, $r261, $r263) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r265 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r264)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r265 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r264) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r265.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r30)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r265.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r30) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r267 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r267 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r268 = interfaceinvoke $r267.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/topology/TopologyManager")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r268 = interfaceinvoke $r267.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/topology/TopologyManager") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r31 = (org.apache.ambari.server.topology.TopologyManager) $r268
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r31 = (org.apache.ambari.server.topology.TopologyManager) $r268 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.apache.ambari.server.utils.StageUtils: void setTopologyManager(org.apache.ambari.server.topology.TopologyManager)>(r31)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.apache.ambari.server.utils.StageUtils: void setTopologyManager(org.apache.ambari.server.topology.TopologyManager)>(r31) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r269 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r269 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r270 = interfaceinvoke $r269.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r270 = interfaceinvoke $r269.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r271 = (org.apache.ambari.server.configuration.Configuration) $r270
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r271 = (org.apache.ambari.server.configuration.Configuration) $r270 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.apache.ambari.server.utils.StageUtils: void setConfiguration(org.apache.ambari.server.configuration.Configuration)>($r271)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.apache.ambari.server.utils.StageUtils: void setConfiguration(org.apache.ambari.server.configuration.Configuration)>($r271) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r272 = new org.apache.ambari.server.orm.entities.ClusterVersionEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r272 = new org.apache.ambari.server.orm.entities.ClusterVersionEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r272.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r272.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r32 = $r272
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r32 = $r272 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r273 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r273 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r273.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r273.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r33 = $r273
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r33 = $r273 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r33.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>(r10)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r33.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r33.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersion(java.lang.String)>("2.2.1.0-1000")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r33.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setVersion(java.lang.String)>("2.2.1.0-1000") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r32.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r33)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : virtualinvoke r32.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r33) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r274 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r274 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r275 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r275 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r276 = (java.lang.String) $r275
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r276 = (java.lang.String) $r275 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r277 = virtualinvoke $r274.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: java.util.List findByCluster(java.lang.String)>($r276)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r277 = virtualinvoke $r274.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: java.util.List findByCluster(java.lang.String)>($r276) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r278 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r277)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r278 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r277) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r279 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r32)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r279 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r32) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r280 = interfaceinvoke $r278.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r279)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r280 = interfaceinvoke $r278.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r279) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r280.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r280.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282 = newarray (java.lang.Object)[17]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282 = newarray (java.lang.Object)[17] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[0] = r3
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[0] = r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[1] = r20
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[1] = r20 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[2] = r4
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[2] = r4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[3] = r21
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[3] = r21 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[4] = r22
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[4] = r22 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[5] = r5
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[5] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r283 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAOMock>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r283 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAOMock> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[6] = $r283
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[6] = $r283 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r284 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r284 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[7] = $r284
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[7] = $r284 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[8] = r77
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[8] = r77 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[9] = r87
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[9] = r87 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[10] = r97
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[10] = r97 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[11] = r19
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[11] = r19 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[12] = r25
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[12] = r25 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[13] = r26
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[13] = r26 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[14] = r27
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[14] = r27 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r285 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r285 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[15] = $r285
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[15] = $r285 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r286 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r286 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[16] = $r286
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r282[16] = $r286 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r282)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r282) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r287 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r287 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r288 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r288 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r34 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r287, $r288, r3)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r34 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r287, $r288, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r289 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r289 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r289.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r34)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r289.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r34) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r290 = new java.util.LinkedHashSet
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r290 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r290.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r290.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r35 = $r290
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r35 = $r290 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r291 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r291 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r291.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r291.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r36 = $r291
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r36 = $r291 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r292 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r292 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r292, "Cluster100")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r292, "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r294 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r294 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r294, "2.2.0.1-885")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r294, "2.2.0.1-885") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r296 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_STACK_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r296 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_STACK_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r296, "HDP")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r296, "HDP") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r298 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r298 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r298, "2.1.1")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r298, "2.1.1") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r35.<java.util.Set: boolean add(java.lang.Object)>(r36)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r35.<java.util.Set: boolean add(java.lang.Object)>(r36) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r37 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r35, null)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r37 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r35, null) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r300 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r300 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r300.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r300.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r34.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r37)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r300.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r302 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r38 = $r302 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r34.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r37) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting the create to fail due to an already installed version")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r34.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r37) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r302 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting the create to fail due to an already installed version") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : goto [?= return]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting the create to fail due to an already installed version") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r302 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r52 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("host")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("host") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r13 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r13 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.String,java.lang.Class)>(r13, class "org/apache/ambari/server/state/Host")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.String,java.lang.Class)>(r13, class "org/apache/ambari/server/state/Host") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r14 = (org.apache.ambari.server.state.Host) $r55
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : r14 = (org.apache.ambari.server.state.Host) $r55 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r56 = interfaceinvoke r14.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r56 = interfaceinvoke r14.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r56)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r58 = interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r58 = interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r60 = interfaceinvoke r14.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r60 = interfaceinvoke r14.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r60)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r62 = interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r62 = interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l2 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $l2 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r64 = interfaceinvoke r14.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l2)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r64 = interfaceinvoke r14.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r65 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r64)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r65 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r66 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r66 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r67 = interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r67 = interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r69 = interfaceinvoke r14.<org.apache.ambari.server.state.Host: java.util.List getAllHostVersions()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r69 = interfaceinvoke r14.<org.apache.ambari.server.state.Host: java.util.List getAllHostVersions()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r70 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r69)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r70 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r71 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r71 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r72 = interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r71)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r72 = interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r71) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r74 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r74 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r74[0] = r14
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : $r74[0] = r14 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r74)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r74) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r14)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r14) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : i1 = i1 + 1
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : goto [?= (branch)]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesMixed : if i1 >= b0
