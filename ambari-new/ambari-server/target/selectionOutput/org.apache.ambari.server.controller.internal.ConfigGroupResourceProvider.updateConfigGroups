org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z0 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r14 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r15 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r15 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r2 = interfaceinvoke $r15.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r2 = interfaceinvoke $r15.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z1 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : return
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r4 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r16
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r4 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r17 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r4 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r18 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r6 = $r18 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r19 = new org.apache.ambari.server.ParentObjectNotFoundException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r19 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r19.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to add a config group to a cluster which doesn\'t exist", r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r19.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to add a config group to a cluster which doesn\'t exist", r6) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : throw $r19
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r17 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r17)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r17 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r18 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= $r20 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r18 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= $r20 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r20 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r20 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $r20 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $r20 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r21 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $r20 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r4)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r22 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r22 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r23 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r23 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r24 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r24 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r25 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r24
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r25 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r25 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r25 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r26 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r25 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r35 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r35 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36[0] = $r38
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36[0] = $r38 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r39 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r39 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36[1] = $r39
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36[1] = $r39 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r40 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r40 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36[2] = $r40
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36[2] = $r40 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36[3] = $r41
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r36[3] = $r41 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("User {} is updating configuration group {} for tag {} in cluster {}", $r36)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("User {} is updating configuration group {} for tag {} in cluster {}", $r36) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r7 = interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r7 = interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r42 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r42 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r43 = interfaceinvoke $r42.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r43 = interfaceinvoke $r42.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r8 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r43)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r8 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z2 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r8)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r48 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r48 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r49 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r49 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r50 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r50 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z5 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r48, $r49, $r50)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z5 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r48, $r49, $r50) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z5 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r51 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r8 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r8 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r63 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r63 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r63.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r63.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r9 = $r63
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r9 = $r63 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r64 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r64 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $r64 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $r64 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r65 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $r64 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r5, r9, r4)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r5, r9, r4) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setHosts(java.util.Map)>(r9)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setHosts(java.util.Map)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r73 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r73 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r74 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r74 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyConfigs(java.util.Map,java.lang.String)>($r73, $r74)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyConfigs(java.util.Map,java.lang.String)>($r73, $r74) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r75 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r75 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setConfigurations(java.util.Map)>($r75)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setConfigurations(java.util.Map)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r76 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r76 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setName(java.lang.String)>($r76)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setName(java.lang.String)>($r76) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r77 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getDescription()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r77 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setDescription(java.lang.String)>($r77)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setDescription(java.lang.String)>($r77) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r78 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r78 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setTag(java.lang.String)>($r78)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setTag(java.lang.String)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r79 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r83 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r83 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r84 = interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r84 = interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke $r83.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Could not determine service name for config group {}, service config version not created", $r84)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke $r83.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Could not determine service name for config group {}, service config version not created", $r84) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r79 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r80 = interfaceinvoke $r79.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r80 = interfaceinvoke $r79.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r81 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getServiceConfigVersionNote()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r81 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getServiceConfigVersionNote()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse createServiceConfigVersion(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.configgroup.ConfigGroup)>(r7, $r80, $r81, r25)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse createServiceConfigVersion(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.configgroup.ConfigGroup)>(r7, $r80, $r81, r25) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= (branch)]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r65 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z7 = interfaceinvoke $r65.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z7 = interfaceinvoke $r65.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z7 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r66 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r5, r9, r4)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r66 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r10 = interfaceinvoke $r66.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r10 = interfaceinvoke $r66.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z8 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z8 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z8 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r67 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r5, r9, r4)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r67 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r11 = (java.lang.String) $r67
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r11 = (java.lang.String) $r67 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r12 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r11)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r12 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r68 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r68 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r69 = interfaceinvoke r12.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r69 = interfaceinvoke r12.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $l0 = virtualinvoke $r69.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $l0 = virtualinvoke $r69.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r13 = virtualinvoke $r68.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findById(long)>($l0)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r13 = virtualinvoke $r68.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findById(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r13 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r13 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r70 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r13 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r71 = virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r71 = virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r71, r12)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r71, r12) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= $z8 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : goto [?= $z8 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z8 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r70 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r70.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r11)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r70.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : throw $r70
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setServiceName(java.lang.String)>(r8)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r63 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setServiceName(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r7 = r8
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : r7 = r8 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r63 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r7, r8)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r7, r8) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z6 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r52 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r52 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r53 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r53 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config group ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config group ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r55 = interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r55 = interfaceinvoke r25.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is mapped to service ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is mapped to service ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("but request contain configs from service ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("but request contain configs from service ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r52.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r62)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r52.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : throw $r52
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r51 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r51.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update config groups")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r51.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update config groups") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : throw $r51
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z3 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r44 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r48 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r44 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r45 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r45 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r46 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r46 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r44, $r45, $r46)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r44, $r45, $r46) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z4 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r47 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : if r7 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r47 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r47.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update config groups")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r47.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update config groups") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : throw $r47
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r26 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r27 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config group not found, clusterName = ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config group not found, clusterName = ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r29 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r29 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", groupId = ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", groupId = ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r32 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r32 = virtualinvoke r4.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r26.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r34)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r26.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : throw $r26
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r21 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r21.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Config group Id is a required parameter.")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : specialinvoke $r21.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Config group Id is a required parameter.") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : throw $r21
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : $r14 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.updateConfigGroups : return
