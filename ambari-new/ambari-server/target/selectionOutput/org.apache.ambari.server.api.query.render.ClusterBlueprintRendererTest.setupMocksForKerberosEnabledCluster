org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/topology/AmbariContext") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r1 = (org.apache.ambari.server.topology.AmbariContext) $r11
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r1 = (org.apache.ambari.server.topology.AmbariContext) $r11 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r12 = virtualinvoke r1.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r12 = virtualinvoke r1.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("clusterName")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("clusterName") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void mockStatic(java.lang.Class)>(class "org/apache/ambari/server/topology/AmbariContext")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void mockStatic(java.lang.Class)>(class "org/apache/ambari/server/topology/AmbariContext") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r16 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r16 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r18 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r18 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r19 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r19 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r2 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r2 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r21[0] = $r2
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r21[0] = $r2 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.easymock.EasyMock: void reset(java.lang.Object[])>($r21)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.easymock.EasyMock: void reset(java.lang.Object[])>($r21) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r22 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r22 = new org.apache.ambari.server.topology.HostGroupInfo >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r22.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>("host_group_1")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r22.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>("host_group_1") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r3 = $r22
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r3 = $r22 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>("host1")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>("host1") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r23 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r23 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r23)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r23) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r24 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r24 = new org.apache.ambari.server.topology.HostGroupInfo >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r24.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>("host_group_2")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r24.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>("host_group_2") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r4 = $r24
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r4 = $r24 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r25 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r25 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r25.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r25.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r5 = $r25
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r5 = $r25 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26 = newarray (java.lang.String)[2]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26[0] = "host2"
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26[0] = "host2" >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26[1] = "host3"
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26[1] = "host3" >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r27 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r26)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r27 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r26) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: void addHosts(java.util.Collection)>($r27)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: void addHosts(java.util.Collection)>($r27) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r28 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r28 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r28)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r28) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_1", r3)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_1", r3) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_2", r4)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_2", r4) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $z0 = interfaceinvoke $r31.<org.apache.ambari.server.topology.ClusterTopology: boolean isNameNodeHAEnabled()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $z0 = interfaceinvoke $r31.<org.apache.ambari.server.topology.ClusterTopology: boolean isNameNodeHAEnabled()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r33 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r32)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r33 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r35 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r34)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r35 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r37 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r37 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r40 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration clusterConfig>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r40 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration clusterConfig> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r41 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r40)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r41 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r43 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r43 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r44 = interfaceinvoke $r43.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r44 = interfaceinvoke $r43.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r46 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r46 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r47 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r46)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r47 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r49 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r49 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r50 = interfaceinvoke $r49.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r50 = interfaceinvoke $r49.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r54 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r54 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r55 = interfaceinvoke $r54.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r55 = interfaceinvoke $r54.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r57 = new java.lang.Long
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r57 = new java.lang.Long >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r57.<java.lang.Long: void <init>(long)>(1L)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r57.<java.lang.Long: void <init>(long)>(1L) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r58 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r57)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r58 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r60 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r60 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r61 = interfaceinvoke $r60.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r61 = interfaceinvoke $r60.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r62 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r61)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r62 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r63 = interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r63 = interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r65 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r65 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $z1 = interfaceinvoke $r65.<org.apache.ambari.server.topology.ClusterTopology: boolean isClusterKerberosEnabled()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $z1 = interfaceinvoke $r65.<org.apache.ambari.server.topology.ClusterTopology: boolean isClusterKerberosEnabled()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r66 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r66 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r68 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r68 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r69 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r68)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r69 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r68) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r69.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r69.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ResourceProvider")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ResourceProvider") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r6 = (org.apache.ambari.server.controller.spi.ResourceProvider) $r71
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r6 = (org.apache.ambari.server.controller.spi.ResourceProvider) $r71 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r72 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r72 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r73 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r73 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r74 = interfaceinvoke $r72.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r73)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r74 = interfaceinvoke $r72.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r73) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r76 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r76 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r78 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r78 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r7 = (org.apache.ambari.server.controller.spi.Resource) $r78
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r7 = (org.apache.ambari.server.controller.spi.Resource) $r78 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r8 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r8 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r79 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Request")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r79 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Request") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r80 = (org.apache.ambari.server.controller.spi.Request) $r79
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r80 = (org.apache.ambari.server.controller.spi.Request) $r79 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r81 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Predicate")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r81 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Predicate") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r82 = (org.apache.ambari.server.controller.spi.Predicate) $r81
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r82 = (org.apache.ambari.server.controller.spi.Predicate) $r81 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r83 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.ResourceProvider: java.util.Set getResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r80, $r82)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r83 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.ResourceProvider: java.util.Set getResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r80, $r82) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r87 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r87 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r87.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r87.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r9 = $r87
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r9 = $r87 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r88 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r88 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data", $r88)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data", $r88) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r90 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r90 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r90.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r90.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r10 = $r90
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r10 = $r90 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("testProperty", "testValue")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("testProperty", "testValue") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data/properties", r10)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data/properties", r10) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r93 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r93 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r94 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r93)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r94 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r93) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r95 = interfaceinvoke $r94.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r95 = interfaceinvoke $r94.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r97 = newarray (java.lang.Object)[1]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r97 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r97[0] = class "org/apache/ambari/server/topology/AmbariContext"
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r97[0] = class "org/apache/ambari/server/topology/AmbariContext" >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r97)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r97) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98 = newarray (java.lang.Object)[5]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[0] = r1
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[0] = r1 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r99 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r99 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[1] = $r99
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[1] = $r99 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r100 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r100 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[2] = $r100
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[2] = $r100 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[3] = r7
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[3] = r7 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[4] = r6
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98[4] = r6 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r98)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r98) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : return
