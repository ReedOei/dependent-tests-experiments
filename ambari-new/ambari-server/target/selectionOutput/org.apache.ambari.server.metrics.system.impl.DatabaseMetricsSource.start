org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : $r1 = <org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting Database Metrics source...")
org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting Database Metrics source...") >>>>>>>> org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : $r3 = new com.google.common.util.concurrent.ThreadFactoryBuilder
org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : $r3 = new com.google.common.util.concurrent.ThreadFactoryBuilder >>>>>>>> org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : specialinvoke $r3.<com.google.common.util.concurrent.ThreadFactoryBuilder: void <init>()>()
org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : specialinvoke $r3.<com.google.common.util.concurrent.ThreadFactoryBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : $r4 = virtualinvoke $r3.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)>("DatabaseMetricsSource-%d")
org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : $r4 = virtualinvoke $r3.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)>("DatabaseMetricsSource-%d") >>>>>>>> org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : r2 = virtualinvoke $r4.<com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()>()
org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : r2 = virtualinvoke $r4.<com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : $r5 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>(r2)
org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : $r5 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>(r2) >>>>>>>> org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : r0.<org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource: java.util.concurrent.ExecutorService executor> = $r5
org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : r0.<org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource: java.util.concurrent.ExecutorService executor> = $r5 >>>>>>>> org.apache.ambari.server.metrics.system.impl.DatabaseMetricsSource.start : return
