org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("skipDatabaseConsistencyCheck") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $r4 != null
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $r4 != null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r5 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $r4 != null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : return
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r5 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check started")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check started") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/ambari/server/checks/DatabaseConsistencyCheckHelper")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/ambari/server/checks/DatabaseConsistencyCheckHelper") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("fixDatabaseConsistency")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/ambari/server/checks/DatabaseConsistencyCheckHelper") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r10 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : r3 = $r26 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z3 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean ifErrorsFound()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : r3 = $r26 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z3 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean ifErrorsFound()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z3 == 0
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r27 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z4 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean ifWarningsFound()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z4 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean ifWarningsFound()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z4 == 0
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r28 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r29 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r29 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: successful")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: successful") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : throw r3
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r28 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: warning")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: warning") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= throw r3]
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= throw r3] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : throw r3
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r27 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: failed")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: failed") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= throw r3]
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= throw r3] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : throw r3
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : r2 = $r10 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r11 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : r2 = $r10 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r11 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: failed")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r11 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: failed") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z2 = r2 instanceof org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: failed") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z2 = r2 instanceof org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z2 == 0
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z2 = r2 instanceof org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : interfaceinvoke r1.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during database check:", r2)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : interfaceinvoke r1.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", r2)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : interfaceinvoke r1.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", r2) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r19 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : interfaceinvoke r1.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", r2) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r19 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r19 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error, database check failed: ")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error, database check failed: ") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r22 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error, database check failed: ") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r22 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r22 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r25 = new java.lang.Exception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r25 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r25.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", r2)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r25 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r25.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", r2) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : throw $r25
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r25.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", r2) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : throw $r25 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : interfaceinvoke r1.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during database check:", r2) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r12 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : interfaceinvoke r1.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during database check:", r2) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r12 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r12 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred during database check: ")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred during database check: ") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r15 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred during database check: ") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r15 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r15 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r18 = (org.apache.ambari.server.AmbariException) r2
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r18 = (org.apache.ambari.server.AmbariException) r2 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : throw $r18
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r18 = (org.apache.ambari.server.AmbariException) r2 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : throw $r18 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("fixDatabaseConsistency") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $r6 == null
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("fixDatabaseConsistency") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r10 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $r6 == null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixDatabaseConsistency()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $r6 == null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void runAllDBChecks()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $r6 == null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r10 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void runAllDBChecks()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z0 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean ifErrorsFound()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void runAllDBChecks()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r10 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z0 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean ifErrorsFound()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z0 == 0
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r7 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z1 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean ifWarningsFound()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $z1 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean ifWarningsFound()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z1 == 0
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r8 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r9 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r9 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: successful")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: successful") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= return]
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : return
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r8 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: warning")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: warning") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= return]
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : return
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r7 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: failed")
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Database consistency check: failed") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= return]
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : return
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixDatabaseConsistency()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void runAllDBChecks()>()
org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixDatabaseConsistency()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.runDatabaseConsistencyCheck : $r10 := @caughtexception
