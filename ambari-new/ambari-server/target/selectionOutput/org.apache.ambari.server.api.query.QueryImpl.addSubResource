org.apache.ambari.server.api.query.QueryImpl.addSubResource : $r3 = new org.apache.ambari.server.api.query.render.DefaultRenderer >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : specialinvoke $r3.<org.apache.ambari.server.api.query.render.DefaultRenderer: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.addSubResource : specialinvoke $r3.<org.apache.ambari.server.api.query.render.DefaultRenderer: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : virtualinvoke r2.<org.apache.ambari.server.api.query.QueryImpl: void setRenderer(org.apache.ambari.server.api.query.render.Renderer)>($r3)
org.apache.ambari.server.api.query.QueryImpl.addSubResource : virtualinvoke r2.<org.apache.ambari.server.api.query.QueryImpl: void setRenderer(org.apache.ambari.server.api.query.render.Renderer)>($r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : $r4 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources>
org.apache.ambari.server.api.query.QueryImpl.addSubResource : $r4 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.api.query.QueryImpl.addSubResource : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : return
