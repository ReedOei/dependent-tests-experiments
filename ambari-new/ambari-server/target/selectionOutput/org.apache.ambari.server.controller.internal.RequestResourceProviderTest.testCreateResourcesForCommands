org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Request> >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r3 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r3 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r4 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r4 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r18 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r18 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r5 = (org.apache.ambari.server.state.Cluster) $r18
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r5 = (org.apache.ambari.server.state.Cluster) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r22 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r22 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r24 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r24 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r27 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r27 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r29 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r29 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r6 = (org.apache.ambari.server.state.Clusters) $r29
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r6 = (org.apache.ambari.server.state.Clusters) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r30 = interfaceinvoke r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r30 = interfaceinvoke r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r34 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r34 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r34
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r35 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r35 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r8 = (org.apache.ambari.server.controller.RequestStatusResponse) $r35
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r8 = (org.apache.ambari.server.controller.RequestStatusResponse) $r35 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r36 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r36 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r38 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r38 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r41 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r40
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r41 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r40 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r43 = (java.util.Map) $r42
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r43 = (java.util.Map) $r42 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r44 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAction(org.apache.ambari.server.controller.ExecuteActionRequest,java.util.Map)>($r41, $r43)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r44 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAction(org.apache.ambari.server.controller.ExecuteActionRequest,java.util.Map)>($r41, $r43) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r48 = virtualinvoke r8.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r48 = virtualinvoke r8.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Message")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Message") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52[0] = r5
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52[0] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52[1] = r6
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52[1] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52[2] = r7
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52[2] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52[3] = r8
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r52[3] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r52)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r53 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r53 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r53.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke $r53.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r54 = new java.util.LinkedHashSet
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r54 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r54.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r54.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r9 = $r54
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r9 = $r54 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r55 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r55 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r55.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r55.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r10 = $r55
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r10 = $r55 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/cluster_name", "c1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/cluster_name", "c1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r57 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r57 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r57.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r57.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r11 = $r57
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r11 = $r57 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r58 = new java.util.HashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r58 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r58.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r58.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r12 = $r58
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r12 = $r58 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_name", "HDFS")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_name", "HDFS") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/resource_filters", r11)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/resource_filters", r11) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r61 = new java.util.HashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r61 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r61.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : specialinvoke $r61.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r13 = $r61
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r13 = $r61 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r63 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r63 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r64 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r64 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r15 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r63, $r64, r7)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r15 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r63, $r64, r7) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r15.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r14)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : interfaceinvoke r15.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r14) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r66 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r66 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r16 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r66
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r16 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r66 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $z2 = virtualinvoke r3.<org.easymock.Capture: boolean hasCaptured()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $z2 = virtualinvoke r3.<org.easymock.Capture: boolean hasCaptured()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r67 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.Boolean isCommand()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r67 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.Boolean isCommand()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $z3 = virtualinvoke $r67.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $z3 = virtualinvoke $r67.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r68 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getActionName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r68 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getActionName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r68)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r68) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r69 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getCommandName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r69 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getCommandName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS_SERVICE_CHECK", $r69)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS_SERVICE_CHECK", $r69) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r70 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r70 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r70)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r71 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r71 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $i1 = interfaceinvoke $r71.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $i1 = interfaceinvoke $r71.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $l2 = (long) $i1
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r72 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r72 = virtualinvoke r16.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r73 = interfaceinvoke $r72.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r73 = interfaceinvoke $r72.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r17 = (org.apache.ambari.server.controller.internal.RequestResourceFilter) $r73
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : r17 = (org.apache.ambari.server.controller.internal.RequestResourceFilter) $r73 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r74 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r74 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS", $r74)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS", $r74) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r75 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r75 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r75)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r75) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r76 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r76 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r76)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r76) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r77 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r77 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $i3 = interfaceinvoke $r77.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $i3 = interfaceinvoke $r77.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $l4 = (long) $i3
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $l4 = (long) $i3 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r78 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r78 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r79 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r78
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r79 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r78 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r80 = virtualinvoke $r79.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $r80 = virtualinvoke $r79.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $i5 = interfaceinvoke $r80.<java.util.Map: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $i5 = interfaceinvoke $r80.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $l6 = (long) $i5
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : $l6 = (long) $i5 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l6)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommands : return
