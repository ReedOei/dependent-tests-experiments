org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r3 = virtualinvoke r1.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getAllGroups()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r11 = new java.util.HashMap
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r11 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r11.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r11.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r4 = $r11
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r4 = $r11 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z0 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r16 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r16 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z2 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r49 = new java.util.HashMap
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r49 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r49.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r49.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r50 = $r49
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r50 = $r49 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r51 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r51 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r52 = interfaceinvoke $r51.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r52 = interfaceinvoke $r51.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z10 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z10 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z10 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z10 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r53 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z10 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void orderGroups(java.util.List,java.util.Map)>(r3, r50)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void orderGroups(java.util.List,java.util.Map)>(r3, r50) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : return
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r53 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r54 = (java.lang.String) $r53
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r54 = (java.lang.String) $r53 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r55 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r54)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r55 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r54) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r56 = (java.util.List) $r55
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r56 = (java.util.List) $r55 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r57 = interfaceinvoke $r56.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r57 = interfaceinvoke $r56.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r58 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r58 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r59 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r58
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r59 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r58 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z11 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z11 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z11 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z11 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : virtualinvoke r59.<org.apache.ambari.server.state.stack.upgrade.Grouping: void merge(java.util.Iterator)>(r57)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z11 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r54, r59)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r54, r59) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z10 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z10 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z10 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : virtualinvoke r59.<org.apache.ambari.server.state.stack.upgrade.Grouping: void merge(java.util.Iterator)>(r57) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r54, r59)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r18 = (org.apache.ambari.server.state.stack.UpgradePack) $r17
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r18 = (org.apache.ambari.server.state.stack.UpgradePack) $r17 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r19 = virtualinvoke r18.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getAllGroups()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r19 = virtualinvoke r18.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getAllGroups()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z3 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r8 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r21
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r8 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r21 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z4 = virtualinvoke r18.<org.apache.ambari.server.state.stack.UpgradePack: boolean isAllTarget()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z4 = virtualinvoke r18.<org.apache.ambari.server.state.stack.UpgradePack: boolean isAllTarget()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z4 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r22 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r28 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r28 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z6 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r28)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z6 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z6 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r29 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r45 = new java.util.ArrayList
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r45 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r45.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r45.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r46 = $r45
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r46 = $r45 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r46.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r46.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r47 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r47 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, r46)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, r46) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r29 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r30 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r30 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r9 = (java.util.List) $r30
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r9 = (java.util.List) $r30 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r31 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r31 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r10 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r31
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r10 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r31 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r32 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r32 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r33 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r33 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z7 = virtualinvoke $r32.<java.lang.Object: boolean equals(java.lang.Object)>($r33)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z7 = virtualinvoke $r32.<java.lang.Object: boolean equals(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z7 != 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z7 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r34 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z7 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r43 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r43 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r43 != null
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r43 != null >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r44 = r10.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r43 != null >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r44 = r10.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r44 == null
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r44 == null >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r9.<java.util.List: void add(int,java.lang.Object)>(0, r8)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r44 == null >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r9.<java.util.List: void add(int,java.lang.Object)>(0, r8) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r34 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r35 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r35 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected class: ")
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected class: ") >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r37 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r37 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ")
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ") >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r40 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r40 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r34.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r42)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r34.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : throw $r34
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r22 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r23 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r23 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z5 = interfaceinvoke $r22.<java.util.Set: boolean contains(java.lang.Object)>($r23)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z5 = interfaceinvoke $r22.<java.util.Set: boolean contains(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z5 != 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z5 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r24 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z5 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r28 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r24 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r25 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r25 = r8.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r26 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r26 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r27 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r26, 44)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r27 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r26, 44) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Service Upgrade Pack specified after-group of {}, but that is not found in {}", $r25, $r27)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Service Upgrade Pack specified after-group of {}, but that is not found in {}", $r25, $r27) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r6 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r12
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r6 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r12 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r13 = new java.util.ArrayList
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r7 = $r13
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r7 = $r13 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r14 = r6.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r14 = r6.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r7)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r7) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
