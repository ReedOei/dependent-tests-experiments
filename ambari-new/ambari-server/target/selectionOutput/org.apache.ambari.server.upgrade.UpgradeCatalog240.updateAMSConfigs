org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r15 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r15 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-env")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r24 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-env")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r24 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r24 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r24 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r25 = interfaceinvoke r24.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r24 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r34 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r34 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r34 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r34 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r35 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r34 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r55 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-grafana-ini")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r55 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-grafana-ini") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r55 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r55 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r56 = interfaceinvoke r55.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r55 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r62 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r62 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r62 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r62 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r63 = interfaceinvoke r62.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r62 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r63 = interfaceinvoke r62.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r64 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r64 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r64.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r64.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r65 = $r64
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r65 = $r64 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z12 = interfaceinvoke r63.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.rpc.timeout")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z12 = interfaceinvoke r63.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.rpc.timeout") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z12 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r66 = "30000"
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z14 = interfaceinvoke r63.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z14 = interfaceinvoke r63.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z14 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z14 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r70 = "true"
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z14 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r65, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r65, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r70 = "true" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r71 = interfaceinvoke r63.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.normalizer.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r71 = interfaceinvoke r63.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.normalizer.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z15 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>($r71)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z15 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>($r71) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z15 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z15 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r72 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z15 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r65, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r72 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke $r72.<org.slf4j.Logger: void info(java.lang.String)>("Disabling hbase.normalizer.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke $r72.<org.slf4j.Logger: void info(java.lang.String)>("Disabling hbase.normalizer.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r73 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r73 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r65.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.normalizer.enabled", $r73)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r65.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.normalizer.enabled", $r73) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r65, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r66 = "30000" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r67 = interfaceinvoke r63.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.rpc.timeout")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r67 = interfaceinvoke r63.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.rpc.timeout") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z13 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>($r67)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z13 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>($r67) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z13 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z13 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r68 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(300000)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z13 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z14 = interfaceinvoke r63.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r68 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(300000) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r65.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.rpc.timeout", $r68)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r65.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.rpc.timeout", $r68) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z14 = interfaceinvoke r63.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r56 = interfaceinvoke r55.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r57 = interfaceinvoke r56.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r57 = interfaceinvoke r56.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r58 = (java.lang.String) $r57
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r58 = (java.lang.String) $r57 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r59 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r59 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r59.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r59.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r12 = $r59
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r12 = $r59 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r60 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: java.lang.String updateAmsGrafanaIni(java.lang.String)>(r58)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r60 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: java.lang.String updateAmsGrafanaIni(java.lang.String)>(r58) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r60)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r60) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-grafana-ini", r12, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-grafana-ini", r12, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r62 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r35 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.service.metadata.filters")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.service.metadata.filters") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r37 = (java.lang.String) $r36
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r37 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r37)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r37) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z4 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z4 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z5 = virtualinvoke r37.<java.lang.String: boolean contains(java.lang.CharSequence)>("ContainerResource")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z4 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r38 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("timeline.metrics.service.metadata.filters", "ContainerResource")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r38 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("timeline.metrics.service.metadata.filters", "ContainerResource") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("ams-site", $r38, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("ams-site", $r38, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r39 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r39 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r40 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r40 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r40.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r40.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r11 = $r40
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r11 = $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z6 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.sink.collection.period")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z6 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.sink.collection.period") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z6 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r41 = "60"
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.sink.collection.period", "10")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.sink.collection.period", "10") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r44 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r44 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>("Setting value of timeline.metrics.sink.collection.period : 10")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>("Setting value of timeline.metrics.sink.collection.period : 10") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z8 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.host.aggregator.ttl")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z8 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.host.aggregator.ttl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z8 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z8 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r45 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.host.aggregator.ttl")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z8 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z10 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z10 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z10 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z10 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r50 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z10 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-site", r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-site", r11, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r55 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-grafana-ini")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r50 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r51 = (java.lang.String) $r50
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r51 = (java.lang.String) $r50 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z11 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>("259200")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z11 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>("259200") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z11 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z11 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r52 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(259200)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z11 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-site", r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r52 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(259200) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl", $r52)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl", $r52) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r54 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r54 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke $r54.<org.slf4j.Logger: void info(java.lang.String)>("Setting value of timeline.metrics.cluster.aggregator.second.ttl : 259200")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke $r54.<org.slf4j.Logger: void info(java.lang.String)>("Setting value of timeline.metrics.cluster.aggregator.second.ttl : 259200") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-site", r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r45 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.host.aggregator.ttl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r46 = (java.lang.String) $r45
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r46 = (java.lang.String) $r45 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z9 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>("86400")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z9 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>("86400") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z9 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z9 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r47 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(86400)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z9 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z10 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r47 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(86400) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.host.aggregator.ttl", $r47)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.host.aggregator.ttl", $r47) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r49 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r49 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke $r49.<org.slf4j.Logger: void info(java.lang.String)>("Setting value of timeline.metrics.host.aggregator.ttl : 86400")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke $r49.<org.slf4j.Logger: void info(java.lang.String)>("Setting value of timeline.metrics.host.aggregator.ttl : 86400") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z10 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r41 = "60" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r42 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.sink.collection.period")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r42 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.sink.collection.period") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z7 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r42)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z7 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z7 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.sink.collection.period", "10")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z8 = interfaceinvoke r39.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.host.aggregator.ttl")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z5 = virtualinvoke r37.<java.lang.String: boolean contains(java.lang.CharSequence)>("ContainerResource") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z5 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z5 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r38 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("timeline.metrics.service.metadata.filters", "ContainerResource")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z5 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r39 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r25 = interfaceinvoke r24.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r27 = (java.lang.String) $r26
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r28 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r9 = $r28
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r9 = $r28 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r27 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r27 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z3 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>("HBASE_HOME=")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r27 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-env", r9, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-env", r9, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r34 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z3 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>("HBASE_HOME=") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z3 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z3 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z3 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-env", r9, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n # Explicitly Setting HBASE_HOME for AMS HBase so that there is no conflict\n")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n # Explicitly Setting HBASE_HOME for AMS HBase so that there is no conflict\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("export HBASE_HOME={{ams_hbase_home_dir}}\n")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("export HBASE_HOME={{ams_hbase_home_dir}}\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r10 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r10 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r10)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-env", r9, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r7 = (java.lang.String) $r18
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r7 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r7 == null
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z2 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("AMS_INSTANCE_NAME")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r24 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-env")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $z2 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("AMS_INSTANCE_NAME") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z2 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z2 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : if $z2 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r24 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-env")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n # AMS instance name\n")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n # AMS instance name\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("export AMS_INSTANCE_NAME={{hostname}}\n")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("export AMS_INSTANCE_NAME={{hostname}}\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r8 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r8 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r23 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r8)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : $r23 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("ams-env", $r23, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("ams-env", $r23, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateAMSConfigs : r24 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-env")
