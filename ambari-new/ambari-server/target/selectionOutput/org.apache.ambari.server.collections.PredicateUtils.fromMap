org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r0 == null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : return r1
org.apache.ambari.server.collections.PredicateUtils.fromMap : $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $z0 != 0 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : return r1
org.apache.ambari.server.collections.PredicateUtils.fromMap : $i0 = interfaceinvoke r0.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r6 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : if $i0 != 1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r29 = new java.lang.IllegalArgumentException
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r29 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r30 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r30 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $i1 = interfaceinvoke r0.<java.util.Map: int size()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $i1 = interfaceinvoke r0.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r30[0] = $r31
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r30[0] = $r31 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Too many map entries have been encountered - %d", $r30)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Too many map entries have been encountered - %d", $r30) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32)
org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : throw $r29
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r6 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r2 = (java.util.Map$Entry) $r8
org.apache.ambari.server.collections.PredicateUtils.fromMap : r2 = (java.util.Map$Entry) $r8 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r9 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r9 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r9)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r3 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r4 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r3)
org.apache.ambari.server.collections.PredicateUtils.fromMap : r4 = staticinvoke <org.apache.ambari.server.collections.functors.PredicateClassFactory: java.lang.Class getPredicateClass(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r4 != null
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r4 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r10 = new java.lang.IllegalArgumentException
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r4 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Class)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r4 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : r23 = $r22 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r24 = new java.lang.UnsupportedOperationException
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r24 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r25 = newarray (java.lang.Object)[2]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r25 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r26 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r26 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r25[0] = $r26
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r25[0] = $r26 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r27 = virtualinvoke r23.<java.lang.ReflectiveOperationException: java.lang.String getLocalizedMessage()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r27 = virtualinvoke r23.<java.lang.ReflectiveOperationException: java.lang.String getLocalizedMessage()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r25[1] = $r27
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r25[1] = $r27 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot translate data to a %s - %s", $r25)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot translate data to a %s - %s", $r25) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r24.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>($r28, r23)
org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r24.<java.lang.UnsupportedOperationException: void <init>(java.lang.String,java.lang.Throwable)>($r28, r23) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : throw $r24
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = class "java/util/Map"
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = class "java/util/Map" >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r13)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r13[0] = class "java/util/Map" >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r13) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : if r5 != null
org.apache.ambari.server.collections.PredicateUtils.fromMap : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("fromMap", $r13) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r5 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = new java.lang.UnsupportedOperationException
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r5 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r18 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : if r5 != null >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r19 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r19 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r19)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r19 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r19) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r18[0] = $r20
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r19) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r18[0] = $r20 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r18)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r18[0] = $r20 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r18) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (org.apache.ambari.server.collections.Predicate) $r21
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r21 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r18) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (org.apache.ambari.server.collections.Predicate) $r21 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)]
org.apache.ambari.server.collections.PredicateUtils.fromMap : r1 = (org.apache.ambari.server.collections.Predicate) $r21 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : goto [?= return r1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : return r1
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = newarray (java.lang.Object)[2]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r14 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15[0] = $r16
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r16 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15[0] = $r16 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15[1] = "Failed to find toMap method"
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15[0] = $r16 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15[1] = "Failed to find toMap method" >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot translate data to a %s - %s", $r15)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r15[1] = "Failed to find toMap method" >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot translate data to a %s - %s", $r15) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot translate data to a %s - %s", $r15) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : throw $r14
org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : throw $r14 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r22 := @caughtexception
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r10 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11[0] = r3
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r11[0] = r3 >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected predicate name - %s", $r11)
org.apache.ambari.server.collections.PredicateUtils.fromMap : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected predicate name - %s", $r11) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12)
org.apache.ambari.server.collections.PredicateUtils.fromMap : specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.collections.PredicateUtils.fromMap : throw $r10
