org.apache.ambari.server.controller.utilities.webserver.StartServer.main : r1 = staticinvoke <org.apache.ambari.server.controller.utilities.webserver.StartServer: java.util.Map parseArgs(java.lang.String[])>(r0) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r5 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r5 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting Ambari API server using the following properties: ")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting Ambari API server using the following properties: ") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("db")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("db") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r10 = (java.lang.String) $r9
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("ambariapi.dbfile", $r10)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("ambariapi.dbfile", $r10) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r12 = new com.sun.jersey.api.core.PackagesResourceConfig
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r12 = new com.sun.jersey.api.core.PackagesResourceConfig >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r13 = newarray (java.lang.String)[1]
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r13 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r13[0] = "org.apache.ambari.server.api.services"
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r13[0] = "org.apache.ambari.server.api.services" >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r12.<com.sun.jersey.api.core.PackagesResourceConfig: void <init>(java.lang.String[])>($r13)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r12.<com.sun.jersey.api.core.PackagesResourceConfig: void <init>(java.lang.String[])>($r13) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : r3 = $r12
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : r3 = $r12 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r14 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r14 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting server: http://localhost:")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting server: http://localhost:") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r17 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("port")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r17 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("port") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r18 = (java.lang.String) $r17
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r18 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r21)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://localhost:")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://localhost:") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r24 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("port")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r24 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("port") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r25 = (java.lang.String) $r24
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : r4 = staticinvoke <com.sun.jersey.api.container.httpserver.HttpServerFactory: com.sun.net.httpserver.HttpServer create(java.lang.String,com.sun.jersey.api.core.ResourceConfig)>($r28, r3)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : r4 = staticinvoke <com.sun.jersey.api.container.httpserver.HttpServerFactory: com.sun.net.httpserver.HttpServer create(java.lang.String,com.sun.jersey.api.core.ResourceConfig)>($r28, r3) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke r4.<com.sun.net.httpserver.HttpServer: void start()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke r4.<com.sun.net.httpserver.HttpServer: void start()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r29 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r29 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SERVER RUNNING: http://localhost:")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SERVER RUNNING: http://localhost:") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r32 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("port")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r32 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("port") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r33 = (java.lang.String) $r32
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r33 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r36)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r37 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r37 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("Hit return to stop...")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("Hit return to stop...") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r38 = <java.lang.System: java.io.InputStream in>
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r38 = <java.lang.System: java.io.InputStream in> >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r38.<java.io.InputStream: int read()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r38.<java.io.InputStream: int read()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r39 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r39 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("Stopping server")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("Stopping server") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke r4.<com.sun.net.httpserver.HttpServer: void stop(int)>(0)
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke r4.<com.sun.net.httpserver.HttpServer: void stop(int)>(0) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r40 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : $r40 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("Server stopped")
org.apache.ambari.server.controller.utilities.webserver.StartServer.main : virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("Server stopped") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.main : return
