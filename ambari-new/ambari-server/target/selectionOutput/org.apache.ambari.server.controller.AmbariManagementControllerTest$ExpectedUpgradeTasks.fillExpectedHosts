org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : i0 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : if i0 >= 25
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : if i0 >= 25 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $r5 = new java.util.HashMap
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : if i0 >= 25 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : return
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $r5 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : r2 = $r5
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : r2 = $r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $r9 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks: java.util.ArrayList expectedList>
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $r9 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks: java.util.ArrayList expectedList> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : i0 = i0 + 1
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : if i0 >= 25
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : r4 = (java.lang.String) $r6
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : r4 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r7)
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.fillExpectedHosts : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
