org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r5 = r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: boolean checkAuthorizationForMetrics(java.util.Set,java.lang.String)>(r1, $r5)
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: boolean checkAuthorizationForMetrics(java.util.Set,java.lang.String)>(r1, $r5) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z0 != 0
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : return r1
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r6 = r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: org.apache.ambari.server.controller.metrics.MetricsServiceProvider metricsServiceProvider>
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r6 = r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: org.apache.ambari.server.controller.metrics.MetricsServiceProvider metricsServiceProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : r4 = interfaceinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService getMetricsServiceType()>()
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : r4 = interfaceinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService getMetricsServiceType()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if r4 == null
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if r4 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r7 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService GANGLIA>
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if r4 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : return r1
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r7 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService GANGLIA> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $z1 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $z1 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z1 == 0
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r8 = r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider gangliaPropertyProvider>
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r10 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r10 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $z2 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: boolean equals(java.lang.Object)>($r10)
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $z2 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z2 == 0
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r11 = r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider amsPropertyProvider>
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : return r1
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r11 = r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider amsPropertyProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3)
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : return $r12
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r8 = r0.<org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy: org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider gangliaPropertyProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3)
org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPropertyProviderProxy.populateResources : return $r9
