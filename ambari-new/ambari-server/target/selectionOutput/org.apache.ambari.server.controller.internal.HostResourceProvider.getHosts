org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r3 = $r2
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r3 = $r2 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r4 = null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r4 = null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r5 = interfaceinvoke r0.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r5 = interfaceinvoke r0.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r6 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r6 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r7 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r7 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r4 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r7 != null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r8 = $r15 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r16 = new org.apache.ambari.server.ParentObjectNotFoundException
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r16 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r16.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", r8)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r16.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", r8) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : throw $r16
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r9 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r17 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r9 = $r17
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r9 = $r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r9 = $r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r21 = $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r22 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r22 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r22.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>(r6, r7)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r22.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>(r6, r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : throw $r22
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r19 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r18)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r19 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r19 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= n0 = null]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= n0 = null] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : n0 = null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : n0 = null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if null == r4
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if null == r4 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if null == r4 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z1 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r24 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : return r3
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r24 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r11 = (org.apache.ambari.server.state.Host) $r24
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r11 = (org.apache.ambari.server.state.Host) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r25 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r30 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r30 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r31 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r31 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r13 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r31)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r13 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r13 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r13 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $i1 = interfaceinvoke r13.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r13 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r30)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r30) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $i1 = interfaceinvoke r13.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $i1 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $i1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r32 = interfaceinvoke r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $i1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r30)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r32 = interfaceinvoke r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r14 = (org.apache.ambari.server.state.Cluster) $r33
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r14 = (org.apache.ambari.server.state.Cluster) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r34 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r34 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r30.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>($r34)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r30.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r35 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r14, n0)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r35 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r14, n0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r30.<org.apache.ambari.server.controller.HostResponse: void setDesiredHostConfigs(java.util.Map)>($r35)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r30.<org.apache.ambari.server.controller.HostResponse: void setDesiredHostConfigs(java.util.Map)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $l2 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $l2 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r36 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l2)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r36 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r30.<org.apache.ambari.server.controller.HostResponse: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>($r36)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r30.<org.apache.ambari.server.controller.HostResponse: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r30)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r25 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r25)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z2 = interfaceinvoke $r26.<java.util.Set: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z2 = interfaceinvoke $r26.<java.util.Set: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z2 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r7 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r29 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r29 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r29.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>(r6, r7)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r29.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>(r6, r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : throw $r29
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r12.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r12.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r27 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r4, n0)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r27 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r4, n0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r12.<org.apache.ambari.server.controller.HostResponse: void setDesiredHostConfigs(java.util.Map)>($r27)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r12.<org.apache.ambari.server.controller.HostResponse: void setDesiredHostConfigs(java.util.Map)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r28 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r28 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r12.<org.apache.ambari.server.controller.HostResponse: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>($r28)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r12.<org.apache.ambari.server.controller.HostResponse: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= (branch)]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r9 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= n0 = null]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= n0 = null] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : n0 = null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r4 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= (branch)]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r4 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r7 != null
