org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r13 = $r12 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : return i0
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r1 = new java.net.ServerSocket >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : specialinvoke $r1.<java.net.ServerSocket: void <init>(int)>(0)
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r1 = new java.net.ServerSocket >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : specialinvoke $r1.<java.net.ServerSocket: void <init>(int)>(0) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r2 = $r1
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : specialinvoke $r1.<java.net.ServerSocket: void <init>(int)>(0) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r2 = $r1 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r3 = null
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r2 = $r1 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r3 = null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r3 = null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r8 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r3 = null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : i1 = virtualinvoke r2.<java.net.ServerSocket: int getLocalPort()>()
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : i1 = virtualinvoke r2.<java.net.ServerSocket: int getLocalPort()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : i1 = virtualinvoke r2.<java.net.ServerSocket: int getLocalPort()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r8 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : i1 = virtualinvoke r2.<java.net.ServerSocket: int getLocalPort()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r2 == null
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r2 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r2 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : return i1
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r2 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>()
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>()
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r7 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r4 = $r7 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r4)
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r4 = $r7 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r4) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= return i1]
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r4) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= return i1] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : return i1
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= return i1] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : return i1
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r7 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= return i1]
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= return i1] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : return i1
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= return i1] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r5 = $r10 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r10 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r5 = $r10 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r5 = $r10 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r2 == null
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r2 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r2 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : throw r5
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r2 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : throw r5 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>()
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>()
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : if r3 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r11 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r6 = $r11 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6)
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r6 = $r11 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= throw r5]
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= throw r5] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : throw r5
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= throw r5] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : throw r5
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r11 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : virtualinvoke r2.<java.net.ServerSocket: void close()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= throw r5]
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= throw r5] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : throw r5
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : goto [?= throw r5] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r12 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r9 = $r8 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r3 = r9
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r9 = $r8 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r10 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r3 = r9 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : throw r9
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : r3 = r9 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r10 := @caughtexception
org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : throw r9 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest.getPort : $r10 := @caughtexception
