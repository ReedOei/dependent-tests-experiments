org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r7 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r4 = virtualinvoke r2.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String)>($r7)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r4 = virtualinvoke r2.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r8 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r8 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r9 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r9 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r9)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if $z0 != 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if null != r4
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r15 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r15 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r16 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r16 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r18 = (org.apache.ambari.server.state.repository.AvailableService) $r17
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r18 = (org.apache.ambari.server.state.repository.AvailableService) $r17 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r19 = virtualinvoke r18.<org.apache.ambari.server.state.repository.AvailableService: java.util.List getVersions()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r19 = virtualinvoke r18.<org.apache.ambari.server.state.repository.AvailableService: java.util.List getVersions()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r20 = new org.apache.ambari.server.state.repository.AvailableVersion
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r20 = new org.apache.ambari.server.state.repository.AvailableVersion >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r21 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r21 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r22 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String versionId>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r22 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String versionId> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r23 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set buildComponents(org.apache.ambari.server.state.ServiceInfo,java.util.Set)>(r4, r3)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r23 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set buildComponents(org.apache.ambari.server.state.ServiceInfo,java.util.Set)>(r4, r3) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : specialinvoke $r20.<org.apache.ambari.server.state.repository.AvailableVersion: void <init>(java.lang.String,java.lang.String,java.util.Set)>($r21, $r22, $r23)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : specialinvoke $r20.<org.apache.ambari.server.state.repository.AvailableVersion: void <init>(java.lang.String,java.lang.String,java.util.Set)>($r21, $r22, $r23) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : return
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if null != r4 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r10 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if null != r4 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r10 = virtualinvoke r4.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r10 = virtualinvoke r4.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r5 = $r10
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r5 = $r10 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r11 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r11 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r12 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r12 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r6 = new org.apache.ambari.server.state.repository.AvailableService
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r6 = new org.apache.ambari.server.state.repository.AvailableService >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r13 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r13 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : specialinvoke $r6.<org.apache.ambari.server.state.repository.AvailableService: void <init>(java.lang.String,java.lang.String)>($r13, r5)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : specialinvoke $r6.<org.apache.ambari.server.state.repository.AvailableService: void <init>(java.lang.String,java.lang.String)>($r13, r5) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r6)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r6) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r15 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r10 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : goto [?= r5 = $r10]
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : goto [?= r5 = $r10] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r5 = $r10
