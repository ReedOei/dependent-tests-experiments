org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r8 = interfaceinvoke $r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r8 = interfaceinvoke $r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r1 = (org.apache.ambari.server.configuration.Configuration) $r8
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r1 = (org.apache.ambari.server.configuration.Configuration) $r8 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r9 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r9 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r10 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r10 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r9 == $r10
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r9 == $r10 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r9 == $r10 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>("Checking to ensure that the MySQL DB engine type is set to InnoDB")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>("Checking to ensure that the MySQL DB engine type is set to InnoDB") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r12 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r12 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r12 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r12 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r13 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r12 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r2 = "select TABLE_NAME, ENGINE from information_schema.tables where TABLE_SCHEMA = \'%s\' and LOWER(ENGINE) != \'innodb\';"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r2 = "select TABLE_NAME, ENGINE from information_schema.tables where TABLE_SCHEMA = \'%s\' and LOWER(ENGINE) != \'innodb\';" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r3 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r3 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r3 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r3 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r4 = interfaceinvoke $r19.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r4 = interfaceinvoke $r19.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r4 = interfaceinvoke $r19.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r4 = interfaceinvoke $r19.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r21 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r21 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r21 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r21 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20[0] = $r21
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20[0] = $r21 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20[0] = $r21 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20[0] = $r21 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r20)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r20) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r20) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r20) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r3 = interfaceinvoke r4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r22)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r3 = interfaceinvoke r4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r3 = interfaceinvoke r4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r3 = interfaceinvoke r4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 = new java.util.ArrayList
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r6 = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r6 = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : throw r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r37 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r7 = $r37 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r38 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r38 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r7)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r7) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : throw r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= throw r6]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r37 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= throw r6] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : throw r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r31 = $r30 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r32 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r31 = $r30 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r32 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during checking MySQL engine to be innodb: ", r31)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r32 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during checking MySQL engine to be innodb: ", r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during checking MySQL engine to be innodb: ", r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r33 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r34 = $r33 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r35 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r35 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r35.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r34)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r35.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r34) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r33 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r28 = $r27 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r29 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r29 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r29.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r28)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r29.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r28) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : specialinvoke $r23.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : specialinvoke $r23.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : specialinvoke $r23.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : specialinvoke $r23.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r5 = $r23
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r5 = $r23 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r5 = $r23 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r5 = $r23 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z2 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z2 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z2 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z2 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z2 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r5, 44)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r5, 44) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r5, 44) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r5, 44) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Found tables with engine type that is not InnoDB : %s", $r26)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Found tables with engine type that is not InnoDB : %s", $r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Found tables with engine type that is not InnoDB : %s", $r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Found tables with engine type that is not InnoDB : %s", $r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r3 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r24 = interfaceinvoke r3.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_NAME")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r24 = interfaceinvoke r3.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_NAME") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r24 = interfaceinvoke r3.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_NAME") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r24 = interfaceinvoke r3.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_NAME") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r13 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r13 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r13 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r14 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r13 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r17 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r17 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r18 = interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r18 = interfaceinvoke $r17.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = $r18
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = $r18 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r2 = "select TABLE_NAME, ENGINE from information_schema.tables where TABLE_SCHEMA = \'%s\' and LOWER(ENGINE) != \'innodb\';"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r14 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r16 = (org.apache.ambari.server.orm.DBAccessor) $r15
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r16 = (org.apache.ambari.server.orm.DBAccessor) $r15 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = $r16
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = $r16 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r17 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
