org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.alerts.AlertStateChangedEventTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertDefinitionEntity") >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : r1 = (org.apache.ambari.server.orm.entities.AlertDefinitionEntity) $r2
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : r1 = (org.apache.ambari.server.orm.entities.AlertDefinitionEntity) $r2 >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.Long getDefinitionId()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.Long getDefinitionId()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r6 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r5)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r6 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r8 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r8 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r10 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS")
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r10 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r12 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getLabel()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r12 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getLabel()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("hdfs-foo-alert")
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("hdfs-foo-alert") >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r16 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDescription()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r16 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS Foo Alert")
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS Foo Alert") >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.getMockAlertDefinition : return r1
