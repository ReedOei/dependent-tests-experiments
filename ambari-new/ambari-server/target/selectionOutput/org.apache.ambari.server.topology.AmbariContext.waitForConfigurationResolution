org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r3 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r8 = interfaceinvoke $r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r8 = interfaceinvoke $r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r4 = interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r4 = interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : z0 = 1
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if z0 == 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : i0 = 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : return
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : i0 = 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if i0 != 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if i0 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r25 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if i0 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r26 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r26 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r27 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for ")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configuration types to be resolved before Blueprint deployment can continue")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configuration types to be resolved before Blueprint deployment can continue") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r31)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : staticinvoke <java.lang.Thread: void sleep(long)>(100L)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r32 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r33 = $r32 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : virtualinvoke r33.<java.lang.InterruptedException: void printStackTrace()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : virtualinvoke r33.<java.lang.InterruptedException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if z0 == 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r32 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r25 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String)>("All required configuration types are in the TOPOLOGY_RESOLVED state.  Blueprint deployment can now continue.")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String)>("All required configuration types are in the TOPOLOGY_RESOLVED state.  Blueprint deployment can now continue.") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : z0 = 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : z0 = 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r6 = (java.lang.String) $r9
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r6 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r7 = (org.apache.ambari.server.state.DesiredConfig) $r11
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r7 = (org.apache.ambari.server.state.DesiredConfig) $r11 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r12 = virtualinvoke r7.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r12 = virtualinvoke r7.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("TOPOLOGY_RESOLVED")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("TOPOLOGY_RESOLVED") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z2 != 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r13 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r19 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r19 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config type ")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config type ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is resolved in the cluster config.")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is resolved in the cluster config.") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r24)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r13 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r14 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config type ")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config type ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not resolved yet, Blueprint deployment will wait until configuration update is completed")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not resolved yet, Blueprint deployment will wait until configuration update is completed") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>($r18)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : i0 = i0 + 1
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
