org.apache.ambari.server.controller.internal.HostResourceProviderTest.getHostProvider : $r3 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.getHostProvider : $r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r3
org.apache.ambari.server.controller.internal.HostResourceProviderTest.getHostProvider : $r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r3 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.getHostProvider : r2 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.getHostProvider : r2 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.getHostProvider : interfaceinvoke r1.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.getHostProvider : interfaceinvoke r1.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.getHostProvider : return r2
