org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if r2 != null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r4 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if r2 != null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r5 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r5 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $i1 = interfaceinvoke $r5.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $i1 = interfaceinvoke $r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : i0 = $i1 - 1
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : i0 = $i1 - 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if i0 < 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if i0 < 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r6 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if i0 < 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : return 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r6 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : r3 = (org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage) $r7
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : r3 = (org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage) $r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r8 = r3.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: java.lang.String service>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r8 = r3.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: java.lang.String service> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $r8 == null
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $r8 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r9 = r3.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: java.lang.String service>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $r8 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r10 = r3.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: java.lang.String title>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r10 = r3.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: java.lang.String title> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r11 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : i0 = i0 + -1
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : i0 = i0 + -1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if i0 < 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r11 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $i2 = i0 + 1
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : interfaceinvoke $r11.<java.util.List: boolean addAll(int,java.util.Collection)>($i2, r1)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : interfaceinvoke $r11.<java.util.List: boolean addAll(int,java.util.Collection)>($i2, r1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : return 1
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r9 = r3.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: java.lang.String service> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $z1 != 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r10 = r3.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: java.lang.String title>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r11 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : $r4 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>(r1)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.addGroupingStages : return 1
