org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r0 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking DB consistency")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking DB consistency") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r16 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r16 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r16 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r16 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r17 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r16 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r20 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r20 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r21 = interfaceinvoke $r20.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r21 = interfaceinvoke $r20.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r21
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r21 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r2 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r2 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z3 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r22 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r75 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r76 = "DB consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation."
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r76 = "DB consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation." >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r77 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r77 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r77.<org.slf4j.Logger: void error(java.lang.String)>(r76)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r77.<org.slf4j.Logger: void error(java.lang.String)>(r76) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r78 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r78 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : specialinvoke $r78.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r76)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : specialinvoke $r78.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r76) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : throw $r78
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r75 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r75.<org.slf4j.Logger: void info(java.lang.String)>("DB consistency check passed.")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r75.<org.slf4j.Logger: void info(java.lang.String)>("DB consistency check passed.") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= return]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : return
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r22 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r4 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r22
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r4 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r22 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r23 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r23 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r24 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.StackEntity getDesiredStack()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r24 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.StackEntity getDesiredStack()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : specialinvoke $r23.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>($r24)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : specialinvoke $r23.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>($r24) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r5 = $r23
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r5 = $r23 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r6 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterServiceEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r6 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterServiceEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r7 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r7 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z4 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r25 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r25 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r8 = (org.apache.ambari.server.orm.entities.ClusterServiceEntity) $r25
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r8 = (org.apache.ambari.server.orm.entities.ClusterServiceEntity) $r25 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r9 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity getServiceDesiredStateEntity()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r9 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity getServiceDesiredStateEntity()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r9 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r9 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r9 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r10 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.util.Collection getServiceComponentDesiredStateEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r10 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.util.Collection getServiceComponentDesiredStateEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r10 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r10 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z5 = interfaceinvoke r10.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r10 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r31 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r31 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r32 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r32 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r33 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r33 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r32[0] = $r33
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r32[0] = $r33 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r34 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r34 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r32[1] = $r34
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r32[1] = $r34 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("serviceComponentDesiredStateEntities is null or empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s ", $r32)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("serviceComponentDesiredStateEntities is null or empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s ", $r32) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>($r35)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z5 = interfaceinvoke r10.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z5 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r11 = interfaceinvoke r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r11 = interfaceinvoke r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z6 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r36 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r36 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r12 = (org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity) $r36
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r12 = (org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity) $r36 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r13 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.util.Collection getHostComponentDesiredStateEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r13 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.util.Collection getHostComponentDesiredStateEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r14 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.util.Collection getHostComponentStateEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r14 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.util.Collection getHostComponentStateEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r38 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r38 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r39 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r39 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r40 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r40 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r41 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r41 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r15 = virtualinvoke $r37.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r38, $r39, $r40, $r41)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r15 = virtualinvoke $r37.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r38, $r39, $r40, $r41) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r42 = virtualinvoke r15.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r42 = virtualinvoke r15.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r42 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r42 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43 = virtualinvoke r15.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r42 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= z1 = $z9]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= z1 = $z9] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z1 = $z9
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z1 = $z9 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r13 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r13 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r13 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z1 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z10 = interfaceinvoke r13.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r14 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r14 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r14 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z1 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z11 = interfaceinvoke r14.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $i0 = interfaceinvoke r13.<java.util.Collection: int size()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = $z12
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = $z12 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= z0 = $z12]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= z0 = $z12] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = $z12
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $i0 = interfaceinvoke r13.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $i1 = interfaceinvoke r14.<java.util.Collection: int size()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $i1 = interfaceinvoke r14.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $i0 == $i1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r69 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r69 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r71 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r71 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70[0] = $r71
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70[0] = $r71 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r72 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r72 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70[1] = $r72
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70[1] = $r72 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r73 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r73 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70[2] = $r73
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70[2] = $r73 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r74 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("HostComponentStateEntities and HostComponentDesiredStateEntities tables must contain equal number of rows mapped to ServiceComponentDesiredStateEntity, (clusterName=%s, serviceName=%s, componentName=%s) ", $r70)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r74 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("HostComponentStateEntities and HostComponentDesiredStateEntities tables must contain equal number of rows mapped to ServiceComponentDesiredStateEntity, (clusterName=%s, serviceName=%s, componentName=%s) ", $r70) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r69.<org.slf4j.Logger: void error(java.lang.String)>($r74)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r69.<org.slf4j.Logger: void error(java.lang.String)>($r74) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z11 = interfaceinvoke r14.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z11 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r63 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r63 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r65 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r65 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64[0] = $r65
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64[0] = $r65 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r66 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r66 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64[1] = $r66
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64[1] = $r66 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r67 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r67 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64[2] = $r67
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64[2] = $r67 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r68 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentStateEntities is empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r64)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r68 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentStateEntities is empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r64) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r63.<org.slf4j.Logger: void error(java.lang.String)>($r68)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r63.<org.slf4j.Logger: void error(java.lang.String)>($r68) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r57 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r57 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r59 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r59 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58[0] = $r59
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58[0] = $r59 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r60 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r60 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58[1] = $r60
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58[1] = $r60 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58[2] = $r61
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58[2] = $r61 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r62 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentStateEntities is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r58)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r62 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentStateEntities is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r58) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String)>($r62)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String)>($r62) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z2 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z10 = interfaceinvoke r13.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z10 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r14 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r51 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r51 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r53 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r53 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52[0] = $r53
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52[0] = $r53 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r54 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r54 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52[1] = $r54
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52[1] = $r54 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52[2] = $r55
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52[2] = $r55 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentDesiredStateEntities is empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r52)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentDesiredStateEntities is empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r52) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r51.<org.slf4j.Logger: void error(java.lang.String)>($r56)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r51.<org.slf4j.Logger: void error(java.lang.String)>($r56) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r14 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z2 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r45 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r45 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r47 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r47 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46[0] = $r47
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46[0] = $r47 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r48 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r48 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46[1] = $r48
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46[1] = $r48 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46[2] = $r49
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46[2] = $r49 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r50 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentDesiredStateEntities is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r46)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r50 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentDesiredStateEntities is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r46) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r50)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r14 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43 = virtualinvoke r15.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z7 = virtualinvoke $r43.<java.lang.String: boolean startsWith(java.lang.String)>("0")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z7 = virtualinvoke $r43.<java.lang.String: boolean startsWith(java.lang.String)>("0") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z7 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r44 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r44 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z8 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>("SECONDARY_NAMENODE")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z8 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>("SECONDARY_NAMENODE") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z8 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z1 = $z9
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r26 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r26 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r27 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r27 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r28 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r28 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r27[0] = $r28
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r27[0] = $r28 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r29 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r29 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r27[1] = $r29
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r27[1] = $r29 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ServiceDesiredStateEntity is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s ", $r27)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ServiceDesiredStateEntity is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s ", $r27) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>($r30)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r10 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.util.Collection getServiceComponentDesiredStateEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r17 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r18 = interfaceinvoke $r17.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r18 = interfaceinvoke $r17.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r19 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r18
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r19 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r18 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = $r19
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = $r19 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r20 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
