org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r12 = interfaceinvoke $r11.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r12 = interfaceinvoke $r11.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r12
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r13 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r13 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r4 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r4 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r6 = interfaceinvoke $r15.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r6 = interfaceinvoke $r15.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kafka-broker")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kafka-broker") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r7 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r16 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r22 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kafka-env")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r22 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kafka-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r22 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r22 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r23 = interfaceinvoke r22.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r22 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r23 = interfaceinvoke r22.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r25 = (java.lang.String) $r24
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r25 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r25 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z6 = virtualinvoke r25.<java.lang.String: boolean contains(java.lang.CharSequence)>("export KAFKA_KERBEROS_PARAMS={{kafka_kerberos_params}}")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r25 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z6 = virtualinvoke r25.<java.lang.String: boolean contains(java.lang.CharSequence)>("export KAFKA_KERBEROS_PARAMS={{kafka_kerberos_params}}") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z6 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z6 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r26 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z6 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nexport KAFKA_KERBEROS_PARAMS=\"$KAFKA_KERBEROS_PARAMS {{kafka_kerberos_params}}\"")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nexport KAFKA_KERBEROS_PARAMS=\"$KAFKA_KERBEROS_PARAMS {{kafka_kerberos_params}}\"") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r30 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r29)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r30 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "kafka-env", r30, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "kafka-env", r30, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r16 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : specialinvoke $r16.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : specialinvoke $r16.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r8 = $r16
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r8 = $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r9 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r9 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r17 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>("kafka.metrics.reporters")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r17 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>("kafka.metrics.reporters") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r10 = (java.lang.String) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r10 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r10 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r10 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r18 = "{{kafka_metrics_reporters}}"
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if r10 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z3 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("AMBARI_METRICS")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z3 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("AMBARI_METRICS") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kafka.metrics.reporters", "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z4 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("GANGLIA")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z4 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("GANGLIA") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z4 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kafka.metrics.reporters", "kafka.ganglia.KafkaGangliaMetricsReporter")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kafka.metrics.reporters", " ")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kafka.metrics.reporters", " ") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z5 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z5 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "kafka-broker", r8, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z5 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r22 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kafka-env")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "kafka-broker", r8, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : r22 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kafka-env")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kafka.metrics.reporters", "kafka.ganglia.KafkaGangliaMetricsReporter") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kafka.metrics.reporters", "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : goto [?= $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $r18 = "{{kafka_metrics_reporters}}" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r10)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z3 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("AMBARI_METRICS")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateKafkaConfigs : $z5 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()
