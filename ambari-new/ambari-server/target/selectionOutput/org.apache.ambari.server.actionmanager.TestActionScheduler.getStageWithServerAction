org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r5 = r0.<org.apache.ambari.server.actionmanager.TestActionScheduler: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : r3 = interfaceinvoke $r5.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(l0, "/tmp", "cluster1", 1L, r2, "{all_hosts=[c6403.ambari.apache.org, c6401.ambari.apache.org, c6402.ambari.apache.org], slave_hosts=[c6403.ambari.apache.org, c6401.ambari.apache.org, c6402.ambari.apache.org]}", "{}", "{}")
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : r3 = interfaceinvoke $r5.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(l0, "/tmp", "cluster1", 1L, r2, "{all_hosts=[c6403.ambari.apache.org, c6401.ambari.apache.org, c6402.ambari.apache.org], slave_hosts=[c6403.ambari.apache.org, c6401.ambari.apache.org, c6402.ambari.apache.org]}", "{}", "{}") >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>(l1)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>(l1) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setSkippable(boolean)>(z0)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setSkippable(boolean)>(z0) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setAutoSkipFailureSupported(boolean)>(z0)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setAutoSkipFailureSupported(boolean)>(z0) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r6 = class "org/apache/ambari/server/serveraction/MockServerAction"
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r6 = class "org/apache/ambari/server/serveraction/MockServerAction" >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r8 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION>
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r8 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r9 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand EXECUTE>
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r9 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand EXECUTE> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r4 = new org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r4 = new org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : specialinvoke $r4.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent: void <init>(java.lang.String,long)>(null, $l3)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : specialinvoke $r4.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent: void <init>(java.lang.String,long)>(null, $l3) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void addServerActionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,java.lang.String,org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent,java.util.Map,java.lang.String,java.util.Map,java.lang.Integer,boolean,boolean)>($r7, null, $r8, $r9, "cluster1", $r4, r1, null, null, $r10, 0, z1)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void addServerActionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,java.lang.String,org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent,java.util.Map,java.lang.String,java.util.Map,java.lang.Integer,boolean,boolean)>($r7, null, $r8, $r9, "cluster1", $r4, r1, null, null, $r10, 0, z1) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r11 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: java.util.List getExecutionCommands(java.lang.String)>(null)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r11 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: java.util.List getExecutionCommands(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r13 = (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper) $r12
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r13 = (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper) $r12 >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r14 = virtualinvoke $r13.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r14 = virtualinvoke $r13.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r15 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: java.util.List getOrderedHostRoleCommands()>()
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r15 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: java.util.List getOrderedHostRoleCommands()>() >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r17 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r16
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $r17 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r16 >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $l4 = virtualinvoke $r17.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : $l4 = virtualinvoke $r17.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke $r14.<org.apache.ambari.server.agent.ExecutionCommand: void setTaskId(long)>($l4)
org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : virtualinvoke $r14.<org.apache.ambari.server.agent.ExecutionCommand: void setTaskId(long)>($l4) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionScheduler.getStageWithServerAction : return r3
