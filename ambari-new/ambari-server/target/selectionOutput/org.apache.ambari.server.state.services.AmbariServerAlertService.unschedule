org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : $r3 = r0.<org.apache.ambari.server.state.services.AmbariServerAlertService: java.util.Map m_futureMap> >>>>>>>> org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : if null == r2
org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : if null == r2 >>>>>>>> org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : interfaceinvoke r2.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(1)
org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : if null == r2 >>>>>>>> org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : return
org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : interfaceinvoke r2.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : $r5 = <org.apache.ambari.server.state.services.AmbariServerAlertService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : $r5 = <org.apache.ambari.server.state.services.AmbariServerAlertService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Unscheduled server alert {}", r1)
org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Unscheduled server alert {}", r1) >>>>>>>> org.apache.ambari.server.state.services.AmbariServerAlertService.unschedule : return
