org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r12 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r12 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r13 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r13 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r14 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r14 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke $r14.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-0.1")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke $r14.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-0.1") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r13.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r14)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r13.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r14) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r4 = "HDFS"
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r4 = "HDFS" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r5 = "NAMENODE"
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r5 = "NAMENODE" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r6 = "DATANODE"
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r6 = "DATANODE" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r7 = "HDFS_CLIENT"
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r7 = "HDFS_CLIENT" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r8 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r8 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, $r8)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, $r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r15 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r15 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, $r15)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, $r15) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r16 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r16 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, $r16)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, $r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r9 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, $r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r10 = $r17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r3, r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r3, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLING>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r3, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r19 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r20 = $r19 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r21 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r20 = $r19 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r27 = $r26 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, r5, r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, r5, r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, r3, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, r3, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r3, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r3, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r3, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r28 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r29 = $r28 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r30 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r30 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r31 = interfaceinvoke $r30.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r31 = interfaceinvoke $r30.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r32 = interfaceinvoke $r31.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r32 = interfaceinvoke $r31.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r33 = interfaceinvoke $r32.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r33 = interfaceinvoke $r32.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r34 = interfaceinvoke $r33.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r34 = interfaceinvoke $r33.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r34)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r35 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r35 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r36 = interfaceinvoke $r35.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r36 = interfaceinvoke $r35.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r37 = interfaceinvoke $r36.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r37 = interfaceinvoke $r36.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r6)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r39 = interfaceinvoke $r38.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r39 = interfaceinvoke $r38.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r39)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r40 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r40 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r41 = interfaceinvoke $r40.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r41 = interfaceinvoke $r40.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r42 = interfaceinvoke $r41.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r42 = interfaceinvoke $r41.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r43 = interfaceinvoke $r42.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r6)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r43 = interfaceinvoke $r42.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r44 = interfaceinvoke $r43.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r3)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r44 = interfaceinvoke $r43.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r44)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r45 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r45 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r46 = interfaceinvoke $r45.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r46 = interfaceinvoke $r45.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r47 = interfaceinvoke $r46.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r47 = interfaceinvoke $r46.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r48 = interfaceinvoke $r47.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r7)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r48 = interfaceinvoke $r47.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r49 = interfaceinvoke $r48.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r49 = interfaceinvoke $r48.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r49)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r50 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r50 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r51 = interfaceinvoke $r50.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r51 = interfaceinvoke $r50.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r52 = interfaceinvoke $r51.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r52 = interfaceinvoke $r51.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r53 = interfaceinvoke $r52.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r7)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r53 = interfaceinvoke $r52.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r54 = interfaceinvoke $r53.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r3)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r54 = interfaceinvoke $r53.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r54)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r55 = new org.apache.ambari.server.controller.ServiceComponentHostRequest
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r55 = new org.apache.ambari.server.controller.ServiceComponentHostRequest >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke $r55.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r4, r6, null, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke $r55.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r4, r6, null, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r56 = $r55
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r56 = $r55 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r57 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r57 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r58 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r56)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r58 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r56) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r11 = interfaceinvoke $r57.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r58)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r11 = interfaceinvoke $r57.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r58) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $i0 = interfaceinvoke r11.<java.util.Set: int size()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $i0 = interfaceinvoke r11.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : return
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail as duplicate")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r28 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail as duplicate") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r30 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>]
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail as duplicate") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r28 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r30 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r30 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r21 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r21 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r23 = interfaceinvoke $r22.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r23 = interfaceinvoke $r22.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r23 = interfaceinvoke $r22.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r24.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r24.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should have failed earlier")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r24.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should have failed earlier") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, r5, r2, null)]
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should have failed earlier") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, r5, r2, null)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, r5, r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLING> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, $r18)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLING> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r19 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, $r18) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid state")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, $r18) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r19 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid state") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r21 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>]
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid state") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r19 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r21 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r21 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r21 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r9 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, $r9)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r9 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, $r9) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid host as host not mapped to cluster")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r2, $r9) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid host as host not mapped to cluster") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1)]
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid host as host not mapped to cluster") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1)
