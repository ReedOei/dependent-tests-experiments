org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r11 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List regexReplacements> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null != $r11
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null != $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null != $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r13 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r2 = $r13
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r2 = $r13 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r14 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List regexReplacements>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r14 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List regexReplacements> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r3 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r3 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : return r2
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r4 = (org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace) $r15
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r4 = (org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace) $r15 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r16 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String key>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r16 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String key> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null == $r16
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null == $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r17 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String find>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null == $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r19 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r19 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r20[0] = r4
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r20[0] = r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Replacement %s is invalid", $r20)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Replacement %s is invalid", $r20) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>($r21)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r17 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String find> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null == $r17
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null == $r17 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r18 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String replaceWith>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null == $r17 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r19 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r18 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String replaceWith> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null != $r18
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null != $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r19 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null != $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r22 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.lang.String configType>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if null != $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r28 = $r27 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r29 = ""
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r29 = "" >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r30 = "ConfigUpgradeChangeDefinition: getRegexReplacements : Error while fetching config properties "
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r30 = "ConfigUpgradeChangeDefinition: getRegexReplacements : Error while fetching config properties " >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r31 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r31 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r30, r28)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r30, r28) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r22 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.lang.String configType> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>($r22)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r22 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.lang.String configType> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r23 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String key>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r23 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String key> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r23 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String key> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r7 = (java.lang.String) $r24
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r7 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r25 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String find>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r7 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r25 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String find> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r25, 8)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r25 = r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String find> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r25, 8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r9 = virtualinvoke r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r7)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r25, 8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r9 = virtualinvoke r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $z1 = virtualinvoke r9.<java.util.regex.Matcher: boolean find()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r9 = virtualinvoke r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $z1 = virtualinvoke r9.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $z1 = virtualinvoke r9.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $i0 = virtualinvoke r9.<java.util.regex.Matcher: int groupCount()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $i0 = virtualinvoke r9.<java.util.regex.Matcher: int groupCount()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $i0 != 1
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $i0 = virtualinvoke r9.<java.util.regex.Matcher: int groupCount()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $i0 != 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r26 = virtualinvoke r9.<java.util.regex.Matcher: java.lang.String group()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $i0 != 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : if $i0 != 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r26 = virtualinvoke r9.<java.util.regex.Matcher: java.lang.String group()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String find> = $r26
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r26 = virtualinvoke r9.<java.util.regex.Matcher: java.lang.String group()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String find> = $r26 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r10 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace copyToReplaceObject()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: java.lang.String find> = $r26 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r10 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace copyToReplaceObject()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : r10 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$RegexReplace: org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace copyToReplaceObject()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r27 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getRegexReplacements : return $r12
