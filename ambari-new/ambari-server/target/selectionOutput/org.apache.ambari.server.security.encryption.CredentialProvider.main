org.apache.ambari.server.security.encryption.CredentialProvider.main : if r0 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i0 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r0 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r45 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r45 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>("No arguments provided to CredentialProvider")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>("No arguments provided to CredentialProvider") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(0)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(0) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : return
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i0 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i0 <= 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r1 = r0[0]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r45 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : r1 = r0[0] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r2 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r2 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r3 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r3 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r4 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r4 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r11 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r11 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r11.<org.apache.ambari.server.configuration.Configuration: void <init>()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r11.<org.apache.ambari.server.configuration.Configuration: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r5 = $r11
org.apache.ambari.server.security.encryption.CredentialProvider.main : r5 = $r11 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i1 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i1 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i1 <= 1
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r12 = r0[1]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r13 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r13 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>("No valid arguments provided.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>("No valid arguments provided.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i2 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i2 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i2 <= 3
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i2 <= 3 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r14 = r0[3]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i2 <= 3 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i2 <= 3 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r6 = $r20 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r6.<java.lang.Exception: void printStackTrace()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r6.<java.lang.Exception: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r21 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r21 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("action => ")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("action => ") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", alias => ")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", alias => ") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String)>($r27)
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PUT")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PUT") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z4 == 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r28 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GET")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z8 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GET") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z8 == 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z8 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r32 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z8 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(0)
org.apache.ambari.server.security.encryption.CredentialProvider.main : r32 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i4 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i4 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i4 <= 2
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i4 <= 2 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r33 = r0[2]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i4 <= 2 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z10 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r44 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r44 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>("Alias and file path are required arguments.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>("Alias and file path are required arguments.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z10 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z10 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z10 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r32 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z10 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r44 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r32 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z11 = virtualinvoke r32.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r32 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r44 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z11 = virtualinvoke r32.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z11 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z11 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r34 = ""
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z11 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r44 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : r34 = "" >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r8 = virtualinvoke r4.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r2)
org.apache.ambari.server.security.encryption.CredentialProvider.main : r34 = "" >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r36 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r37 = $r36 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r38 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r38 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String)>("Error retrieving password for alias.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String)>("Error retrieving password for alias.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r37.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r37.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r42 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r40 = new java.io.FileOutputStream
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r40 = new java.io.FileOutputStream >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r42 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r40 = new java.io.FileOutputStream >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r40 = new java.io.FileOutputStream >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.lang.String)>(r32)
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.lang.String)>(r32) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r42 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.lang.String)>(r32) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.lang.String)>(r32) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = $r40
org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = $r40 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r42 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = $r40 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = $r40 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r41 = virtualinvoke r34.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r41 = virtualinvoke r34.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r42 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r41 = virtualinvoke r34.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r41 = virtualinvoke r34.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r39.<java.io.FileOutputStream: void write(byte[])>($r41)
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r39.<java.io.FileOutputStream: void write(byte[])>($r41) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r42 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r39.<java.io.FileOutputStream: void write(byte[])>($r41) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r39.<java.io.FileOutputStream: void write(byte[])>($r41) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r39)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r39) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : r10 = $r43 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r39)
org.apache.ambari.server.security.encryption.CredentialProvider.main : r10 = $r43 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r39) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : throw r10
org.apache.ambari.server.security.encryption.CredentialProvider.main : r9 = $r42 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r9.<java.io.IOException: void printStackTrace()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : r9 = $r42 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r9.<java.io.IOException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r39)
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r9.<java.io.IOException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r43 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r39) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : r8 = virtualinvoke r4.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r8 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r8 = virtualinvoke r4.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r36 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r8 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r35 = new java.lang.String
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r8 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= r39 = null]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r8 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r36 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= r39 = null] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r39 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r35 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r35.<java.lang.String: void <init>(char[])>(r8)
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r35 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r36 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r35.<java.lang.String: void <init>(char[])>(r8) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r34 = $r35
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r35.<java.lang.String: void <init>(char[])>(r8) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r36 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r34 = $r35 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= r39 = null]
org.apache.ambari.server.security.encryption.CredentialProvider.main : r34 = $r35 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r36 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r33 = r0[2] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z9 = virtualinvoke $r33.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z9 = virtualinvoke $r33.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z9 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z9 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r32 = r0[2]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z9 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r32 = r0[2] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r28 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i3 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i3 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i3 <= 2
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i3 <= 2 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r29 = r0[2]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i3 <= 2 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z6 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r31 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r31 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>("Alias and password are required arguments.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String)>("Alias and password are required arguments.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z6 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z6 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r28 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r31 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r28 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z7 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r28 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r31 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z7 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z7 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r4.<org.apache.ambari.server.security.encryption.CredentialProvider: void addAliasToCredentialStore(java.lang.String,java.lang.String)>(r2, r28)
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r31 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r30 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r7 = $r30 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r7.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r7.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r4.<org.apache.ambari.server.security.encryption.CredentialProvider: void addAliasToCredentialStore(java.lang.String,java.lang.String)>(r2, r28) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r4.<org.apache.ambari.server.security.encryption.CredentialProvider: void addAliasToCredentialStore(java.lang.String,java.lang.String)>(r2, r28) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r30 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r29 = r0[2] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z5 = virtualinvoke $r29.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z5 = virtualinvoke $r29.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z5 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r28 = r0[2]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r28 = r0[2] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r2 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new org.apache.ambari.server.security.encryption.CredentialProvider >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r18 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new org.apache.ambari.server.security.encryption.CredentialProvider >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r18 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z3 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r18 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z3 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r19 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z3 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r19 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r17.<org.apache.ambari.server.security.encryption.CredentialProvider: void <init>(java.lang.String,java.io.File,boolean,java.io.File)>(r3, $r18, $z3, $r19)
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r19 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r17.<org.apache.ambari.server.security.encryption.CredentialProvider: void <init>(java.lang.String,java.io.File,boolean,java.io.File)>(r3, $r18, $z3, $r19) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r4 = $r17
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r17.<org.apache.ambari.server.security.encryption.CredentialProvider: void <init>(java.lang.String,java.io.File,boolean,java.io.File)>(r3, $r18, $z3, $r19) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r4 = $r17 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= $r21 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>]
org.apache.ambari.server.security.encryption.CredentialProvider.main : r4 = $r17 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= $r21 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r21 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r14 = r0[3] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z1 = virtualinvoke $r14.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z1 = virtualinvoke $r14.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z1 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z1 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r15 = r0[3]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z1 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z1 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r15 = r0[3] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z2 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("None")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z2 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("None") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z2 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r3 = r0[3]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r3 = r0[3] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r16 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r16 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>("Master key provided as an argument.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>("Master key provided as an argument.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>("Master key provided as an argument.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r12 = r0[1] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z0 = virtualinvoke $r12.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z0 = virtualinvoke $r12.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z0 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r2 = r0[1]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r13 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : r2 = r0[1] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= $i2 = lengthof r0]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= $i2 = lengthof r0] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i2 = lengthof r0
