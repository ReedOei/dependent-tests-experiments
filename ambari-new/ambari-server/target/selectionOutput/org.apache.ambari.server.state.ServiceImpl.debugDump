org.apache.ambari.server.state.ServiceImpl.debugDump : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service={ serviceName=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service={ serviceName=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: java.lang.String getName()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterName=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterName=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r9 = r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.state.ServiceImpl.debugDump : $r9 = r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r13 = r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.state.ServiceImpl.debugDump : $r13 = r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $l0 = interfaceinvoke $r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $l0 = interfaceinvoke $r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredStackVersion=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredStackVersion=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r16 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r16 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredState=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredState=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r19 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r19 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r20 = virtualinvoke $r19.<org.apache.ambari.server.state.State: java.lang.String toString()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r20 = virtualinvoke $r19.<org.apache.ambari.server.state.State: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", components=[ ")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", components=[ ") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : z0 = 1
org.apache.ambari.server.state.ServiceImpl.debugDump : z0 = 1 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r25 = r0.<org.apache.ambari.server.state.ServiceImpl: java.util.concurrent.ConcurrentMap components>
org.apache.ambari.server.state.ServiceImpl.debugDump : $r25 = r0.<org.apache.ambari.server.state.ServiceImpl: java.util.concurrent.ConcurrentMap components> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r26 = interfaceinvoke $r25.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r26 = interfaceinvoke $r25.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : r3 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : r3 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : if $z1 == 0
org.apache.ambari.server.state.ServiceImpl.debugDump : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r27 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] }")
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] }") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : return
org.apache.ambari.server.state.ServiceImpl.debugDump : $r27 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : r4 = (org.apache.ambari.server.state.ServiceComponent) $r27
org.apache.ambari.server.state.ServiceImpl.debugDump : r4 = (org.apache.ambari.server.state.ServiceComponent) $r27 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : if z0 != 0
org.apache.ambari.server.state.ServiceImpl.debugDump : if z0 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ")
org.apache.ambari.server.state.ServiceImpl.debugDump : if z0 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : z0 = 0
org.apache.ambari.server.state.ServiceImpl.debugDump : z0 = 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n      ")
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n      ") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponent: void debugDump(java.lang.StringBuilder)>(r1)
org.apache.ambari.server.state.ServiceImpl.debugDump : interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponent: void debugDump(java.lang.StringBuilder)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceImpl.debugDump : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : z0 = 0
