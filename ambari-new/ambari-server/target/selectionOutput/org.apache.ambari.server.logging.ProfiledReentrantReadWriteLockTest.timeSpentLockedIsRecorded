org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l0 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l1 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long toNanos(long)>(0L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l1 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long toNanos(long)>(0L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l2 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l2 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long toNanos(long)>(0L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long toNanos(long)>(0L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l4 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l4 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l5 = virtualinvoke $r15.<java.util.concurrent.TimeUnit: long toNanos(long)>(6L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l5 = virtualinvoke $r15.<java.util.concurrent.TimeUnit: long toNanos(long)>(6L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r16)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l6 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l6 = virtualinvoke r1.<com.google.common.base.Ticker: long read()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l7 = virtualinvoke $r20.<java.util.concurrent.TimeUnit: long toNanos(long)>(13L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $l7 = virtualinvoke $r20.<java.util.concurrent.TimeUnit: long toNanos(long)>(13L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : virtualinvoke r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest: void replayAll()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : virtualinvoke r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: void lock()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: void lock()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: void unlock()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: void unlock()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r24 = virtualinvoke $r23.<java.lang.Thread: java.lang.String getName()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r24 = virtualinvoke $r23.<java.lang.Thread: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(7L)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(7L) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r26 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r24, $r25)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r26 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r24, $r25) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r27 = interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: java.util.Map getTimeSpentLocked()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : $r27 = interfaceinvoke r2.<org.apache.ambari.server.logging.ProfiledLock: java.util.Map getTimeSpentLocked()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27) >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : virtualinvoke r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest: void verifyAll()>()
org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : virtualinvoke r0.<org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest: void verifyAll()>() >>>>>>>> org.apache.ambari.server.logging.ProfiledReentrantReadWriteLockTest.timeSpentLockedIsRecorded : return
