org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r7 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r7 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r7 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r8 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r8 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r9 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r8 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r11 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r11 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r11 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = new org.apache.ambari.server.agent.CommandReport
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = new org.apache.ambari.server.agent.CommandReport >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r14.<org.apache.ambari.server.agent.CommandReport: void <init>()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r14.<org.apache.ambari.server.agent.CommandReport: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = $r14
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = $r14 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r15.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r15.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r17)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r21 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r21 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r21)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r21) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r22 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r22 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r23 = virtualinvoke $r22.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r23 = virtualinvoke $r22.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r23)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r24 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r24 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r13 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r13 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r25 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r13 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r25 = virtualinvoke r13.<org.apache.ambari.server.RoleCommand: java.lang.String toString()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r25 = virtualinvoke r13.<org.apache.ambari.server.RoleCommand: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r26 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r26 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r27 = virtualinvoke $r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r27 = virtualinvoke $r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r27)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r28 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r28 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r28.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r28.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r30 = ""
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r30 = r4
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r30 = r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = ""
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r3
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0) >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = "" >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r30 = "" >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r25 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r9 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r6 = virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r6 = virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r6 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r6 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r10 = virtualinvoke r6.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r6 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r10 = virtualinvoke r6.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = $r10
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = $r10 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
