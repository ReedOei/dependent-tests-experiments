org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r2 = <org.apache.ambari.server.stack.StackManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating extension directory {} ...", r1)
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating extension directory {} ...", r1) >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if r1 != null
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if r1 != null >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : return
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if r1 != null >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r4 = <org.apache.ambari.server.stack.StackManager: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r4 = <org.apache.ambari.server.stack.StackManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z0 == 0
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r5 = <org.apache.ambari.server.stack.StackManager: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $z1 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $z1 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z1 == 0
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : return
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z2 != 0
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : return
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("")
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be a directory")
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be a directory") >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", extensionRoot = ")
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", extensionRoot = ") >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r18)
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : throw $r10
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r5 = <org.apache.ambari.server.stack.StackManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading extension information, extensionRoot = ")
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading extension information, extensionRoot = ") >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>($r9)
org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.stack.StackManager.validateExtensionDirectory : $z1 = virtualinvoke r1.<java.io.File: boolean exists()>()
